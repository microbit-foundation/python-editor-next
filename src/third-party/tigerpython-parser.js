'use strict';
const $linkingInfo = Object.freeze({
  "assumingES6": true,
  "productionMode": true,
  "linkerVersion": "1.0.1",
  "fileLevelThis": this
});
const $imul = Math.imul;
const $fround = Math.fround;
const $clz32 = Math.clz32;
let $L0;
function $propertyName(obj) {
  for (const prop in obj) {
    return prop
  }
}
class $Char {
  constructor(c) {
    this.c = c
  };
  toString() {
    return String.fromCharCode(this.c)
  };
}
function $noIsInstance(instance) {
  throw new TypeError("Cannot call isInstance() on a Class representing a JS trait/object")
}
function $makeNativeArrayWrapper(arrayClassData, nativeArray) {
  return new arrayClassData.constr(nativeArray)
}
function $newArrayObject(arrayClassData, lengths) {
  return $newArrayObjectInternal(arrayClassData, lengths, 0)
}
function $newArrayObjectInternal(arrayClassData, lengths, lengthIndex) {
  const result = new arrayClassData.constr(lengths[lengthIndex]);
  if ((lengthIndex < (lengths.length - 1))) {
    const subArrayClassData = arrayClassData.componentData;
    const subLengthIndex = (lengthIndex + 1);
    const underlying = result.u;
    for (let i = 0; (i < underlying.length); (i++)) {
      underlying[i] = $newArrayObjectInternal(subArrayClassData, lengths, subLengthIndex)
    }
  };
  return result
}
function $objectGetClass(instance) {
  switch ((typeof instance)) {
    case "string": {
      return $d_T.getClassOf()
    }
    case "number": {
      if ($isInt(instance)) {
        if ((((instance << 24) >> 24) === instance)) {
          return $d_jl_Byte.getClassOf()
        } else if ((((instance << 16) >> 16) === instance)) {
          return $d_jl_Short.getClassOf()
        } else {
          return $d_jl_Integer.getClassOf()
        }
      } else {
        return $d_jl_Float.getClassOf()
      }
    }
    case "boolean": {
      return $d_jl_Boolean.getClassOf()
    }
    case "undefined": {
      return $d_jl_Void.getClassOf()
    }
    default: {
      if ((instance === null)) {
        return instance.getClass__jl_Class()
      } else if ((instance instanceof $c_RTLong)) {
        return $d_jl_Long.getClassOf()
      } else if ((instance instanceof $Char)) {
        return $d_jl_Character.getClassOf()
      } else if ((!(!(instance && instance.$classData)))) {
        return instance.$classData.getClassOf()
      } else {
        return null
      }
    }
  }
}
function $objectClassName(instance) {
  switch ((typeof instance)) {
    case "string": {
      return "java.lang.String"
    }
    case "number": {
      if ($isInt(instance)) {
        if ((((instance << 24) >> 24) === instance)) {
          return "java.lang.Byte"
        } else if ((((instance << 16) >> 16) === instance)) {
          return "java.lang.Short"
        } else {
          return "java.lang.Integer"
        }
      } else {
        return "java.lang.Float"
      }
    }
    case "boolean": {
      return "java.lang.Boolean"
    }
    case "undefined": {
      return "java.lang.Void"
    }
    default: {
      if ((instance === null)) {
        return instance.getClass__jl_Class()
      } else if ((instance instanceof $c_RTLong)) {
        return "java.lang.Long"
      } else if ((instance instanceof $Char)) {
        return "java.lang.Character"
      } else if ((!(!(instance && instance.$classData)))) {
        return instance.$classData.name
      } else {
        return null.getName__T()
      }
    }
  }
}
function $dp_toString__T(instance) {
  return ((instance === (void 0)) ? "undefined" : instance.toString())
}
function $dp_getClass__jl_Class(instance) {
  return instance.getClass__jl_Class()
}
function $dp_clone__O(instance) {
  return instance.clone__O()
}
function $dp_notify__V(instance) {
  return instance.notify__V()
}
function $dp_notifyAll__V(instance) {
  return instance.notifyAll__V()
}
function $dp_finalize__V(instance) {
  return instance.finalize__V()
}
function $dp_equals__O__Z(instance, x0) {
  if (((!(!(instance && instance.$classData))) || (instance === null))) {
    return instance.equals__O__Z(x0)
  } else if (((typeof instance) === "number")) {
    return $f_jl_Double__equals__O__Z(instance, x0)
  } else if ((instance instanceof $Char)) {
    return $f_jl_Character__equals__O__Z(instance, x0)
  } else {
    return $c_O.prototype.equals__O__Z.call(instance, x0)
  }
}
function $dp_hashCode__I(instance) {
  switch ((typeof instance)) {
    case "string": {
      return $f_T__hashCode__I(instance)
    }
    case "number": {
      return $f_jl_Double__hashCode__I(instance)
    }
    case "boolean": {
      return $f_jl_Boolean__hashCode__I(instance)
    }
    case "undefined": {
      return $f_jl_Void__hashCode__I(instance)
    }
    default: {
      if (((!(!(instance && instance.$classData))) || (instance === null))) {
        return instance.hashCode__I()
      } else if ((instance instanceof $Char)) {
        return $f_jl_Character__hashCode__I(instance)
      } else {
        return $systemIdentityHashCode(instance)
      }
    }
  }
}
function $dp_compareTo__O__I(instance, x0) {
  return instance.compareTo__O__I(x0)
}
function $dp_length__I(instance) {
  if (((typeof instance) === "string")) {
    return $f_T__length__I(instance)
  } else {
    return instance.length__I()
  }
}
function $dp_charAt__I__C(instance, x0) {
  if (((typeof instance) === "string")) {
    return $f_T__charAt__I__C(instance, x0)
  } else {
    return instance.charAt__I__C(x0)
  }
}
function $dp_subSequence__I__I__jl_CharSequence(instance, x0, x1) {
  if (((typeof instance) === "string")) {
    return $f_T__subSequence__I__I__jl_CharSequence(instance, x0, x1)
  } else {
    return instance.subSequence__I__I__jl_CharSequence(x0, x1)
  }
}
function $dp_byteValue__B(instance) {
  return instance.byteValue__B()
}
function $dp_shortValue__S(instance) {
  return instance.shortValue__S()
}
function $dp_intValue__I(instance) {
  return instance.intValue__I()
}
function $dp_longValue__J(instance) {
  return instance.longValue__J()
}
function $dp_floatValue__F(instance) {
  return instance.floatValue__F()
}
function $dp_doubleValue__D(instance) {
  return instance.doubleValue__D()
}
function $intDiv(x, y) {
  if ((y === 0)) {
    throw new $c_jl_ArithmeticException("/ by zero")
  } else {
    return ((x / y) | 0)
  }
}
function $intMod(x, y) {
  if ((y === 0)) {
    throw new $c_jl_ArithmeticException("/ by zero")
  } else {
    return ((x % y) | 0)
  }
}
function $doubleToInt(x) {
  return ((x > 2147483647) ? 2147483647 : ((x < (-2147483648)) ? (-2147483648) : (x | 0)))
}
function $newJSObjectWithVarargs(ctor, args) {
  const instance = Object.create(ctor.prototype);
  const result = ctor.apply(instance, args);
  switch ((typeof result)) {
    case "string":
    case "number":
    case "boolean":
    case "undefined":
    case "symbol": {
      return instance
    }
    default: {
      return ((result === null) ? instance : result)
    }
  }
}
function $resolveSuperRef(superClass, propName) {
  const getPrototypeOf = Object.getPrototyeOf;
  const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  let superProto = superClass.prototype;
  while ((superProto !== null)) {
    const desc = getOwnPropertyDescriptor(superProto, propName);
    if ((desc !== (void 0))) {
      return desc
    };
    superProto = getPrototypeOf(superProto)
  }
}
function $superGet(superClass, self, propName) {
  const desc = $resolveSuperRef(superClass, propName);
  if ((desc !== (void 0))) {
    const getter = desc.get;
    return ((getter !== (void 0)) ? getter.call(self) : getter.value)
  }
}
function $superSet(superClass, self, propName, value) {
  const desc = $resolveSuperRef(superClass, propName);
  if ((desc !== (void 0))) {
    const setter = desc.set;
    if ((setter !== (void 0))) {
      setter.call(self, value);
      return (void 0)
    }
  };
  throw new TypeError((("super has no setter '" + propName) + "'."))
}
function $systemArraycopy(src, srcPos, dest, destPos, length) {
  const srcu = src.u;
  const destu = dest.u;
  if ((((srcu !== destu) || (destPos < srcPos)) || (((srcPos + length) | 0) < destPos))) {
    for (let i = 0; (i < length); i = ((i + 1) | 0)) {
      destu[((destPos + i) | 0)] = srcu[((srcPos + i) | 0)]
    }
  } else {
    for (let i = ((length - 1) | 0); (i >= 0); i = ((i - 1) | 0)) {
      destu[((destPos + i) | 0)] = srcu[((srcPos + i) | 0)]
    }
  }
}
let $lastIDHash = 0;
const $idHashCodeMap = new WeakMap();
function $systemIdentityHashCode(obj) {
  switch ((typeof obj)) {
    case "string":
    case "number":
    case "bigint":
    case "boolean":
    case "undefined": {
      return $dp_hashCode__I(obj)
    }
    default: {
      if ((obj === null)) {
        return 0
      } else {
        let hash = $idHashCodeMap.get(obj);
        if ((hash === (void 0))) {
          hash = (($lastIDHash + 1) | 0);
          $lastIDHash = hash;
          $idHashCodeMap.set(obj, hash)
        };
        return hash
      }
    }
  }
}
function $isByte(v) {
  return ((((typeof v) === "number") && (((v << 24) >> 24) === v)) && ((1 / v) !== (1 / (-0))))
}
function $isShort(v) {
  return ((((typeof v) === "number") && (((v << 16) >> 16) === v)) && ((1 / v) !== (1 / (-0))))
}
function $isInt(v) {
  return ((((typeof v) === "number") && ((v | 0) === v)) && ((1 / v) !== (1 / (-0))))
}
function $bC(c) {
  return new $Char(c)
}
const $bC0 = $bC(0);
function $uC(v) {
  return ((v === null) ? 0 : v.c)
}
function $uJ(v) {
  return ((v === null) ? $L0 : v)
}
function $byteArray2TypedArray(value) {
  return new Int8Array(value.u)
}
function $typedArray2ByteArray(value) {
  return new ($d_B.getArrayOf().constr)(new Int8Array(value))
}
function $shortArray2TypedArray(value) {
  return new Int16Array(value.u)
}
function $typedArray2ShortArray(value) {
  return new ($d_S.getArrayOf().constr)(new Int16Array(value))
}
function $charArray2TypedArray(value) {
  return new Uint16Array(value.u)
}
function $typedArray2CharArray(value) {
  return new ($d_C.getArrayOf().constr)(new Uint16Array(value))
}
function $intArray2TypedArray(value) {
  return new Int32Array(value.u)
}
function $typedArray2IntArray(value) {
  return new ($d_I.getArrayOf().constr)(new Int32Array(value))
}
function $floatArray2TypedArray(value) {
  return new Float32Array(value.u)
}
function $typedArray2FloatArray(value) {
  return new ($d_F.getArrayOf().constr)(new Float32Array(value))
}
function $doubleArray2TypedArray(value) {
  return new Float64Array(value.u)
}
function $typedArray2DoubleArray(value) {
  return new ($d_D.getArrayOf().constr)(new Float64Array(value))
}
class $TypeData {
  constructor() {
    this.constr = (void 0);
    this.ancestors = null;
    this.componentData = null;
    this.arrayBase = null;
    this.arrayDepth = 0;
    this.zero = null;
    this.arrayEncodedName = "";
    this._classOf = (void 0);
    this._arrayOf = (void 0);
    this.isArrayOf = (void 0);
    this.name = "";
    this.isPrimitive = false;
    this.isInterface = false;
    this.isArrayClass = false;
    this.isJSClass = false;
    this.isInstance = (void 0)
  };
  initPrim(zero, arrayEncodedName, displayName, isArrayOf) {
    this.ancestors = {};
    this.zero = zero;
    this.arrayEncodedName = arrayEncodedName;
    this.isArrayOf = isArrayOf;
    this.name = displayName;
    this.isPrimitive = true;
    this.isInstance = (function(obj) {
      return false
    });
    return this
  };
  initClass(internalNameObj, isInterface, fullName, ancestors, isJSType, parentData, isInstance, isArrayOf) {
    const internalName = $propertyName(internalNameObj);
    this.ancestors = ancestors;
    this.arrayEncodedName = (("L" + fullName) + ";");
    this.isArrayOf = (isArrayOf || (function(obj, depth) {
      return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors[internalName])))
    }));
    this.isJSType = (!(!isJSType));
    this.name = fullName;
    this.isInterface = isInterface;
    this.isInstance = (isInstance || (function(obj) {
      return (!(!((obj && obj.$classData) && obj.$classData.ancestors[internalName])))
    }));
    return this
  };
  initArray(componentData) {
    const componentZero = ((componentData.zero === "longZero") ? $L0 : componentData.zero);
    class ArrayClass extends $c_O {
      constructor(arg) {
        super();
        if (((typeof arg) === "number")) {
          this.u = new Array(arg);
          for (let i = 0; (i < arg); (i++)) {
            this.u[i] = componentZero
          }
        } else {
          this.u = arg
        }
      };
      clone__O() {
        return new ArrayClass(((this.u instanceof Array) ? this.u.slice(0) : new this.u.constructor(this.u)))
      };
    }
    ArrayClass.prototype.$classData = this;
    const encodedName = ("[" + componentData.arrayEncodedName);
    const componentBase = (componentData.arrayBase || componentData);
    const arrayDepth = (componentData.arrayDepth + 1);
    this.constr = ArrayClass;
    this.ancestors = {
      O: 1,
      jl_Cloneable: 1,
      Ljava_io_Serializable: 1
    };
    this.componentData = componentData;
    this.arrayBase = componentBase;
    this.arrayDepth = arrayDepth;
    this.arrayEncodedName = encodedName;
    this.name = encodedName;
    this.isArrayClass = true;
    this.isInstance = (function(obj) {
      return componentBase.isArrayOf(obj, arrayDepth)
    });
    return this
  };
  getArrayOf() {
    if ((!this._arrayOf)) {
      this._arrayOf = new $TypeData().initArray(this)
    };
    return this._arrayOf
  };
  getClassOf() {
    if ((!this._classOf)) {
      this._classOf = new $c_jl_Class(this)
    };
    return this._classOf
  };
  "isAssignableFrom"(that) {
    if ((this.isPrimitive || that.isPrimitive)) {
      return (this === that)
    } else {
      let thatFakeInstance;
      if ((that === $d_T)) {
        thatFakeInstance = ""
      } else if ((that === $d_jl_Boolean)) {
        thatFakeInstance = false
      } else if ((((((that === $d_jl_Byte) || (that === $d_jl_Short)) || (that === $d_jl_Integer)) || (that === $d_jl_Float)) || (that === $d_jl_Double))) {
        thatFakeInstance = 0
      } else if ((that === $d_jl_Long)) {
        thatFakeInstance = $L0
      } else if ((that === $d_jl_Character)) {
        thatFakeInstance = $bC0
      } else if ((that === $d_jl_Void)) {
        thatFakeInstance = (void 0)
      } else {
        thatFakeInstance = {
          $classData: that
        }
      };
      return this.isInstance(thatFakeInstance)
    }
  };
  "checkCast"(obj) {
    /*<skip>*/
  };
  "getSuperclass"() {
    return (this.parentData ? this.parentData.getClassOf() : null)
  };
  "getComponentType"() {
    return (this.componentData ? this.componentData.getClassOf() : null)
  };
  "newArrayOfThisClass"(lengths) {
    let arrayClassData = this;
    for (let i = 0; (i < lengths.length); (i++)) {
      arrayClassData = arrayClassData.getArrayOf()
    };
    return $newArrayObject(arrayClassData, lengths)
  };
}
function $isArrayOf_V(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_V))))
}
function $isArrayOf_Z(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_Z))))
}
function $isArrayOf_C(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_C))))
}
function $isArrayOf_B(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_B))))
}
function $isArrayOf_S(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_S))))
}
function $isArrayOf_I(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_I))))
}
function $isArrayOf_J(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_J))))
}
function $isArrayOf_F(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_F))))
}
function $isArrayOf_D(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && (obj.$classData.arrayBase === $d_D))))
}
const $d_V = new $TypeData().initPrim((void 0), "V", "void", $isArrayOf_V);
const $d_Z = new $TypeData().initPrim(false, "Z", "boolean", $isArrayOf_Z);
const $d_C = new $TypeData().initPrim(0, "C", "char", $isArrayOf_C);
const $d_B = new $TypeData().initPrim(0, "B", "byte", $isArrayOf_B);
const $d_S = new $TypeData().initPrim(0, "S", "short", $isArrayOf_S);
const $d_I = new $TypeData().initPrim(0, "I", "int", $isArrayOf_I);
const $d_J = new $TypeData().initPrim("longZero", "J", "long", $isArrayOf_J);
const $d_F = new $TypeData().initPrim(0.0, "F", "float", $isArrayOf_F);
const $d_D = new $TypeData().initPrim(0.0, "D", "double", $isArrayOf_D);
const $ct_O__ = (function($thiz) {
  return $thiz
});
class $c_O {
  hashCode__I() {
    return $systemIdentityHashCode(this)
  };
  equals__O__Z(that) {
    return (this === that)
  };
  toString__T() {
    const $$x1 = $objectClassName(this);
    const i = this.hashCode__I();
    return (($$x1 + "@") + (+(i >>> 0)).toString(16))
  };
  "toString"() {
    return this.toString__T()
  };
}
function $is_O(obj) {
  return (obj !== null)
}
function $isArrayOf_O(obj, depth) {
  const data = (obj && obj.$classData);
  if ((!data)) {
    return false
  } else {
    const arrayDepth = (data.arrayDepth || 0);
    return ((!(arrayDepth < depth)) && ((arrayDepth > depth) || (!data.arrayBase.isPrimitive)))
  }
}
const $d_O = new $TypeData().initClass({
  O: 0
}, false, "java.lang.Object", {
  O: 1
}, (void 0), (void 0), $is_O, $isArrayOf_O);
$c_O.prototype.$classData = $d_O;
class $c_jl_Class extends $c_O {
  constructor(data0) {
    super();
    this.jl_Class__f_data = null;
    this.jl_Class__f_data = data0
  };
  toString__T() {
    return ((this.isInterface__Z() ? "interface " : (this.isPrimitive__Z() ? "" : "class ")) + this.getName__T())
  };
  isAssignableFrom__jl_Class__Z(that) {
    return (!(!this.jl_Class__f_data.isAssignableFrom(that.jl_Class__f_data)))
  };
  isInterface__Z() {
    return (!(!this.jl_Class__f_data.isInterface))
  };
  isArray__Z() {
    return (!(!this.jl_Class__f_data.isArrayClass))
  };
  isPrimitive__Z() {
    return (!(!this.jl_Class__f_data.isPrimitive))
  };
  getName__T() {
    return this.jl_Class__f_data.name
  };
  getSimpleName__T() {
    const name = this.jl_Class__f_data.name;
    let idx = (((-1) + (name.length | 0)) | 0);
    while (true) {
      let $$x1;
      if ((idx >= 0)) {
        const index = idx;
        $$x1 = ((65535 & (name.charCodeAt(index) | 0)) === 36)
      } else {
        $$x1 = false
      };
      if ($$x1) {
        idx = (((-1) + idx) | 0)
      } else {
        break
      }
    };
    while (true) {
      let $$x2;
      if ((idx >= 0)) {
        const index$1 = idx;
        const currChar = (65535 & (name.charCodeAt(index$1) | 0));
        $$x2 = ((currChar !== 46) && (currChar !== 36))
      } else {
        $$x2 = false
      };
      if ($$x2) {
        idx = (((-1) + idx) | 0)
      } else {
        break
      }
    };
    const beginIndex = ((1 + idx) | 0);
    return name.substring(beginIndex)
  };
  getComponentType__jl_Class() {
    return this.jl_Class__f_data.getComponentType()
  };
  newArrayOfThisClass__O__O(dimensions) {
    return this.jl_Class__f_data.newArrayOfThisClass(dimensions)
  };
}
function $isArrayOf_jl_Class(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Class)))
}
const $d_jl_Class = new $TypeData().initClass({
  jl_Class: 0
}, false, "java.lang.Class", {
  jl_Class: 1,
  O: 1
});
$c_jl_Class.prototype.$classData = $d_jl_Class;
class $c_jl_FloatingPointBits$ extends $c_O {
  constructor() {
    super();
    this.jl_FloatingPointBits$__f_java$lang$FloatingPointBits$$_areTypedArraysSupported = false;
    this.jl_FloatingPointBits$__f_arrayBuffer = null;
    this.jl_FloatingPointBits$__f_int32Array = null;
    this.jl_FloatingPointBits$__f_float32Array = null;
    this.jl_FloatingPointBits$__f_float64Array = null;
    this.jl_FloatingPointBits$__f_areTypedArraysBigEndian = false;
    this.jl_FloatingPointBits$__f_highOffset = 0;
    this.jl_FloatingPointBits$__f_lowOffset = 0;
    $n_jl_FloatingPointBits$ = this;
    this.jl_FloatingPointBits$__f_java$lang$FloatingPointBits$$_areTypedArraysSupported = true;
    this.jl_FloatingPointBits$__f_arrayBuffer = new ArrayBuffer(8);
    this.jl_FloatingPointBits$__f_int32Array = new Int32Array(this.jl_FloatingPointBits$__f_arrayBuffer, 0, 2);
    this.jl_FloatingPointBits$__f_float32Array = new Float32Array(this.jl_FloatingPointBits$__f_arrayBuffer, 0, 2);
    this.jl_FloatingPointBits$__f_float64Array = new Float64Array(this.jl_FloatingPointBits$__f_arrayBuffer, 0, 1);
    this.jl_FloatingPointBits$__f_int32Array[0] = 16909060;
    this.jl_FloatingPointBits$__f_areTypedArraysBigEndian = ((new Int8Array(this.jl_FloatingPointBits$__f_arrayBuffer, 0, 8)[0] | 0) === 1);
    this.jl_FloatingPointBits$__f_highOffset = (this.jl_FloatingPointBits$__f_areTypedArraysBigEndian ? 0 : 1);
    this.jl_FloatingPointBits$__f_lowOffset = (this.jl_FloatingPointBits$__f_areTypedArraysBigEndian ? 1 : 0)
  };
  numberHashCode__D__I(value) {
    const iv = ((value | 0) | 0);
    if (((iv === value) && ((1.0 / value) !== (-Infinity)))) {
      return iv
    } else {
      const t = this.doubleToLongBits__D__J(value);
      const lo = t.RTLong__f_lo;
      const hi = t.RTLong__f_hi;
      return (lo ^ hi)
    }
  };
  doubleToLongBits__D__J(value) {
    this.jl_FloatingPointBits$__f_float64Array[0] = value;
    const value$1 = (this.jl_FloatingPointBits$__f_int32Array[this.jl_FloatingPointBits$__f_highOffset] | 0);
    const value$2 = (this.jl_FloatingPointBits$__f_int32Array[this.jl_FloatingPointBits$__f_lowOffset] | 0);
    return new $c_RTLong(value$2, value$1)
  };
}
const $d_jl_FloatingPointBits$ = new $TypeData().initClass({
  jl_FloatingPointBits$: 0
}, false, "java.lang.FloatingPointBits$", {
  jl_FloatingPointBits$: 1,
  O: 1
});
$c_jl_FloatingPointBits$.prototype.$classData = $d_jl_FloatingPointBits$;
let $n_jl_FloatingPointBits$ = (void 0);
function $m_jl_FloatingPointBits$() {
  if ((!$n_jl_FloatingPointBits$)) {
    $n_jl_FloatingPointBits$ = new $c_jl_FloatingPointBits$()
  };
  return $n_jl_FloatingPointBits$
}
const $p_jl_System$SystemProperties$__loadSystemProperties__O = (function($thiz) {
  const result = {};
  result["java.version"] = "1.8";
  result["java.vm.specification.version"] = "1.8";
  result["java.vm.specification.vendor"] = "Oracle Corporation";
  result["java.vm.specification.name"] = "Java Virtual Machine Specification";
  result["java.vm.name"] = "Scala.js";
  const value = $linkingInfo.linkerVersion;
  result["java.vm.version"] = value;
  result["java.specification.version"] = "1.8";
  result["java.specification.vendor"] = "Oracle Corporation";
  result["java.specification.name"] = "Java Platform API Specification";
  result["file.separator"] = "/";
  result["path.separator"] = ":";
  result["line.separator"] = "\n";
  return result
});
class $c_jl_System$SystemProperties$ extends $c_O {
  constructor() {
    super();
    this.jl_System$SystemProperties$__f_dict = null;
    this.jl_System$SystemProperties$__f_properties = null;
    $n_jl_System$SystemProperties$ = this;
    this.jl_System$SystemProperties$__f_dict = $p_jl_System$SystemProperties$__loadSystemProperties__O(this);
    this.jl_System$SystemProperties$__f_properties = null
  };
  getProperty__T__T__T(key, default$1) {
    return ((this.jl_System$SystemProperties$__f_dict !== null) ? $m_jl_Utils$().dictGetOrElse__O__T__O__O(this.jl_System$SystemProperties$__f_dict, key, default$1) : this.jl_System$SystemProperties$__f_properties.getProperty__T__T__T(key, default$1))
  };
}
const $d_jl_System$SystemProperties$ = new $TypeData().initClass({
  jl_System$SystemProperties$: 0
}, false, "java.lang.System$SystemProperties$", {
  jl_System$SystemProperties$: 1,
  O: 1
});
$c_jl_System$SystemProperties$.prototype.$classData = $d_jl_System$SystemProperties$;
let $n_jl_System$SystemProperties$ = (void 0);
function $m_jl_System$SystemProperties$() {
  if ((!$n_jl_System$SystemProperties$)) {
    $n_jl_System$SystemProperties$ = new $c_jl_System$SystemProperties$()
  };
  return $n_jl_System$SystemProperties$
}
class $c_jl_Utils$ extends $c_O {
  dictGetOrElse__O__T__O__O(dict, key, default$1) {
    return ((!(!$m_jl_Utils$Cache$().jl_Utils$Cache$__f_safeHasOwnProperty.call(dict, key))) ? dict[key] : default$1)
  };
}
const $d_jl_Utils$ = new $TypeData().initClass({
  jl_Utils$: 0
}, false, "java.lang.Utils$", {
  jl_Utils$: 1,
  O: 1
});
$c_jl_Utils$.prototype.$classData = $d_jl_Utils$;
let $n_jl_Utils$ = (void 0);
function $m_jl_Utils$() {
  if ((!$n_jl_Utils$)) {
    $n_jl_Utils$ = new $c_jl_Utils$()
  };
  return $n_jl_Utils$
}
class $c_jl_Utils$Cache$ extends $c_O {
  constructor() {
    super();
    this.jl_Utils$Cache$__f_safeHasOwnProperty = null;
    $n_jl_Utils$Cache$ = this;
    this.jl_Utils$Cache$__f_safeHasOwnProperty = Object.prototype.hasOwnProperty
  };
}
const $d_jl_Utils$Cache$ = new $TypeData().initClass({
  jl_Utils$Cache$: 0
}, false, "java.lang.Utils$Cache$", {
  jl_Utils$Cache$: 1,
  O: 1
});
$c_jl_Utils$Cache$.prototype.$classData = $d_jl_Utils$Cache$;
let $n_jl_Utils$Cache$ = (void 0);
function $m_jl_Utils$Cache$() {
  if ((!$n_jl_Utils$Cache$)) {
    $n_jl_Utils$Cache$ = new $c_jl_Utils$Cache$()
  };
  return $n_jl_Utils$Cache$
}
const $f_jl_Void__equals__O__Z = (function($thiz, that) {
  return ($thiz === that)
});
const $f_jl_Void__hashCode__I = (function($thiz) {
  return 0
});
const $f_jl_Void__toString__T = (function($thiz) {
  return "undefined"
});
function $isArrayOf_jl_Void(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Void)))
}
const $d_jl_Void = new $TypeData().initClass({
  jl_Void: 0
}, false, "java.lang.Void", {
  jl_Void: 1,
  O: 1
}, (void 0), (void 0), ((x) => (x === (void 0))));
class $c_jl_reflect_Array$ extends $c_O {
  newInstance__jl_Class__I__O(componentType, length) {
    return componentType.newArrayOfThisClass__O__O([length])
  };
  getLength__O__I(array) {
    if ($isArrayOf_O(array, 1)) {
      const x2 = array;
      return x2.u.length
    } else if ($isArrayOf_Z(array, 1)) {
      const x3 = array;
      return x3.u.length
    } else if ($isArrayOf_C(array, 1)) {
      const x4 = array;
      return x4.u.length
    } else if ($isArrayOf_B(array, 1)) {
      const x5 = array;
      return x5.u.length
    } else if ($isArrayOf_S(array, 1)) {
      const x6 = array;
      return x6.u.length
    } else if ($isArrayOf_I(array, 1)) {
      const x7 = array;
      return x7.u.length
    } else if ($isArrayOf_J(array, 1)) {
      const x8 = array;
      return x8.u.length
    } else if ($isArrayOf_F(array, 1)) {
      const x9 = array;
      return x9.u.length
    } else if ($isArrayOf_D(array, 1)) {
      const x10 = array;
      return x10.u.length
    } else {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "argument type mismatch")
    }
  };
}
const $d_jl_reflect_Array$ = new $TypeData().initClass({
  jl_reflect_Array$: 0
}, false, "java.lang.reflect.Array$", {
  jl_reflect_Array$: 1,
  O: 1
});
$c_jl_reflect_Array$.prototype.$classData = $d_jl_reflect_Array$;
let $n_jl_reflect_Array$ = (void 0);
function $m_jl_reflect_Array$() {
  if ((!$n_jl_reflect_Array$)) {
    $n_jl_reflect_Array$ = new $c_jl_reflect_Array$()
  };
  return $n_jl_reflect_Array$
}
class $c_ju_Arrays$ extends $c_O {
  sort__AI__V(a) {
    $m_s_reflect_ManifestFactory$IntManifest$();
    const evidence$3 = $m_s_math_Ordering$Int$();
    const end = a.u.length;
    if ((end > 16)) {
      const len = a.u.length;
      this.java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, $newArrayObject($d_I.getArrayOf(), [len]), 0, end, evidence$3)
    } else {
      this.java$util$Arrays$$insertionSort__O__I__I__s_math_Ordering__V(a, 0, end, evidence$3)
    }
  };
  sort__AJ__V(a) {
    $m_s_reflect_ManifestFactory$LongManifest$();
    const evidence$3 = $m_s_math_Ordering$Long$();
    const end = a.u.length;
    if ((end > 16)) {
      const len = a.u.length;
      this.java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, $newArrayObject($d_J.getArrayOf(), [len]), 0, end, evidence$3)
    } else {
      this.java$util$Arrays$$insertionSort__O__I__I__s_math_Ordering__V(a, 0, end, evidence$3)
    }
  };
  sort__AS__V(a) {
    $m_s_reflect_ManifestFactory$ShortManifest$();
    const evidence$3 = $m_s_math_Ordering$Short$();
    const end = a.u.length;
    if ((end > 16)) {
      const len = a.u.length;
      this.java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, $newArrayObject($d_S.getArrayOf(), [len]), 0, end, evidence$3)
    } else {
      this.java$util$Arrays$$insertionSort__O__I__I__s_math_Ordering__V(a, 0, end, evidence$3)
    }
  };
  sort__AC__V(a) {
    $m_s_reflect_ManifestFactory$CharManifest$();
    const evidence$3 = $m_s_math_Ordering$Char$();
    const end = a.u.length;
    if ((end > 16)) {
      const len = a.u.length;
      this.java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, $newArrayObject($d_C.getArrayOf(), [len]), 0, end, evidence$3)
    } else {
      this.java$util$Arrays$$insertionSort__O__I__I__s_math_Ordering__V(a, 0, end, evidence$3)
    }
  };
  sort__AB__V(a) {
    $m_s_reflect_ManifestFactory$ByteManifest$();
    const evidence$3 = $m_s_math_Ordering$Byte$();
    const end = a.u.length;
    if ((end > 16)) {
      const len = a.u.length;
      this.java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, $newArrayObject($d_B.getArrayOf(), [len]), 0, end, evidence$3)
    } else {
      this.java$util$Arrays$$insertionSort__O__I__I__s_math_Ordering__V(a, 0, end, evidence$3)
    }
  };
  sort__AO__ju_Comparator__V(array, comparator) {
    const ord = new $c_ju_Arrays$$anon$3(comparator);
    const end = array.u.length;
    if ((end > 16)) {
      this.java$util$Arrays$$stableSplitMergeAnyRef__AO__AO__I__I__s_math_Ordering__V(array, $newArrayObject($d_O.getArrayOf(), [array.u.length]), 0, end, ord)
    } else {
      this.java$util$Arrays$$insertionSortAnyRef__AO__I__I__s_math_Ordering__V(array, 0, end, ord)
    }
  };
  sort__AO__I__I__ju_Comparator__V(array, fromIndex, toIndex, comparator) {
    const ord = new $c_ju_Arrays$$anon$3(comparator);
    if ((fromIndex > toIndex)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), (((("fromIndex(" + fromIndex) + ") > toIndex(") + toIndex) + ")"))
    };
    if ((fromIndex < 0)) {
      /*<skip>*/
    };
    if ((toIndex > 0)) {
      /*<skip>*/
    };
    if ((((toIndex - fromIndex) | 0) > 16)) {
      this.java$util$Arrays$$stableSplitMergeAnyRef__AO__AO__I__I__s_math_Ordering__V(array, $newArrayObject($d_O.getArrayOf(), [array.u.length]), fromIndex, toIndex, ord)
    } else {
      this.java$util$Arrays$$insertionSortAnyRef__AO__I__I__s_math_Ordering__V(array, fromIndex, toIndex, ord)
    }
  };
  java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, temp, start, end, ord) {
    const length = ((end - start) | 0);
    if ((length > 16)) {
      const middle = ((start + ((length / 2) | 0)) | 0);
      this.java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, temp, start, middle, ord);
      this.java$util$Arrays$$stableSplitMerge__O__O__I__I__s_math_Ordering__V(a, temp, middle, end, ord);
      let outIndex = start;
      let leftInIndex = start;
      let rightInIndex = middle;
      while ((outIndex < end)) {
        if (((leftInIndex < middle) && ((rightInIndex >= end) || ord.lteq__O__O__Z($m_sr_ScalaRunTime$().array_apply__O__I__O(a, leftInIndex), $m_sr_ScalaRunTime$().array_apply__O__I__O(a, rightInIndex))))) {
          $m_sr_ScalaRunTime$().array_update__O__I__O__V(temp, outIndex, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, leftInIndex));
          leftInIndex = ((1 + leftInIndex) | 0)
        } else {
          $m_sr_ScalaRunTime$().array_update__O__I__O__V(temp, outIndex, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, rightInIndex));
          rightInIndex = ((1 + rightInIndex) | 0)
        };
        outIndex = ((1 + outIndex) | 0)
      };
      $systemArraycopy(temp, start, a, start, length)
    } else {
      this.java$util$Arrays$$insertionSort__O__I__I__s_math_Ordering__V(a, start, end, ord)
    }
  };
  java$util$Arrays$$insertionSort__O__I__I__s_math_Ordering__V(a, start, end, ord) {
    const n = ((end - start) | 0);
    if ((n >= 2)) {
      if ((ord.compare__O__O__I($m_sr_ScalaRunTime$().array_apply__O__I__O(a, start), $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ((1 + start) | 0))) > 0)) {
        const temp = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, start);
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, start, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ((1 + start) | 0)));
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, ((1 + start) | 0), temp)
      };
      let m = 2;
      while ((m < n)) {
        const next = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ((start + m) | 0));
        if ((ord.compare__O__O__I(next, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, (((-1) + ((start + m) | 0)) | 0))) < 0)) {
          let iA = start;
          let iB = (((-1) + ((start + m) | 0)) | 0);
          while ((((iB - iA) | 0) > 1)) {
            const ix = ((((iA + iB) | 0) >>> 1) | 0);
            if ((ord.compare__O__O__I(next, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ix)) < 0)) {
              iB = ix
            } else {
              iA = ix
            }
          };
          const ix$2 = ((iA + ((ord.compare__O__O__I(next, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, iA)) < 0) ? 0 : 1)) | 0);
          let i = ((start + m) | 0);
          while ((i > ix$2)) {
            $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, i, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, (((-1) + i) | 0)));
            i = (((-1) + i) | 0)
          };
          $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, ix$2, next)
        };
        m = ((1 + m) | 0)
      }
    }
  };
  java$util$Arrays$$stableSplitMergeAnyRef__AO__AO__I__I__s_math_Ordering__V(a, temp, start, end, ord) {
    const length = ((end - start) | 0);
    if ((length > 16)) {
      const middle = ((start + ((length / 2) | 0)) | 0);
      this.java$util$Arrays$$stableSplitMergeAnyRef__AO__AO__I__I__s_math_Ordering__V(a, temp, start, middle, ord);
      this.java$util$Arrays$$stableSplitMergeAnyRef__AO__AO__I__I__s_math_Ordering__V(a, temp, middle, end, ord);
      let outIndex = start;
      let leftInIndex = start;
      let rightInIndex = middle;
      while ((outIndex < end)) {
        if (((leftInIndex < middle) && ((rightInIndex >= end) || ord.lteq__O__O__Z(a.u[leftInIndex], a.u[rightInIndex])))) {
          temp.u[outIndex] = a.u[leftInIndex];
          leftInIndex = ((1 + leftInIndex) | 0)
        } else {
          temp.u[outIndex] = a.u[rightInIndex];
          rightInIndex = ((1 + rightInIndex) | 0)
        };
        outIndex = ((1 + outIndex) | 0)
      };
      $systemArraycopy(temp, start, a, start, length)
    } else {
      this.java$util$Arrays$$insertionSortAnyRef__AO__I__I__s_math_Ordering__V(a, start, end, ord)
    }
  };
  java$util$Arrays$$insertionSortAnyRef__AO__I__I__s_math_Ordering__V(a, start, end, ord) {
    const n = ((end - start) | 0);
    if ((n >= 2)) {
      if ((ord.compare__O__O__I(a.u[start], a.u[((1 + start) | 0)]) > 0)) {
        const temp = a.u[start];
        a.u[start] = a.u[((1 + start) | 0)];
        a.u[((1 + start) | 0)] = temp
      };
      let m = 2;
      while ((m < n)) {
        const next = a.u[((start + m) | 0)];
        if ((ord.compare__O__O__I(next, a.u[(((-1) + ((start + m) | 0)) | 0)]) < 0)) {
          let iA = start;
          let iB = (((-1) + ((start + m) | 0)) | 0);
          while ((((iB - iA) | 0) > 1)) {
            const ix = ((((iA + iB) | 0) >>> 1) | 0);
            if ((ord.compare__O__O__I(next, a.u[ix]) < 0)) {
              iB = ix
            } else {
              iA = ix
            }
          };
          const ix$2 = ((iA + ((ord.compare__O__O__I(next, a.u[iA]) < 0) ? 0 : 1)) | 0);
          let i = ((start + m) | 0);
          while ((i > ix$2)) {
            a.u[i] = a.u[(((-1) + i) | 0)];
            i = (((-1) + i) | 0)
          };
          a.u[ix$2] = next
        };
        m = ((1 + m) | 0)
      }
    }
  };
  binarySearch__AI__I__I(a, key) {
    let startIndex = 0;
    let endIndex = a.u.length;
    while (true) {
      if ((startIndex === endIndex)) {
        return (((-1) - startIndex) | 0)
      } else {
        const mid = ((((startIndex + endIndex) | 0) >>> 1) | 0);
        const elem = a.u[mid];
        if ((key < elem)) {
          endIndex = mid
        } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, elem)) {
          return mid
        } else {
          startIndex = ((1 + mid) | 0)
        }
      }
    }
  };
  equals__AJ__AJ__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const t = a.u[i];
      const lo = t.RTLong__f_lo;
      const hi = t.RTLong__f_hi;
      const t$1 = b.u[i];
      const lo$1 = t$1.RTLong__f_lo;
      const hi$1 = t$1.RTLong__f_hi;
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(new $c_RTLong(lo, hi), new $c_RTLong(lo$1, hi$1)))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  equals__AI__AI__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const x = a.u[i];
      const y = b.u[i];
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(x, y))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  equals__AS__AS__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const x = a.u[i];
      const y = b.u[i];
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(x, y))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  equals__AC__AC__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const x = a.u[i];
      const y = b.u[i];
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z($bC(x), $bC(y)))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  equals__AB__AB__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const x = a.u[i];
      const y = b.u[i];
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(x, y))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  equals__AZ__AZ__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const x = a.u[i];
      const y = b.u[i];
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(x, y))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  equals__AD__AD__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const x = a.u[i];
      const y = b.u[i];
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(x, y))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  equals__AF__AF__Z(a, b) {
    if ((a === b)) {
      return true
    };
    if (((a === null) || (b === null))) {
      return false
    };
    const len = a.u.length;
    if ((b.u.length !== len)) {
      return false
    };
    let i = 0;
    while ((i !== len)) {
      const x = a.u[i];
      const y = b.u[i];
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(x, y))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
  fill__AJ__I__I__J__V(a, fromIndex, toIndex, value) {
    if ((fromIndex > toIndex)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), (((("fromIndex(" + fromIndex) + ") > toIndex(") + toIndex) + ")"))
    };
    if ((fromIndex < 0)) {
      /*<skip>*/
    };
    if ((toIndex > 0)) {
      /*<skip>*/
    };
    let i = fromIndex;
    while ((i !== toIndex)) {
      a.u[i] = value;
      i = ((1 + i) | 0)
    }
  };
  fill__AO__O__V(a, value) {
    const toIndex = a.u.length;
    let i = 0;
    while ((i !== toIndex)) {
      a.u[i] = value;
      i = ((1 + i) | 0)
    }
  };
  fill__AO__I__I__O__V(a, fromIndex, toIndex, value) {
    if ((fromIndex > toIndex)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), (((("fromIndex(" + fromIndex) + ") > toIndex(") + toIndex) + ")"))
    };
    if ((fromIndex < 0)) {
      /*<skip>*/
    };
    if ((toIndex > 0)) {
      /*<skip>*/
    };
    let i = fromIndex;
    while ((i !== toIndex)) {
      a.u[i] = value;
      i = ((1 + i) | 0)
    }
  };
  copyOf__AO__I__AO(original, newLength) {
    const tagT = $m_s_reflect_ClassTag$().apply__jl_Class__s_reflect_ClassTag($objectGetClass(original).getComponentType__jl_Class());
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = tagT.newArray__I__O(newLength);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AO__I__jl_Class__AO(original, newLength, newType) {
    const tag = $m_s_reflect_ClassTag$().apply__jl_Class__s_reflect_ClassTag(newType.getComponentType__jl_Class());
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = tag.newArray__I__O(newLength);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AB__I__AB(original, newLength) {
    $m_s_reflect_ManifestFactory$ByteManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_B.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AS__I__AS(original, newLength) {
    $m_s_reflect_ManifestFactory$ShortManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_S.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AI__I__AI(original, newLength) {
    $m_s_reflect_ManifestFactory$IntManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_I.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AJ__I__AJ(original, newLength) {
    $m_s_reflect_ManifestFactory$LongManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_J.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AC__I__AC(original, newLength) {
    $m_s_reflect_ManifestFactory$CharManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_C.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AF__I__AF(original, newLength) {
    $m_s_reflect_ManifestFactory$FloatManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_F.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AD__I__AD(original, newLength) {
    $m_s_reflect_ManifestFactory$DoubleManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_D.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOf__AZ__I__AZ(original, newLength) {
    $m_s_reflect_ManifestFactory$BooleanManifest$();
    if ((newLength < 0)) {
      throw new $c_jl_NegativeArraySizeException()
    };
    const b = original.u.length;
    const copyLength = ((newLength < b) ? newLength : b);
    const ret = $newArrayObject($d_Z.getArrayOf(), [newLength]);
    $systemArraycopy(original, 0, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AO__I__I__AO(original, from, to) {
    const evidence$6 = $m_s_reflect_ClassTag$().apply__jl_Class__s_reflect_ClassTag($objectGetClass(original).getComponentType__jl_Class());
    if ((from > to)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((from + " > ") + to))
    };
    const retLength = ((to - from) | 0);
    const b = ((original.u.length - from) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = evidence$6.newArray__I__O(retLength);
    $systemArraycopy(original, from, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AB__I__I__AB(original, start, end) {
    $m_s_reflect_ManifestFactory$ByteManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_B.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AS__I__I__AS(original, start, end) {
    $m_s_reflect_ManifestFactory$ShortManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_S.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AI__I__I__AI(original, start, end) {
    $m_s_reflect_ManifestFactory$IntManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_I.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AJ__I__I__AJ(original, start, end) {
    $m_s_reflect_ManifestFactory$LongManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_J.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AC__I__I__AC(original, start, end) {
    $m_s_reflect_ManifestFactory$CharManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_C.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AF__I__I__AF(original, start, end) {
    $m_s_reflect_ManifestFactory$FloatManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_F.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AD__I__I__AD(original, start, end) {
    $m_s_reflect_ManifestFactory$DoubleManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_D.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
  copyOfRange__AZ__I__I__AZ(original, start, end) {
    $m_s_reflect_ManifestFactory$BooleanManifest$();
    if ((start > end)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((start + " > ") + end))
    };
    const retLength = ((end - start) | 0);
    const b = ((original.u.length - start) | 0);
    const copyLength = ((retLength < b) ? retLength : b);
    const ret = $newArrayObject($d_Z.getArrayOf(), [retLength]);
    $systemArraycopy(original, start, ret, 0, copyLength);
    return ret
  };
}
const $d_ju_Arrays$ = new $TypeData().initClass({
  ju_Arrays$: 0
}, false, "java.util.Arrays$", {
  ju_Arrays$: 1,
  O: 1
});
$c_ju_Arrays$.prototype.$classData = $d_ju_Arrays$;
let $n_ju_Arrays$ = (void 0);
function $m_ju_Arrays$() {
  if ((!$n_ju_Arrays$)) {
    $n_ju_Arrays$ = new $c_ju_Arrays$()
  };
  return $n_ju_Arrays$
}
function $is_ju_Formattable(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.ju_Formattable)))
}
function $isArrayOf_ju_Formattable(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.ju_Formattable)))
}
class $c_ju_Formatter$ extends $c_O {
  constructor() {
    super();
    this.ju_Formatter$__f_java$util$Formatter$$FormatSpecifier = null;
    $n_ju_Formatter$ = this;
    this.ju_Formatter$__f_java$util$Formatter$$FormatSpecifier = new RegExp("(?:(\\d+)\\$)?([-#+ 0,\\(<]*)(\\d+)?(?:\\.(\\d+))?[%A-Za-z]", "g")
  };
}
const $d_ju_Formatter$ = new $TypeData().initClass({
  ju_Formatter$: 0
}, false, "java.util.Formatter$", {
  ju_Formatter$: 1,
  O: 1
});
$c_ju_Formatter$.prototype.$classData = $d_ju_Formatter$;
let $n_ju_Formatter$ = (void 0);
function $m_ju_Formatter$() {
  if ((!$n_ju_Formatter$)) {
    $n_ju_Formatter$ = new $c_ju_Formatter$()
  };
  return $n_ju_Formatter$
}
class $c_s_Array$EmptyArrays$ extends $c_O {
  constructor() {
    super();
    this.s_Array$EmptyArrays$__f_emptyBooleanArray = null;
    this.s_Array$EmptyArrays$__f_emptyByteArray = null;
    this.s_Array$EmptyArrays$__f_emptyCharArray = null;
    this.s_Array$EmptyArrays$__f_emptyDoubleArray = null;
    this.s_Array$EmptyArrays$__f_emptyFloatArray = null;
    this.s_Array$EmptyArrays$__f_emptyIntArray = null;
    this.s_Array$EmptyArrays$__f_emptyLongArray = null;
    this.s_Array$EmptyArrays$__f_emptyShortArray = null;
    this.s_Array$EmptyArrays$__f_emptyObjectArray = null;
    $n_s_Array$EmptyArrays$ = this;
    this.s_Array$EmptyArrays$__f_emptyBooleanArray = $newArrayObject($d_Z.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyByteArray = $newArrayObject($d_B.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyCharArray = $newArrayObject($d_C.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyDoubleArray = $newArrayObject($d_D.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyFloatArray = $newArrayObject($d_F.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyIntArray = $newArrayObject($d_I.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyLongArray = $newArrayObject($d_J.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyShortArray = $newArrayObject($d_S.getArrayOf(), [0]);
    this.s_Array$EmptyArrays$__f_emptyObjectArray = $newArrayObject($d_O.getArrayOf(), [0])
  };
}
const $d_s_Array$EmptyArrays$ = new $TypeData().initClass({
  s_Array$EmptyArrays$: 0
}, false, "scala.Array$EmptyArrays$", {
  s_Array$EmptyArrays$: 1,
  O: 1
});
$c_s_Array$EmptyArrays$.prototype.$classData = $d_s_Array$EmptyArrays$;
let $n_s_Array$EmptyArrays$ = (void 0);
function $m_s_Array$EmptyArrays$() {
  if ((!$n_s_Array$EmptyArrays$)) {
    $n_s_Array$EmptyArrays$ = new $c_s_Array$EmptyArrays$()
  };
  return $n_s_Array$EmptyArrays$
}
class $c_s_Array$UnapplySeqWrapper extends $c_O {
  constructor(a) {
    super();
    this.s_Array$UnapplySeqWrapper__f_scala$Array$UnapplySeqWrapper$$a = null;
    this.s_Array$UnapplySeqWrapper__f_scala$Array$UnapplySeqWrapper$$a = a
  };
  hashCode__I() {
    const this$ = this.s_Array$UnapplySeqWrapper__f_scala$Array$UnapplySeqWrapper$$a;
    return $dp_hashCode__I(this$)
  };
  equals__O__Z(x$1) {
    return $m_s_Array$UnapplySeqWrapper$().equals$extension__O__O__Z(this.s_Array$UnapplySeqWrapper__f_scala$Array$UnapplySeqWrapper$$a, x$1)
  };
}
function $isArrayOf_s_Array$UnapplySeqWrapper(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_Array$UnapplySeqWrapper)))
}
const $d_s_Array$UnapplySeqWrapper = new $TypeData().initClass({
  s_Array$UnapplySeqWrapper: 0
}, false, "scala.Array$UnapplySeqWrapper", {
  s_Array$UnapplySeqWrapper: 1,
  O: 1
});
$c_s_Array$UnapplySeqWrapper.prototype.$classData = $d_s_Array$UnapplySeqWrapper;
class $c_s_Array$UnapplySeqWrapper$ extends $c_O {
  lengthCompare$extension__O__I__I(this$, len) {
    return $m_sc_ArrayOps$().lengthCompare$extension__O__I__I(this$, len)
  };
  equals$extension__O__O__Z(this$, x$1) {
    if ((x$1 instanceof $c_s_Array$UnapplySeqWrapper)) {
      const UnapplySeqWrapper$1 = ((x$1 === null) ? null : x$1.s_Array$UnapplySeqWrapper__f_scala$Array$UnapplySeqWrapper$$a);
      return $m_sr_BoxesRunTime$().equals__O__O__Z(this$, UnapplySeqWrapper$1)
    } else {
      return false
    }
  };
}
const $d_s_Array$UnapplySeqWrapper$ = new $TypeData().initClass({
  s_Array$UnapplySeqWrapper$: 0
}, false, "scala.Array$UnapplySeqWrapper$", {
  s_Array$UnapplySeqWrapper$: 1,
  O: 1
});
$c_s_Array$UnapplySeqWrapper$.prototype.$classData = $d_s_Array$UnapplySeqWrapper$;
let $n_s_Array$UnapplySeqWrapper$ = (void 0);
function $m_s_Array$UnapplySeqWrapper$() {
  if ((!$n_s_Array$UnapplySeqWrapper$)) {
    $n_s_Array$UnapplySeqWrapper$ = new $c_s_Array$UnapplySeqWrapper$()
  };
  return $n_s_Array$UnapplySeqWrapper$
}
class $c_s_LowPriorityImplicits2 extends $c_O {
}
const $f_s_Proxy__toString__T = (function($thiz) {
  return ("" + $bC($thiz.sr_RichChar__f_self))
});
const $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O = (function($thiz, len$1, \u03b4this$2, ord$1) {
  if ((len$1 < 300)) {
    const a = $m_sr_ScalaRunTime$().array_clone__O__O(\u03b4this$2);
    const this$1 = $m_s_util_Sorting$();
    this$1.stableSort__O__I__I__s_math_Ordering__V(a, 0, $m_sr_ScalaRunTime$().array_length__O__I(a), ord$1);
    return a
  } else {
    const this$4 = $m_s_Array$();
    $m_s_reflect_ManifestFactory$ObjectManifest$();
    let $$x1;
    if ($d_O.getClassOf().isAssignableFrom__jl_Class__Z($objectGetClass(\u03b4this$2).getComponentType__jl_Class())) {
      if ($d_O.getClassOf().isPrimitive__Z()) {
        $$x1 = this$4.copyOf__O__I__O(\u03b4this$2, len$1)
      } else {
        const original = \u03b4this$2;
        $$x1 = $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(original, len$1, $d_O.getArrayOf().getClassOf())
      }
    } else {
      const dest = $newArrayObject($d_O.getArrayOf(), [len$1]);
      $m_s_Array$().copy__O__I__O__I__I__V(\u03b4this$2, 0, dest, 0, $m_sr_ScalaRunTime$().array_length__O__I(\u03b4this$2));
      $$x1 = dest
    };
    const a$2 = $$x1;
    $m_ju_Arrays$().sort__AO__ju_Comparator__V(a$2, ord$1);
    return $m_s_Array$().copyAs__O__I__s_reflect_ClassTag__O(a$2, len$1, $m_s_reflect_ClassTag$().apply__jl_Class__s_reflect_ClassTag($objectGetClass(\u03b4this$2).getComponentType__jl_Class()))
  }
});
class $c_sc_ArrayOps$ extends $c_O {
  head$extension__O__O(this$) {
    try {
      return $m_sr_ScalaRunTime$().array_apply__O__I__O(this$, 0)
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "head of empty array")
      } else {
        throw e
      }
    }
  };
  last$extension__O__O(this$) {
    try {
      return $m_sr_ScalaRunTime$().array_apply__O__I__O(this$, (((-1) + $m_sr_ScalaRunTime$().array_length__O__I(this$)) | 0))
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "last of empty array")
      } else {
        throw e
      }
    }
  };
  lengthCompare$extension__O__I__I(this$, len) {
    const x = $m_sr_ScalaRunTime$().array_length__O__I(this$);
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  slice$extension__O__I__I__O(this$, from, until) {
    const lo = ((from > 0) ? from : 0);
    const b = $m_sr_ScalaRunTime$().array_length__O__I(this$);
    const hi = ((until < b) ? until : b);
    if ((hi > lo)) {
      if ($isArrayOf_O(this$, 1)) {
        const x2 = this$;
        return $m_ju_Arrays$().copyOfRange__AO__I__I__AO(x2, lo, hi)
      } else if ($isArrayOf_I(this$, 1)) {
        const x3 = this$;
        return $m_ju_Arrays$().copyOfRange__AI__I__I__AI(x3, lo, hi)
      } else if ($isArrayOf_D(this$, 1)) {
        const x4 = this$;
        return $m_ju_Arrays$().copyOfRange__AD__I__I__AD(x4, lo, hi)
      } else if ($isArrayOf_J(this$, 1)) {
        const x5 = this$;
        return $m_ju_Arrays$().copyOfRange__AJ__I__I__AJ(x5, lo, hi)
      } else if ($isArrayOf_F(this$, 1)) {
        const x6 = this$;
        return $m_ju_Arrays$().copyOfRange__AF__I__I__AF(x6, lo, hi)
      } else if ($isArrayOf_C(this$, 1)) {
        const x7 = this$;
        return $m_ju_Arrays$().copyOfRange__AC__I__I__AC(x7, lo, hi)
      } else if ($isArrayOf_B(this$, 1)) {
        const x8 = this$;
        return $m_ju_Arrays$().copyOfRange__AB__I__I__AB(x8, lo, hi)
      } else if ($isArrayOf_S(this$, 1)) {
        const x9 = this$;
        return $m_ju_Arrays$().copyOfRange__AS__I__I__AS(x9, lo, hi)
      } else if ($isArrayOf_Z(this$, 1)) {
        const x10 = this$;
        return $m_ju_Arrays$().copyOfRange__AZ__I__I__AZ(x10, lo, hi)
      } else {
        throw new $c_s_MatchError(this$)
      }
    } else {
      return $m_s_reflect_ClassTag$().apply__jl_Class__s_reflect_ClassTag($objectGetClass(this$).getComponentType__jl_Class()).newArray__I__O(0)
    }
  };
  tail$extension__O__O(this$) {
    if (($m_sr_ScalaRunTime$().array_length__O__I(this$) === 0)) {
      throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "tail of empty array")
    } else {
      return $m_sc_ArrayOps$().slice$extension__O__I__I__O(this$, 1, $m_sr_ScalaRunTime$().array_length__O__I(this$))
    }
  };
  drop$extension__O__I__O(this$, n) {
    return $m_sc_ArrayOps$().slice$extension__O__I__I__O(this$, n, $m_sr_ScalaRunTime$().array_length__O__I(this$))
  };
  iterator$extension__O__sc_Iterator(this$) {
    if ($isArrayOf_O(this$, 1)) {
      const x2 = this$;
      return $ct_sc_ArrayOps$ArrayIterator__O__(new $c_sc_ArrayOps$ArrayIterator(), x2)
    } else if ($isArrayOf_I(this$, 1)) {
      const x3 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcI$sp(x3)
    } else if ($isArrayOf_D(this$, 1)) {
      const x4 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcD$sp(x4)
    } else if ($isArrayOf_J(this$, 1)) {
      const x5 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcJ$sp(x5)
    } else if ($isArrayOf_F(this$, 1)) {
      const x6 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcF$sp(x6)
    } else if ($isArrayOf_C(this$, 1)) {
      const x7 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcC$sp(x7)
    } else if ($isArrayOf_B(this$, 1)) {
      const x8 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcB$sp(x8)
    } else if ($isArrayOf_S(this$, 1)) {
      const x9 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcS$sp(x9)
    } else if ($isArrayOf_Z(this$, 1)) {
      const x10 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcZ$sp(x10)
    } else if ($isArrayOf_jl_Void(this$, 1)) {
      const x11 = this$;
      return new $c_sc_ArrayOps$ArrayIterator$mcV$sp(x11)
    } else if ((this$ === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    } else {
      throw new $c_s_MatchError(this$)
    }
  };
  sorted$extension__O__s_math_Ordering__O(this$, ord) {
    const len = $m_sr_ScalaRunTime$().array_length__O__I(this$);
    if ((len <= 1)) {
      return $m_sr_ScalaRunTime$().array_clone__O__O(this$)
    } else if ($isArrayOf_O(this$, 1)) {
      const x2 = this$;
      const a = $m_ju_Arrays$().copyOf__AO__I__AO(x2, len);
      $m_ju_Arrays$().sort__AO__ju_Comparator__V(a, ord);
      return a
    } else if ($isArrayOf_I(this$, 1)) {
      const x3 = this$;
      if ((ord === $m_s_math_Ordering$Int$())) {
        const a$2 = $m_ju_Arrays$().copyOf__AI__I__AI(x3, len);
        $m_ju_Arrays$().sort__AI__V(a$2);
        return a$2
      } else {
        return $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O(this, len, this$, ord)
      }
    } else if ($isArrayOf_J(this$, 1)) {
      const x4 = this$;
      if ((ord === $m_s_math_Ordering$Long$())) {
        const a$3 = $m_ju_Arrays$().copyOf__AJ__I__AJ(x4, len);
        $m_ju_Arrays$().sort__AJ__V(a$3);
        return a$3
      } else {
        return $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O(this, len, this$, ord)
      }
    } else if ($isArrayOf_C(this$, 1)) {
      const x5 = this$;
      if ((ord === $m_s_math_Ordering$Char$())) {
        const a$4 = $m_ju_Arrays$().copyOf__AC__I__AC(x5, len);
        $m_ju_Arrays$().sort__AC__V(a$4);
        return a$4
      } else {
        return $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O(this, len, this$, ord)
      }
    } else if ($isArrayOf_B(this$, 1)) {
      const x6 = this$;
      if ((ord === $m_s_math_Ordering$Byte$())) {
        const a$5 = $m_ju_Arrays$().copyOf__AB__I__AB(x6, len);
        $m_ju_Arrays$().sort__AB__V(a$5);
        return a$5
      } else {
        return $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O(this, len, this$, ord)
      }
    } else if ($isArrayOf_S(this$, 1)) {
      const x7 = this$;
      if ((ord === $m_s_math_Ordering$Short$())) {
        const a$6 = $m_ju_Arrays$().copyOf__AS__I__AS(x7, len);
        $m_ju_Arrays$().sort__AS__V(a$6);
        return a$6
      } else {
        return $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O(this, len, this$, ord)
      }
    } else if ($isArrayOf_Z(this$, 1)) {
      const x8 = this$;
      if ((ord === $m_s_math_Ordering$Boolean$())) {
        const a$7 = $m_ju_Arrays$().copyOf__AZ__I__AZ(x8, len);
        const this$1 = $m_s_util_Sorting$();
        const evidence$3 = $m_s_math_Ordering$Boolean$();
        this$1.stableSort__O__I__I__s_math_Ordering__V(a$7, 0, a$7.u.length, evidence$3);
        return a$7
      } else {
        return $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O(this, len, this$, ord)
      }
    } else {
      return $p_sc_ArrayOps$__boxed$1__I__O__s_math_Ordering__O(this, len, this$, ord)
    }
  };
  indexOf$extension__O__O__I__I(this$, elem, from) {
    let i = from;
    while ((i < $m_sr_ScalaRunTime$().array_length__O__I(this$))) {
      if ($m_sr_BoxesRunTime$().equals__O__O__Z(elem, $m_sr_ScalaRunTime$().array_apply__O__I__O(this$, i))) {
        return i
      };
      i = ((1 + i) | 0)
    };
    return (-1)
  };
  indices$extension__O__sci_Range(this$) {
    const end = $m_sr_ScalaRunTime$().array_length__O__I(this$);
    return new $c_sci_Range$Exclusive(0, end, 1)
  };
  toIndexedSeq$extension__O__sci_IndexedSeq(this$) {
    return $m_sci_ArraySeq$().unsafeWrapArray__O__sci_ArraySeq($m_s_Array$().copyOf__O__I__O(this$, $m_sr_ScalaRunTime$().array_length__O__I(this$)))
  };
  copyToArray$extension__O__O__I__I__I(this$, xs, start, len) {
    const srcLen = $m_sr_ScalaRunTime$().array_length__O__I(this$);
    const destLen = $m_sr_ScalaRunTime$().array_length__O__I(xs);
    const x = ((len < srcLen) ? len : srcLen);
    const y = ((destLen - start) | 0);
    const x$1 = ((x < y) ? x : y);
    const copied = ((x$1 > 0) ? x$1 : 0);
    if ((copied > 0)) {
      $m_s_Array$().copy__O__I__O__I__I__V(this$, 0, xs, start, copied)
    };
    return copied
  };
}
const $d_sc_ArrayOps$ = new $TypeData().initClass({
  sc_ArrayOps$: 0
}, false, "scala.collection.ArrayOps$", {
  sc_ArrayOps$: 1,
  O: 1
});
$c_sc_ArrayOps$.prototype.$classData = $d_sc_ArrayOps$;
let $n_sc_ArrayOps$ = (void 0);
function $m_sc_ArrayOps$() {
  if ((!$n_sc_ArrayOps$)) {
    $n_sc_ArrayOps$ = new $c_sc_ArrayOps$()
  };
  return $n_sc_ArrayOps$
}
class $c_sc_ArrayOps$WithFilter extends $c_O {
  constructor(p, xs) {
    super();
    this.sc_ArrayOps$WithFilter__f_p = null;
    this.sc_ArrayOps$WithFilter__f_xs = null;
    this.sc_ArrayOps$WithFilter__f_p = p;
    this.sc_ArrayOps$WithFilter__f_xs = xs
  };
  foreach__F1__V(f) {
    const len = $m_sr_ScalaRunTime$().array_length__O__I(this.sc_ArrayOps$WithFilter__f_xs);
    let i = 0;
    while ((i < len)) {
      const x = $m_sr_ScalaRunTime$().array_apply__O__I__O(this.sc_ArrayOps$WithFilter__f_xs, i);
      if ((!(!this.sc_ArrayOps$WithFilter__f_p.apply__O__O(x)))) {
        f.apply__O__O(x)
      };
      i = ((1 + i) | 0)
    }
  };
}
const $d_sc_ArrayOps$WithFilter = new $TypeData().initClass({
  sc_ArrayOps$WithFilter: 0
}, false, "scala.collection.ArrayOps$WithFilter", {
  sc_ArrayOps$WithFilter: 1,
  O: 1
});
$c_sc_ArrayOps$WithFilter.prototype.$classData = $d_sc_ArrayOps$WithFilter;
class $c_sc_BitSetOps$ extends $c_O {
  updateArray__AJ__I__J__AJ(elems, idx, w) {
    let len = elems.u.length;
    while (true) {
      let $$x1;
      if ((len > 0)) {
        const t = elems.u[(((-1) + len) | 0)];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        if (((lo === 0) && (hi === 0))) {
          $$x1 = true
        } else {
          $$x1 = (((w.RTLong__f_lo === 0) && (w.RTLong__f_hi === 0)) && (idx === (((-1) + len) | 0)))
        }
      } else {
        $$x1 = false
      };
      if ($$x1) {
        len = (((-1) + len) | 0)
      } else {
        break
      }
    };
    let newlen = len;
    if (((idx >= newlen) && (!((w.RTLong__f_lo === 0) && (w.RTLong__f_hi === 0))))) {
      newlen = ((1 + idx) | 0)
    };
    const newelems = $newArrayObject($d_J.getArrayOf(), [newlen]);
    $m_s_Array$().copy__O__I__O__I__I__V(elems, 0, newelems, 0, len);
    if ((idx < newlen)) {
      newelems.u[idx] = w
    } else {
      $m_s_Predef$().assert__Z__V(((w.RTLong__f_lo === 0) && (w.RTLong__f_hi === 0)))
    };
    return newelems
  };
}
const $d_sc_BitSetOps$ = new $TypeData().initClass({
  sc_BitSetOps$: 0
}, false, "scala.collection.BitSetOps$", {
  sc_BitSetOps$: 1,
  O: 1
});
$c_sc_BitSetOps$.prototype.$classData = $d_sc_BitSetOps$;
let $n_sc_BitSetOps$ = (void 0);
function $m_sc_BitSetOps$() {
  if ((!$n_sc_BitSetOps$)) {
    $n_sc_BitSetOps$ = new $c_sc_BitSetOps$()
  };
  return $n_sc_BitSetOps$
}
class $c_sc_Hashing$ extends $c_O {
  improve__I__I(hcode) {
    let h = ((hcode + (~(hcode << 9))) | 0);
    h = (h ^ ((h >>> 14) | 0));
    h = ((h + (h << 4)) | 0);
    return (h ^ ((h >>> 10) | 0))
  };
}
const $d_sc_Hashing$ = new $TypeData().initClass({
  sc_Hashing$: 0
}, false, "scala.collection.Hashing$", {
  sc_Hashing$: 1,
  O: 1
});
$c_sc_Hashing$.prototype.$classData = $d_sc_Hashing$;
let $n_sc_Hashing$ = (void 0);
function $m_sc_Hashing$() {
  if ((!$n_sc_Hashing$)) {
    $n_sc_Hashing$ = new $c_sc_Hashing$()
  };
  return $n_sc_Hashing$
}
function $is_sc_IterableOnce(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_IterableOnce)))
}
function $isArrayOf_sc_IterableOnce(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_IterableOnce)))
}
const $f_sc_IterableOnceOps__foreach__F1__V = (function($thiz, f) {
  const it = $thiz.iterator__sc_Iterator();
  while (it.hasNext__Z()) {
    f.apply__O__O(it.next__O())
  }
});
const $f_sc_IterableOnceOps__forall__F1__Z = (function($thiz, p) {
  let res = true;
  const it = $thiz.iterator__sc_Iterator();
  while ((res && it.hasNext__Z())) {
    res = (!(!p.apply__O__O(it.next__O())))
  };
  return res
});
const $f_sc_IterableOnceOps__exists__F1__Z = (function($thiz, p) {
  let res = false;
  const it = $thiz.iterator__sc_Iterator();
  while (((!res) && it.hasNext__Z())) {
    res = (!(!p.apply__O__O(it.next__O())))
  };
  return res
});
const $f_sc_IterableOnceOps__reduceLeft__F2__O = (function($thiz, op) {
  const it = $thiz.iterator__sc_Iterator();
  if ((!it.hasNext__Z())) {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "empty.reduceLeft")
  };
  let first = true;
  let acc = 0;
  while (it.hasNext__Z()) {
    const x = it.next__O();
    if (first) {
      acc = x;
      first = false
    } else {
      acc = op.apply__O__O__O(acc, x)
    }
  };
  return acc
});
const $f_sc_IterableOnceOps__isEmpty__Z = (function($thiz) {
  return (!$thiz.iterator__sc_Iterator().hasNext__Z())
});
const $f_sc_IterableOnceOps__size__I = (function($thiz) {
  if (($thiz.knownSize__I() >= 0)) {
    return $thiz.knownSize__I()
  } else {
    const it = $thiz.iterator__sc_Iterator();
    let len = 0;
    while (it.hasNext__Z()) {
      len = ((1 + len) | 0);
      it.next__O()
    };
    return len
  }
});
const $f_sc_IterableOnceOps__copyToArray__O__I__I = (function($thiz, xs, start) {
  const xsLen = $m_sr_ScalaRunTime$().array_length__O__I(xs);
  const it = $thiz.iterator__sc_Iterator();
  let i = start;
  while (((i < xsLen) && it.hasNext__Z())) {
    $m_sr_ScalaRunTime$().array_update__O__I__O__V(xs, i, it.next__O());
    i = ((1 + i) | 0)
  };
  return ((i - start) | 0)
});
const $f_sc_IterableOnceOps__copyToArray__O__I__I__I = (function($thiz, xs, start, len) {
  const it = $thiz.iterator__sc_Iterator();
  let i = start;
  const y = (($m_sr_ScalaRunTime$().array_length__O__I(xs) - start) | 0);
  const end = ((start + ((len < y) ? len : y)) | 0);
  while (((i < end) && it.hasNext__Z())) {
    $m_sr_ScalaRunTime$().array_update__O__I__O__V(xs, i, it.next__O());
    i = ((1 + i) | 0)
  };
  return ((i - start) | 0)
});
const $f_sc_IterableOnceOps__min__s_math_Ordering__O = (function($thiz, ord) {
  if ($thiz.isEmpty__Z()) {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "empty.min")
  };
  return $thiz.reduceLeft__F2__O(new $c_sjsr_AnonFunction2(((this$1, ord$1) => ((x$2, y$2) => ord$1.min__O__O__O(x$2, y$2)))($thiz, ord)))
});
const $f_sc_IterableOnceOps__max__s_math_Ordering__O = (function($thiz, ord) {
  if ($thiz.isEmpty__Z()) {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "empty.max")
  };
  return $thiz.reduceLeft__F2__O(new $c_sjsr_AnonFunction2(((this$1, ord$1) => ((x$2, y$2) => ord$1.max__O__O__O(x$2, y$2)))($thiz, ord)))
});
const $f_sc_IterableOnceOps__mkString__T__T__T__T = (function($thiz, start, sep, end) {
  if ($thiz.isEmpty__Z()) {
    return (("" + start) + end)
  } else {
    const this$1 = $thiz.addString__scm_StringBuilder__T__T__T__scm_StringBuilder($ct_scm_StringBuilder__(new $c_scm_StringBuilder()), start, sep, end);
    return this$1.scm_StringBuilder__f_underlying.jl_StringBuilder__f_java$lang$StringBuilder$$content
  }
});
const $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder = (function($thiz, b, start, sep, end) {
  const jsb = b.scm_StringBuilder__f_underlying;
  if (((start.length | 0) !== 0)) {
    jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + start)
  };
  const it = $thiz.iterator__sc_Iterator();
  if (it.hasNext__Z()) {
    const obj = it.next__O();
    jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj);
    while (it.hasNext__Z()) {
      jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
      const obj$1 = it.next__O();
      jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$1)
    }
  };
  if (((end.length | 0) !== 0)) {
    jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + end)
  };
  return b
});
const $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O = (function($thiz, evidence$2) {
  if (($thiz.knownSize__I() >= 0)) {
    const destination = evidence$2.newArray__I__O($thiz.knownSize__I());
    $thiz.copyToArray__O__I__I(destination, 0);
    return destination
  } else {
    let capacity = 0;
    let size = 0;
    let jsElems = null;
    const elementClass = evidence$2.runtimeClass__jl_Class();
    capacity = 0;
    size = 0;
    const isCharArrayBuilder = (elementClass === $d_C.getClassOf());
    jsElems = [];
    const xs = $thiz;
    const it = xs.iterator__sc_Iterator();
    while (it.hasNext__Z()) {
      const elem = it.next__O();
      const unboxedElem = (isCharArrayBuilder ? $uC(elem) : ((elem === null) ? elementClass.jl_Class__f_data.zero : elem));
      jsElems.push(unboxedElem)
    };
    const elemRuntimeClass = ((elementClass === $d_V.getClassOf()) ? $d_jl_Void.getClassOf() : (((elementClass === $d_sr_Null$.getClassOf()) || (elementClass === $d_sr_Nothing$.getClassOf())) ? $d_O.getClassOf() : elementClass));
    return $makeNativeArrayWrapper(elemRuntimeClass.jl_Class__f_data.getArrayOf(), jsElems)
  }
});
const $f_sc_IterableOnceOps__reversed__sc_Iterable = (function($thiz) {
  let xs = $m_sci_Nil$();
  const it = $thiz.iterator__sc_Iterator();
  while (it.hasNext__Z()) {
    const rassoc$1 = it.next__O();
    const this$1 = xs;
    xs = new $c_sci_$colon$colon(rassoc$1, this$1)
  };
  return xs
});
function $is_sc_IterableOnceOps(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_IterableOnceOps)))
}
function $isArrayOf_sc_IterableOnceOps(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_IterableOnceOps)))
}
class $c_sc_Iterator$ConcatIteratorCell extends $c_O {
  constructor(head, tail) {
    super();
    this.sc_Iterator$ConcatIteratorCell__f_head = null;
    this.sc_Iterator$ConcatIteratorCell__f_tail = null;
    this.sc_Iterator$ConcatIteratorCell__f_head = head;
    this.sc_Iterator$ConcatIteratorCell__f_tail = tail
  };
  headIterator__sc_Iterator() {
    return this.sc_Iterator$ConcatIteratorCell__f_head.apply__O().iterator__sc_Iterator()
  };
}
const $d_sc_Iterator$ConcatIteratorCell = new $TypeData().initClass({
  sc_Iterator$ConcatIteratorCell: 0
}, false, "scala.collection.Iterator$ConcatIteratorCell", {
  sc_Iterator$ConcatIteratorCell: 1,
  O: 1
});
$c_sc_Iterator$ConcatIteratorCell.prototype.$classData = $d_sc_Iterator$ConcatIteratorCell;
const $p_sc_LinearSeqIterator$LazyCell__v$lzycompute__sc_LinearSeqOps = (function($thiz) {
  if ((!$thiz.sc_LinearSeqIterator$LazyCell__f_bitmap$0)) {
    $thiz.sc_LinearSeqIterator$LazyCell__f_v = $thiz.sc_LinearSeqIterator$LazyCell__f_st.apply__O();
    $thiz.sc_LinearSeqIterator$LazyCell__f_bitmap$0 = true
  };
  $thiz.sc_LinearSeqIterator$LazyCell__f_st = null;
  return $thiz.sc_LinearSeqIterator$LazyCell__f_v
});
class $c_sc_LinearSeqIterator$LazyCell extends $c_O {
  constructor(outer, st) {
    super();
    this.sc_LinearSeqIterator$LazyCell__f_v = null;
    this.sc_LinearSeqIterator$LazyCell__f_st = null;
    this.sc_LinearSeqIterator$LazyCell__f_bitmap$0 = false;
    this.sc_LinearSeqIterator$LazyCell__f_st = st
  };
  v__sc_LinearSeqOps() {
    return ((!this.sc_LinearSeqIterator$LazyCell__f_bitmap$0) ? $p_sc_LinearSeqIterator$LazyCell__v$lzycompute__sc_LinearSeqOps(this) : this.sc_LinearSeqIterator$LazyCell__f_v)
  };
}
const $d_sc_LinearSeqIterator$LazyCell = new $TypeData().initClass({
  sc_LinearSeqIterator$LazyCell: 0
}, false, "scala.collection.LinearSeqIterator$LazyCell", {
  sc_LinearSeqIterator$LazyCell: 1,
  O: 1
});
$c_sc_LinearSeqIterator$LazyCell.prototype.$classData = $d_sc_LinearSeqIterator$LazyCell;
class $c_sc_StringOps$ extends $c_O {
  contains$extension__T__C__Z(this$, elem) {
    return ($f_T__indexOf__I__I(this$, elem) >= 0)
  };
  slice$extension__T__I__I__T(this$, from, until) {
    const start = ((from > 0) ? from : 0);
    const that = (this$.length | 0);
    const end = ((until < that) ? until : that);
    return ((start >= end) ? "" : this$.substring(start, end))
  };
  $times$extension__T__I__T(this$, n) {
    if ((n <= 0)) {
      return ""
    } else {
      const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), $imul((this$.length | 0), n));
      let i = 0;
      while ((i < n)) {
        sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + this$);
        i = ((1 + i) | 0)
      };
      return sb.jl_StringBuilder__f_java$lang$StringBuilder$$content
    }
  };
  stripSuffix$extension__T__T__T(this$, suffix) {
    if ($f_T__endsWith__T__Z(this$, suffix)) {
      const endIndex = (((this$.length | 0) - (suffix.length | 0)) | 0);
      return this$.substring(0, endIndex)
    } else {
      return this$
    }
  };
  stripMargin$extension__T__C__T(this$, marginChar) {
    const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), (this$.length | 0));
    const this$3 = new $c_sc_StringOps$$anon$1(this$, false);
    while ((this$3.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index < this$3.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len)) {
      const arg1 = this$3.next__T();
      const len = (arg1.length | 0);
      let index = 0;
      while (true) {
        let $$x1;
        if ((index < len)) {
          const index$1 = index;
          $$x1 = ((65535 & (arg1.charCodeAt(index$1) | 0)) <= 32)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          index = ((1 + index) | 0)
        } else {
          break
        }
      };
      let $$x2;
      if ((index < len)) {
        const index$2 = index;
        $$x2 = ((65535 & (arg1.charCodeAt(index$2) | 0)) === marginChar)
      } else {
        $$x2 = false
      };
      let stripped;
      if ($$x2) {
        const beginIndex = ((1 + index) | 0);
        stripped = arg1.substring(beginIndex)
      } else {
        stripped = arg1
      };
      sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + stripped)
    };
    return sb.jl_StringBuilder__f_java$lang$StringBuilder$$content
  };
  escape$extension__T__C__T(this$, ch) {
    return (((((ch >= 97) && (ch <= 122)) || ((ch >= 65) && (ch <= 90))) || ((ch >= 48) && (ch <= 57))) ? String.fromCharCode(ch) : ("\\" + $bC(ch)))
  };
  split$extension__T__C__AT(this$, separator) {
    const regex = $m_sc_StringOps$().escape$extension__T__C__T(this$, separator);
    return $f_T__split__T__I__AT(this$, regex, 0)
  };
  unwrapArg$extension__T__O__O(this$, arg) {
    if ((arg instanceof $c_s_math_ScalaNumber)) {
      const x2 = arg;
      return x2.underlying__O()
    } else {
      return arg
    }
  };
  format$extension__T__sci_Seq__T(this$, args) {
    const args$1 = args.map__F1__O(new $c_sjsr_AnonFunction1(((this$1, this$$1) => ((arg$2) => $m_sc_StringOps$().unwrapArg$extension__T__O__O(this$$1, arg$2)))(this, this$))).toArray__s_reflect_ClassTag__O($m_s_reflect_ManifestFactory$ObjectManifest$());
    return $m_jl_String$().format__T__AO__T(this$, args$1)
  };
  take$extension__T__I__T(this$, n) {
    const $$x1 = $m_sc_StringOps$();
    const y = (this$.length | 0);
    return $$x1.slice$extension__T__I__I__T(this$, 0, ((n < y) ? n : y))
  };
  drop$extension__T__I__T(this$, n) {
    const $$x1 = $m_sc_StringOps$();
    const y = (this$.length | 0);
    return $$x1.slice$extension__T__I__I__T(this$, ((n < y) ? n : y), (this$.length | 0))
  };
  dropRight$extension__T__I__T(this$, n) {
    return $m_sc_StringOps$().take$extension__T__I__T(this$, (((this$.length | 0) - ((n > 0) ? n : 0)) | 0))
  };
}
const $d_sc_StringOps$ = new $TypeData().initClass({
  sc_StringOps$: 0
}, false, "scala.collection.StringOps$", {
  sc_StringOps$: 1,
  O: 1
});
$c_sc_StringOps$.prototype.$classData = $d_sc_StringOps$;
let $n_sc_StringOps$ = (void 0);
function $m_sc_StringOps$() {
  if ((!$n_sc_StringOps$)) {
    $n_sc_StringOps$ = new $c_sc_StringOps$()
  };
  return $n_sc_StringOps$
}
const $p_sci_ChampBaseIterator__initNodes__V = (function($thiz) {
  if (($thiz.sci_ChampBaseIterator__f_nodeCursorsAndLengths === null)) {
    $thiz.sci_ChampBaseIterator__f_nodeCursorsAndLengths = $newArrayObject($d_I.getArrayOf(), [($m_sci_Node$().sci_Node$__f_MaxDepth << 1)]);
    $thiz.sci_ChampBaseIterator__f_nodes = $newArrayObject($d_sci_Node.getArrayOf(), [$m_sci_Node$().sci_Node$__f_MaxDepth])
  }
});
const $p_sci_ChampBaseIterator__setupPayloadNode__sci_Node__V = (function($thiz, node) {
  $thiz.sci_ChampBaseIterator__f_currentValueNode = node;
  $thiz.sci_ChampBaseIterator__f_currentValueCursor = 0;
  $thiz.sci_ChampBaseIterator__f_currentValueLength = node.payloadArity__I()
});
const $p_sci_ChampBaseIterator__pushNode__sci_Node__V = (function($thiz, node) {
  $p_sci_ChampBaseIterator__initNodes__V($thiz);
  $thiz.sci_ChampBaseIterator__f_currentStackLevel = ((1 + $thiz.sci_ChampBaseIterator__f_currentStackLevel) | 0);
  const cursorIndex = ($thiz.sci_ChampBaseIterator__f_currentStackLevel << 1);
  const lengthIndex = ((1 + ($thiz.sci_ChampBaseIterator__f_currentStackLevel << 1)) | 0);
  $thiz.sci_ChampBaseIterator__f_nodes.u[$thiz.sci_ChampBaseIterator__f_currentStackLevel] = node;
  $thiz.sci_ChampBaseIterator__f_nodeCursorsAndLengths.u[cursorIndex] = 0;
  $thiz.sci_ChampBaseIterator__f_nodeCursorsAndLengths.u[lengthIndex] = node.nodeArity__I()
});
const $p_sci_ChampBaseIterator__popNode__V = (function($thiz) {
  $thiz.sci_ChampBaseIterator__f_currentStackLevel = (((-1) + $thiz.sci_ChampBaseIterator__f_currentStackLevel) | 0)
});
const $p_sci_ChampBaseIterator__searchNextValueNode__Z = (function($thiz) {
  while (($thiz.sci_ChampBaseIterator__f_currentStackLevel >= 0)) {
    const cursorIndex = ($thiz.sci_ChampBaseIterator__f_currentStackLevel << 1);
    const lengthIndex = ((1 + ($thiz.sci_ChampBaseIterator__f_currentStackLevel << 1)) | 0);
    const nodeCursor = $thiz.sci_ChampBaseIterator__f_nodeCursorsAndLengths.u[cursorIndex];
    const nodeLength = $thiz.sci_ChampBaseIterator__f_nodeCursorsAndLengths.u[lengthIndex];
    if ((nodeCursor < nodeLength)) {
      const ev$1 = $thiz.sci_ChampBaseIterator__f_nodeCursorsAndLengths;
      ev$1.u[cursorIndex] = ((1 + ev$1.u[cursorIndex]) | 0);
      const nextNode = $thiz.sci_ChampBaseIterator__f_nodes.u[$thiz.sci_ChampBaseIterator__f_currentStackLevel].getNode__I__sci_Node(nodeCursor);
      if (nextNode.hasNodes__Z()) {
        $p_sci_ChampBaseIterator__pushNode__sci_Node__V($thiz, nextNode)
      };
      if (nextNode.hasPayload__Z()) {
        $p_sci_ChampBaseIterator__setupPayloadNode__sci_Node__V($thiz, nextNode);
        return true
      }
    } else {
      $p_sci_ChampBaseIterator__popNode__V($thiz)
    }
  };
  return false
});
const $ct_sci_ChampBaseIterator__ = (function($thiz) {
  $thiz.sci_ChampBaseIterator__f_currentValueCursor = 0;
  $thiz.sci_ChampBaseIterator__f_currentValueLength = 0;
  $thiz.sci_ChampBaseIterator__f_currentStackLevel = (-1);
  return $thiz
});
const $ct_sci_ChampBaseIterator__sci_Node__ = (function($thiz, rootNode) {
  $ct_sci_ChampBaseIterator__($thiz);
  if (rootNode.hasNodes__Z()) {
    $p_sci_ChampBaseIterator__pushNode__sci_Node__V($thiz, rootNode)
  };
  if (rootNode.hasPayload__Z()) {
    $p_sci_ChampBaseIterator__setupPayloadNode__sci_Node__V($thiz, rootNode)
  };
  return $thiz
});
class $c_sci_ChampBaseIterator extends $c_O {
  constructor() {
    super();
    this.sci_ChampBaseIterator__f_currentValueCursor = 0;
    this.sci_ChampBaseIterator__f_currentValueLength = 0;
    this.sci_ChampBaseIterator__f_currentValueNode = null;
    this.sci_ChampBaseIterator__f_currentStackLevel = 0;
    this.sci_ChampBaseIterator__f_nodeCursorsAndLengths = null;
    this.sci_ChampBaseIterator__f_nodes = null
  };
  hasNext__Z() {
    return ((this.sci_ChampBaseIterator__f_currentValueCursor < this.sci_ChampBaseIterator__f_currentValueLength) || $p_sci_ChampBaseIterator__searchNextValueNode__Z(this))
  };
}
const $p_sci_ChampBaseReverseIterator__setupPayloadNode__sci_Node__V = (function($thiz, node) {
  $thiz.sci_ChampBaseReverseIterator__f_currentValueNode = node;
  $thiz.sci_ChampBaseReverseIterator__f_currentValueCursor = (((-1) + node.payloadArity__I()) | 0)
});
const $p_sci_ChampBaseReverseIterator__pushNode__sci_Node__V = (function($thiz, node) {
  $thiz.sci_ChampBaseReverseIterator__f_currentStackLevel = ((1 + $thiz.sci_ChampBaseReverseIterator__f_currentStackLevel) | 0);
  $thiz.sci_ChampBaseReverseIterator__f_nodeStack.u[$thiz.sci_ChampBaseReverseIterator__f_currentStackLevel] = node;
  $thiz.sci_ChampBaseReverseIterator__f_nodeIndex.u[$thiz.sci_ChampBaseReverseIterator__f_currentStackLevel] = (((-1) + node.nodeArity__I()) | 0)
});
const $p_sci_ChampBaseReverseIterator__popNode__V = (function($thiz) {
  $thiz.sci_ChampBaseReverseIterator__f_currentStackLevel = (((-1) + $thiz.sci_ChampBaseReverseIterator__f_currentStackLevel) | 0)
});
const $p_sci_ChampBaseReverseIterator__searchNextValueNode__Z = (function($thiz) {
  while (($thiz.sci_ChampBaseReverseIterator__f_currentStackLevel >= 0)) {
    const nodeCursor = $thiz.sci_ChampBaseReverseIterator__f_nodeIndex.u[$thiz.sci_ChampBaseReverseIterator__f_currentStackLevel];
    $thiz.sci_ChampBaseReverseIterator__f_nodeIndex.u[$thiz.sci_ChampBaseReverseIterator__f_currentStackLevel] = (((-1) + nodeCursor) | 0);
    if ((nodeCursor >= 0)) {
      const nextNode = $thiz.sci_ChampBaseReverseIterator__f_nodeStack.u[$thiz.sci_ChampBaseReverseIterator__f_currentStackLevel].getNode__I__sci_Node(nodeCursor);
      $p_sci_ChampBaseReverseIterator__pushNode__sci_Node__V($thiz, nextNode)
    } else {
      const currNode = $thiz.sci_ChampBaseReverseIterator__f_nodeStack.u[$thiz.sci_ChampBaseReverseIterator__f_currentStackLevel];
      $p_sci_ChampBaseReverseIterator__popNode__V($thiz);
      if (currNode.hasPayload__Z()) {
        $p_sci_ChampBaseReverseIterator__setupPayloadNode__sci_Node__V($thiz, currNode);
        return true
      }
    }
  };
  return false
});
const $ct_sci_ChampBaseReverseIterator__ = (function($thiz) {
  $thiz.sci_ChampBaseReverseIterator__f_currentValueCursor = (-1);
  $thiz.sci_ChampBaseReverseIterator__f_currentStackLevel = (-1);
  $thiz.sci_ChampBaseReverseIterator__f_nodeIndex = $newArrayObject($d_I.getArrayOf(), [((1 + $m_sci_Node$().sci_Node$__f_MaxDepth) | 0)]);
  $thiz.sci_ChampBaseReverseIterator__f_nodeStack = $newArrayObject($d_sci_Node.getArrayOf(), [((1 + $m_sci_Node$().sci_Node$__f_MaxDepth) | 0)]);
  return $thiz
});
const $ct_sci_ChampBaseReverseIterator__sci_Node__ = (function($thiz, rootNode) {
  $ct_sci_ChampBaseReverseIterator__($thiz);
  $p_sci_ChampBaseReverseIterator__pushNode__sci_Node__V($thiz, rootNode);
  $p_sci_ChampBaseReverseIterator__searchNextValueNode__Z($thiz);
  return $thiz
});
class $c_sci_ChampBaseReverseIterator extends $c_O {
  constructor() {
    super();
    this.sci_ChampBaseReverseIterator__f_currentValueCursor = 0;
    this.sci_ChampBaseReverseIterator__f_currentValueNode = null;
    this.sci_ChampBaseReverseIterator__f_currentStackLevel = 0;
    this.sci_ChampBaseReverseIterator__f_nodeIndex = null;
    this.sci_ChampBaseReverseIterator__f_nodeStack = null
  };
  hasNext__Z() {
    return ((this.sci_ChampBaseReverseIterator__f_currentValueCursor >= 0) || $p_sci_ChampBaseReverseIterator__searchNextValueNode__Z(this))
  };
}
const $p_sci_IndexedSeqDefaults$__liftedTree1$1__I = (function($thiz) {
  try {
    const x = $m_jl_System$SystemProperties$().getProperty__T__T__T("scala.collection.immutable.IndexedSeq.defaultApplyPreferredMaxLength", "64");
    const this$4 = $m_jl_Integer$();
    return this$4.parseInt__T__I__I(x, 10)
  } catch (e) {
    if ((e instanceof $c_jl_SecurityException)) {
      return 64
    } else {
      throw e
    }
  }
});
class $c_sci_IndexedSeqDefaults$ extends $c_O {
  constructor() {
    super();
    this.sci_IndexedSeqDefaults$__f_defaultApplyPreferredMaxLength = 0;
    $n_sci_IndexedSeqDefaults$ = this;
    this.sci_IndexedSeqDefaults$__f_defaultApplyPreferredMaxLength = $p_sci_IndexedSeqDefaults$__liftedTree1$1__I(this)
  };
}
const $d_sci_IndexedSeqDefaults$ = new $TypeData().initClass({
  sci_IndexedSeqDefaults$: 0
}, false, "scala.collection.immutable.IndexedSeqDefaults$", {
  sci_IndexedSeqDefaults$: 1,
  O: 1
});
$c_sci_IndexedSeqDefaults$.prototype.$classData = $d_sci_IndexedSeqDefaults$;
let $n_sci_IndexedSeqDefaults$ = (void 0);
function $m_sci_IndexedSeqDefaults$() {
  if ((!$n_sci_IndexedSeqDefaults$)) {
    $n_sci_IndexedSeqDefaults$ = new $c_sci_IndexedSeqDefaults$()
  };
  return $n_sci_IndexedSeqDefaults$
}
class $c_sci_LazyList$LazyBuilder$DeferredState extends $c_O {
  constructor() {
    super();
    this.sci_LazyList$LazyBuilder$DeferredState__f__state = null
  };
  eval__sci_LazyList$State() {
    const state = this.sci_LazyList$LazyBuilder$DeferredState__f__state;
    if ((state === null)) {
      throw $ct_jl_IllegalStateException__T__(new $c_jl_IllegalStateException(), "uninitialized")
    };
    return state.apply__O()
  };
  init__F0__V(state) {
    if ((this.sci_LazyList$LazyBuilder$DeferredState__f__state !== null)) {
      throw $ct_jl_IllegalStateException__T__(new $c_jl_IllegalStateException(), "already initialized")
    };
    this.sci_LazyList$LazyBuilder$DeferredState__f__state = state
  };
}
const $d_sci_LazyList$LazyBuilder$DeferredState = new $TypeData().initClass({
  sci_LazyList$LazyBuilder$DeferredState: 0
}, false, "scala.collection.immutable.LazyList$LazyBuilder$DeferredState", {
  sci_LazyList$LazyBuilder$DeferredState: 1,
  O: 1
});
$c_sci_LazyList$LazyBuilder$DeferredState.prototype.$classData = $d_sci_LazyList$LazyBuilder$DeferredState;
class $c_sci_MapKeyValueTupleHashIterator$$anon$1 extends $c_O {
  constructor(outer) {
    super();
    this.sci_MapKeyValueTupleHashIterator$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sci_MapKeyValueTupleHashIterator$$anon$1__f_$outer = outer
    }
  };
  hashCode__I() {
    return this.sci_MapKeyValueTupleHashIterator$$anon$1__f_$outer.sci_MapKeyValueTupleHashIterator__f_scala$collection$immutable$MapKeyValueTupleHashIterator$$hash
  };
}
const $d_sci_MapKeyValueTupleHashIterator$$anon$1 = new $TypeData().initClass({
  sci_MapKeyValueTupleHashIterator$$anon$1: 0
}, false, "scala.collection.immutable.MapKeyValueTupleHashIterator$$anon$1", {
  sci_MapKeyValueTupleHashIterator$$anon$1: 1,
  O: 1
});
$c_sci_MapKeyValueTupleHashIterator$$anon$1.prototype.$classData = $d_sci_MapKeyValueTupleHashIterator$$anon$1;
class $c_sci_MapNode$ extends $c_O {
  constructor() {
    super();
    this.sci_MapNode$__f_EmptyMapNode = null;
    $n_sci_MapNode$ = this;
    this.sci_MapNode$__f_EmptyMapNode = new $c_sci_BitmapIndexedMapNode(0, 0, ($m_s_reflect_ManifestFactory$AnyManifest$(), $newArrayObject($d_O.getArrayOf(), [0])), ($m_s_reflect_ManifestFactory$IntManifest$(), $newArrayObject($d_I.getArrayOf(), [0])), 0, 0)
  };
}
const $d_sci_MapNode$ = new $TypeData().initClass({
  sci_MapNode$: 0
}, false, "scala.collection.immutable.MapNode$", {
  sci_MapNode$: 1,
  O: 1
});
$c_sci_MapNode$.prototype.$classData = $d_sci_MapNode$;
let $n_sci_MapNode$ = (void 0);
function $m_sci_MapNode$() {
  if ((!$n_sci_MapNode$)) {
    $n_sci_MapNode$ = new $c_sci_MapNode$()
  };
  return $n_sci_MapNode$
}
const $p_sci_Node__arrayIndexOutOfBounds__O__I__jl_ArrayIndexOutOfBoundsException = (function($thiz, as, ix) {
  return $ct_jl_ArrayIndexOutOfBoundsException__T__(new $c_jl_ArrayIndexOutOfBoundsException(), ((ix + " is out of bounds (min 0, max ") + (((-1) + $m_sr_ScalaRunTime$().array_length__O__I(as)) | 0)))
});
class $c_sci_Node extends $c_O {
  removeElement__AI__I__AI(as, ix) {
    if ((ix < 0)) {
      throw $p_sci_Node__arrayIndexOutOfBounds__O__I__jl_ArrayIndexOutOfBoundsException(this, as, ix)
    };
    if ((ix > (((-1) + as.u.length) | 0))) {
      throw $p_sci_Node__arrayIndexOutOfBounds__O__I__jl_ArrayIndexOutOfBoundsException(this, as, ix)
    };
    const result = $newArrayObject($d_I.getArrayOf(), [(((-1) + as.u.length) | 0)]);
    $systemArraycopy(as, 0, result, 0, ix);
    const srcPos = ((1 + ix) | 0);
    const length = (((-1) + ((as.u.length - ix) | 0)) | 0);
    $systemArraycopy(as, srcPos, result, ix, length);
    return result
  };
  insertElement__AI__I__I__AI(as, ix, elem) {
    if ((ix < 0)) {
      throw $p_sci_Node__arrayIndexOutOfBounds__O__I__jl_ArrayIndexOutOfBoundsException(this, as, ix)
    };
    if ((ix > as.u.length)) {
      throw $p_sci_Node__arrayIndexOutOfBounds__O__I__jl_ArrayIndexOutOfBoundsException(this, as, ix)
    };
    const result = $newArrayObject($d_I.getArrayOf(), [((1 + as.u.length) | 0)]);
    $systemArraycopy(as, 0, result, 0, ix);
    result.u[ix] = elem;
    const destPos = ((1 + ix) | 0);
    const length = ((as.u.length - ix) | 0);
    $systemArraycopy(as, ix, result, destPos, length);
    return result
  };
}
const $d_sci_Node = new $TypeData().initClass({
  sci_Node: 0
}, false, "scala.collection.immutable.Node", {
  sci_Node: 1,
  O: 1
});
$c_sci_Node.prototype.$classData = $d_sci_Node;
class $c_sci_Node$ extends $c_O {
  constructor() {
    super();
    this.sci_Node$__f_MaxDepth = 0;
    $n_sci_Node$ = this;
    this.sci_Node$__f_MaxDepth = $doubleToInt((+Math.ceil(6.4)))
  };
  maskFrom__I__I__I(hash, shift) {
    return (31 & ((hash >>> shift) | 0))
  };
  bitposFrom__I__I(mask) {
    return (1 << mask)
  };
  indexFrom__I__I__I(bitmap, bitpos) {
    const i = (bitmap & (((-1) + bitpos) | 0));
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  indexFrom__I__I__I__I(bitmap, mask, bitpos) {
    return ((bitmap === (-1)) ? mask : this.indexFrom__I__I__I(bitmap, bitpos))
  };
}
const $d_sci_Node$ = new $TypeData().initClass({
  sci_Node$: 0
}, false, "scala.collection.immutable.Node$", {
  sci_Node$: 1,
  O: 1
});
$c_sci_Node$.prototype.$classData = $d_sci_Node$;
let $n_sci_Node$ = (void 0);
function $m_sci_Node$() {
  if ((!$n_sci_Node$)) {
    $n_sci_Node$ = new $c_sci_Node$()
  };
  return $n_sci_Node$
}
class $c_sci_SetNode$ extends $c_O {
  constructor() {
    super();
    this.sci_SetNode$__f_EmptySetNode = null;
    $n_sci_SetNode$ = this;
    this.sci_SetNode$__f_EmptySetNode = new $c_sci_BitmapIndexedSetNode(0, 0, ($m_s_reflect_ManifestFactory$AnyManifest$(), $newArrayObject($d_O.getArrayOf(), [0])), ($m_s_reflect_ManifestFactory$IntManifest$(), $newArrayObject($d_I.getArrayOf(), [0])), 0, 0)
  };
}
const $d_sci_SetNode$ = new $TypeData().initClass({
  sci_SetNode$: 0
}, false, "scala.collection.immutable.SetNode$", {
  sci_SetNode$: 1,
  O: 1
});
$c_sci_SetNode$.prototype.$classData = $d_sci_SetNode$;
let $n_sci_SetNode$ = (void 0);
function $m_sci_SetNode$() {
  if ((!$n_sci_SetNode$)) {
    $n_sci_SetNode$ = new $c_sci_SetNode$()
  };
  return $n_sci_SetNode$
}
const $f_sci_VectorPointer__preClean__I__V = (function($thiz, depth) {
  $thiz.depth_$eq__I__V(depth);
  const x1 = (((-1) + depth) | 0);
  switch (x1) {
    case 0: {
      $thiz.display1_$eq__AAO__V(null);
      $thiz.display2_$eq__AAAO__V(null);
      $thiz.display3_$eq__AAAAO__V(null);
      $thiz.display4_$eq__AAAAAO__V(null);
      $thiz.display5_$eq__AAAAAAO__V(null);
      break
    }
    case 1: {
      $thiz.display2_$eq__AAAO__V(null);
      $thiz.display3_$eq__AAAAO__V(null);
      $thiz.display4_$eq__AAAAAO__V(null);
      $thiz.display5_$eq__AAAAAAO__V(null);
      break
    }
    case 2: {
      $thiz.display3_$eq__AAAAO__V(null);
      $thiz.display4_$eq__AAAAAO__V(null);
      $thiz.display5_$eq__AAAAAAO__V(null);
      break
    }
    case 3: {
      $thiz.display4_$eq__AAAAAO__V(null);
      $thiz.display5_$eq__AAAAAAO__V(null);
      break
    }
    case 4: {
      $thiz.display5_$eq__AAAAAAO__V(null);
      break
    }
    case 5: {
      break
    }
    default: {
      throw new $c_s_MatchError(x1)
    }
  }
});
const $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V = (function($thiz, that, depth) {
  $thiz.depth_$eq__I__V(depth);
  const x1 = (((-1) + depth) | 0);
  switch (x1) {
    case (-1): {
      break
    }
    case 0: {
      $thiz.display0_$eq__AO__V(that.display0__AO());
      break
    }
    case 1: {
      $thiz.display1_$eq__AAO__V(that.display1__AAO());
      $thiz.display0_$eq__AO__V(that.display0__AO());
      break
    }
    case 2: {
      $thiz.display2_$eq__AAAO__V(that.display2__AAAO());
      $thiz.display1_$eq__AAO__V(that.display1__AAO());
      $thiz.display0_$eq__AO__V(that.display0__AO());
      break
    }
    case 3: {
      $thiz.display3_$eq__AAAAO__V(that.display3__AAAAO());
      $thiz.display2_$eq__AAAO__V(that.display2__AAAO());
      $thiz.display1_$eq__AAO__V(that.display1__AAO());
      $thiz.display0_$eq__AO__V(that.display0__AO());
      break
    }
    case 4: {
      $thiz.display4_$eq__AAAAAO__V(that.display4__AAAAAO());
      $thiz.display3_$eq__AAAAO__V(that.display3__AAAAO());
      $thiz.display2_$eq__AAAO__V(that.display2__AAAO());
      $thiz.display1_$eq__AAO__V(that.display1__AAO());
      $thiz.display0_$eq__AO__V(that.display0__AO());
      break
    }
    case 5: {
      $thiz.display5_$eq__AAAAAAO__V(that.display5__AAAAAAO());
      $thiz.display4_$eq__AAAAAO__V(that.display4__AAAAAO());
      $thiz.display3_$eq__AAAAO__V(that.display3__AAAAO());
      $thiz.display2_$eq__AAAO__V(that.display2__AAAO());
      $thiz.display1_$eq__AAO__V(that.display1__AAO());
      $thiz.display0_$eq__AO__V(that.display0__AO());
      break
    }
    default: {
      throw new $c_s_MatchError(x1)
    }
  }
});
const $f_sci_VectorPointer__gotoPos__I__I__V = (function($thiz, index, xor) {
  if ((xor >= 32)) {
    if ((xor < 1024)) {
      $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))])
    } else if ((xor < 32768)) {
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))]);
      $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))])
    } else if ((xor < 1048576)) {
      $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))]);
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))]);
      $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))])
    } else if ((xor < 33554432)) {
      $thiz.display3_$eq__AAAAO__V($thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))]);
      $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))]);
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))]);
      $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))])
    } else if ((xor < 1073741824)) {
      $thiz.display4_$eq__AAAAAO__V($thiz.display5__AAAAAAO().u[(31 & ((index >>> 25) | 0))]);
      $thiz.display3_$eq__AAAAO__V($thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))]);
      $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))]);
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))]);
      $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))])
    } else {
      throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
    }
  }
});
const $f_sci_VectorPointer__gotoNextBlockStart__I__I__V = (function($thiz, index, xor) {
  if ((xor < 1024)) {
    $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))])
  } else if ((xor < 32768)) {
    $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))]);
    $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[0])
  } else if ((xor < 1048576)) {
    $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))]);
    $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[0]);
    $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[0])
  } else if ((xor < 33554432)) {
    $thiz.display3_$eq__AAAAO__V($thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))]);
    $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[0]);
    $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[0]);
    $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[0])
  } else if ((xor < 1073741824)) {
    $thiz.display4_$eq__AAAAAO__V($thiz.display5__AAAAAAO().u[(31 & ((index >>> 25) | 0))]);
    $thiz.display3_$eq__AAAAO__V($thiz.display4__AAAAAO().u[0]);
    $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[0]);
    $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[0]);
    $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[0])
  } else {
    throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
  }
});
const $f_sci_VectorPointer__gotoNewBlockStart__I__I__V = (function($thiz, index, depth) {
  if ((depth > 5)) {
    $thiz.display4_$eq__AAAAAO__V($thiz.display5__AAAAAAO().u[(31 & ((index >>> 25) | 0))])
  };
  if ((depth > 4)) {
    $thiz.display3_$eq__AAAAO__V($thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))])
  };
  if ((depth > 3)) {
    $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))])
  };
  if ((depth > 2)) {
    $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))])
  };
  if ((depth > 1)) {
    $thiz.display0_$eq__AO__V($thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))])
  }
});
const $f_sci_VectorPointer__gotoNextBlockStartWritable__I__I__V = (function($thiz, index, xor) {
  if ((xor < 1024)) {
    if (($thiz.depth__I() === 1)) {
      $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]));
      $thiz.display1__AAO().u[0] = $thiz.display0__AO();
      $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
    };
    $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]));
    $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO()
  } else if ((xor < 32768)) {
    if (($thiz.depth__I() === 2)) {
      $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]));
      $thiz.display2__AAAO().u[0] = $thiz.display1__AAO();
      $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
    };
    $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]));
    $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]));
    $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO()
  } else if ((xor < 1048576)) {
    if (($thiz.depth__I() === 3)) {
      $thiz.display3_$eq__AAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
      $thiz.display3__AAAAO().u[0] = $thiz.display2__AAAO();
      $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
    };
    $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]));
    $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]));
    $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]));
    $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO();
    $thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))] = $thiz.display2__AAAO()
  } else if ((xor < 33554432)) {
    if (($thiz.depth__I() === 4)) {
      $thiz.display4_$eq__AAAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
      $thiz.display4__AAAAAO().u[0] = $thiz.display3__AAAAO();
      $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
    };
    $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]));
    $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]));
    $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]));
    $thiz.display3_$eq__AAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
    $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO();
    $thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))] = $thiz.display2__AAAO();
    $thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))] = $thiz.display3__AAAAO()
  } else if ((xor < 1073741824)) {
    if (($thiz.depth__I() === 5)) {
      $thiz.display5_$eq__AAAAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
      $thiz.display5__AAAAAAO().u[0] = $thiz.display4__AAAAAO();
      $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
    };
    $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]));
    $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]));
    $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]));
    $thiz.display3_$eq__AAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
    $thiz.display4_$eq__AAAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
    $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO();
    $thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))] = $thiz.display2__AAAO();
    $thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))] = $thiz.display3__AAAAO();
    $thiz.display5__AAAAAAO().u[(31 & ((index >>> 25) | 0))] = $thiz.display4__AAAAAO()
  } else {
    throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
  }
});
const $f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO = (function($thiz, array, index) {
  const x = array.u[index];
  array.u[index] = null;
  return x.clone__O()
});
const $f_sci_VectorPointer__stabilize__I__V = (function($thiz, index) {
  const x1 = (((-1) + $thiz.depth__I()) | 0);
  switch (x1) {
    case 5: {
      $thiz.display5_$eq__AAAAAAO__V($thiz.display5__AAAAAAO().clone__O());
      $thiz.display4_$eq__AAAAAO__V($thiz.display4__AAAAAO().clone__O());
      $thiz.display3_$eq__AAAAO__V($thiz.display3__AAAAO().clone__O());
      $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
      $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
      $thiz.display5__AAAAAAO().u[(31 & ((index >>> 25) | 0))] = $thiz.display4__AAAAAO();
      $thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))] = $thiz.display3__AAAAO();
      $thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))] = $thiz.display2__AAAO();
      $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO();
      $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
      break
    }
    case 4: {
      $thiz.display4_$eq__AAAAAO__V($thiz.display4__AAAAAO().clone__O());
      $thiz.display3_$eq__AAAAO__V($thiz.display3__AAAAO().clone__O());
      $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
      $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
      $thiz.display4__AAAAAO().u[(31 & ((index >>> 20) | 0))] = $thiz.display3__AAAAO();
      $thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))] = $thiz.display2__AAAO();
      $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO();
      $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
      break
    }
    case 3: {
      $thiz.display3_$eq__AAAAO__V($thiz.display3__AAAAO().clone__O());
      $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
      $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
      $thiz.display3__AAAAO().u[(31 & ((index >>> 15) | 0))] = $thiz.display2__AAAO();
      $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO();
      $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
      break
    }
    case 2: {
      $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
      $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
      $thiz.display2__AAAO().u[(31 & ((index >>> 10) | 0))] = $thiz.display1__AAO();
      $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
      break
    }
    case 1: {
      $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
      $thiz.display1__AAO().u[(31 & ((index >>> 5) | 0))] = $thiz.display0__AO();
      break
    }
    case 0: {
      break
    }
    default: {
      throw new $c_s_MatchError(x1)
    }
  }
});
const $f_sci_VectorPointer__gotoPosWritable0__I__I__V = (function($thiz, newIndex, xor) {
  const x1 = (((-1) + $thiz.depth__I()) | 0);
  switch (x1) {
    case 5: {
      $thiz.display5_$eq__AAAAAAO__V($thiz.display5__AAAAAAO().clone__O());
      const array = $thiz.display5__AAAAAAO();
      const index = (31 & ((newIndex >>> 25) | 0));
      $thiz.display4_$eq__AAAAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array, index));
      const array$1 = $thiz.display4__AAAAAO();
      const index$1 = (31 & ((newIndex >>> 20) | 0));
      $thiz.display3_$eq__AAAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$1, index$1));
      const array$2 = $thiz.display3__AAAAO();
      const index$2 = (31 & ((newIndex >>> 15) | 0));
      $thiz.display2_$eq__AAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$2, index$2));
      const array$3 = $thiz.display2__AAAO();
      const index$3 = (31 & ((newIndex >>> 10) | 0));
      $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$3, index$3));
      const array$4 = $thiz.display1__AAO();
      const index$4 = (31 & ((newIndex >>> 5) | 0));
      $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$4, index$4));
      break
    }
    case 4: {
      $thiz.display4_$eq__AAAAAO__V($thiz.display4__AAAAAO().clone__O());
      const array$5 = $thiz.display4__AAAAAO();
      const index$5 = (31 & ((newIndex >>> 20) | 0));
      $thiz.display3_$eq__AAAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$5, index$5));
      const array$6 = $thiz.display3__AAAAO();
      const index$6 = (31 & ((newIndex >>> 15) | 0));
      $thiz.display2_$eq__AAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$6, index$6));
      const array$7 = $thiz.display2__AAAO();
      const index$7 = (31 & ((newIndex >>> 10) | 0));
      $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$7, index$7));
      const array$8 = $thiz.display1__AAO();
      const index$8 = (31 & ((newIndex >>> 5) | 0));
      $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$8, index$8));
      break
    }
    case 3: {
      $thiz.display3_$eq__AAAAO__V($thiz.display3__AAAAO().clone__O());
      const array$9 = $thiz.display3__AAAAO();
      const index$9 = (31 & ((newIndex >>> 15) | 0));
      $thiz.display2_$eq__AAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$9, index$9));
      const array$10 = $thiz.display2__AAAO();
      const index$10 = (31 & ((newIndex >>> 10) | 0));
      $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$10, index$10));
      const array$11 = $thiz.display1__AAO();
      const index$11 = (31 & ((newIndex >>> 5) | 0));
      $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$11, index$11));
      break
    }
    case 2: {
      $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
      const array$12 = $thiz.display2__AAAO();
      const index$12 = (31 & ((newIndex >>> 10) | 0));
      $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$12, index$12));
      const array$13 = $thiz.display1__AAO();
      const index$13 = (31 & ((newIndex >>> 5) | 0));
      $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$13, index$13));
      break
    }
    case 1: {
      $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
      const array$14 = $thiz.display1__AAO();
      const index$14 = (31 & ((newIndex >>> 5) | 0));
      $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$14, index$14));
      break
    }
    case 0: {
      $thiz.display0_$eq__AO__V($thiz.display0__AO().clone__O());
      break
    }
    default: {
      throw new $c_s_MatchError(x1)
    }
  }
});
const $f_sci_VectorPointer__gotoPosWritable1__I__I__I__V = (function($thiz, oldIndex, newIndex, xor) {
  if ((xor < 32)) {
    $thiz.display0_$eq__AO__V($thiz.display0__AO().clone__O())
  } else if ((xor < 1024)) {
    $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
    $thiz.display1__AAO().u[(31 & ((oldIndex >>> 5) | 0))] = $thiz.display0__AO();
    const array = $thiz.display1__AAO();
    const index = (31 & ((newIndex >>> 5) | 0));
    $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array, index))
  } else if ((xor < 32768)) {
    $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
    $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
    $thiz.display1__AAO().u[(31 & ((oldIndex >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((oldIndex >>> 10) | 0))] = $thiz.display1__AAO();
    const array$1 = $thiz.display2__AAAO();
    const index$1 = (31 & ((newIndex >>> 10) | 0));
    $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$1, index$1));
    const array$2 = $thiz.display1__AAO();
    const index$2 = (31 & ((newIndex >>> 5) | 0));
    $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$2, index$2))
  } else if ((xor < 1048576)) {
    $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
    $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
    $thiz.display3_$eq__AAAAO__V($thiz.display3__AAAAO().clone__O());
    $thiz.display1__AAO().u[(31 & ((oldIndex >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((oldIndex >>> 10) | 0))] = $thiz.display1__AAO();
    $thiz.display3__AAAAO().u[(31 & ((oldIndex >>> 15) | 0))] = $thiz.display2__AAAO();
    const array$3 = $thiz.display3__AAAAO();
    const index$3 = (31 & ((newIndex >>> 15) | 0));
    $thiz.display2_$eq__AAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$3, index$3));
    const array$4 = $thiz.display2__AAAO();
    const index$4 = (31 & ((newIndex >>> 10) | 0));
    $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$4, index$4));
    const array$5 = $thiz.display1__AAO();
    const index$5 = (31 & ((newIndex >>> 5) | 0));
    $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$5, index$5))
  } else if ((xor < 33554432)) {
    $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
    $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
    $thiz.display3_$eq__AAAAO__V($thiz.display3__AAAAO().clone__O());
    $thiz.display4_$eq__AAAAAO__V($thiz.display4__AAAAAO().clone__O());
    $thiz.display1__AAO().u[(31 & ((oldIndex >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((oldIndex >>> 10) | 0))] = $thiz.display1__AAO();
    $thiz.display3__AAAAO().u[(31 & ((oldIndex >>> 15) | 0))] = $thiz.display2__AAAO();
    $thiz.display4__AAAAAO().u[(31 & ((oldIndex >>> 20) | 0))] = $thiz.display3__AAAAO();
    const array$6 = $thiz.display4__AAAAAO();
    const index$6 = (31 & ((newIndex >>> 20) | 0));
    $thiz.display3_$eq__AAAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$6, index$6));
    const array$7 = $thiz.display3__AAAAO();
    const index$7 = (31 & ((newIndex >>> 15) | 0));
    $thiz.display2_$eq__AAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$7, index$7));
    const array$8 = $thiz.display2__AAAO();
    const index$8 = (31 & ((newIndex >>> 10) | 0));
    $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$8, index$8));
    const array$9 = $thiz.display1__AAO();
    const index$9 = (31 & ((newIndex >>> 5) | 0));
    $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$9, index$9))
  } else if ((xor < 1073741824)) {
    $thiz.display1_$eq__AAO__V($thiz.display1__AAO().clone__O());
    $thiz.display2_$eq__AAAO__V($thiz.display2__AAAO().clone__O());
    $thiz.display3_$eq__AAAAO__V($thiz.display3__AAAAO().clone__O());
    $thiz.display4_$eq__AAAAAO__V($thiz.display4__AAAAAO().clone__O());
    $thiz.display5_$eq__AAAAAAO__V($thiz.display5__AAAAAAO().clone__O());
    $thiz.display1__AAO().u[(31 & ((oldIndex >>> 5) | 0))] = $thiz.display0__AO();
    $thiz.display2__AAAO().u[(31 & ((oldIndex >>> 10) | 0))] = $thiz.display1__AAO();
    $thiz.display3__AAAAO().u[(31 & ((oldIndex >>> 15) | 0))] = $thiz.display2__AAAO();
    $thiz.display4__AAAAAO().u[(31 & ((oldIndex >>> 20) | 0))] = $thiz.display3__AAAAO();
    $thiz.display5__AAAAAAO().u[(31 & ((oldIndex >>> 25) | 0))] = $thiz.display4__AAAAAO();
    const array$10 = $thiz.display5__AAAAAAO();
    const index$10 = (31 & ((newIndex >>> 25) | 0));
    $thiz.display4_$eq__AAAAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$10, index$10));
    const array$11 = $thiz.display4__AAAAAO();
    const index$11 = (31 & ((newIndex >>> 20) | 0));
    $thiz.display3_$eq__AAAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$11, index$11));
    const array$12 = $thiz.display3__AAAAO();
    const index$12 = (31 & ((newIndex >>> 15) | 0));
    $thiz.display2_$eq__AAAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$12, index$12));
    const array$13 = $thiz.display2__AAAO();
    const index$13 = (31 & ((newIndex >>> 10) | 0));
    $thiz.display1_$eq__AAO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$13, index$13));
    const array$14 = $thiz.display1__AAO();
    const index$14 = (31 & ((newIndex >>> 5) | 0));
    $thiz.display0_$eq__AO__V($f_sci_VectorPointer__nullSlotAndCopy__AAO__I__AO($thiz, array$14, index$14))
  } else {
    throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
  }
});
const $f_sci_VectorPointer__copyRange__AO__I__I__AO = (function($thiz, array, oldLeft, newLeft) {
  const componentType = $objectGetClass(array).getComponentType__jl_Class();
  const elems = $m_jl_reflect_Array$().newInstance__jl_Class__I__O(componentType, 32);
  const length = ((32 - ((newLeft > oldLeft) ? newLeft : oldLeft)) | 0);
  $systemArraycopy(array, oldLeft, elems, newLeft, length);
  return elems
});
const $f_sci_VectorPointer__gotoFreshPosWritable0__I__I__I__V = (function($thiz, oldIndex, newIndex, xor) {
  if ((xor >= 32)) {
    if ((xor < 1024)) {
      if (($thiz.depth__I() === 1)) {
        $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]));
        $thiz.display1__AAO().u[(31 & ((oldIndex >>> 5) | 0))] = $thiz.display0__AO();
        $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
      };
      $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]))
    } else if ((xor < 32768)) {
      if (($thiz.depth__I() === 2)) {
        $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]));
        $thiz.display2__AAAO().u[(31 & ((oldIndex >>> 10) | 0))] = $thiz.display1__AAO();
        $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
      };
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((newIndex >>> 10) | 0))]);
      if (($thiz.display1__AAO() === null)) {
        $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]))
    } else if ((xor < 1048576)) {
      if (($thiz.depth__I() === 3)) {
        $thiz.display3_$eq__AAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
        $thiz.display3__AAAAO().u[(31 & ((oldIndex >>> 15) | 0))] = $thiz.display2__AAAO();
        $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
      };
      $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((newIndex >>> 15) | 0))]);
      if (($thiz.display2__AAAO() === null)) {
        $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((newIndex >>> 10) | 0))]);
      if (($thiz.display1__AAO() === null)) {
        $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]))
    } else if ((xor < 33554432)) {
      if (($thiz.depth__I() === 4)) {
        $thiz.display4_$eq__AAAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
        $thiz.display4__AAAAAO().u[(31 & ((oldIndex >>> 20) | 0))] = $thiz.display3__AAAAO();
        $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
      };
      $thiz.display3_$eq__AAAAO__V($thiz.display4__AAAAAO().u[(31 & ((newIndex >>> 20) | 0))]);
      if (($thiz.display3__AAAAO() === null)) {
        $thiz.display3_$eq__AAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((newIndex >>> 15) | 0))]);
      if (($thiz.display2__AAAO() === null)) {
        $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((newIndex >>> 10) | 0))]);
      if (($thiz.display1__AAO() === null)) {
        $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]))
    } else if ((xor < 1073741824)) {
      if (($thiz.depth__I() === 5)) {
        $thiz.display5_$eq__AAAAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]));
        $thiz.display5__AAAAAAO().u[(31 & ((oldIndex >>> 25) | 0))] = $thiz.display4__AAAAAO();
        $thiz.depth_$eq__I__V(((1 + $thiz.depth__I()) | 0))
      };
      $thiz.display4_$eq__AAAAAO__V($thiz.display5__AAAAAAO().u[(31 & ((newIndex >>> 25) | 0))]);
      if (($thiz.display4__AAAAAO() === null)) {
        $thiz.display4_$eq__AAAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display3_$eq__AAAAO__V($thiz.display4__AAAAAO().u[(31 & ((newIndex >>> 20) | 0))]);
      if (($thiz.display3__AAAAO() === null)) {
        $thiz.display3_$eq__AAAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display2_$eq__AAAO__V($thiz.display3__AAAAO().u[(31 & ((newIndex >>> 15) | 0))]);
      if (($thiz.display2__AAAO() === null)) {
        $thiz.display2_$eq__AAAO__V($newArrayObject($d_O.getArrayOf().getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display1_$eq__AAO__V($thiz.display2__AAAO().u[(31 & ((newIndex >>> 10) | 0))]);
      if (($thiz.display1__AAO() === null)) {
        $thiz.display1_$eq__AAO__V($newArrayObject($d_O.getArrayOf().getArrayOf(), [32]))
      };
      $thiz.display0_$eq__AO__V($newArrayObject($d_O.getArrayOf(), [32]))
    } else {
      throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
    }
  }
});
const $f_sci_VectorPointer__gotoFreshPosWritable1__I__I__I__V = (function($thiz, oldIndex, newIndex, xor) {
  $f_sci_VectorPointer__stabilize__I__V($thiz, oldIndex);
  $f_sci_VectorPointer__gotoFreshPosWritable0__I__I__I__V($thiz, oldIndex, newIndex, xor)
});
class $c_scm_HashMap$Node extends $c_O {
  constructor(_key, _hash, _value, _next) {
    super();
    this.scm_HashMap$Node__f__key = null;
    this.scm_HashMap$Node__f__hash = 0;
    this.scm_HashMap$Node__f__value = null;
    this.scm_HashMap$Node__f__next = null;
    this.scm_HashMap$Node__f__key = _key;
    this.scm_HashMap$Node__f__hash = _hash;
    this.scm_HashMap$Node__f__value = _value;
    this.scm_HashMap$Node__f__next = _next
  };
  findNode__O__I__scm_HashMap$Node(k, h) {
    let _$this = this;
    while (true) {
      if (((h === _$this.scm_HashMap$Node__f__hash) && $m_sr_BoxesRunTime$().equals__O__O__Z(k, _$this.scm_HashMap$Node__f__key))) {
        return _$this
      } else if (((_$this.scm_HashMap$Node__f__next === null) || (_$this.scm_HashMap$Node__f__hash > h))) {
        return null
      } else {
        _$this = _$this.scm_HashMap$Node__f__next
      }
    }
  };
  foreach__F1__V(f) {
    let _$this = this;
    while (true) {
      f.apply__O__O($ct_T2__O__O__(new $c_T2(), _$this.scm_HashMap$Node__f__key, _$this.scm_HashMap$Node__f__value));
      if ((_$this.scm_HashMap$Node__f__next !== null)) {
        _$this = _$this.scm_HashMap$Node__f__next;
        continue
      };
      break
    }
  };
  toString__T() {
    return ((((((("Node(" + this.scm_HashMap$Node__f__key) + ", ") + this.scm_HashMap$Node__f__value) + ", ") + this.scm_HashMap$Node__f__hash) + ") -> ") + this.scm_HashMap$Node__f__next)
  };
}
function $isArrayOf_scm_HashMap$Node(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_HashMap$Node)))
}
const $d_scm_HashMap$Node = new $TypeData().initClass({
  scm_HashMap$Node: 0
}, false, "scala.collection.mutable.HashMap$Node", {
  scm_HashMap$Node: 1,
  O: 1
});
$c_scm_HashMap$Node.prototype.$classData = $d_scm_HashMap$Node;
class $c_scm_HashSet$Node extends $c_O {
  constructor(_key, _hash, _next) {
    super();
    this.scm_HashSet$Node__f__key = null;
    this.scm_HashSet$Node__f__hash = 0;
    this.scm_HashSet$Node__f__next = null;
    this.scm_HashSet$Node__f__key = _key;
    this.scm_HashSet$Node__f__hash = _hash;
    this.scm_HashSet$Node__f__next = _next
  };
  findNode__O__I__scm_HashSet$Node(k, h) {
    let _$this = this;
    while (true) {
      if (((h === _$this.scm_HashSet$Node__f__hash) && $m_sr_BoxesRunTime$().equals__O__O__Z(k, _$this.scm_HashSet$Node__f__key))) {
        return _$this
      } else if (((_$this.scm_HashSet$Node__f__next === null) || (_$this.scm_HashSet$Node__f__hash > h))) {
        return null
      } else {
        _$this = _$this.scm_HashSet$Node__f__next
      }
    }
  };
  foreach__F1__V(f) {
    let _$this = this;
    while (true) {
      f.apply__O__O(_$this.scm_HashSet$Node__f__key);
      if ((_$this.scm_HashSet$Node__f__next !== null)) {
        _$this = _$this.scm_HashSet$Node__f__next;
        continue
      };
      break
    }
  };
  toString__T() {
    return ((((("Node(" + this.scm_HashSet$Node__f__key) + ", ") + this.scm_HashSet$Node__f__hash) + ") -> ") + this.scm_HashSet$Node__f__next)
  };
}
function $isArrayOf_scm_HashSet$Node(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_HashSet$Node)))
}
const $d_scm_HashSet$Node = new $TypeData().initClass({
  scm_HashSet$Node: 0
}, false, "scala.collection.mutable.HashSet$Node", {
  scm_HashSet$Node: 1,
  O: 1
});
$c_scm_HashSet$Node.prototype.$classData = $d_scm_HashSet$Node;
class $c_sc_package$$colon$plus$ extends $c_O {
}
const $d_sc_package$$colon$plus$ = new $TypeData().initClass({
  sc_package$$colon$plus$: 0
}, false, "scala.collection.package$$colon$plus$", {
  sc_package$$colon$plus$: 1,
  O: 1
});
$c_sc_package$$colon$plus$.prototype.$classData = $d_sc_package$$colon$plus$;
let $n_sc_package$$colon$plus$ = (void 0);
function $m_sc_package$$colon$plus$() {
  if ((!$n_sc_package$$colon$plus$)) {
    $n_sc_package$$colon$plus$ = new $c_sc_package$$colon$plus$()
  };
  return $n_sc_package$$colon$plus$
}
class $c_sc_package$$plus$colon$ extends $c_O {
}
const $d_sc_package$$plus$colon$ = new $TypeData().initClass({
  sc_package$$plus$colon$: 0
}, false, "scala.collection.package$$plus$colon$", {
  sc_package$$plus$colon$: 1,
  O: 1
});
$c_sc_package$$plus$colon$.prototype.$classData = $d_sc_package$$plus$colon$;
let $n_sc_package$$plus$colon$ = (void 0);
function $m_sc_package$$plus$colon$() {
  if ((!$n_sc_package$$plus$colon$)) {
    $n_sc_package$$plus$colon$ = new $c_sc_package$$plus$colon$()
  };
  return $n_sc_package$$plus$colon$
}
const $ct_s_math_Numeric$NumericOps__s_math_Numeric__O__ = (function($thiz, outer, lhs) {
  $thiz.s_math_Numeric$NumericOps__f_lhs = lhs;
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.s_math_Numeric$NumericOps__f_$outer = outer
  };
  return $thiz
});
class $c_s_math_Numeric$NumericOps extends $c_O {
  constructor() {
    super();
    this.s_math_Numeric$NumericOps__f_lhs = null;
    this.s_math_Numeric$NumericOps__f_$outer = null
  };
  $plus__O__O(rhs) {
    return this.s_math_Numeric$NumericOps__f_$outer.plus__O__O__O(this.s_math_Numeric$NumericOps__f_lhs, rhs)
  };
  $minus__O__O(rhs) {
    return this.s_math_Numeric$NumericOps__f_$outer.minus__O__O__O(this.s_math_Numeric$NumericOps__f_lhs, rhs)
  };
  $times__O__O(rhs) {
    return this.s_math_Numeric$NumericOps__f_$outer.times__O__O__O(this.s_math_Numeric$NumericOps__f_lhs, rhs)
  };
}
class $c_s_math_Ordered$ extends $c_O {
}
const $d_s_math_Ordered$ = new $TypeData().initClass({
  s_math_Ordered$: 0
}, false, "scala.math.Ordered$", {
  s_math_Ordered$: 1,
  O: 1
});
$c_s_math_Ordered$.prototype.$classData = $d_s_math_Ordered$;
let $n_s_math_Ordered$ = (void 0);
function $m_s_math_Ordered$() {
  if ((!$n_s_math_Ordered$)) {
    $n_s_math_Ordered$ = new $c_s_math_Ordered$()
  };
  return $n_s_math_Ordered$
}
class $c_s_math_Ordering$OrderingOps extends $c_O {
  constructor(outer, lhs) {
    super();
    this.s_math_Ordering$OrderingOps__f_lhs = null;
    this.s_math_Ordering$OrderingOps__f_$outer = null;
    this.s_math_Ordering$OrderingOps__f_lhs = lhs;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.s_math_Ordering$OrderingOps__f_$outer = outer
    }
  };
  $less__O__Z(rhs) {
    return this.s_math_Ordering$OrderingOps__f_$outer.lt__O__O__Z(this.s_math_Ordering$OrderingOps__f_lhs, rhs)
  };
  $less$eq__O__Z(rhs) {
    return this.s_math_Ordering$OrderingOps__f_$outer.lteq__O__O__Z(this.s_math_Ordering$OrderingOps__f_lhs, rhs)
  };
  $greater__O__Z(rhs) {
    return this.s_math_Ordering$OrderingOps__f_$outer.gt__O__O__Z(this.s_math_Ordering$OrderingOps__f_lhs, rhs)
  };
}
const $d_s_math_Ordering$OrderingOps = new $TypeData().initClass({
  s_math_Ordering$OrderingOps: 0
}, false, "scala.math.Ordering$OrderingOps", {
  s_math_Ordering$OrderingOps: 1,
  O: 1
});
$c_s_math_Ordering$OrderingOps.prototype.$classData = $d_s_math_Ordering$OrderingOps;
class $c_s_math_package$ extends $c_O {
  signum__J__J(x) {
    const lo = x.RTLong__f_hi;
    const value = ((lo < 0) ? (-1) : (((lo === 0) && (x.RTLong__f_lo === 0)) ? 0 : 1));
    const hi = (value >> 31);
    return new $c_RTLong(value, hi)
  };
}
const $d_s_math_package$ = new $TypeData().initClass({
  s_math_package$: 0
}, false, "scala.math.package$", {
  s_math_package$: 1,
  O: 1
});
$c_s_math_package$.prototype.$classData = $d_s_math_package$;
let $n_s_math_package$ = (void 0);
function $m_s_math_package$() {
  if ((!$n_s_math_package$)) {
    $n_s_math_package$ = new $c_s_math_package$()
  };
  return $n_s_math_package$
}
class $c_s_package$ extends $c_O {
  constructor() {
    super();
    this.s_package$__f_BigDecimal = null;
    this.s_package$__f_BigInt = null;
    this.s_package$__f_AnyRef = null;
    this.s_package$__f_Traversable = null;
    this.s_package$__f_Iterable = null;
    this.s_package$__f_Seq = null;
    this.s_package$__f_IndexedSeq = null;
    this.s_package$__f_Iterator = null;
    this.s_package$__f_List = null;
    this.s_package$__f_Nil = null;
    this.s_package$__f_$colon$colon = null;
    this.s_package$__f_$plus$colon = null;
    this.s_package$__f_$colon$plus = null;
    this.s_package$__f_Stream = null;
    this.s_package$__f_LazyList = null;
    this.s_package$__f_Vector = null;
    this.s_package$__f_StringBuilder = null;
    this.s_package$__f_Range = null;
    this.s_package$__f_Equiv = null;
    this.s_package$__f_Fractional = null;
    this.s_package$__f_Integral = null;
    this.s_package$__f_Numeric = null;
    this.s_package$__f_Ordered = null;
    this.s_package$__f_Ordering = null;
    this.s_package$__f_Either = null;
    this.s_package$__f_Left = null;
    this.s_package$__f_Right = null;
    this.s_package$__f_bitmap$0 = 0;
    $n_s_package$ = this;
    this.s_package$__f_AnyRef = new $c_s_package$$anon$1();
    this.s_package$__f_Traversable = $m_sc_Iterable$();
    this.s_package$__f_Iterable = $m_sc_Iterable$();
    this.s_package$__f_Seq = $m_sci_Seq$();
    this.s_package$__f_IndexedSeq = $m_sci_IndexedSeq$();
    this.s_package$__f_Iterator = $m_sc_Iterator$();
    this.s_package$__f_List = $m_sci_List$();
    this.s_package$__f_Nil = $m_sci_Nil$();
    this.s_package$__f_$colon$colon = $m_sci_$colon$colon$();
    this.s_package$__f_$plus$colon = $m_sc_package$$plus$colon$();
    this.s_package$__f_$colon$plus = $m_sc_package$$colon$plus$();
    this.s_package$__f_Stream = $m_sci_Stream$();
    this.s_package$__f_LazyList = $m_sci_LazyList$();
    this.s_package$__f_Vector = $m_sci_Vector$();
    this.s_package$__f_StringBuilder = $m_scm_StringBuilder$();
    this.s_package$__f_Range = $m_sci_Range$();
    this.s_package$__f_Equiv = $m_s_math_Equiv$();
    this.s_package$__f_Fractional = $m_s_math_Fractional$();
    this.s_package$__f_Integral = $m_s_math_Integral$();
    this.s_package$__f_Numeric = $m_s_math_Numeric$();
    this.s_package$__f_Ordered = $m_s_math_Ordered$();
    this.s_package$__f_Ordering = $m_s_math_Ordering$();
    this.s_package$__f_Either = $m_s_util_Either$();
    this.s_package$__f_Left = $m_s_util_Left$();
    this.s_package$__f_Right = $m_s_util_Right$()
  };
}
const $d_s_package$ = new $TypeData().initClass({
  s_package$: 0
}, false, "scala.package$", {
  s_package$: 1,
  O: 1
});
$c_s_package$.prototype.$classData = $d_s_package$;
let $n_s_package$ = (void 0);
function $m_s_package$() {
  if ((!$n_s_package$)) {
    $n_s_package$ = new $c_s_package$()
  };
  return $n_s_package$
}
class $c_sr_BoxesRunTime$ extends $c_O {
  equals__O__O__Z(x, y) {
    if ((x === y)) {
      return true
    } else if ($is_jl_Number(x)) {
      const x2 = x;
      return this.equalsNumObject__jl_Number__O__Z(x2, y)
    } else if ((x instanceof $Char)) {
      const x3 = x;
      return this.equalsCharObject__jl_Character__O__Z(x3, y)
    } else {
      return ((x === null) ? (y === null) : $dp_equals__O__Z(x, y))
    }
  };
  equalsNumObject__jl_Number__O__Z(xn, y) {
    if ($is_jl_Number(y)) {
      const x2 = y;
      return this.equalsNumNum__jl_Number__jl_Number__Z(xn, x2)
    } else if ((y instanceof $Char)) {
      const x3 = y;
      if (((typeof xn) === "number")) {
        const x2$1 = (+xn);
        return (x2$1 === $uC(x3))
      } else if ((xn instanceof $c_RTLong)) {
        const t = $uJ(xn);
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        const value = $uC(x3);
        const hi$1 = (value >> 31);
        return ((lo === value) && (hi === hi$1))
      } else {
        return ((xn === null) ? (x3 === null) : $dp_equals__O__Z(xn, x3))
      }
    } else {
      return ((xn === null) ? (y === null) : $dp_equals__O__Z(xn, y))
    }
  };
  equalsNumNum__jl_Number__jl_Number__Z(xn, yn) {
    if (((typeof xn) === "number")) {
      const x2 = (+xn);
      if (((typeof yn) === "number")) {
        const x2$2 = (+yn);
        return (x2 === x2$2)
      } else if ((yn instanceof $c_RTLong)) {
        const t = $uJ(yn);
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        return (x2 === $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toDouble__I__I__D(lo, hi))
      } else if ((yn instanceof $c_s_math_ScalaNumber)) {
        const x4 = yn;
        return x4.equals__O__Z(x2)
      } else {
        return false
      }
    } else if ((xn instanceof $c_RTLong)) {
      const t$1 = $uJ(xn);
      const lo$1 = t$1.RTLong__f_lo;
      const hi$1 = t$1.RTLong__f_hi;
      if ((yn instanceof $c_RTLong)) {
        const t$2 = $uJ(yn);
        const lo$2 = t$2.RTLong__f_lo;
        const hi$2 = t$2.RTLong__f_hi;
        return ((lo$1 === lo$2) && (hi$1 === hi$2))
      } else if (((typeof yn) === "number")) {
        const x3$3 = (+yn);
        return ($m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toDouble__I__I__D(lo$1, hi$1) === x3$3)
      } else if ((yn instanceof $c_s_math_ScalaNumber)) {
        const x4$2 = yn;
        return x4$2.equals__O__Z(new $c_RTLong(lo$1, hi$1))
      } else {
        return false
      }
    } else {
      return ((xn === null) ? (yn === null) : $dp_equals__O__Z(xn, yn))
    }
  };
  equalsCharObject__jl_Character__O__Z(xc, y) {
    if ((y instanceof $Char)) {
      const x2 = y;
      return ($uC(xc) === $uC(x2))
    } else if ($is_jl_Number(y)) {
      const x3 = y;
      if (((typeof x3) === "number")) {
        const x2$1 = (+x3);
        return (x2$1 === $uC(xc))
      } else if ((x3 instanceof $c_RTLong)) {
        const t = $uJ(x3);
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        const value = $uC(xc);
        const hi$1 = (value >> 31);
        return ((lo === value) && (hi === hi$1))
      } else {
        return ((x3 === null) ? (xc === null) : $dp_equals__O__Z(x3, xc))
      }
    } else {
      return ((xc === null) && (y === null))
    }
  };
}
const $d_sr_BoxesRunTime$ = new $TypeData().initClass({
  sr_BoxesRunTime$: 0
}, false, "scala.runtime.BoxesRunTime$", {
  sr_BoxesRunTime$: 1,
  O: 1
});
$c_sr_BoxesRunTime$.prototype.$classData = $d_sr_BoxesRunTime$;
let $n_sr_BoxesRunTime$ = (void 0);
function $m_sr_BoxesRunTime$() {
  if ((!$n_sr_BoxesRunTime$)) {
    $n_sr_BoxesRunTime$ = new $c_sr_BoxesRunTime$()
  };
  return $n_sr_BoxesRunTime$
}
const $d_sr_Null$ = new $TypeData().initClass({
  sr_Null$: 0
}, false, "scala.runtime.Null$", {
  sr_Null$: 1,
  O: 1
});
class $c_sr_RichChar$ extends $c_O {
  equals$extension__C__O__Z(this$, x$1) {
    if ((x$1 instanceof $c_sr_RichChar)) {
      const RichChar$1 = x$1.sr_RichChar__f_self;
      return (this$ === RichChar$1)
    } else {
      return false
    }
  };
}
const $d_sr_RichChar$ = new $TypeData().initClass({
  sr_RichChar$: 0
}, false, "scala.runtime.RichChar$", {
  sr_RichChar$: 1,
  O: 1
});
$c_sr_RichChar$.prototype.$classData = $d_sr_RichChar$;
let $n_sr_RichChar$ = (void 0);
function $m_sr_RichChar$() {
  if ((!$n_sr_RichChar$)) {
    $n_sr_RichChar$ = new $c_sr_RichChar$()
  };
  return $n_sr_RichChar$
}
class $c_sr_ScalaRunTime$ extends $c_O {
  array_apply__O__I__O(xs, idx) {
    if ($isArrayOf_O(xs, 1)) {
      const x2 = xs;
      return x2.u[idx]
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      return x3.u[idx]
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      return x4.u[idx]
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      return x5.u[idx]
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      return x6.u[idx]
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      return $bC(x7.u[idx])
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      return x8.u[idx]
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      return x9.u[idx]
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      return x10.u[idx]
    } else if ($isArrayOf_jl_Void(xs, 1)) {
      const x11 = xs;
      return x11.u[idx]
    } else if ((xs === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    } else {
      throw new $c_s_MatchError(xs)
    }
  };
  array_update__O__I__O__V(xs, idx, value) {
    if ($isArrayOf_O(xs, 1)) {
      const x2 = xs;
      x2.u[idx] = value
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      x3.u[idx] = (value | 0)
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      x4.u[idx] = (+value)
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      x5.u[idx] = $uJ(value)
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      x6.u[idx] = (+value)
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      x7.u[idx] = $uC(value)
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      x8.u[idx] = (value | 0)
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      x9.u[idx] = (value | 0)
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      x10.u[idx] = (!(!value))
    } else if ($isArrayOf_jl_Void(xs, 1)) {
      const x11 = xs;
      x11.u[idx] = (void 0)
    } else if ((xs === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    } else {
      throw new $c_s_MatchError(xs)
    }
  };
  array_length__O__I(xs) {
    return $m_jl_reflect_Array$().getLength__O__I(xs)
  };
  array_clone__O__O(xs) {
    if ($isArrayOf_O(xs, 1)) {
      const x2 = xs;
      return x2.clone__O()
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      return x3.clone__O()
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      return x4.clone__O()
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      return x5.clone__O()
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      return x6.clone__O()
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      return x7.clone__O()
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      return x8.clone__O()
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      return x9.clone__O()
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      return x10.clone__O()
    } else if ((xs === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    } else {
      throw new $c_s_MatchError(xs)
    }
  };
  _toString__s_Product__T(x) {
    const this$1 = x.productIterator__sc_Iterator();
    const start = (x.productPrefix__T() + "(");
    return $f_sc_IterableOnceOps__mkString__T__T__T__T(this$1, start, ",", ")")
  };
}
const $d_sr_ScalaRunTime$ = new $TypeData().initClass({
  sr_ScalaRunTime$: 0
}, false, "scala.runtime.ScalaRunTime$", {
  sr_ScalaRunTime$: 1,
  O: 1
});
$c_sr_ScalaRunTime$.prototype.$classData = $d_sr_ScalaRunTime$;
let $n_sr_ScalaRunTime$ = (void 0);
function $m_sr_ScalaRunTime$() {
  if ((!$n_sr_ScalaRunTime$)) {
    $n_sr_ScalaRunTime$ = new $c_sr_ScalaRunTime$()
  };
  return $n_sr_ScalaRunTime$
}
class $c_sr_Statics$ extends $c_O {
  mix__I__I__I(hash, data) {
    let h = this.mixLast__I__I__I(hash, data);
    const i = h;
    h = ((i << 13) | ((i >>> 19) | 0));
    return (((-430675100) + $imul(5, h)) | 0)
  };
  mixLast__I__I__I(hash, data) {
    let k = data;
    k = $imul((-862048943), k);
    const i = k;
    k = ((i << 15) | ((i >>> 17) | 0));
    k = $imul(461845907, k);
    return (hash ^ k)
  };
  finalizeHash__I__I__I(hash, length) {
    return this.avalanche__I__I((hash ^ length))
  };
  avalanche__I__I(h0) {
    let h = h0;
    h = (h ^ ((h >>> 16) | 0));
    h = $imul((-2048144789), h);
    h = (h ^ ((h >>> 13) | 0));
    h = $imul((-1028477387), h);
    h = (h ^ ((h >>> 16) | 0));
    return h
  };
  longHash__J__I(lv) {
    const lo = lv.RTLong__f_lo;
    const lo$1 = lv.RTLong__f_hi;
    return ((lo$1 === (lo >> 31)) ? lo : (lo ^ lo$1))
  };
  doubleHash__D__I(dv) {
    const iv = $doubleToInt(dv);
    if ((iv === dv)) {
      return iv
    } else {
      const this$1 = $m_RTLong$();
      const lo = this$1.org$scalajs$linker$runtime$RuntimeLong$$fromDoubleImpl__D__I(dv);
      const hi = this$1.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
      return (($m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toDouble__I__I__D(lo, hi) === dv) ? (lo ^ hi) : $m_jl_FloatingPointBits$().numberHashCode__D__I(dv))
    }
  };
  anyHash__O__I(x) {
    if ((x === null)) {
      return 0
    } else if (((typeof x) === "number")) {
      const x3 = (+x);
      return this.doubleHash__D__I(x3)
    } else if ((x instanceof $c_RTLong)) {
      const t = $uJ(x);
      const lo = t.RTLong__f_lo;
      const hi = t.RTLong__f_hi;
      return this.longHash__J__I(new $c_RTLong(lo, hi))
    } else {
      return $dp_hashCode__I(x)
    }
  };
  ioobe__I__O(n) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), ("" + n))
  };
}
const $d_sr_Statics$ = new $TypeData().initClass({
  sr_Statics$: 0
}, false, "scala.runtime.Statics$", {
  sr_Statics$: 1,
  O: 1
});
$c_sr_Statics$.prototype.$classData = $d_sr_Statics$;
let $n_sr_Statics$ = (void 0);
function $m_sr_Statics$() {
  if ((!$n_sr_Statics$)) {
    $n_sr_Statics$ = new $c_sr_Statics$()
  };
  return $n_sr_Statics$
}
class $c_sr_Statics$PFMarker$ extends $c_O {
}
const $d_sr_Statics$PFMarker$ = new $TypeData().initClass({
  sr_Statics$PFMarker$: 0
}, false, "scala.runtime.Statics$PFMarker$", {
  sr_Statics$PFMarker$: 1,
  O: 1
});
$c_sr_Statics$PFMarker$.prototype.$classData = $d_sr_Statics$PFMarker$;
let $n_sr_Statics$PFMarker$ = (void 0);
function $m_sr_Statics$PFMarker$() {
  if ((!$n_sr_Statics$PFMarker$)) {
    $n_sr_Statics$PFMarker$ = new $c_sr_Statics$PFMarker$()
  };
  return $n_sr_Statics$PFMarker$
}
const $d_sjs_js_Any = new $TypeData().initClass({
  sjs_js_Any: 0
}, false, "scala.scalajs.js.Any", {
  sjs_js_Any: 1,
  O: 1
}, true, (void 0), $noIsInstance);
class $c_sjs_js_JSConverters$JSRichIterableOnce$ extends $c_O {
  toJSArray$extension__sc_IterableOnce__sjs_js_Array(this$) {
    if ((this$ instanceof $c_sjs_js_WrappedArray)) {
      const x2 = this$;
      return x2.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array
    } else {
      const result = [];
      const this$2 = this$.iterator__sc_Iterator();
      while (this$2.hasNext__Z()) {
        const arg1 = this$2.next__O();
        (result.push(arg1) | 0)
      };
      return result
    }
  };
}
const $d_sjs_js_JSConverters$JSRichIterableOnce$ = new $TypeData().initClass({
  sjs_js_JSConverters$JSRichIterableOnce$: 0
}, false, "scala.scalajs.js.JSConverters$JSRichIterableOnce$", {
  sjs_js_JSConverters$JSRichIterableOnce$: 1,
  O: 1
});
$c_sjs_js_JSConverters$JSRichIterableOnce$.prototype.$classData = $d_sjs_js_JSConverters$JSRichIterableOnce$;
let $n_sjs_js_JSConverters$JSRichIterableOnce$ = (void 0);
function $m_sjs_js_JSConverters$JSRichIterableOnce$() {
  if ((!$n_sjs_js_JSConverters$JSRichIterableOnce$)) {
    $n_sjs_js_JSConverters$JSRichIterableOnce$ = new $c_sjs_js_JSConverters$JSRichIterableOnce$()
  };
  return $n_sjs_js_JSConverters$JSRichIterableOnce$
}
class $c_sjs_js_special_package$ extends $c_O {
  objectLiteral__sci_Seq__sjs_js_Object(properties) {
    const result = {};
    properties.foreach__F1__V(new $c_sjsr_AnonFunction1(((this$1, result$1) => ((pair$2) => {
      const pair = pair$2;
      result$1[pair._1__O()] = pair._2__O()
    }))(this, result)));
    return result
  };
}
const $d_sjs_js_special_package$ = new $TypeData().initClass({
  sjs_js_special_package$: 0
}, false, "scala.scalajs.js.special.package$", {
  sjs_js_special_package$: 1,
  O: 1
});
$c_sjs_js_special_package$.prototype.$classData = $d_sjs_js_special_package$;
let $n_sjs_js_special_package$ = (void 0);
function $m_sjs_js_special_package$() {
  if ((!$n_sjs_js_special_package$)) {
    $n_sjs_js_special_package$ = new $c_sjs_js_special_package$()
  };
  return $n_sjs_js_special_package$
}
class $c_sjsr_package$ extends $c_O {
  wrapJavaScriptException__O__jl_Throwable(e) {
    if ((e instanceof $c_jl_Throwable)) {
      const x2 = e;
      return x2
    } else {
      return new $c_sjs_js_JavaScriptException(e)
    }
  };
  unwrapJavaScriptException__jl_Throwable__O(th) {
    if ((th instanceof $c_sjs_js_JavaScriptException)) {
      const x2 = th;
      const e = x2.sjs_js_JavaScriptException__f_exception;
      return e
    } else {
      return th
    }
  };
}
const $d_sjsr_package$ = new $TypeData().initClass({
  sjsr_package$: 0
}, false, "scala.scalajs.runtime.package$", {
  sjsr_package$: 1,
  O: 1
});
$c_sjsr_package$.prototype.$classData = $d_sjsr_package$;
let $n_sjsr_package$ = (void 0);
function $m_sjsr_package$() {
  if ((!$n_sjsr_package$)) {
    $n_sjsr_package$ = new $c_sjsr_package$()
  };
  return $n_sjsr_package$
}
class $c_s_util_Sorting$ extends $c_O {
  scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(a, i0, iN, ord) {
    _return: {
      const n = ((iN - i0) | 0);
      if ((n < 2)) {
        break _return
      };
      if ((ord.compare__O__O__I($m_sr_ScalaRunTime$().array_apply__O__I__O(a, i0), $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ((1 + i0) | 0))) > 0)) {
        const temp = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, i0);
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, i0, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ((1 + i0) | 0)));
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, ((1 + i0) | 0), temp)
      };
      let m = 2;
      while ((m < n)) {
        const next = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ((i0 + m) | 0));
        if ((ord.compare__O__O__I(next, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, (((-1) + ((i0 + m) | 0)) | 0))) < 0)) {
          let iA = i0;
          let iB = (((-1) + ((i0 + m) | 0)) | 0);
          while ((((iB - iA) | 0) > 1)) {
            const ix = ((((iA + iB) | 0) >>> 1) | 0);
            if ((ord.compare__O__O__I(next, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, ix)) < 0)) {
              iB = ix
            } else {
              iA = ix
            }
          };
          const ix$2 = ((iA + ((ord.compare__O__O__I(next, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, iA)) < 0) ? 0 : 1)) | 0);
          let i = ((i0 + m) | 0);
          while ((i > ix$2)) {
            $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, i, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, (((-1) + i) | 0)));
            i = (((-1) + i) | 0)
          };
          $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, ix$2, next)
        };
        m = ((1 + m) | 0)
      }
    }
  };
  scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(a, i0, iN, ord, scratch, evidence$2) {
    if ((((iN - i0) | 0) < 32)) {
      this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(a, i0, iN, ord)
    } else {
      const iK = ((((i0 + iN) | 0) >>> 1) | 0);
      const sc = ((scratch === null) ? evidence$2.newArray__I__O(((iK - i0) | 0)) : scratch);
      this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(a, i0, iK, ord, sc, evidence$2);
      this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(a, iK, iN, ord, sc, evidence$2);
      this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(a, i0, iK, iN, ord, sc)
    }
  };
  scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(a, i0, iK, iN, ord, scratch) {
    if ((ord.compare__O__O__I($m_sr_ScalaRunTime$().array_apply__O__I__O(a, (((-1) + iK) | 0)), $m_sr_ScalaRunTime$().array_apply__O__I__O(a, iK)) > 0)) {
      let i = i0;
      const jN = ((iK - i0) | 0);
      let j = 0;
      while ((i < iK)) {
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(scratch, j, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, i));
        i = ((1 + i) | 0);
        j = ((1 + j) | 0)
      };
      let k = i0;
      j = 0;
      while (((i < iN) && (j < jN))) {
        if ((ord.compare__O__O__I($m_sr_ScalaRunTime$().array_apply__O__I__O(a, i), $m_sr_ScalaRunTime$().array_apply__O__I__O(scratch, j)) < 0)) {
          $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, k, $m_sr_ScalaRunTime$().array_apply__O__I__O(a, i));
          i = ((1 + i) | 0)
        } else {
          $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, k, $m_sr_ScalaRunTime$().array_apply__O__I__O(scratch, j));
          j = ((1 + j) | 0)
        };
        k = ((1 + k) | 0)
      };
      while ((j < jN)) {
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(a, k, $m_sr_ScalaRunTime$().array_apply__O__I__O(scratch, j));
        j = ((1 + j) | 0);
        k = ((1 + k) | 0)
      }
    }
  };
  scala$util$Sorting$$booleanSort__AZ__V(a) {
    let i = 0;
    let n = 0;
    while ((i < a.u.length)) {
      if ((!a.u[i])) {
        n = ((1 + n) | 0)
      };
      i = ((1 + i) | 0)
    };
    i = 0;
    while ((i < n)) {
      a.u[i] = false;
      i = ((1 + i) | 0)
    };
    while ((i < a.u.length)) {
      a.u[i] = true;
      i = ((1 + i) | 0)
    }
  };
  stableSort__O__I__I__s_math_Ordering__V(a, from, until, evidence$4) {
    if ($isArrayOf_O(a, 1)) {
      if ((($m_sr_ScalaRunTime$().array_length__O__I(a) > 1) && (evidence$4 === null))) {
        throw $ct_jl_NullPointerException__T__(new $c_jl_NullPointerException(), "Ordering")
      };
      const array = a;
      $m_ju_Arrays$().sort__AO__I__I__ju_Comparator__V(array, from, until, evidence$4)
    } else if ($isArrayOf_I(a, 1)) {
      const x3 = a;
      if ((evidence$4 === $m_s_math_Ordering$Int$())) {
        $m_ju_Arrays$().sort__AI__V(x3)
      } else {
        const evidence$2 = $m_s_reflect_ManifestFactory$IntManifest$();
        if ((((until - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x3, from, until, evidence$4)
        } else {
          const iK = ((((from + until) | 0) >>> 1) | 0);
          const len = ((iK - from) | 0);
          const sc = $newArrayObject($d_I.getArrayOf(), [len]);
          if ((((iK - from) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x3, from, iK, evidence$4)
          } else {
            const iK$1 = ((((from + iK) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x3, from, iK$1, evidence$4, sc, evidence$2);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x3, iK$1, iK, evidence$4, sc, evidence$2);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x3, from, iK$1, iK, evidence$4, sc)
          };
          if ((((until - iK) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x3, iK, until, evidence$4)
          } else {
            const iK$2 = ((((iK + until) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x3, iK, iK$2, evidence$4, sc, evidence$2);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x3, iK$2, until, evidence$4, sc, evidence$2);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x3, iK, iK$2, until, evidence$4, sc)
          };
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x3, from, iK, until, evidence$4, sc)
        }
      }
    } else if ($isArrayOf_D(a, 1)) {
      const x4 = a;
      const evidence$2$1 = $m_s_reflect_ManifestFactory$DoubleManifest$();
      if ((((until - from) | 0) < 32)) {
        this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x4, from, until, evidence$4)
      } else {
        const iK$3 = ((((from + until) | 0) >>> 1) | 0);
        const len$1 = ((iK$3 - from) | 0);
        const sc$1 = $newArrayObject($d_D.getArrayOf(), [len$1]);
        if ((((iK$3 - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x4, from, iK$3, evidence$4)
        } else {
          const iK$4 = ((((from + iK$3) | 0) >>> 1) | 0);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x4, from, iK$4, evidence$4, sc$1, evidence$2$1);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x4, iK$4, iK$3, evidence$4, sc$1, evidence$2$1);
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x4, from, iK$4, iK$3, evidence$4, sc$1)
        };
        if ((((until - iK$3) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x4, iK$3, until, evidence$4)
        } else {
          const iK$5 = ((((iK$3 + until) | 0) >>> 1) | 0);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x4, iK$3, iK$5, evidence$4, sc$1, evidence$2$1);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x4, iK$5, until, evidence$4, sc$1, evidence$2$1);
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x4, iK$3, iK$5, until, evidence$4, sc$1)
        };
        this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x4, from, iK$3, until, evidence$4, sc$1)
      }
    } else if ($isArrayOf_J(a, 1)) {
      const x5 = a;
      if ((evidence$4 === $m_s_math_Ordering$Long$())) {
        $m_ju_Arrays$().sort__AJ__V(x5)
      } else {
        const evidence$2$2 = $m_s_reflect_ManifestFactory$LongManifest$();
        if ((((until - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x5, from, until, evidence$4)
        } else {
          const iK$6 = ((((from + until) | 0) >>> 1) | 0);
          const len$2 = ((iK$6 - from) | 0);
          const sc$2 = $newArrayObject($d_J.getArrayOf(), [len$2]);
          if ((((iK$6 - from) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x5, from, iK$6, evidence$4)
          } else {
            const iK$7 = ((((from + iK$6) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x5, from, iK$7, evidence$4, sc$2, evidence$2$2);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x5, iK$7, iK$6, evidence$4, sc$2, evidence$2$2);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x5, from, iK$7, iK$6, evidence$4, sc$2)
          };
          if ((((until - iK$6) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x5, iK$6, until, evidence$4)
          } else {
            const iK$8 = ((((iK$6 + until) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x5, iK$6, iK$8, evidence$4, sc$2, evidence$2$2);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x5, iK$8, until, evidence$4, sc$2, evidence$2$2);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x5, iK$6, iK$8, until, evidence$4, sc$2)
          };
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x5, from, iK$6, until, evidence$4, sc$2)
        }
      }
    } else if ($isArrayOf_F(a, 1)) {
      const x6 = a;
      const evidence$2$3 = $m_s_reflect_ManifestFactory$FloatManifest$();
      if ((((until - from) | 0) < 32)) {
        this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x6, from, until, evidence$4)
      } else {
        const iK$9 = ((((from + until) | 0) >>> 1) | 0);
        const len$3 = ((iK$9 - from) | 0);
        const sc$3 = $newArrayObject($d_F.getArrayOf(), [len$3]);
        if ((((iK$9 - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x6, from, iK$9, evidence$4)
        } else {
          const iK$10 = ((((from + iK$9) | 0) >>> 1) | 0);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x6, from, iK$10, evidence$4, sc$3, evidence$2$3);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x6, iK$10, iK$9, evidence$4, sc$3, evidence$2$3);
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x6, from, iK$10, iK$9, evidence$4, sc$3)
        };
        if ((((until - iK$9) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x6, iK$9, until, evidence$4)
        } else {
          const iK$11 = ((((iK$9 + until) | 0) >>> 1) | 0);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x6, iK$9, iK$11, evidence$4, sc$3, evidence$2$3);
          this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x6, iK$11, until, evidence$4, sc$3, evidence$2$3);
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x6, iK$9, iK$11, until, evidence$4, sc$3)
        };
        this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x6, from, iK$9, until, evidence$4, sc$3)
      }
    } else if ($isArrayOf_C(a, 1)) {
      const x7 = a;
      if ((evidence$4 === $m_s_math_Ordering$Char$())) {
        $m_ju_Arrays$().sort__AC__V(x7)
      } else {
        const evidence$2$4 = $m_s_reflect_ManifestFactory$CharManifest$();
        if ((((until - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x7, from, until, evidence$4)
        } else {
          const iK$12 = ((((from + until) | 0) >>> 1) | 0);
          const len$4 = ((iK$12 - from) | 0);
          const sc$4 = $newArrayObject($d_C.getArrayOf(), [len$4]);
          if ((((iK$12 - from) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x7, from, iK$12, evidence$4)
          } else {
            const iK$13 = ((((from + iK$12) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x7, from, iK$13, evidence$4, sc$4, evidence$2$4);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x7, iK$13, iK$12, evidence$4, sc$4, evidence$2$4);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x7, from, iK$13, iK$12, evidence$4, sc$4)
          };
          if ((((until - iK$12) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x7, iK$12, until, evidence$4)
          } else {
            const iK$14 = ((((iK$12 + until) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x7, iK$12, iK$14, evidence$4, sc$4, evidence$2$4);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x7, iK$14, until, evidence$4, sc$4, evidence$2$4);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x7, iK$12, iK$14, until, evidence$4, sc$4)
          };
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x7, from, iK$12, until, evidence$4, sc$4)
        }
      }
    } else if ($isArrayOf_B(a, 1)) {
      const x8 = a;
      if ((evidence$4 === $m_s_math_Ordering$Byte$())) {
        $m_ju_Arrays$().sort__AB__V(x8)
      } else {
        const evidence$2$5 = $m_s_reflect_ManifestFactory$ByteManifest$();
        if ((((until - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x8, from, until, evidence$4)
        } else {
          const iK$15 = ((((from + until) | 0) >>> 1) | 0);
          const len$5 = ((iK$15 - from) | 0);
          const sc$5 = $newArrayObject($d_B.getArrayOf(), [len$5]);
          if ((((iK$15 - from) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x8, from, iK$15, evidence$4)
          } else {
            const iK$16 = ((((from + iK$15) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x8, from, iK$16, evidence$4, sc$5, evidence$2$5);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x8, iK$16, iK$15, evidence$4, sc$5, evidence$2$5);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x8, from, iK$16, iK$15, evidence$4, sc$5)
          };
          if ((((until - iK$15) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x8, iK$15, until, evidence$4)
          } else {
            const iK$17 = ((((iK$15 + until) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x8, iK$15, iK$17, evidence$4, sc$5, evidence$2$5);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x8, iK$17, until, evidence$4, sc$5, evidence$2$5);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x8, iK$15, iK$17, until, evidence$4, sc$5)
          };
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x8, from, iK$15, until, evidence$4, sc$5)
        }
      }
    } else if ($isArrayOf_S(a, 1)) {
      const x9 = a;
      if ((evidence$4 === $m_s_math_Ordering$Short$())) {
        $m_ju_Arrays$().sort__AS__V(x9)
      } else {
        const evidence$2$6 = $m_s_reflect_ManifestFactory$ShortManifest$();
        if ((((until - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x9, from, until, evidence$4)
        } else {
          const iK$18 = ((((from + until) | 0) >>> 1) | 0);
          const len$6 = ((iK$18 - from) | 0);
          const sc$6 = $newArrayObject($d_S.getArrayOf(), [len$6]);
          if ((((iK$18 - from) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x9, from, iK$18, evidence$4)
          } else {
            const iK$19 = ((((from + iK$18) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x9, from, iK$19, evidence$4, sc$6, evidence$2$6);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x9, iK$19, iK$18, evidence$4, sc$6, evidence$2$6);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x9, from, iK$19, iK$18, evidence$4, sc$6)
          };
          if ((((until - iK$18) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x9, iK$18, until, evidence$4)
          } else {
            const iK$20 = ((((iK$18 + until) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x9, iK$18, iK$20, evidence$4, sc$6, evidence$2$6);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x9, iK$20, until, evidence$4, sc$6, evidence$2$6);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x9, iK$18, iK$20, until, evidence$4, sc$6)
          };
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x9, from, iK$18, until, evidence$4, sc$6)
        }
      }
    } else if ($isArrayOf_Z(a, 1)) {
      const x10 = a;
      if ((evidence$4 === $m_s_math_Ordering$Boolean$())) {
        this.scala$util$Sorting$$booleanSort__AZ__V(x10)
      } else {
        const evidence$2$7 = $m_s_reflect_ManifestFactory$BooleanManifest$();
        if ((((until - from) | 0) < 32)) {
          this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x10, from, until, evidence$4)
        } else {
          const iK$21 = ((((from + until) | 0) >>> 1) | 0);
          const len$7 = ((iK$21 - from) | 0);
          const sc$7 = $newArrayObject($d_Z.getArrayOf(), [len$7]);
          if ((((iK$21 - from) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x10, from, iK$21, evidence$4)
          } else {
            const iK$22 = ((((from + iK$21) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x10, from, iK$22, evidence$4, sc$7, evidence$2$7);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x10, iK$22, iK$21, evidence$4, sc$7, evidence$2$7);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x10, from, iK$22, iK$21, evidence$4, sc$7)
          };
          if ((((until - iK$21) | 0) < 32)) {
            this.scala$util$Sorting$$insertionSort__O__I__I__s_math_Ordering__V(x10, iK$21, until, evidence$4)
          } else {
            const iK$23 = ((((iK$21 + until) | 0) >>> 1) | 0);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x10, iK$21, iK$23, evidence$4, sc$7, evidence$2$7);
            this.scala$util$Sorting$$mergeSort__O__I__I__s_math_Ordering__O__s_reflect_ClassTag__V(x10, iK$23, until, evidence$4, sc$7, evidence$2$7);
            this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x10, iK$21, iK$23, until, evidence$4, sc$7)
          };
          this.scala$util$Sorting$$mergeSorted__O__I__I__I__s_math_Ordering__O__V(x10, from, iK$21, until, evidence$4, sc$7)
        }
      }
    } else if ((a === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    } else {
      throw new $c_s_MatchError(a)
    }
  };
}
const $d_s_util_Sorting$ = new $TypeData().initClass({
  s_util_Sorting$: 0
}, false, "scala.util.Sorting$", {
  s_util_Sorting$: 1,
  O: 1
});
$c_s_util_Sorting$.prototype.$classData = $d_s_util_Sorting$;
let $n_s_util_Sorting$ = (void 0);
function $m_s_util_Sorting$() {
  if ((!$n_s_util_Sorting$)) {
    $n_s_util_Sorting$ = new $c_s_util_Sorting$()
  };
  return $n_s_util_Sorting$
}
class $c_s_util_hashing_MurmurHash3 extends $c_O {
  mix__I__I__I(hash, data) {
    let h = this.mixLast__I__I__I(hash, data);
    const i = h;
    h = ((i << 13) | ((i >>> 19) | 0));
    return (((-430675100) + $imul(5, h)) | 0)
  };
  mixLast__I__I__I(hash, data) {
    let k = data;
    k = $imul((-862048943), k);
    const i = k;
    k = ((i << 15) | ((i >>> 17) | 0));
    k = $imul(461845907, k);
    return (hash ^ k)
  };
  finalizeHash__I__I__I(hash, length) {
    return this.scala$util$hashing$MurmurHash3$$avalanche__I__I((hash ^ length))
  };
  scala$util$hashing$MurmurHash3$$avalanche__I__I(hash) {
    let h = hash;
    h = (h ^ ((h >>> 16) | 0));
    h = $imul((-2048144789), h);
    h = (h ^ ((h >>> 13) | 0));
    h = $imul((-1028477387), h);
    h = (h ^ ((h >>> 16) | 0));
    return h
  };
  productHash__s_Product__I__Z__I(x, seed, ignorePrefix) {
    const arr = x.productArity__I();
    if ((arr === 0)) {
      return $f_T__hashCode__I(x.productPrefix__T())
    } else {
      let h = seed;
      if ((!ignorePrefix)) {
        h = this.mix__I__I__I(h, $f_T__hashCode__I(x.productPrefix__T()))
      };
      let i = 0;
      while ((i < arr)) {
        const $$x1 = h;
        const x$1 = x.productElement__I__O(i);
        h = this.mix__I__I__I($$x1, $m_sr_Statics$().anyHash__O__I(x$1));
        i = ((1 + i) | 0)
      };
      return this.finalizeHash__I__I__I(h, arr)
    }
  };
  unorderedHash__sc_IterableOnce__I__I(xs, seed) {
    let elem = 0;
    elem = 0;
    let elem$1 = 0;
    elem$1 = 0;
    let elem$2 = 0;
    elem$2 = 0;
    let elem$3 = 0;
    elem$3 = 1;
    const this$5 = xs.iterator__sc_Iterator();
    while (this$5.hasNext__Z()) {
      const arg1 = this$5.next__O();
      const h = $m_sr_Statics$().anyHash__O__I(arg1);
      elem = ((elem + h) | 0);
      elem$1 = (elem$1 ^ h);
      elem$3 = $imul(elem$3, (1 | h));
      elem$2 = ((1 + elem$2) | 0)
    };
    let h$1 = seed;
    h$1 = this.mix__I__I__I(h$1, elem);
    h$1 = this.mix__I__I__I(h$1, elem$1);
    h$1 = this.mixLast__I__I__I(h$1, elem$3);
    return this.finalizeHash__I__I__I(h$1, elem$2)
  };
  orderedHash__sc_IterableOnce__I__I(xs, seed) {
    const it = xs.iterator__sc_Iterator();
    let h = seed;
    if ((!it.hasNext__Z())) {
      return this.finalizeHash__I__I__I(h, 0)
    };
    const x0 = it.next__O();
    if ((!it.hasNext__Z())) {
      return this.finalizeHash__I__I__I(this.mix__I__I__I(h, $m_sr_Statics$().anyHash__O__I(x0)), 1)
    };
    const x1 = it.next__O();
    const initial = $m_sr_Statics$().anyHash__O__I(x0);
    h = this.mix__I__I__I(h, initial);
    const h0 = h;
    let prev = $m_sr_Statics$().anyHash__O__I(x1);
    const rangeDiff = ((prev - initial) | 0);
    let i = 2;
    while (it.hasNext__Z()) {
      h = this.mix__I__I__I(h, prev);
      const x = it.next__O();
      const hash = $m_sr_Statics$().anyHash__O__I(x);
      if ((rangeDiff !== ((hash - prev) | 0))) {
        h = this.mix__I__I__I(h, hash);
        i = ((1 + i) | 0);
        while (it.hasNext__Z()) {
          const $$x1 = h;
          const x$1 = it.next__O();
          h = this.mix__I__I__I($$x1, $m_sr_Statics$().anyHash__O__I(x$1));
          i = ((1 + i) | 0)
        };
        return this.finalizeHash__I__I__I(h, i)
      };
      prev = hash;
      i = ((1 + i) | 0)
    };
    return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
  };
  arrayHash__O__I__I(a, seed) {
    let h = seed;
    const l = $m_sr_ScalaRunTime$().array_length__O__I(a);
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        const $$x1 = h;
        const x = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, 0);
        return this.finalizeHash__I__I__I(this.mix__I__I__I($$x1, $m_sr_Statics$().anyHash__O__I(x)), 1);
        break
      }
      default: {
        const x$1 = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, 0);
        const initial = $m_sr_Statics$().anyHash__O__I(x$1);
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        const x$2 = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, 1);
        let prev = $m_sr_Statics$().anyHash__O__I(x$2);
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const x$3 = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, i);
          const hash = $m_sr_Statics$().anyHash__O__I(x$3);
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              const $$x2 = h;
              const x$4 = $m_sr_ScalaRunTime$().array_apply__O__I__O(a, i);
              h = this.mix__I__I__I($$x2, $m_sr_Statics$().anyHash__O__I(x$4));
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  rangeHash__I__I__I__I__I(start, step, last, seed) {
    return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(this.mix__I__I__I(seed, start), step), last))
  };
  indexedSeqHash__sc_IndexedSeq__I__I(a, seed) {
    let h = seed;
    const l = a.length__I();
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        const $$x1 = h;
        const x = a.apply__I__O(0);
        return this.finalizeHash__I__I__I(this.mix__I__I__I($$x1, $m_sr_Statics$().anyHash__O__I(x)), 1);
        break
      }
      default: {
        const x$1 = a.apply__I__O(0);
        const initial = $m_sr_Statics$().anyHash__O__I(x$1);
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        const x$2 = a.apply__I__O(1);
        let prev = $m_sr_Statics$().anyHash__O__I(x$2);
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const x$3 = a.apply__I__O(i);
          const hash = $m_sr_Statics$().anyHash__O__I(x$3);
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              const $$x2 = h;
              const x$4 = a.apply__I__O(i);
              h = this.mix__I__I__I($$x2, $m_sr_Statics$().anyHash__O__I(x$4));
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  listHash__sci_List__I__I(xs, seed) {
    let n = 0;
    let h = seed;
    let rangeState = 0;
    let rangeDiff = 0;
    let prev = 0;
    let initial = 0;
    let elems = xs;
    while ((!elems.isEmpty__Z())) {
      const head = elems.head__O();
      const tail = elems.tail__O();
      const hash = $m_sr_Statics$().anyHash__O__I(head);
      h = this.mix__I__I__I(h, hash);
      const x1 = rangeState;
      switch (x1) {
        case 0: {
          initial = hash;
          rangeState = 1;
          break
        }
        case 1: {
          rangeDiff = ((hash - prev) | 0);
          rangeState = 2;
          break
        }
        case 2: {
          if ((rangeDiff !== ((hash - prev) | 0))) {
            rangeState = 3
          };
          break
        }
      };
      prev = hash;
      n = ((1 + n) | 0);
      elems = tail
    };
    return ((rangeState === 2) ? this.rangeHash__I__I__I__I__I(initial, rangeDiff, prev, seed) : this.finalizeHash__I__I__I(h, n))
  };
  arrayHash$mZc$sp__AZ__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        return this.finalizeHash__I__I__I(this.mix__I__I__I(h, (a.u[0] ? 1231 : 1237)), 1);
        break
      }
      default: {
        const initial = (a.u[0] ? 1231 : 1237);
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        let prev = (a.u[1] ? 1231 : 1237);
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const hash = (a.u[i] ? 1231 : 1237);
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              h = this.mix__I__I__I(h, (a.u[i] ? 1231 : 1237));
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mBc$sp__AB__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        return this.finalizeHash__I__I__I(this.mix__I__I__I(h, a.u[0]), 1);
        break
      }
      default: {
        const initial = a.u[0];
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        let prev = a.u[1];
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const hash = a.u[i];
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              h = this.mix__I__I__I(h, a.u[i]);
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mCc$sp__AC__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        return this.finalizeHash__I__I__I(this.mix__I__I__I(h, a.u[0]), 1);
        break
      }
      default: {
        const initial = a.u[0];
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        let prev = a.u[1];
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const hash = a.u[i];
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              h = this.mix__I__I__I(h, a.u[i]);
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mDc$sp__AD__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        const $$x1 = h;
        const dv = a.u[0];
        return this.finalizeHash__I__I__I(this.mix__I__I__I($$x1, $m_sr_Statics$().doubleHash__D__I(dv)), 1);
        break
      }
      default: {
        const dv$1 = a.u[0];
        const initial = $m_sr_Statics$().doubleHash__D__I(dv$1);
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        const dv$2 = a.u[1];
        let prev = $m_sr_Statics$().doubleHash__D__I(dv$2);
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const dv$3 = a.u[i];
          const hash = $m_sr_Statics$().doubleHash__D__I(dv$3);
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              const $$x2 = h;
              const dv$4 = a.u[i];
              h = this.mix__I__I__I($$x2, $m_sr_Statics$().doubleHash__D__I(dv$4));
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mFc$sp__AF__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        const $$x1 = h;
        const fv = a.u[0];
        const this$1 = $m_sr_Statics$();
        return this.finalizeHash__I__I__I(this.mix__I__I__I($$x1, this$1.doubleHash__D__I(fv)), 1);
        break
      }
      default: {
        const fv$1 = a.u[0];
        const this$2 = $m_sr_Statics$();
        const initial = this$2.doubleHash__D__I(fv$1);
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        const fv$2 = a.u[1];
        const this$3 = $m_sr_Statics$();
        let prev = this$3.doubleHash__D__I(fv$2);
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const fv$3 = a.u[i];
          const this$4 = $m_sr_Statics$();
          const hash = this$4.doubleHash__D__I(fv$3);
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              const $$x2 = h;
              const fv$4 = a.u[i];
              const this$5 = $m_sr_Statics$();
              h = this.mix__I__I__I($$x2, this$5.doubleHash__D__I(fv$4));
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mIc$sp__AI__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        return this.finalizeHash__I__I__I(this.mix__I__I__I(h, a.u[0]), 1);
        break
      }
      default: {
        const initial = a.u[0];
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        let prev = a.u[1];
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const hash = a.u[i];
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              h = this.mix__I__I__I(h, a.u[i]);
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mJc$sp__AJ__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        const $$x1 = h;
        const t = a.u[0];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        return this.finalizeHash__I__I__I(this.mix__I__I__I($$x1, $m_sr_Statics$().longHash__J__I(new $c_RTLong(lo, hi))), 1);
        break
      }
      default: {
        const t$1 = a.u[0];
        const lo$1 = t$1.RTLong__f_lo;
        const hi$1 = t$1.RTLong__f_hi;
        const initial = $m_sr_Statics$().longHash__J__I(new $c_RTLong(lo$1, hi$1));
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        const t$2 = a.u[1];
        const lo$2 = t$2.RTLong__f_lo;
        const hi$2 = t$2.RTLong__f_hi;
        let prev = $m_sr_Statics$().longHash__J__I(new $c_RTLong(lo$2, hi$2));
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const t$3 = a.u[i];
          const lo$3 = t$3.RTLong__f_lo;
          const hi$3 = t$3.RTLong__f_hi;
          const hash = $m_sr_Statics$().longHash__J__I(new $c_RTLong(lo$3, hi$3));
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              const $$x2 = h;
              const t$4 = a.u[i];
              const lo$4 = t$4.RTLong__f_lo;
              const hi$4 = t$4.RTLong__f_hi;
              h = this.mix__I__I__I($$x2, $m_sr_Statics$().longHash__J__I(new $c_RTLong(lo$4, hi$4)));
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mSc$sp__AS__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        return this.finalizeHash__I__I__I(this.mix__I__I__I(h, a.u[0]), 1);
        break
      }
      default: {
        const initial = a.u[0];
        h = this.mix__I__I__I(h, initial);
        const h0 = h;
        let prev = a.u[1];
        const rangeDiff = ((prev - initial) | 0);
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          const hash = a.u[i];
          if ((rangeDiff !== ((hash - prev) | 0))) {
            h = this.mix__I__I__I(h, hash);
            i = ((1 + i) | 0);
            while ((i < l)) {
              h = this.mix__I__I__I(h, a.u[i]);
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = hash;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
  arrayHash$mVc$sp__Ajl_Void__I__I(a, seed) {
    let h = seed;
    const l = a.u.length;
    switch (l) {
      case 0: {
        return this.finalizeHash__I__I__I(h, 0);
        break
      }
      case 1: {
        return this.finalizeHash__I__I__I(this.mix__I__I__I(h, 0), 1);
        break
      }
      default: {
        h = this.mix__I__I__I(h, 0);
        const h0 = h;
        let prev = 0;
        const rangeDiff = prev;
        let i = 2;
        while ((i < l)) {
          h = this.mix__I__I__I(h, prev);
          if ((rangeDiff !== ((-prev) | 0))) {
            h = this.mix__I__I__I(h, 0);
            i = ((1 + i) | 0);
            while ((i < l)) {
              h = this.mix__I__I__I(h, 0);
              i = ((1 + i) | 0)
            };
            return this.finalizeHash__I__I__I(h, l)
          };
          prev = 0;
          i = ((1 + i) | 0)
        };
        return this.scala$util$hashing$MurmurHash3$$avalanche__I__I(this.mix__I__I__I(this.mix__I__I__I(h0, rangeDiff), prev))
      }
    }
  };
}
const $p_Ltigerpython_inputenc_StringTranslator$__charMap$lzycompute__sci_Map = (function($thiz) {
  if ((!$thiz.Ltigerpython_inputenc_StringTranslator$__f_bitmap$0)) {
    const this$72 = $m_s_Predef$().s_Predef$__f_Map;
    const array = [$ct_T2__O__O__(new $c_T2(), $bC(171), $bC(34)), $ct_T2__O__O__(new $c_T2(), $bC(187), $bC(34)), $ct_T2__O__O__(new $c_T2(), $bC(8216), $bC(39)), $ct_T2__O__O__(new $c_T2(), $bC(8217), $bC(39)), $ct_T2__O__O__(new $c_T2(), $bC(8218), $bC(39)), $ct_T2__O__O__(new $c_T2(), $bC(8220), $bC(34)), $ct_T2__O__O__(new $c_T2(), $bC(8221), $bC(34)), $ct_T2__O__O__(new $c_T2(), $bC(8222), $bC(34)), $ct_T2__O__O__(new $c_T2(), $bC(12289), $bC(44)), $ct_T2__O__O__(new $c_T2(), $bC(12290), $bC(46)), $ct_T2__O__O__(new $c_T2(), $bC(12318), $bC(34)), $ct_T2__O__O__(new $c_T2(), $bC(65282), $bC(34)), $ct_T2__O__O__(new $c_T2(), $bC(65283), $bC(35)), $ct_T2__O__O__(new $c_T2(), $bC(65285), $bC(37)), $ct_T2__O__O__(new $c_T2(), $bC(65286), $bC(38)), $ct_T2__O__O__(new $c_T2(), $bC(65287), $bC(39)), $ct_T2__O__O__(new $c_T2(), $bC(65288), $bC(40)), $ct_T2__O__O__(new $c_T2(), $bC(65289), $bC(41)), $ct_T2__O__O__(new $c_T2(), $bC(65290), $bC(42)), $ct_T2__O__O__(new $c_T2(), $bC(65291), $bC(43)), $ct_T2__O__O__(new $c_T2(), $bC(65292), $bC(44)), $ct_T2__O__O__(new $c_T2(), $bC(65293), $bC(45)), $ct_T2__O__O__(new $c_T2(), $bC(65294), $bC(46)), $ct_T2__O__O__(new $c_T2(), $bC(65295), $bC(47)), $ct_T2__O__O__(new $c_T2(), $bC(65306), $bC(58)), $ct_T2__O__O__(new $c_T2(), $bC(65307), $bC(59)), $ct_T2__O__O__(new $c_T2(), $bC(65308), $bC(60)), $ct_T2__O__O__(new $c_T2(), $bC(65309), $bC(61)), $ct_T2__O__O__(new $c_T2(), $bC(65310), $bC(62)), $ct_T2__O__O__(new $c_T2(), $bC(65339), $bC(91)), $ct_T2__O__O__(new $c_T2(), $bC(65341), $bC(93)), $ct_T2__O__O__(new $c_T2(), $bC(65371), $bC(123)), $ct_T2__O__O__(new $c_T2(), $bC(65373), $bC(125)), $ct_T2__O__O__(new $c_T2(), $bC(65377), $bC(46))];
    const elems = new $c_sjsr_WrappedVarArgs(array);
    $thiz.Ltigerpython_inputenc_StringTranslator$__f_tigerpython$inputenc$StringTranslator$$charMap = this$72.from__sc_IterableOnce__sci_Map(elems);
    $thiz.Ltigerpython_inputenc_StringTranslator$__f_bitmap$0 = true
  };
  return $thiz.Ltigerpython_inputenc_StringTranslator$__f_tigerpython$inputenc$StringTranslator$$charMap
});
class $c_Ltigerpython_inputenc_StringTranslator$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_inputenc_StringTranslator$__f_tigerpython$inputenc$StringTranslator$$charMap = null;
    this.Ltigerpython_inputenc_StringTranslator$__f_bitmap$0 = false
  };
  tigerpython$inputenc$StringTranslator$$charMap__sci_Map() {
    return ((!this.Ltigerpython_inputenc_StringTranslator$__f_bitmap$0) ? $p_Ltigerpython_inputenc_StringTranslator$__charMap$lzycompute__sci_Map(this) : this.Ltigerpython_inputenc_StringTranslator$__f_tigerpython$inputenc$StringTranslator$$charMap)
  };
  translate__T__T(s) {
    if (((s !== null) && (s !== ""))) {
      const result = $newArrayObject($d_C.getArrayOf(), [(s.length | 0)]);
      const translator = new $c_Ltigerpython_inputenc_StringTranslator(s);
      const this$2 = $m_sc_ArrayOps$().indices$extension__O__sci_Range(result);
      if ((!this$2.sci_Range__f_isEmpty)) {
        let i = this$2.sci_Range__f_start;
        while (true) {
          const v1 = i;
          result.u[v1] = translator.next__C();
          if ((i === this$2.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
            break
          };
          i = ((i + this$2.sci_Range__f_step) | 0)
        }
      };
      const this$3 = $m_jl_String$();
      return this$3.new__AC__I__I__T(result, 0, result.u.length)
    } else {
      return s
    }
  };
}
const $d_Ltigerpython_inputenc_StringTranslator$ = new $TypeData().initClass({
  Ltigerpython_inputenc_StringTranslator$: 0
}, false, "tigerpython.inputenc.StringTranslator$", {
  Ltigerpython_inputenc_StringTranslator$: 1,
  O: 1
});
$c_Ltigerpython_inputenc_StringTranslator$.prototype.$classData = $d_Ltigerpython_inputenc_StringTranslator$;
let $n_Ltigerpython_inputenc_StringTranslator$ = (void 0);
function $m_Ltigerpython_inputenc_StringTranslator$() {
  if ((!$n_Ltigerpython_inputenc_StringTranslator$)) {
    $n_Ltigerpython_inputenc_StringTranslator$ = new $c_Ltigerpython_inputenc_StringTranslator$()
  };
  return $n_Ltigerpython_inputenc_StringTranslator$
}
const $p_Ltigerpython_parser_AstConverter__annotateNode__sjs_js_Dynamic__Ltigerpython_parser_ast_AstNode__sjs_js_Dynamic = (function($thiz, dest, source) {
  if ((dest !== null)) {
    const pos = source.pos__I();
    const x1 = $thiz.Ltigerpython_parser_AstConverter__f_parser.lineAndOffsetFromPosition__I__T2(pos);
    if ((x1 === null)) {
      throw new $c_s_MatchError(x1)
    };
    const line = x1._1$mcI$sp__I();
    const offset = x1._2$mcI$sp__I();
    dest.pos = pos;
    dest.lineno = line;
    dest.col_offset = offset;
    const s = source.kind__s_Enumeration$Value().toString__T();
    dest.kind = s;
    if ($is_Ltigerpython_parser_ast_AstNode$Span(source)) {
      const endPos = source.endPos__I();
      const x1$3 = $thiz.Ltigerpython_parser_AstConverter__f_parser.lineAndOffsetFromPosition__I__T2(endPos);
      if ((x1$3 === null)) {
        throw new $c_s_MatchError(x1$3)
      };
      const endLine = x1$3._1$mcI$sp__I();
      const endOffset = x1$3._2$mcI$sp__I();
      dest.end_pos = endPos;
      dest.end_lineno = endLine;
      dest.end_col_offset = endOffset
    };
    if ($is_Ltigerpython_parser_ast_AstNode$Decoratable(source)) {
      const $$x10 = $m_sjs_js_JSConverters$JSRichIterableOnce$();
      const xs = source.decoratorList__ALtigerpython_parser_ast_AstNode$Expression();
      const f = ((this$9) => ((decorator$2) => {
        const decorator = decorator$2;
        return this$9.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(decorator)
      }))($thiz);
      const len = xs.u.length;
      const ys = $newArrayObject($d_sjs_js_Any.getArrayOf(), [len]);
      if ((len > 0)) {
        let i = 0;
        if ((xs !== null)) {
          while ((i < len)) {
            const $$x1 = i;
            const arg1 = xs.u[i];
            ys.u[$$x1] = f(arg1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_I(xs, 1)) {
          const x3 = xs;
          while ((i < len)) {
            const $$x2 = i;
            const arg1$1 = x3.u[i];
            ys.u[$$x2] = f(arg1$1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_D(xs, 1)) {
          const x4 = xs;
          while ((i < len)) {
            const $$x3 = i;
            const arg1$2 = x4.u[i];
            ys.u[$$x3] = f(arg1$2);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_J(xs, 1)) {
          const x5 = xs;
          while ((i < len)) {
            const $$x4 = i;
            const t = x5.u[i];
            const lo = t.RTLong__f_lo;
            const hi = t.RTLong__f_hi;
            ys.u[$$x4] = f(new $c_RTLong(lo, hi));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_F(xs, 1)) {
          const x6 = xs;
          while ((i < len)) {
            const $$x5 = i;
            const arg1$3 = x6.u[i];
            ys.u[$$x5] = f(arg1$3);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_C(xs, 1)) {
          const x7 = xs;
          while ((i < len)) {
            const $$x6 = i;
            const arg1$4 = x7.u[i];
            ys.u[$$x6] = f($bC(arg1$4));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_B(xs, 1)) {
          const x8 = xs;
          while ((i < len)) {
            const $$x7 = i;
            const arg1$5 = x8.u[i];
            ys.u[$$x7] = f(arg1$5);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_S(xs, 1)) {
          const x9 = xs;
          while ((i < len)) {
            const $$x8 = i;
            const arg1$6 = x9.u[i];
            ys.u[$$x8] = f(arg1$6);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_Z(xs, 1)) {
          const x10 = xs;
          while ((i < len)) {
            const $$x9 = i;
            const arg1$7 = x10.u[i];
            ys.u[$$x9] = f(arg1$7);
            i = ((1 + i) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs)
        }
      };
      dest.decorator_list = $$x10.toJSArray$extension__sc_IterableOnce__sjs_js_Array($m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(ys))
    };
    return dest
  } else {
    return null
  }
});
const $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any = (function($thiz, body) {
  if ((body instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
    const x2 = body;
    const statements = x2.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
    const $$x10 = $m_sjs_js_JSConverters$JSRichIterableOnce$();
    const f = ((this$2) => ((stmt$2) => {
      const stmt = stmt$2;
      return this$2.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(stmt)
    }))($thiz);
    const len = statements.u.length;
    const ys = $newArrayObject($d_sjs_js_Any.getArrayOf(), [len]);
    if ((len > 0)) {
      let i = 0;
      if ((statements !== null)) {
        while ((i < len)) {
          const $$x1 = i;
          const arg1 = statements.u[i];
          ys.u[$$x1] = f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(statements, 1)) {
        const x3 = statements;
        while ((i < len)) {
          const $$x2 = i;
          const arg1$1 = x3.u[i];
          ys.u[$$x2] = f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(statements, 1)) {
        const x4 = statements;
        while ((i < len)) {
          const $$x3 = i;
          const arg1$2 = x4.u[i];
          ys.u[$$x3] = f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(statements, 1)) {
        const x5 = statements;
        while ((i < len)) {
          const $$x4 = i;
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          ys.u[$$x4] = f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(statements, 1)) {
        const x6 = statements;
        while ((i < len)) {
          const $$x5 = i;
          const arg1$3 = x6.u[i];
          ys.u[$$x5] = f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(statements, 1)) {
        const x7 = statements;
        while ((i < len)) {
          const $$x6 = i;
          const arg1$4 = x7.u[i];
          ys.u[$$x6] = f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(statements, 1)) {
        const x8 = statements;
        while ((i < len)) {
          const $$x7 = i;
          const arg1$5 = x8.u[i];
          ys.u[$$x7] = f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(statements, 1)) {
        const x9 = statements;
        while ((i < len)) {
          const $$x8 = i;
          const arg1$6 = x9.u[i];
          ys.u[$$x8] = f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(statements, 1)) {
        const x10 = statements;
        while ((i < len)) {
          const $$x9 = i;
          const arg1$7 = x10.u[i];
          ys.u[$$x9] = f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(statements)
      }
    };
    let capacity = 0;
    let size = 0;
    let jsElems = null;
    capacity = 0;
    size = 0;
    jsElems = [];
    let i$1 = 0;
    while ((i$1 < ys.u.length)) {
      const x = ys.u[i$1];
      if ((x !== null)) {
        const unboxedElem = ((x === null) ? null : x);
        jsElems.push(unboxedElem)
      };
      i$1 = ((1 + i$1) | 0)
    };
    const coll = $makeNativeArrayWrapper($d_sjs_js_Any.getArrayOf(), jsElems);
    return $$x10.toJSArray$extension__sc_IterableOnce__sjs_js_Array($m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(coll))
  } else {
    return [$thiz.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(body)]
  }
});
const $p_Ltigerpython_parser_AstConverter___convert_kw__ALtigerpython_parser_ast_AstNode$Keyword__sjs_js_Any = (function($thiz, keywords) {
  const $$x10 = $m_sjs_js_JSConverters$JSRichIterableOnce$();
  const f = ((this$2) => ((keyword$2) => {
    const keyword = keyword$2;
    return this$2._convert__Ltigerpython_parser_ast_AstNode$Keyword__sjs_js_Dynamic(keyword)
  }))($thiz);
  const len = keywords.u.length;
  const ys = $newArrayObject($d_sjs_js_Dynamic.getArrayOf(), [len]);
  if ((len > 0)) {
    let i = 0;
    if ((keywords !== null)) {
      while ((i < len)) {
        const $$x1 = i;
        const arg1 = keywords.u[i];
        ys.u[$$x1] = f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(keywords, 1)) {
      const x3 = keywords;
      while ((i < len)) {
        const $$x2 = i;
        const arg1$1 = x3.u[i];
        ys.u[$$x2] = f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(keywords, 1)) {
      const x4 = keywords;
      while ((i < len)) {
        const $$x3 = i;
        const arg1$2 = x4.u[i];
        ys.u[$$x3] = f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(keywords, 1)) {
      const x5 = keywords;
      while ((i < len)) {
        const $$x4 = i;
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        ys.u[$$x4] = f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(keywords, 1)) {
      const x6 = keywords;
      while ((i < len)) {
        const $$x5 = i;
        const arg1$3 = x6.u[i];
        ys.u[$$x5] = f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(keywords, 1)) {
      const x7 = keywords;
      while ((i < len)) {
        const $$x6 = i;
        const arg1$4 = x7.u[i];
        ys.u[$$x6] = f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(keywords, 1)) {
      const x8 = keywords;
      while ((i < len)) {
        const $$x7 = i;
        const arg1$5 = x8.u[i];
        ys.u[$$x7] = f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(keywords, 1)) {
      const x9 = keywords;
      while ((i < len)) {
        const $$x8 = i;
        const arg1$6 = x9.u[i];
        ys.u[$$x8] = f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(keywords, 1)) {
      const x10 = keywords;
      while ((i < len)) {
        const $$x9 = i;
        const arg1$7 = x10.u[i];
        ys.u[$$x9] = f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(keywords)
    }
  };
  return $$x10.toJSArray$extension__sc_IterableOnce__sjs_js_Array($m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(ys))
});
class $c_Ltigerpython_parser_AstConverter extends $c_O {
  constructor(parser) {
    super();
    this.Ltigerpython_parser_AstConverter__f_parser = null;
    this.Ltigerpython_parser_AstConverter__f_functionStack = null;
    this.Ltigerpython_parser_AstConverter__f_parser = parser;
    this.Ltigerpython_parser_AstConverter__f_functionStack = $m_sci_Nil$()
  };
  pushFunction__Ltigerpython_parser_ast_AstNode$FunctionDef__V(function$1) {
    if ((function$1 !== null)) {
      const rassoc$1 = new $c_Ltigerpython_parser_AstConverter$FunctionInfo(function$1);
      const this$1 = this.Ltigerpython_parser_AstConverter__f_functionStack;
      this.Ltigerpython_parser_AstConverter__f_functionStack = new $c_sci_$colon$colon(rassoc$1, this$1)
    }
  };
  popFunction__sjs_js_Dynamic__V(dest) {
    const this$1 = this.Ltigerpython_parser_AstConverter__f_functionStack;
    if ((!this$1.isEmpty__Z())) {
      dest.locals = this.Ltigerpython_parser_AstConverter__f_functionStack.head__O().getLocals__sjs_js_Any();
      this.Ltigerpython_parser_AstConverter__f_functionStack = this.Ltigerpython_parser_AstConverter__f_functionStack.tail__O()
    }
  };
  addGlobal__T__V(name) {
    const this$1 = this.Ltigerpython_parser_AstConverter__f_functionStack;
    if ((!this$1.isEmpty__Z())) {
      this.Ltigerpython_parser_AstConverter__f_functionStack.head__O().addGlobal__T__V(name)
    }
  };
  addRef__T__V(name) {
    const this$1 = this.Ltigerpython_parser_AstConverter__f_functionStack;
    if ((!this$1.isEmpty__Z())) {
      this.Ltigerpython_parser_AstConverter__f_functionStack.head__O().addRef__T__V(name)
    }
  };
  _convert__Ltigerpython_parser_ast_AstNode__sjs_js_Dynamic(ast) {
    if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Index)) {
      const x2 = ast;
      const value = x2.Ltigerpython_parser_ast_AstNode$Index__f_value;
      const array = [$ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(value))];
      const fields = new $c_sjsr_WrappedVarArgs(array);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$MultiSlice)) {
      const x4 = ast;
      const elements = x4.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements;
      const array$1 = [$ct_T2__O__O__(new $c_T2(), "dims", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(elements))];
      const fields$1 = new $c_sjsr_WrappedVarArgs(array$1);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$1)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$SliceRange)) {
      const x6 = ast;
      const lower = x6.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower;
      const upper = x6.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper;
      const step = x6.Ltigerpython_parser_ast_AstNode$SliceRange__f_step;
      const array$2 = [$ct_T2__O__O__(new $c_T2(), "lower", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(lower)), $ct_T2__O__O__(new $c_T2(), "upper", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(upper)), $ct_T2__O__O__(new $c_T2(), "step", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(step))];
      const fields$2 = new $c_sjsr_WrappedVarArgs(array$2);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$2)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$NameParameter)) {
      const x8 = ast;
      const name = x8.Ltigerpython_parser_ast_AstNode$NameParameter__f_name;
      const annotation = x8.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation;
      this.addRef__T__V(name);
      const array$3 = [$ct_T2__O__O__(new $c_T2(), "name", name), $ct_T2__O__O__(new $c_T2(), "annotation", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(annotation))];
      const fields$3 = new $c_sjsr_WrappedVarArgs(array$3);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$3)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Parameters)) {
      const x10 = ast;
      const args = x10.Ltigerpython_parser_ast_AstNode$Parameters__f_args;
      const defaults = x10.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults;
      const varArgs = x10.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs;
      const kwArgs = x10.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs;
      const array$4 = [$ct_T2__O__O__(new $c_T2(), "args", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(args)), $ct_T2__O__O__(new $c_T2(), "vararg", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(varArgs)), $ct_T2__O__O__(new $c_T2(), "kwarg", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(kwArgs)), $ct_T2__O__O__(new $c_T2(), "default", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(defaults))];
      const fields$4 = new $c_sjsr_WrappedVarArgs(array$4);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$4)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Assert)) {
      const x13 = ast;
      const test = x13.Ltigerpython_parser_ast_AstNode$Assert__f_test;
      const msg = x13.Ltigerpython_parser_ast_AstNode$Assert__f_msg;
      const array$5 = [$ct_T2__O__O__(new $c_T2(), "test", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(test)), $ct_T2__O__O__(new $c_T2(), "message", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(msg))];
      const fields$5 = new $c_sjsr_WrappedVarArgs(array$5);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$5)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment)) {
      const x15 = ast;
      const targets = x15.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
      const value$2 = x15.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
      const array$6 = [$ct_T2__O__O__(new $c_T2(), "targets", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(targets)), $ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(value$2))];
      const fields$6 = new $c_sjsr_WrappedVarArgs(array$6);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$6)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$AugAssign)) {
      const x17 = ast;
      const target = x17.Ltigerpython_parser_ast_AstNode$AugAssign__f_target;
      const op = x17.Ltigerpython_parser_ast_AstNode$AugAssign__f_op;
      const value$3 = x17.Ltigerpython_parser_ast_AstNode$AugAssign__f_value;
      const $$x1 = $ct_T2__O__O__(new $c_T2(), "target", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(target));
      const s = op.toString__T();
      const array$7 = [$$x1, $ct_T2__O__O__(new $c_T2(), "op", s), $ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(value$3))];
      const fields$7 = new $c_sjsr_WrappedVarArgs(array$7);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$7)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Break)) {
      const fields$8 = $m_sci_Nil$();
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$8)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef)) {
      const x21 = ast;
      const name$2 = x21.Ltigerpython_parser_ast_AstNode$ClassDef__f_name;
      const bases = x21.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases;
      const keywords = x21.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords;
      const body = x21.Ltigerpython_parser_ast_AstNode$ClassDef__f_body;
      const array$8 = [$ct_T2__O__O__(new $c_T2(), "name", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(name$2)), $ct_T2__O__O__(new $c_T2(), "bases", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(bases)), $ct_T2__O__O__(new $c_T2(), "keywords", $p_Ltigerpython_parser_AstConverter___convert_kw__ALtigerpython_parser_ast_AstNode$Keyword__sjs_js_Any(this, keywords)), $ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, body))];
      const fields$9 = new $c_sjsr_WrappedVarArgs(array$8);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$9)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Continue)) {
      const fields$10 = $m_sci_Nil$();
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$10)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Delete)) {
      const x26 = ast;
      const targets$2 = x26.Ltigerpython_parser_ast_AstNode$Delete__f_targets;
      const array$9 = [$ct_T2__O__O__(new $c_T2(), "targets", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(targets$2))];
      const fields$11 = new $c_sjsr_WrappedVarArgs(array$9);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$11)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Exec)) {
      const x28 = ast;
      const expr = x28.Ltigerpython_parser_ast_AstNode$Exec__f_expr;
      const locals = x28.Ltigerpython_parser_ast_AstNode$Exec__f_globals;
      const globals = x28.Ltigerpython_parser_ast_AstNode$Exec__f_locals;
      const array$10 = [$ct_T2__O__O__(new $c_T2(), "body", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(expr)), $ct_T2__O__O__(new $c_T2(), "locals", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(locals)), $ct_T2__O__O__(new $c_T2(), "globals", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(globals))];
      const fields$12 = new $c_sjsr_WrappedVarArgs(array$10);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$12)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
      const x30 = ast;
      const expr$2 = x30.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
      const array$11 = [$ct_T2__O__O__(new $c_T2(), "expr", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(expr$2))];
      const fields$13 = new $c_sjsr_WrappedVarArgs(array$11);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$13)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$For)) {
      const x32 = ast;
      const target$2 = x32.Ltigerpython_parser_ast_AstNode$For__f_target;
      const iter = x32.Ltigerpython_parser_ast_AstNode$For__f_iter;
      const body$2 = x32.Ltigerpython_parser_ast_AstNode$For__f_body;
      const elseBody = x32.Ltigerpython_parser_ast_AstNode$For__f_elseBody;
      const array$12 = [$ct_T2__O__O__(new $c_T2(), "target", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(target$2)), $ct_T2__O__O__(new $c_T2(), "iter", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(iter)), $ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, body$2)), $ct_T2__O__O__(new $c_T2(), "orelse", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, elseBody))];
      const fields$14 = new $c_sjsr_WrappedVarArgs(array$12);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$14)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
      const x36 = ast;
      const name$3 = x36.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name;
      const params = x36.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params;
      const body$3 = x36.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body;
      const returns = x36.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns;
      this.pushFunction__Ltigerpython_parser_ast_AstNode$FunctionDef__V(x36);
      const array$13 = [$ct_T2__O__O__(new $c_T2(), "name", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(name$3)), $ct_T2__O__O__(new $c_T2(), "args", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(params)), $ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, body$3)), $ct_T2__O__O__(new $c_T2(), "returns", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(returns))];
      const fields$15 = new $c_sjsr_WrappedVarArgs(array$13);
      const result = $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$15);
      this.popFunction__sjs_js_Dynamic__V(result);
      return result
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Global)) {
      const x40 = ast;
      const names = x40.Ltigerpython_parser_ast_AstNode$Global__f_names;
      const array$14 = [$ct_T2__O__O__(new $c_T2(), "names", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(names))];
      const fields$16 = new $c_sjsr_WrappedVarArgs(array$14);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$16)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x42 = ast;
      const test$2 = x42.Ltigerpython_parser_ast_AstNode$If__f_test;
      const body$4 = x42.Ltigerpython_parser_ast_AstNode$If__f_body;
      const elseBody$2 = x42.Ltigerpython_parser_ast_AstNode$If__f_elseBody;
      const array$15 = [$ct_T2__O__O__(new $c_T2(), "test", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(test$2)), $ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, body$4)), $ct_T2__O__O__(new $c_T2(), "orelse", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, elseBody$2))];
      const fields$17 = new $c_sjsr_WrappedVarArgs(array$15);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$17)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Import)) {
      const x45 = ast;
      const names$2 = x45.Ltigerpython_parser_ast_AstNode$Import__f_names;
      const array$16 = [$ct_T2__O__O__(new $c_T2(), "names", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(names$2))];
      const fields$18 = new $c_sjsr_WrappedVarArgs(array$16);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$18)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFrom)) {
      const x47 = ast;
      const module = x47.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module;
      const names$3 = x47.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names;
      const array$17 = [$ct_T2__O__O__(new $c_T2(), "module", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(module)), $ct_T2__O__O__(new $c_T2(), "names", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(names$3)), $ct_T2__O__O__(new $c_T2(), "level", 0)];
      const fields$19 = new $c_sjsr_WrappedVarArgs(array$17);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$19)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFuture)) {
      const x49 = ast;
      const names$4 = x49.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names;
      const $$x3 = $ct_T2__O__O__(new $c_T2(), "module", "__future__");
      const $$x2 = $m_sjs_js_JSConverters$JSRichIterableOnce$();
      const ev = new $c_sjsr_AnonFunction1(((this$79) => ((xs$2) => {
        const xs = xs$2;
        return $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(xs)
      }))(this));
      const array$18 = [$$x3, $ct_T2__O__O__(new $c_T2(), "names", $$x2.toJSArray$extension__sc_IterableOnce__sjs_js_Array(ev.apply__O__O(names$4)))];
      const fields$20 = new $c_sjsr_WrappedVarArgs(array$18);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$20)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$ImportStar)) {
      const x51 = ast;
      const module$2 = x51.Ltigerpython_parser_ast_AstNode$ImportStar__f_module;
      const array$19 = [$ct_T2__O__O__(new $c_T2(), "module", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(module$2)), $ct_T2__O__O__(new $c_T2(), "names", ["*"])];
      const fields$21 = new $c_sjsr_WrappedVarArgs(array$19);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$21)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$NonLocal)) {
      const x53 = ast;
      const names$5 = x53.Ltigerpython_parser_ast_AstNode$NonLocal__f_names;
      const array$20 = [$ct_T2__O__O__(new $c_T2(), "names", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(names$5))];
      const fields$22 = new $c_sjsr_WrappedVarArgs(array$20);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$22)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Pass)) {
      const fields$23 = $m_sci_Nil$();
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$23)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Print)) {
      const x57 = ast;
      const dest = x57.Ltigerpython_parser_ast_AstNode$Print__f_dest;
      const values = x57.Ltigerpython_parser_ast_AstNode$Print__f_values;
      const newline = x57.Ltigerpython_parser_ast_AstNode$Print__f_newline;
      const array$21 = [$ct_T2__O__O__(new $c_T2(), "dest", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(dest)), $ct_T2__O__O__(new $c_T2(), "values", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(values)), $ct_T2__O__O__(new $c_T2(), "nl", newline)];
      const fields$24 = new $c_sjsr_WrappedVarArgs(array$21);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$24)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Raise2)) {
      const x59 = ast;
      const exType = x59.Ltigerpython_parser_ast_AstNode$Raise2__f_exType;
      const inst = x59.Ltigerpython_parser_ast_AstNode$Raise2__f_inst;
      const tBack = x59.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack;
      const array$22 = [$ct_T2__O__O__(new $c_T2(), "type", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(exType)), $ct_T2__O__O__(new $c_T2(), "inst", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(inst)), $ct_T2__O__O__(new $c_T2(), "tback", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(tBack))];
      const fields$25 = new $c_sjsr_WrappedVarArgs(array$22);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$25)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Raise3)) {
      const x61 = ast;
      const expr$3 = x61.Ltigerpython_parser_ast_AstNode$Raise3__f_ex;
      const cause = x61.Ltigerpython_parser_ast_AstNode$Raise3__f_cause;
      const array$23 = [$ct_T2__O__O__(new $c_T2(), "exc", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(expr$3)), $ct_T2__O__O__(new $c_T2(), "cause", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(cause))];
      const fields$26 = new $c_sjsr_WrappedVarArgs(array$23);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$26)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Return)) {
      const x63 = ast;
      const value$4 = x63.Ltigerpython_parser_ast_AstNode$Return__f_value;
      const array$24 = [$ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(value$4))];
      const fields$27 = new $c_sjsr_WrappedVarArgs(array$24);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$27)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x65 = ast;
      const body$5 = x65.Ltigerpython_parser_ast_AstNode$Try__f_body;
      const handlers = x65.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
      const elseBody$3 = x65.Ltigerpython_parser_ast_AstNode$Try__f_elseBody;
      const finalBody = x65.Ltigerpython_parser_ast_AstNode$Try__f_finalBody;
      const array$25 = [$ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, body$5)), $ct_T2__O__O__(new $c_T2(), "handlers", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(handlers)), $ct_T2__O__O__(new $c_T2(), "orelse", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, elseBody$3)), $ct_T2__O__O__(new $c_T2(), "finalBody", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, finalBody))];
      const fields$28 = new $c_sjsr_WrappedVarArgs(array$25);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$28)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
      const x67 = ast;
      const test$3 = x67.Ltigerpython_parser_ast_AstNode$While__f_test;
      const body$6 = x67.Ltigerpython_parser_ast_AstNode$While__f_body;
      const elseBody$4 = x67.Ltigerpython_parser_ast_AstNode$While__f_elseBody;
      const array$26 = [$ct_T2__O__O__(new $c_T2(), "test", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(test$3)), $ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, body$6)), $ct_T2__O__O__(new $c_T2(), "orelse", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, elseBody$4))];
      const fields$29 = new $c_sjsr_WrappedVarArgs(array$26);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$29)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$With)) {
      const x70 = ast;
      const context = x70.Ltigerpython_parser_ast_AstNode$With__f_context;
      const opt_vars = x70.Ltigerpython_parser_ast_AstNode$With__f_opt_vars;
      const body$7 = x70.Ltigerpython_parser_ast_AstNode$With__f_body;
      const array$27 = [$ct_T2__O__O__(new $c_T2(), "context", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(context)), $ct_T2__O__O__(new $c_T2(), "opt_vars", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(opt_vars)), $ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, body$7))];
      const fields$30 = new $c_sjsr_WrappedVarArgs(array$27);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$30)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Alias)) {
      const x74 = ast;
      const name$4 = x74.Ltigerpython_parser_ast_AstNode$Alias__f_name;
      const asName = x74.Ltigerpython_parser_ast_AstNode$Alias__f_asName;
      const array$28 = [$ct_T2__O__O__(new $c_T2(), "name", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(name$4)), $ct_T2__O__O__(new $c_T2(), "as_name", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(asName))];
      const fields$31 = new $c_sjsr_WrappedVarArgs(array$28);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$31)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
      const x76 = ast;
      const base = x76.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
      const attr = x76.Ltigerpython_parser_ast_AstNode$Attribute__f_attr;
      const $$x5 = $ct_T2__O__O__(new $c_T2(), "base", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(base));
      const $$x4 = $ct_T2__O__O__(new $c_T2(), "attr", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(attr));
      const s$1 = x76.Ltigerpython_parser_ast_AstNode$Attribute__f_expr_context.toString__T();
      const array$29 = [$$x5, $$x4, $ct_T2__O__O__(new $c_T2(), "ctx", s$1)];
      const fields$32 = new $c_sjsr_WrappedVarArgs(array$29);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$32)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Await)) {
      const x79 = ast;
      const expr$4 = x79.Ltigerpython_parser_ast_AstNode$Await__f_expr;
      const array$30 = [$ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(expr$4))];
      const fields$33 = new $c_sjsr_WrappedVarArgs(array$30);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$33)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
      const x81 = ast;
      const op$2 = x81.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
      const left = x81.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
      const right = x81.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
      const s$2 = op$2.toString__T();
      const array$31 = [$ct_T2__O__O__(new $c_T2(), "op", s$2), $ct_T2__O__O__(new $c_T2(), "left", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(left)), $ct_T2__O__O__(new $c_T2(), "right", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(right))];
      const fields$34 = new $c_sjsr_WrappedVarArgs(array$31);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$34)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue)) {
      const x83 = ast;
      const value$5 = x83.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value;
      const array$32 = [$ct_T2__O__O__(new $c_T2(), "value_type", "bool"), $ct_T2__O__O__(new $c_T2(), "value", value$5)];
      const fields$35 = new $c_sjsr_WrappedVarArgs(array$32);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$35)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const x85 = ast;
      const function$1 = x85.Ltigerpython_parser_ast_AstNode$Call__f_function;
      const args$2 = x85.Ltigerpython_parser_ast_AstNode$Call__f_args;
      const keywords$2 = x85.Ltigerpython_parser_ast_AstNode$Call__f_keywords;
      const array$33 = [$ct_T2__O__O__(new $c_T2(), "func", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(function$1)), $ct_T2__O__O__(new $c_T2(), "args", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(args$2)), $ct_T2__O__O__(new $c_T2(), "keywords", $p_Ltigerpython_parser_AstConverter___convert_kw__ALtigerpython_parser_ast_AstNode$Keyword__sjs_js_Any(this, keywords$2))];
      const fields$36 = new $c_sjsr_WrappedVarArgs(array$33);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$36)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
      const x88 = ast;
      const left$2 = x88.Ltigerpython_parser_ast_AstNode$Compare__f_left;
      const comparators = x88.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
      const this$151 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const ops = this$151.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const this$152 = $m_scm_ArrayBuffer$();
      const elems$1 = $m_sci_Nil$();
      const cmps = this$152.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
      const p = new $c_sjsr_AnonFunction1(((this$2$1) => ((check$ifrefutable$1$2) => {
        const check$ifrefutable$1 = check$ifrefutable$1$2;
        return (check$ifrefutable$1 !== null)
      }))(this));
      new $c_sc_ArrayOps$WithFilter(p, comparators).foreach__F1__V(new $c_sjsr_AnonFunction1(((this$3$1, ops$1, cmps$1) => ((x$3$2) => {
        const x$3 = x$3$2;
        if ((x$3 !== null)) {
          const op$1 = x$3._1__O();
          const cmp = x$3._2__O();
          const s$3 = op$1.toString__T();
          ops$1.addOne__O__scm_ArrayBuffer(s$3);
          const elem = this$3$1.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(cmp);
          return cmps$1.addOne__O__scm_ArrayBuffer(elem)
        } else {
          throw new $c_s_MatchError(x$3)
        }
      }))(this, ops, cmps)));
      const array$34 = [$ct_T2__O__O__(new $c_T2(), "left", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(left$2)), $ct_T2__O__O__(new $c_T2(), "ops", $m_sjs_js_Any$().fromFunction1__F1__sjs_js_Function1(ops)), $ct_T2__O__O__(new $c_T2(), "comparators", $m_sjs_js_Any$().fromFunction1__F1__sjs_js_Function1(cmps))];
      const fields$37 = new $c_sjsr_WrappedVarArgs(array$34);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$37)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Dict)) {
      const x90 = ast;
      const keys = x90.Ltigerpython_parser_ast_AstNode$Dict__f_keys;
      const values$2 = x90.Ltigerpython_parser_ast_AstNode$Dict__f_values;
      const array$35 = [$ct_T2__O__O__(new $c_T2(), "keys", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(keys)), $ct_T2__O__O__(new $c_T2(), "values", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(values$2))];
      const fields$38 = new $c_sjsr_WrappedVarArgs(array$35);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$38)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$DictComp)) {
      const x93 = ast;
      const key = x93.Ltigerpython_parser_ast_AstNode$DictComp__f_key;
      const value$6 = x93.Ltigerpython_parser_ast_AstNode$DictComp__f_value;
      const generators = x93.Ltigerpython_parser_ast_AstNode$DictComp__f_generators;
      const array$36 = [$ct_T2__O__O__(new $c_T2(), "key", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(key)), $ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(value$6)), $ct_T2__O__O__(new $c_T2(), "generators", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(generators))];
      const fields$39 = new $c_sjsr_WrappedVarArgs(array$36);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$39)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Ellipsis)) {
      const array$37 = [$ct_T2__O__O__(new $c_T2(), "value_type", "ellipsis"), $ct_T2__O__O__(new $c_T2(), "value", "...")];
      const fields$40 = new $c_sjsr_WrappedVarArgs(array$37);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$40)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Generator)) {
      const x98 = ast;
      const element = x98.Ltigerpython_parser_ast_AstNode$Generator__f_element;
      const generators$2 = x98.Ltigerpython_parser_ast_AstNode$Generator__f_generators;
      const array$38 = [$ct_T2__O__O__(new $c_T2(), "elts", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(element)), $ct_T2__O__O__(new $c_T2(), "generators", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(generators$2))];
      const fields$41 = new $c_sjsr_WrappedVarArgs(array$38);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$41)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$IfExpr)) {
      const x100 = ast;
      const test$4 = x100.Ltigerpython_parser_ast_AstNode$IfExpr__f_test;
      const body$8 = x100.Ltigerpython_parser_ast_AstNode$IfExpr__f_body;
      const elseBody$5 = x100.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody;
      const array$39 = [$ct_T2__O__O__(new $c_T2(), "test", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(test$4)), $ct_T2__O__O__(new $c_T2(), "body", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(body$8)), $ct_T2__O__O__(new $c_T2(), "orelse", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(elseBody$5))];
      const fields$42 = new $c_sjsr_WrappedVarArgs(array$39);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$42)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Lambda)) {
      const x102 = ast;
      const args$3 = x102.Ltigerpython_parser_ast_AstNode$Lambda__f_args;
      const body$9 = x102.Ltigerpython_parser_ast_AstNode$Lambda__f_body;
      const array$40 = [$ct_T2__O__O__(new $c_T2(), "args", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(args$3)), $ct_T2__O__O__(new $c_T2(), "body", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(body$9))];
      const fields$43 = new $c_sjsr_WrappedVarArgs(array$40);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$43)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$List)) {
      const x104 = ast;
      const elements$2 = x104.Ltigerpython_parser_ast_AstNode$List__f_elements;
      const $$x6 = $ct_T2__O__O__(new $c_T2(), "elts", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(elements$2));
      const s$4 = x104.Ltigerpython_parser_ast_AstNode$List__f_expr_context.toString__T();
      const array$41 = [$$x6, $ct_T2__O__O__(new $c_T2(), "ctx", s$4)];
      const fields$44 = new $c_sjsr_WrappedVarArgs(array$41);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$44)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$ListComp)) {
      const x107 = ast;
      const elements$3 = x107.Ltigerpython_parser_ast_AstNode$ListComp__f_elements;
      const generators$3 = x107.Ltigerpython_parser_ast_AstNode$ListComp__f_generators;
      const array$42 = [$ct_T2__O__O__(new $c_T2(), "elts", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(elements$3)), $ct_T2__O__O__(new $c_T2(), "generators", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(generators$3))];
      const fields$45 = new $c_sjsr_WrappedVarArgs(array$42);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$45)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x110 = ast;
      const name$5 = x110.Ltigerpython_parser_ast_AstNode$Name__f_name;
      const x1$2 = x110.Ltigerpython_parser_ast_AstNode$Name__f_extExprContext;
      const x = $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_PARAMETER;
      if (((x === null) ? (x1$2 === null) : x.equals__O__Z(x1$2))) {
        this.addRef__T__V(name$5)
      } else {
        const x$4 = $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_AUG_ASSIGN_TARGET;
        let $$x7;
        if (((x$4 === null) ? (x1$2 === null) : x$4.equals__O__Z(x1$2))) {
          $$x7 = true
        } else {
          const x$6 = $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_ASSIGN_TARGET;
          $$x7 = ((x$6 === null) ? (x1$2 === null) : x$6.equals__O__Z(x1$2))
        };
        if ($$x7) {
          this.addRef__T__V(name$5)
        } else {
          const x$8 = $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_GLOBAL;
          if (((x$8 === null) ? (x1$2 === null) : x$8.equals__O__Z(x1$2))) {
            this.addGlobal__T__V(name$5)
          }
        }
      };
      const $$x8 = $ct_T2__O__O__(new $c_T2(), "name", name$5);
      const s$5 = x110.Ltigerpython_parser_ast_AstNode$Name__f_expr_context.toString__T();
      const array$43 = [$$x8, $ct_T2__O__O__(new $c_T2(), "ctx", s$5)];
      const fields$46 = new $c_sjsr_WrappedVarArgs(array$43);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$46)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$NameTuple)) {
      const x112 = ast;
      const names$6 = x112.Ltigerpython_parser_ast_AstNode$NameTuple__f_names;
      const array$44 = [$ct_T2__O__O__(new $c_T2(), "elts", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(names$6))];
      const fields$47 = new $c_sjsr_WrappedVarArgs(array$44);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$47)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Set)) {
      const x114 = ast;
      const elements$4 = x114.Ltigerpython_parser_ast_AstNode$Set__f_elements;
      const array$45 = [$ct_T2__O__O__(new $c_T2(), "elts", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(elements$4))];
      const fields$48 = new $c_sjsr_WrappedVarArgs(array$45);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$48)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$SetComp)) {
      const x116 = ast;
      const elements$5 = x116.Ltigerpython_parser_ast_AstNode$SetComp__f_elements;
      const generators$4 = x116.Ltigerpython_parser_ast_AstNode$SetComp__f_generators;
      const array$46 = [$ct_T2__O__O__(new $c_T2(), "elts", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(elements$5)), $ct_T2__O__O__(new $c_T2(), "generators", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(generators$4))];
      const fields$49 = new $c_sjsr_WrappedVarArgs(array$46);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$49)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Starred)) {
      const x118 = ast;
      const expr$5 = x118.Ltigerpython_parser_ast_AstNode$Starred__f_expr;
      const $$x9 = $ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(expr$5));
      const s$6 = x118.Ltigerpython_parser_ast_AstNode$Starred__f_expr_context.toString__T();
      const array$47 = [$$x9, $ct_T2__O__O__(new $c_T2(), "ctx", s$6)];
      const fields$50 = new $c_sjsr_WrappedVarArgs(array$47);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$50)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)) {
      const x120 = ast;
      const value$7 = x120.Ltigerpython_parser_ast_AstNode$StringValue__f_value;
      const array$48 = [$ct_T2__O__O__(new $c_T2(), "value_type", "str"), $ct_T2__O__O__(new $c_T2(), "value", value$7)];
      const fields$51 = new $c_sjsr_WrappedVarArgs(array$48);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$51)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript)) {
      const x123 = ast;
      const base$2 = x123.Ltigerpython_parser_ast_AstNode$Subscript__f_base;
      const slice = x123.Ltigerpython_parser_ast_AstNode$Subscript__f_slice;
      const array$49 = [$ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(base$2)), $ct_T2__O__O__(new $c_T2(), "slice", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(slice))];
      const fields$52 = new $c_sjsr_WrappedVarArgs(array$49);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$52)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
      const x126 = ast;
      const elements$6 = x126.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
      const $$x10 = $ct_T2__O__O__(new $c_T2(), "elts", this.convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(elements$6));
      const s$7 = x126.Ltigerpython_parser_ast_AstNode$Tuple__f_expr_context.toString__T();
      const array$50 = [$$x10, $ct_T2__O__O__(new $c_T2(), "ctx", s$7)];
      const fields$53 = new $c_sjsr_WrappedVarArgs(array$50);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$53)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
      const x128 = ast;
      const op$3 = x128.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
      const value$8 = x128.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
      const s$8 = op$3.toString__T();
      const array$51 = [$ct_T2__O__O__(new $c_T2(), "op", s$8), $ct_T2__O__O__(new $c_T2(), "operand", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(value$8))];
      const fields$54 = new $c_sjsr_WrappedVarArgs(array$51);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$54)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
      const x130 = ast;
      const valueType = x130.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
      const s$9 = valueType.toString__T();
      const $$x11 = $ct_T2__O__O__(new $c_T2(), "value_type", s$9);
      const s$10 = x130.Ltigerpython_parser_ast_AstNode$Value__f_value;
      const array$52 = [$$x11, $ct_T2__O__O__(new $c_T2(), "value", s$10)];
      const fields$55 = new $c_sjsr_WrappedVarArgs(array$52);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$55)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$Yield)) {
      const x132 = ast;
      const expr$6 = x132.Ltigerpython_parser_ast_AstNode$Yield__f_expr;
      const array$53 = [$ct_T2__O__O__(new $c_T2(), "expr", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(expr$6))];
      const fields$56 = new $c_sjsr_WrappedVarArgs(array$53);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$56)
    } else if ((ast instanceof $c_Ltigerpython_parser_ast_AstNode$YieldFrom)) {
      const x134 = ast;
      const source = x134.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source;
      const array$54 = [$ct_T2__O__O__(new $c_T2(), "source", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(source))];
      const fields$57 = new $c_sjsr_WrappedVarArgs(array$54);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields$57)
    } else {
      return null
    }
  };
  _convert__Ltigerpython_parser_ast_AstNode$Keyword__sjs_js_Dynamic(keyword) {
    const $$x1 = $ct_T2__O__O__(new $c_T2(), "kind", "Keyword");
    const s = keyword.Ltigerpython_parser_ast_AstNode$Keyword__f_name;
    const array = [$$x1, $ct_T2__O__O__(new $c_T2(), "name", s), $ct_T2__O__O__(new $c_T2(), "value", this.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(keyword.Ltigerpython_parser_ast_AstNode$Keyword__f_value))];
    const fields = new $c_sjsr_WrappedVarArgs(array);
    return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields)
  };
  convert__ALtigerpython_parser_ast_AstNode__sjs_js_Any(nodes) {
    const $$x10 = $m_sjs_js_JSConverters$JSRichIterableOnce$();
    const f = ((this$2) => ((node$2) => {
      const node = node$2;
      return this$2.convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(node)
    }))(this);
    const len = nodes.u.length;
    const ys = $newArrayObject($d_sjs_js_Any.getArrayOf(), [len]);
    if ((len > 0)) {
      let i = 0;
      if ((nodes !== null)) {
        while ((i < len)) {
          const $$x1 = i;
          const arg1 = nodes.u[i];
          ys.u[$$x1] = f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(nodes, 1)) {
        const x3 = nodes;
        while ((i < len)) {
          const $$x2 = i;
          const arg1$1 = x3.u[i];
          ys.u[$$x2] = f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(nodes, 1)) {
        const x4 = nodes;
        while ((i < len)) {
          const $$x3 = i;
          const arg1$2 = x4.u[i];
          ys.u[$$x3] = f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(nodes, 1)) {
        const x5 = nodes;
        while ((i < len)) {
          const $$x4 = i;
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          ys.u[$$x4] = f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(nodes, 1)) {
        const x6 = nodes;
        while ((i < len)) {
          const $$x5 = i;
          const arg1$3 = x6.u[i];
          ys.u[$$x5] = f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(nodes, 1)) {
        const x7 = nodes;
        while ((i < len)) {
          const $$x6 = i;
          const arg1$4 = x7.u[i];
          ys.u[$$x6] = f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(nodes, 1)) {
        const x8 = nodes;
        while ((i < len)) {
          const $$x7 = i;
          const arg1$5 = x8.u[i];
          ys.u[$$x7] = f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(nodes, 1)) {
        const x9 = nodes;
        while ((i < len)) {
          const $$x8 = i;
          const arg1$6 = x9.u[i];
          ys.u[$$x8] = f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(nodes, 1)) {
        const x10 = nodes;
        while ((i < len)) {
          const $$x9 = i;
          const arg1$7 = x10.u[i];
          ys.u[$$x9] = f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(nodes)
      }
    };
    return $$x10.toJSArray$extension__sc_IterableOnce__sjs_js_Array($m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(ys))
  };
  convert__Ltigerpython_parser_ast_AstNode__sjs_js_Any(node) {
    if ((node === null)) {
      return null
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x3 = node;
      return $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, x3)
    } else {
      return $p_Ltigerpython_parser_AstConverter__annotateNode__sjs_js_Dynamic__Ltigerpython_parser_ast_AstNode__sjs_js_Dynamic(this, this._convert__Ltigerpython_parser_ast_AstNode__sjs_js_Dynamic(node), node)
    }
  };
  apply__Ltigerpython_parser_ast_AstNode__sjs_js_Any(node) {
    if ((node === null)) {
      return null
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x3 = node;
      const s = $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_MODULE.toString__T();
      const array = [$ct_T2__O__O__(new $c_T2(), "kind", s), $ct_T2__O__O__(new $c_T2(), "body", $p_Ltigerpython_parser_AstConverter___convert_body__Ltigerpython_parser_ast_AstNode$Statement__sjs_js_Any(this, x3))];
      const fields = new $c_sjsr_WrappedVarArgs(array);
      return $m_sjs_js_special_package$().objectLiteral__sci_Seq__sjs_js_Object(fields)
    } else {
      return $p_Ltigerpython_parser_AstConverter__annotateNode__sjs_js_Dynamic__Ltigerpython_parser_ast_AstNode__sjs_js_Dynamic(this, this._convert__Ltigerpython_parser_ast_AstNode__sjs_js_Dynamic(node), node)
    }
  };
}
const $d_Ltigerpython_parser_AstConverter = new $TypeData().initClass({
  Ltigerpython_parser_AstConverter: 0
}, false, "tigerpython.parser.AstConverter", {
  Ltigerpython_parser_AstConverter: 1,
  O: 1
});
$c_Ltigerpython_parser_AstConverter.prototype.$classData = $d_Ltigerpython_parser_AstConverter;
class $c_Ltigerpython_parser_AstConverter$FunctionInfo extends $c_O {
  constructor(functionDef) {
    super();
    this.Ltigerpython_parser_AstConverter$FunctionInfo__f_functionDef = null;
    this.Ltigerpython_parser_AstConverter$FunctionInfo__f_locals = null;
    this.Ltigerpython_parser_AstConverter$FunctionInfo__f_globals = null;
    this.Ltigerpython_parser_AstConverter$FunctionInfo__f_functionDef = functionDef;
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    this.Ltigerpython_parser_AstConverter$FunctionInfo__f_locals = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    this.Ltigerpython_parser_AstConverter$FunctionInfo__f_globals = $m_scm_Set$().apply__sci_Seq__O($m_sci_Nil$())
  };
  addGlobal__T__V(name) {
    if ((((name !== null) && (name !== "")) && (!this.Ltigerpython_parser_AstConverter$FunctionInfo__f_globals.contains__O__Z(name)))) {
      const this$1 = this.Ltigerpython_parser_AstConverter$FunctionInfo__f_globals;
      this$1.addOne__O__scm_Growable(name);
      const this$2 = this.Ltigerpython_parser_AstConverter$FunctionInfo__f_locals;
      const index = $f_sc_SeqOps__indexOf__O__I__I(this$2, name, 0);
      if ((index >= 0)) {
        this.Ltigerpython_parser_AstConverter$FunctionInfo__f_locals.remove__I__O(index)
      }
    }
  };
  addRef__T__V(name) {
    let $$x1;
    if ((((name !== null) && (name !== "")) && (!this.Ltigerpython_parser_AstConverter$FunctionInfo__f_globals.contains__O__Z(name)))) {
      const this$1 = this.Ltigerpython_parser_AstConverter$FunctionInfo__f_locals;
      $$x1 = (!$f_sc_SeqOps__contains__O__Z(this$1, name))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const this$2 = this.Ltigerpython_parser_AstConverter$FunctionInfo__f_locals;
      this$2.addOne__O__scm_ArrayBuffer(name)
    }
  };
  getLocals__sjs_js_Any() {
    const $$x1 = $m_sjs_js_JSConverters$JSRichIterableOnce$();
    const col = this.Ltigerpython_parser_AstConverter$FunctionInfo__f_locals;
    return $$x1.toJSArray$extension__sc_IterableOnce__sjs_js_Array(col)
  };
}
function $isArrayOf_Ltigerpython_parser_AstConverter$FunctionInfo(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_AstConverter$FunctionInfo)))
}
const $d_Ltigerpython_parser_AstConverter$FunctionInfo = new $TypeData().initClass({
  Ltigerpython_parser_AstConverter$FunctionInfo: 0
}, false, "tigerpython.parser.AstConverter$FunctionInfo", {
  Ltigerpython_parser_AstConverter$FunctionInfo: 1,
  O: 1
});
$c_Ltigerpython_parser_AstConverter$FunctionInfo.prototype.$classData = $d_Ltigerpython_parser_AstConverter$FunctionInfo;
const $p_Ltigerpython_parser_Parser___ast$lzycompute__Ltigerpython_parser_ast_AstNode = (function($thiz) {
  if (((((1 & $thiz.Ltigerpython_parser_Parser__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.Ltigerpython_parser_Parser__f__ast = $thiz.Ltigerpython_parser_Parser__f_parser.parse__Ltigerpython_parser_ast_AstNode();
    $thiz.Ltigerpython_parser_Parser__f_bitmap$0 = (((1 | $thiz.Ltigerpython_parser_Parser__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_Parser__f__ast
});
const $p_Ltigerpython_parser_Parser___ast__Ltigerpython_parser_ast_AstNode = (function($thiz) {
  return (((((1 & $thiz.Ltigerpython_parser_Parser__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_Parser___ast$lzycompute__Ltigerpython_parser_ast_AstNode($thiz) : $thiz.Ltigerpython_parser_Parser__f__ast)
});
class $c_Ltigerpython_parser_Parser extends $c_O {
  constructor(source, pythonVersion) {
    super();
    this.Ltigerpython_parser_Parser__f__ast = null;
    this.Ltigerpython_parser_Parser__f__module = null;
    this.Ltigerpython_parser_Parser__f_source = null;
    this.Ltigerpython_parser_Parser__f_pythonVersion = 0;
    this.Ltigerpython_parser_Parser__f_parser = null;
    this.Ltigerpython_parser_Parser__f_bitmap$0 = 0;
    this.Ltigerpython_parser_Parser__f_source = source;
    this.Ltigerpython_parser_Parser__f_pythonVersion = pythonVersion;
    this.Ltigerpython_parser_Parser__f_parser = new $c_Ltigerpython_parser_parsing_Parser(source, pythonVersion, (-1), new $c_Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler())
  };
  newDivision_$eq__Z__V(value) {
    this.Ltigerpython_parser_Parser__f_parser.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_newDivision = value
  };
  rejectDeadCode_$eq__Z__V(value) {
    this.Ltigerpython_parser_Parser__f_parser.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode = value
  };
  repeatStatement_$eq__Z__V(value) {
    this.Ltigerpython_parser_Parser__f_parser.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_repeatStatement = value
  };
  sagePower_$eq__Z__V(value) {
    this.Ltigerpython_parser_Parser__f_parser.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_sagePower = value
  };
  strictCode_$eq__Z__V(value) {
    this.Ltigerpython_parser_Parser__f_parser.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode = value
  };
  checkSyntax__s_Option() {
    this.Ltigerpython_parser_Parser__f_parser.parse__Ltigerpython_parser_ast_AstNode();
    return this.Ltigerpython_parser_Parser__f_parser.Ltigerpython_parser_parsing_Parser__f_errorHandler.getFirstError__s_Option()
  };
  checkSyntaxAll__ALtigerpython_parser_errors_ExtErrorInfo() {
    this.Ltigerpython_parser_Parser__f_parser.parse__Ltigerpython_parser_ast_AstNode();
    return this.Ltigerpython_parser_Parser__f_parser.Ltigerpython_parser_parsing_Parser__f_errorHandler.getAllErrors__ALtigerpython_parser_errors_ExtErrorInfo()
  };
  lineFromPosition__I__I(position) {
    return this.Ltigerpython_parser_Parser__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().Ltigerpython_parser_lexer_Lexer__f_scanner.lineFromPosition__I__I(position)
  };
  lineOffsetFromPosition__I__I(position) {
    return this.Ltigerpython_parser_Parser__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().Ltigerpython_parser_lexer_Lexer__f_scanner.lineOffsetFromPosition__I__I(position)
  };
  lineAndOffsetFromPosition__I__T2(position) {
    const line = this.Ltigerpython_parser_Parser__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().Ltigerpython_parser_lexer_Lexer__f_scanner.lineFromPosition__I__I(position);
    const offs = this.Ltigerpython_parser_Parser__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().Ltigerpython_parser_lexer_Lexer__f_scanner.lineOffsetFromPosition__I__I(position);
    return new $c_T2$mcII$sp(line, offs)
  };
}
const $d_Ltigerpython_parser_Parser = new $TypeData().initClass({
  Ltigerpython_parser_Parser: 0
}, false, "tigerpython.parser.Parser", {
  Ltigerpython_parser_Parser: 1,
  O: 1
});
$c_Ltigerpython_parser_Parser.prototype.$classData = $d_Ltigerpython_parser_Parser;
class $c_Ltigerpython_parser_TPyParser$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_TPyParser$__f_evalMode = false;
    this.Ltigerpython_parser_TPyParser$__f_newDivision = false;
    this.Ltigerpython_parser_TPyParser$__f_pythonVersion = 0;
    this.Ltigerpython_parser_TPyParser$__f_rejectDeadCode = false;
    this.Ltigerpython_parser_TPyParser$__f_repeatStatement = false;
    this.Ltigerpython_parser_TPyParser$__f_sagePower = false;
    this.Ltigerpython_parser_TPyParser$__f_strictCode = false;
    this.Ltigerpython_parser_TPyParser$__f_translateUnicodePunctuation = false;
    this.Ltigerpython_parser_TPyParser$__f_warningAsErrors = false;
    this.Ltigerpython_parser_TPyParser$__f_evalMode = false;
    this.Ltigerpython_parser_TPyParser$__f_newDivision = true;
    this.Ltigerpython_parser_TPyParser$__f_pythonVersion = 3;
    this.Ltigerpython_parser_TPyParser$__f_rejectDeadCode = true;
    this.Ltigerpython_parser_TPyParser$__f_repeatStatement = false;
    this.Ltigerpython_parser_TPyParser$__f_sagePower = false;
    this.Ltigerpython_parser_TPyParser$__f_strictCode = false;
    this.Ltigerpython_parser_TPyParser$__f_translateUnicodePunctuation = false;
    this.Ltigerpython_parser_TPyParser$__f_warningAsErrors = true
  };
  setErrorMessage__T__T__V(code, msg) {
    $m_Ltigerpython_parser_errors_ErrorTranslator$().Ltigerpython_parser_errors_ErrorTranslator$__f_errorTranslator.setMessage__s_Enumeration$Value__T__Z($m_Ltigerpython_parser_errors_ErrorCode$().withName__T__s_Enumeration$Value(code), msg)
  };
  checkSyntax__T__Ltigerpython_parser_ErrorInfo(source) {
    const src = (this.Ltigerpython_parser_TPyParser$__f_translateUnicodePunctuation ? $m_Ltigerpython_inputenc_StringTranslator$().translate__T__T(source) : source);
    const parser = new $c_Ltigerpython_parser_Parser(src, this.Ltigerpython_parser_TPyParser$__f_pythonVersion);
    parser.newDivision_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_newDivision);
    parser.rejectDeadCode_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_rejectDeadCode);
    parser.repeatStatement_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_repeatStatement);
    parser.sagePower_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_sagePower);
    parser.strictCode_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_strictCode);
    const x1 = parser.checkSyntax__s_Option();
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const p3 = x2.s_Some__f_value;
      if ((p3 !== null)) {
        const pos = p3.Ltigerpython_parser_errors_ExtErrorInfo__f_position;
        const code = p3.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
        const msg = p3.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage;
        const line = parser.lineFromPosition__I__I(pos);
        const offset = parser.lineOffsetFromPosition__I__I(pos);
        return new $c_Ltigerpython_parser_ErrorInfo(line, offset, msg, code.toString__T())
      }
    };
    const x = $m_s_None$();
    if ((x === x1)) {
      return null
    };
    throw new $c_s_MatchError(x1)
  };
  findAllErrors__T__sjs_js_Array(source) {
    const src = (this.Ltigerpython_parser_TPyParser$__f_translateUnicodePunctuation ? $m_Ltigerpython_inputenc_StringTranslator$().translate__T__T(source) : source);
    const parser = new $c_Ltigerpython_parser_Parser(src, this.Ltigerpython_parser_TPyParser$__f_pythonVersion);
    parser.newDivision_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_newDivision);
    parser.rejectDeadCode_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_rejectDeadCode);
    parser.repeatStatement_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_repeatStatement);
    parser.sagePower_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_sagePower);
    parser.strictCode_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_strictCode);
    const $$x10 = $m_sjs_js_JSConverters$JSRichIterableOnce$();
    const xs = parser.checkSyntaxAll__ALtigerpython_parser_errors_ExtErrorInfo();
    const f = ((this$2, parser$1) => ((item$2) => {
      const item = item$2;
      const line = parser$1.lineFromPosition__I__I(item.Ltigerpython_parser_errors_ExtErrorInfo__f_position);
      const offset = parser$1.lineOffsetFromPosition__I__I(item.Ltigerpython_parser_errors_ExtErrorInfo__f_position);
      return new $c_Ltigerpython_parser_ErrorInfo(line, offset, item.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage, item.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode.toString__T())
    }))(this, parser);
    const len = xs.u.length;
    const ys = $newArrayObject($d_Ltigerpython_parser_ErrorInfo.getArrayOf(), [len]);
    if ((len > 0)) {
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const $$x1 = i;
          const arg1 = xs.u[i];
          ys.u[$$x1] = f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i < len)) {
          const $$x2 = i;
          const arg1$1 = x3.u[i];
          ys.u[$$x2] = f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const $$x3 = i;
          const arg1$2 = x4.u[i];
          ys.u[$$x3] = f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const $$x4 = i;
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          ys.u[$$x4] = f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const $$x5 = i;
          const arg1$3 = x6.u[i];
          ys.u[$$x5] = f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const $$x6 = i;
          const arg1$4 = x7.u[i];
          ys.u[$$x6] = f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const $$x7 = i;
          const arg1$5 = x8.u[i];
          ys.u[$$x7] = f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const $$x8 = i;
          const arg1$6 = x9.u[i];
          ys.u[$$x8] = f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const $$x9 = i;
          const arg1$7 = x10.u[i];
          ys.u[$$x9] = f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      }
    };
    return $$x10.toJSArray$extension__sc_IterableOnce__sjs_js_Array($m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(ys))
  };
  parse__T__sjs_js_Any(source) {
    const src = (this.Ltigerpython_parser_TPyParser$__f_translateUnicodePunctuation ? $m_Ltigerpython_inputenc_StringTranslator$().translate__T__T(source) : source);
    const parser = new $c_Ltigerpython_parser_Parser(src, this.Ltigerpython_parser_TPyParser$__f_pythonVersion);
    parser.newDivision_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_newDivision);
    parser.rejectDeadCode_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_rejectDeadCode);
    parser.repeatStatement_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_repeatStatement);
    parser.sagePower_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_sagePower);
    parser.strictCode_$eq__Z__V(this.Ltigerpython_parser_TPyParser$__f_strictCode);
    const converter = new $c_Ltigerpython_parser_AstConverter(parser);
    const ast = $p_Ltigerpython_parser_Parser___ast__Ltigerpython_parser_ast_AstNode(parser);
    return converter.apply__Ltigerpython_parser_ast_AstNode__sjs_js_Any(ast)
  };
  $js$exported$prop$evalMode__O() {
    return this.Ltigerpython_parser_TPyParser$__f_evalMode
  };
  $js$exported$prop$evalMode__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_evalMode = x$1
  };
  $js$exported$prop$newDivision__O() {
    return this.Ltigerpython_parser_TPyParser$__f_newDivision
  };
  $js$exported$prop$newDivision__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_newDivision = x$1
  };
  $js$exported$prop$pythonVersion__O() {
    return this.Ltigerpython_parser_TPyParser$__f_pythonVersion
  };
  $js$exported$prop$pythonVersion__I__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_pythonVersion = x$1
  };
  $js$exported$prop$rejectDeadCode__O() {
    return this.Ltigerpython_parser_TPyParser$__f_rejectDeadCode
  };
  $js$exported$prop$rejectDeadCode__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_rejectDeadCode = x$1
  };
  $js$exported$prop$repeatStatement__O() {
    return this.Ltigerpython_parser_TPyParser$__f_repeatStatement
  };
  $js$exported$prop$repeatStatement__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_repeatStatement = x$1
  };
  $js$exported$prop$sagePower__O() {
    return this.Ltigerpython_parser_TPyParser$__f_sagePower
  };
  $js$exported$prop$sagePower__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_sagePower = x$1
  };
  $js$exported$prop$strictCode__O() {
    return this.Ltigerpython_parser_TPyParser$__f_strictCode
  };
  $js$exported$prop$strictCode__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_strictCode = x$1
  };
  $js$exported$prop$translateUnicodePunctuation__O() {
    return this.Ltigerpython_parser_TPyParser$__f_translateUnicodePunctuation
  };
  $js$exported$prop$translateUnicodePunctuation__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_translateUnicodePunctuation = x$1
  };
  $js$exported$prop$warningAsErrors__O() {
    return this.Ltigerpython_parser_TPyParser$__f_warningAsErrors
  };
  $js$exported$prop$warningAsErrors__Z__O(x$1) {
    this.Ltigerpython_parser_TPyParser$__f_warningAsErrors = x$1
  };
  $js$exported$prop$getLanguage__O() {
    const this$1 = $m_Ltigerpython_parser_errors_ErrorTranslator$().Ltigerpython_parser_errors_ErrorTranslator$__f_errorTranslator;
    return this$1.Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$__f__lang
  };
  $js$exported$meth$setLanguage__T__O(language) {
    $m_Ltigerpython_parser_errors_ErrorTranslator$().Ltigerpython_parser_errors_ErrorTranslator$__f_errorTranslator.language_$eq__T__V(language)
  };
  $js$exported$meth$setErrorMessage__T__T__O(code, msg) {
    this.setErrorMessage__T__T__V(code, msg)
  };
  $js$exported$meth$checkSyntax__T__O(source) {
    return this.checkSyntax__T__Ltigerpython_parser_ErrorInfo(source)
  };
  $js$exported$meth$findAllErrors__T__O(source) {
    return this.findAllErrors__T__sjs_js_Array(source)
  };
  $js$exported$meth$parse__T__O(source) {
    return this.parse__T__sjs_js_Any(source)
  };
  "parse"(arg) {
    const prep0 = arg;
    return this.$js$exported$meth$parse__T__O(prep0)
  };
  "findAllErrors"(arg) {
    const prep0 = arg;
    return this.$js$exported$meth$findAllErrors__T__O(prep0)
  };
  "checkSyntax"(arg) {
    const prep0 = arg;
    return this.$js$exported$meth$checkSyntax__T__O(prep0)
  };
  "setErrorMessage"(arg, arg$2) {
    const prep0 = arg;
    const prep1 = arg$2;
    return this.$js$exported$meth$setErrorMessage__T__T__O(prep0, prep1)
  };
  "setLanguage"(arg) {
    const prep0 = arg;
    return this.$js$exported$meth$setLanguage__T__O(prep0)
  };
  get "getLanguage"() {
    return this.$js$exported$prop$getLanguage__O()
  };
  get "warningAsErrors"() {
    return this.$js$exported$prop$warningAsErrors__O()
  };
  set "warningAsErrors"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$warningAsErrors__Z__O(prep0)
  };
  get "translateUnicodePunctuation"() {
    return this.$js$exported$prop$translateUnicodePunctuation__O()
  };
  set "translateUnicodePunctuation"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$translateUnicodePunctuation__Z__O(prep0)
  };
  get "strictCode"() {
    return this.$js$exported$prop$strictCode__O()
  };
  set "strictCode"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$strictCode__Z__O(prep0)
  };
  get "sagePower"() {
    return this.$js$exported$prop$sagePower__O()
  };
  set "sagePower"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$sagePower__Z__O(prep0)
  };
  get "repeatStatement"() {
    return this.$js$exported$prop$repeatStatement__O()
  };
  set "repeatStatement"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$repeatStatement__Z__O(prep0)
  };
  get "rejectDeadCode"() {
    return this.$js$exported$prop$rejectDeadCode__O()
  };
  set "rejectDeadCode"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$rejectDeadCode__Z__O(prep0)
  };
  get "pythonVersion"() {
    return this.$js$exported$prop$pythonVersion__O()
  };
  set "pythonVersion"(arg) {
    const prep0 = (arg | 0);
    this.$js$exported$prop$pythonVersion__I__O(prep0)
  };
  get "newDivision"() {
    return this.$js$exported$prop$newDivision__O()
  };
  set "newDivision"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$newDivision__Z__O(prep0)
  };
  get "evalMode"() {
    return this.$js$exported$prop$evalMode__O()
  };
  set "evalMode"(arg) {
    const prep0 = (!(!arg));
    this.$js$exported$prop$evalMode__Z__O(prep0)
  };
}
const $d_Ltigerpython_parser_TPyParser$ = new $TypeData().initClass({
  Ltigerpython_parser_TPyParser$: 0
}, false, "tigerpython.parser.TPyParser$", {
  Ltigerpython_parser_TPyParser$: 1,
  O: 1
});
$c_Ltigerpython_parser_TPyParser$.prototype.$classData = $d_Ltigerpython_parser_TPyParser$;
let $n_Ltigerpython_parser_TPyParser$ = (void 0);
function $m_Ltigerpython_parser_TPyParser$() {
  if ((!$n_Ltigerpython_parser_TPyParser$)) {
    $n_Ltigerpython_parser_TPyParser$ = new $c_Ltigerpython_parser_TPyParser$()
  };
  return $n_Ltigerpython_parser_TPyParser$
}
class $c_Ltigerpython_parser_ast_AstNode extends $c_O {
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode)))
}
class $c_Ltigerpython_parser_ast_AstNode$ extends $c_O {
  tigerpython$parser$ast$AstNode$$str__O__T(a) {
    const this$1 = $m_s_Predef$().genericWrapArray__O__scm_ArraySeq(a);
    return $f_sc_IterableOnceOps__mkString__T__T__T__T(this$1, "", ", ", "")
  };
  tigerpython$parser$ast$AstNode$$str__Ltigerpython_parser_ast_AstNode__T(o) {
    return ((o !== null) ? o.toString__T() : "")
  };
  tigerpython$parser$ast$AstNode$$extractDocString__Ltigerpython_parser_ast_AstNode__T(body) {
    while (true) {
      const x1 = body;
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
        const x4 = x1;
        const xs = x4.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
        if ((xs.u.length !== 0)) {
          const $$x1 = $m_sc_ArrayOps$();
          const xs$1 = x4.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
          body = $$x1.head$extension__O__O(xs$1);
          continue
        }
      };
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
        const x2 = x1;
        const expr = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
        if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)) {
          const x2$2 = expr;
          const value = x2$2.Ltigerpython_parser_ast_AstNode$StringValue__f_value;
          return value
        } else {
          return ""
        }
      };
      return ""
    }
  };
}
const $d_Ltigerpython_parser_ast_AstNode$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$: 0
}, false, "tigerpython.parser.ast.AstNode$", {
  Ltigerpython_parser_ast_AstNode$: 1,
  O: 1
});
$c_Ltigerpython_parser_ast_AstNode$.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$;
let $n_Ltigerpython_parser_ast_AstNode$ = (void 0);
function $m_Ltigerpython_parser_ast_AstNode$() {
  if ((!$n_Ltigerpython_parser_ast_AstNode$)) {
    $n_Ltigerpython_parser_ast_AstNode$ = new $c_Ltigerpython_parser_ast_AstNode$()
  };
  return $n_Ltigerpython_parser_ast_AstNode$
}
function $is_Ltigerpython_parser_ast_AstNode$CompoundStatement(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ltigerpython_parser_ast_AstNode$CompoundStatement)))
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$CompoundStatement(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$CompoundStatement)))
}
function $is_Ltigerpython_parser_ast_AstNode$ContextExpression(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ltigerpython_parser_ast_AstNode$ContextExpression)))
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ContextExpression(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ContextExpression)))
}
function $is_Ltigerpython_parser_ast_AstNode$ExprWrapper(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ltigerpython_parser_ast_AstNode$ExprWrapper)))
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ExprWrapper(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ExprWrapper)))
}
function $is_Ltigerpython_parser_ast_AstNode$Span(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ltigerpython_parser_ast_AstNode$Span)))
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Span(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Span)))
}
const $f_Ltigerpython_parser_ast_AstVisitor__walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V = (function($thiz, node) {
  const walker = new $c_Ltigerpython_parser_ast_AstWalker($thiz);
  walker.walk__Ltigerpython_parser_ast_AstNode$Statement__V(node)
});
const $f_Ltigerpython_parser_ast_AstVisitor__acceptParameter__Ltigerpython_parser_ast_AstNode$Parameter__Z = (function($thiz, param) {
  if ((param instanceof $c_Ltigerpython_parser_ast_AstNode$NameParameter)) {
    const x2 = param;
    $thiz.acceptParameterName__T__V(x2.Ltigerpython_parser_ast_AstNode$NameParameter__f_name);
    return true
  } else if ((param instanceof $c_Ltigerpython_parser_ast_AstNode$TupleParameter)) {
    const x3 = param;
    const xs = x3.Ltigerpython_parser_ast_AstNode$TupleParameter__f_tuple.Ltigerpython_parser_ast_AstNode$NameTuple__f_names;
    const f = ((this$2) => ((name$2) => {
      const name = name$2;
      if ((name.Ltigerpython_parser_ast_AstNode$Name__f_name !== null)) {
        this$2.acceptParameterName__T__V(name.Ltigerpython_parser_ast_AstNode$Name__f_name)
      }
    }))($thiz);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3$1 = xs;
      while ((i < len)) {
        const arg1$1 = x3$1.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    return true
  } else {
    return false
  }
});
const $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V = (function($thiz, stmt) {
  $thiz.walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(stmt)
});
const $p_Ltigerpython_parser_ast_AstWalker___walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V = (function($thiz, expr) {
  $thiz.walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(expr)
});
class $c_Ltigerpython_parser_ast_AstWalker extends $c_O {
  constructor(visitor) {
    super();
    this.Ltigerpython_parser_ast_AstWalker__f_visitor = null;
    this.Ltigerpython_parser_ast_AstWalker__f_visitor = visitor
  };
  walk__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    this.Ltigerpython_parser_ast_AstWalker__f_visitor.enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(node);
    this.walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(node);
    this.Ltigerpython_parser_ast_AstWalker__f_visitor.leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(node)
  };
  walkNode__Ltigerpython_parser_ast_AstNode__V(node) {
    if ((node !== null)) {
      if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$ExceptHandler)) {
        const x3 = node;
        this.walkNode__Ltigerpython_parser_ast_AstNode__V(x3.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_name);
        this.walkNode__Ltigerpython_parser_ast_AstNode__V(x3.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_exType);
        this.walkNode__Ltigerpython_parser_ast_AstNode__V(x3.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body)
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Statement)) {
        const x4 = node;
        this.walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(x4)
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Expression)) {
        const x5 = node;
        this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x5)
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Index)) {
        const x6 = node;
        this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x6.Ltigerpython_parser_ast_AstNode$Index__f_value)
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$MultiSlice)) {
        const x7 = node;
        const xs = x7.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements;
        const f = ((this$4) => ((slice$2) => {
          const slice = slice$2;
          this$4.walkNode__Ltigerpython_parser_ast_AstNode__V(slice)
        }))(this);
        const len = xs.u.length;
        let i = 0;
        if ((xs !== null)) {
          while ((i < len)) {
            const arg1 = xs.u[i];
            f(arg1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_I(xs, 1)) {
          const x3$1 = xs;
          while ((i < len)) {
            const arg1$1 = x3$1.u[i];
            f(arg1$1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_D(xs, 1)) {
          const x4$1 = xs;
          while ((i < len)) {
            const arg1$2 = x4$1.u[i];
            f(arg1$2);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_J(xs, 1)) {
          const x5$1 = xs;
          while ((i < len)) {
            const t = x5$1.u[i];
            const lo = t.RTLong__f_lo;
            const hi = t.RTLong__f_hi;
            f(new $c_RTLong(lo, hi));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_F(xs, 1)) {
          const x6$1 = xs;
          while ((i < len)) {
            const arg1$3 = x6$1.u[i];
            f(arg1$3);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_C(xs, 1)) {
          const x7$1 = xs;
          while ((i < len)) {
            const arg1$4 = x7$1.u[i];
            f($bC(arg1$4));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_B(xs, 1)) {
          const x8 = xs;
          while ((i < len)) {
            const arg1$5 = x8.u[i];
            f(arg1$5);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_S(xs, 1)) {
          const x9 = xs;
          while ((i < len)) {
            const arg1$6 = x9.u[i];
            f(arg1$6);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_Z(xs, 1)) {
          const x10 = xs;
          while ((i < len)) {
            const arg1$7 = x10.u[i];
            f(arg1$7);
            i = ((1 + i) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs)
        }
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$SliceRange)) {
        const x8$1 = node;
        this.walkNode__Ltigerpython_parser_ast_AstNode__V(x8$1.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower);
        this.walkNode__Ltigerpython_parser_ast_AstNode__V(x8$1.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper);
        this.walkNode__Ltigerpython_parser_ast_AstNode__V(x8$1.Ltigerpython_parser_ast_AstNode$SliceRange__f_step)
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Arguments)) {
        const x9$1 = node;
        const xs$1 = x9$1.Ltigerpython_parser_ast_AstNode$Arguments__f_values;
        const f$1 = ((this$2$1) => ((value$2) => {
          const value = value$2;
          this$2$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(value)
        }))(this);
        const len$1 = xs$1.u.length;
        let i$1 = 0;
        if ((xs$1 !== null)) {
          while ((i$1 < len$1)) {
            const arg1$8 = xs$1.u[i$1];
            f$1(arg1$8);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_I(xs$1, 1)) {
          const x3$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$9 = x3$2.u[i$1];
            f$1(arg1$9);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_D(xs$1, 1)) {
          const x4$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$10 = x4$2.u[i$1];
            f$1(arg1$10);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_J(xs$1, 1)) {
          const x5$2 = xs$1;
          while ((i$1 < len$1)) {
            const t$1 = x5$2.u[i$1];
            const lo$1 = t$1.RTLong__f_lo;
            const hi$1 = t$1.RTLong__f_hi;
            f$1(new $c_RTLong(lo$1, hi$1));
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_F(xs$1, 1)) {
          const x6$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$11 = x6$2.u[i$1];
            f$1(arg1$11);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_C(xs$1, 1)) {
          const x7$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$12 = x7$2.u[i$1];
            f$1($bC(arg1$12));
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_B(xs$1, 1)) {
          const x8$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$13 = x8$2.u[i$1];
            f$1(arg1$13);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_S(xs$1, 1)) {
          const x9$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$14 = x9$2.u[i$1];
            f$1(arg1$14);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_Z(xs$1, 1)) {
          const x10$1 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$15 = x10$1.u[i$1];
            f$1(arg1$15);
            i$1 = ((1 + i$1) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs$1)
        };
        this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x9$1.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs);
        this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x9$1.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs)
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Parameters)) {
        const x10$2 = node;
        const xs$2 = x10$2.Ltigerpython_parser_ast_AstNode$Parameters__f_args;
        const f$2 = ((this$3$1) => ((arg$2) => {
          const arg = arg$2;
          const this$12 = this$3$1.Ltigerpython_parser_ast_AstWalker__f_visitor;
          return $f_Ltigerpython_parser_ast_AstVisitor__acceptParameter__Ltigerpython_parser_ast_AstNode$Parameter__Z(this$12, arg)
        }))(this);
        const len$2 = xs$2.u.length;
        let i$2 = 0;
        if ((xs$2 !== null)) {
          while ((i$2 < len$2)) {
            const arg1$16 = xs$2.u[i$2];
            f$2(arg1$16);
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_I(xs$2, 1)) {
          const x3$3 = xs$2;
          while ((i$2 < len$2)) {
            const arg1$17 = x3$3.u[i$2];
            f$2(arg1$17);
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_D(xs$2, 1)) {
          const x4$3 = xs$2;
          while ((i$2 < len$2)) {
            const arg1$18 = x4$3.u[i$2];
            f$2(arg1$18);
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_J(xs$2, 1)) {
          const x5$3 = xs$2;
          while ((i$2 < len$2)) {
            const t$2 = x5$3.u[i$2];
            const lo$2 = t$2.RTLong__f_lo;
            const hi$2 = t$2.RTLong__f_hi;
            f$2(new $c_RTLong(lo$2, hi$2));
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_F(xs$2, 1)) {
          const x6$3 = xs$2;
          while ((i$2 < len$2)) {
            const arg1$19 = x6$3.u[i$2];
            f$2(arg1$19);
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_C(xs$2, 1)) {
          const x7$3 = xs$2;
          while ((i$2 < len$2)) {
            const arg1$20 = x7$3.u[i$2];
            f$2($bC(arg1$20));
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_B(xs$2, 1)) {
          const x8$3 = xs$2;
          while ((i$2 < len$2)) {
            const arg1$21 = x8$3.u[i$2];
            f$2(arg1$21);
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_S(xs$2, 1)) {
          const x9$3 = xs$2;
          while ((i$2 < len$2)) {
            const arg1$22 = x9$3.u[i$2];
            f$2(arg1$22);
            i$2 = ((1 + i$2) | 0)
          }
        } else if ($isArrayOf_Z(xs$2, 1)) {
          const x10$3 = xs$2;
          while ((i$2 < len$2)) {
            const arg1$23 = x10$3.u[i$2];
            f$2(arg1$23);
            i$2 = ((1 + i$2) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs$2)
        };
        const xs$3 = x10$2.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults;
        const f$3 = ((this$4$1) => ((default$2) => {
          const default$1 = default$2;
          this$4$1.walkNode__Ltigerpython_parser_ast_AstNode__V(default$1)
        }))(this);
        const len$3 = xs$3.u.length;
        let i$3 = 0;
        if ((xs$3 !== null)) {
          while ((i$3 < len$3)) {
            const arg1$24 = xs$3.u[i$3];
            f$3(arg1$24);
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_I(xs$3, 1)) {
          const x3$4 = xs$3;
          while ((i$3 < len$3)) {
            const arg1$25 = x3$4.u[i$3];
            f$3(arg1$25);
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_D(xs$3, 1)) {
          const x4$4 = xs$3;
          while ((i$3 < len$3)) {
            const arg1$26 = x4$4.u[i$3];
            f$3(arg1$26);
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_J(xs$3, 1)) {
          const x5$4 = xs$3;
          while ((i$3 < len$3)) {
            const t$3 = x5$4.u[i$3];
            const lo$3 = t$3.RTLong__f_lo;
            const hi$3 = t$3.RTLong__f_hi;
            f$3(new $c_RTLong(lo$3, hi$3));
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_F(xs$3, 1)) {
          const x6$4 = xs$3;
          while ((i$3 < len$3)) {
            const arg1$27 = x6$4.u[i$3];
            f$3(arg1$27);
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_C(xs$3, 1)) {
          const x7$4 = xs$3;
          while ((i$3 < len$3)) {
            const arg1$28 = x7$4.u[i$3];
            f$3($bC(arg1$28));
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_B(xs$3, 1)) {
          const x8$4 = xs$3;
          while ((i$3 < len$3)) {
            const arg1$29 = x8$4.u[i$3];
            f$3(arg1$29);
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_S(xs$3, 1)) {
          const x9$4 = xs$3;
          while ((i$3 < len$3)) {
            const arg1$30 = x9$4.u[i$3];
            f$3(arg1$30);
            i$3 = ((1 + i$3) | 0)
          }
        } else if ($isArrayOf_Z(xs$3, 1)) {
          const x10$4 = xs$3;
          while ((i$3 < len$3)) {
            const arg1$31 = x10$4.u[i$3];
            f$3(arg1$31);
            i$3 = ((1 + i$3) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs$3)
        }
      } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Comprehension)) {
        const x11 = node;
        this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x11.Ltigerpython_parser_ast_AstNode$Comprehension__f_target);
        this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x11.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter);
        const xs$4 = x11.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs;
        const f$4 = ((this$5$1) => ((ifExpr$2) => {
          const ifExpr = ifExpr$2;
          this$5$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(ifExpr)
        }))(this);
        const len$4 = xs$4.u.length;
        let i$4 = 0;
        if ((xs$4 !== null)) {
          while ((i$4 < len$4)) {
            const arg1$32 = xs$4.u[i$4];
            f$4(arg1$32);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_I(xs$4, 1)) {
          const x3$5 = xs$4;
          while ((i$4 < len$4)) {
            const arg1$33 = x3$5.u[i$4];
            f$4(arg1$33);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_D(xs$4, 1)) {
          const x4$5 = xs$4;
          while ((i$4 < len$4)) {
            const arg1$34 = x4$5.u[i$4];
            f$4(arg1$34);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_J(xs$4, 1)) {
          const x5$5 = xs$4;
          while ((i$4 < len$4)) {
            const t$4 = x5$5.u[i$4];
            const lo$4 = t$4.RTLong__f_lo;
            const hi$4 = t$4.RTLong__f_hi;
            f$4(new $c_RTLong(lo$4, hi$4));
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_F(xs$4, 1)) {
          const x6$5 = xs$4;
          while ((i$4 < len$4)) {
            const arg1$35 = x6$5.u[i$4];
            f$4(arg1$35);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_C(xs$4, 1)) {
          const x7$5 = xs$4;
          while ((i$4 < len$4)) {
            const arg1$36 = x7$5.u[i$4];
            f$4($bC(arg1$36));
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_B(xs$4, 1)) {
          const x8$5 = xs$4;
          while ((i$4 < len$4)) {
            const arg1$37 = x8$5.u[i$4];
            f$4(arg1$37);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_S(xs$4, 1)) {
          const x9$5 = xs$4;
          while ((i$4 < len$4)) {
            const arg1$38 = x9$5.u[i$4];
            f$4(arg1$38);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_Z(xs$4, 1)) {
          const x10$5 = xs$4;
          while ((i$4 < len$4)) {
            const arg1$39 = x10$5.u[i$4];
            f$4(arg1$39);
            i$4 = ((1 + i$4) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs$4)
        }
      }
    }
  };
  walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(stmt) {
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Assert)) {
      const x2 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x2.Ltigerpython_parser_ast_AstNode$Assert__f_msg);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x2.Ltigerpython_parser_ast_AstNode$Assert__f_test)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment)) {
      const x3 = stmt;
      const xs = x3.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
      const f = ((this$2) => ((target$2) => {
        const target = target$2;
        this$2.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(target)
      }))(this);
      const len = xs.u.length;
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const arg1 = xs.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3$1 = xs;
        while ((i < len)) {
          const arg1$1 = x3$1.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      };
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x3.Ltigerpython_parser_ast_AstNode$Assignment__f_value)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$AugAssign)) {
      const x4$1 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x4$1.Ltigerpython_parser_ast_AstNode$AugAssign__f_target);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x4$1.Ltigerpython_parser_ast_AstNode$AugAssign__f_value)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef)) {
      const x5$1 = stmt;
      const xs$1 = x5$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_decoratorList;
      const f$1 = ((this$2$1) => ((decorator$2) => {
        const decorator = decorator$2;
        this$2$1.walkNode__Ltigerpython_parser_ast_AstNode__V(decorator)
      }))(this);
      const len$1 = xs$1.u.length;
      let i$1 = 0;
      if ((xs$1 !== null)) {
        while ((i$1 < len$1)) {
          const arg1$8 = xs$1.u[i$1];
          f$1(arg1$8);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_I(xs$1, 1)) {
        const x3$2 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$9 = x3$2.u[i$1];
          f$1(arg1$9);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_D(xs$1, 1)) {
        const x4$2 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$10 = x4$2.u[i$1];
          f$1(arg1$10);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_J(xs$1, 1)) {
        const x5$2 = xs$1;
        while ((i$1 < len$1)) {
          const t$1 = x5$2.u[i$1];
          const lo$1 = t$1.RTLong__f_lo;
          const hi$1 = t$1.RTLong__f_hi;
          f$1(new $c_RTLong(lo$1, hi$1));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_F(xs$1, 1)) {
        const x6$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$11 = x6$1.u[i$1];
          f$1(arg1$11);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_C(xs$1, 1)) {
        const x7$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$12 = x7$1.u[i$1];
          f$1($bC(arg1$12));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_B(xs$1, 1)) {
        const x8$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$13 = x8$1.u[i$1];
          f$1(arg1$13);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_S(xs$1, 1)) {
        const x9$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$14 = x9$1.u[i$1];
          f$1(arg1$14);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_Z(xs$1, 1)) {
        const x10$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$15 = x10$1.u[i$1];
          f$1(arg1$15);
          i$1 = ((1 + i$1) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$1)
      };
      const xs$2 = x5$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases;
      const f$2 = ((this$3$1) => ((base$2) => {
        const base = base$2;
        this$3$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(base)
      }))(this);
      const len$2 = xs$2.u.length;
      let i$2 = 0;
      if ((xs$2 !== null)) {
        while ((i$2 < len$2)) {
          const arg1$16 = xs$2.u[i$2];
          f$2(arg1$16);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_I(xs$2, 1)) {
        const x3$3 = xs$2;
        while ((i$2 < len$2)) {
          const arg1$17 = x3$3.u[i$2];
          f$2(arg1$17);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_D(xs$2, 1)) {
        const x4$3 = xs$2;
        while ((i$2 < len$2)) {
          const arg1$18 = x4$3.u[i$2];
          f$2(arg1$18);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_J(xs$2, 1)) {
        const x5$3 = xs$2;
        while ((i$2 < len$2)) {
          const t$2 = x5$3.u[i$2];
          const lo$2 = t$2.RTLong__f_lo;
          const hi$2 = t$2.RTLong__f_hi;
          f$2(new $c_RTLong(lo$2, hi$2));
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_F(xs$2, 1)) {
        const x6$2 = xs$2;
        while ((i$2 < len$2)) {
          const arg1$19 = x6$2.u[i$2];
          f$2(arg1$19);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_C(xs$2, 1)) {
        const x7$2 = xs$2;
        while ((i$2 < len$2)) {
          const arg1$20 = x7$2.u[i$2];
          f$2($bC(arg1$20));
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_B(xs$2, 1)) {
        const x8$2 = xs$2;
        while ((i$2 < len$2)) {
          const arg1$21 = x8$2.u[i$2];
          f$2(arg1$21);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_S(xs$2, 1)) {
        const x9$2 = xs$2;
        while ((i$2 < len$2)) {
          const arg1$22 = x9$2.u[i$2];
          f$2(arg1$22);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_Z(xs$2, 1)) {
        const x10$2 = xs$2;
        while ((i$2 < len$2)) {
          const arg1$23 = x10$2.u[i$2];
          f$2(arg1$23);
          i$2 = ((1 + i$2) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$2)
      };
      const xs$3 = x5$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords;
      const f$3 = ((this$4$1) => ((keyword$2) => {
        const keyword = keyword$2;
        this$4$1.walkNode__Ltigerpython_parser_ast_AstNode__V(keyword.Ltigerpython_parser_ast_AstNode$Keyword__f_value)
      }))(this);
      const len$3 = xs$3.u.length;
      let i$3 = 0;
      if ((xs$3 !== null)) {
        while ((i$3 < len$3)) {
          const arg1$24 = xs$3.u[i$3];
          f$3(arg1$24);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_I(xs$3, 1)) {
        const x3$4 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$25 = x3$4.u[i$3];
          f$3(arg1$25);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_D(xs$3, 1)) {
        const x4$4 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$26 = x4$4.u[i$3];
          f$3(arg1$26);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_J(xs$3, 1)) {
        const x5$4 = xs$3;
        while ((i$3 < len$3)) {
          const t$3 = x5$4.u[i$3];
          const lo$3 = t$3.RTLong__f_lo;
          const hi$3 = t$3.RTLong__f_hi;
          f$3(new $c_RTLong(lo$3, hi$3));
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_F(xs$3, 1)) {
        const x6$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$27 = x6$3.u[i$3];
          f$3(arg1$27);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_C(xs$3, 1)) {
        const x7$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$28 = x7$3.u[i$3];
          f$3($bC(arg1$28));
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_B(xs$3, 1)) {
        const x8$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$29 = x8$3.u[i$3];
          f$3(arg1$29);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_S(xs$3, 1)) {
        const x9$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$30 = x9$3.u[i$3];
          f$3(arg1$30);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_Z(xs$3, 1)) {
        const x10$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$31 = x10$3.u[i$3];
          f$3(arg1$31);
          i$3 = ((1 + i$3) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$3)
      };
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x5$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_body)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Delete)) {
      const x6$4 = stmt;
      const xs$4 = x6$4.Ltigerpython_parser_ast_AstNode$Delete__f_targets;
      const f$4 = ((this$5$1) => ((target$3$2) => {
        const target$3 = target$3$2;
        this$5$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(target$3)
      }))(this);
      const len$4 = xs$4.u.length;
      let i$4 = 0;
      if ((xs$4 !== null)) {
        while ((i$4 < len$4)) {
          const arg1$32 = xs$4.u[i$4];
          f$4(arg1$32);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_I(xs$4, 1)) {
        const x3$5 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$33 = x3$5.u[i$4];
          f$4(arg1$33);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_D(xs$4, 1)) {
        const x4$5 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$34 = x4$5.u[i$4];
          f$4(arg1$34);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_J(xs$4, 1)) {
        const x5$5 = xs$4;
        while ((i$4 < len$4)) {
          const t$4 = x5$5.u[i$4];
          const lo$4 = t$4.RTLong__f_lo;
          const hi$4 = t$4.RTLong__f_hi;
          f$4(new $c_RTLong(lo$4, hi$4));
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_F(xs$4, 1)) {
        const x6$5 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$35 = x6$5.u[i$4];
          f$4(arg1$35);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_C(xs$4, 1)) {
        const x7$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$36 = x7$4.u[i$4];
          f$4($bC(arg1$36));
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_B(xs$4, 1)) {
        const x8$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$37 = x8$4.u[i$4];
          f$4(arg1$37);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_S(xs$4, 1)) {
        const x9$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$38 = x9$4.u[i$4];
          f$4(arg1$38);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_Z(xs$4, 1)) {
        const x10$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$39 = x10$4.u[i$4];
          f$4(arg1$39);
          i$4 = ((1 + i$4) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$4)
      }
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Exec)) {
      const x7$5 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x7$5.Ltigerpython_parser_ast_AstNode$Exec__f_expr);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x7$5.Ltigerpython_parser_ast_AstNode$Exec__f_globals);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x7$5.Ltigerpython_parser_ast_AstNode$Exec__f_locals)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
      const x8$5 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x8$5.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$For)) {
      const x9$5 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x9$5.Ltigerpython_parser_ast_AstNode$For__f_target);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x9$5.Ltigerpython_parser_ast_AstNode$For__f_iter);
      this.Ltigerpython_parser_ast_AstWalker__f_visitor.enterLoop__Ltigerpython_parser_ast_AstNode$Statement__V(x9$5);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x9$5.Ltigerpython_parser_ast_AstNode$For__f_body);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x9$5.Ltigerpython_parser_ast_AstNode$For__f_elseBody)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
      const x10$5 = stmt;
      const xs$5 = x10$5.Ltigerpython_parser_ast_AstNode$FunctionDef__f_decoratorList;
      const f$5 = ((this$6$1) => ((decorator$3$2) => {
        const decorator$3 = decorator$3$2;
        this$6$1.walkNode__Ltigerpython_parser_ast_AstNode__V(decorator$3)
      }))(this);
      const len$5 = xs$5.u.length;
      let i$5 = 0;
      if ((xs$5 !== null)) {
        while ((i$5 < len$5)) {
          const arg1$40 = xs$5.u[i$5];
          f$5(arg1$40);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_I(xs$5, 1)) {
        const x3$6 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$41 = x3$6.u[i$5];
          f$5(arg1$41);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_D(xs$5, 1)) {
        const x4$6 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$42 = x4$6.u[i$5];
          f$5(arg1$42);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_J(xs$5, 1)) {
        const x5$6 = xs$5;
        while ((i$5 < len$5)) {
          const t$5 = x5$6.u[i$5];
          const lo$5 = t$5.RTLong__f_lo;
          const hi$5 = t$5.RTLong__f_hi;
          f$5(new $c_RTLong(lo$5, hi$5));
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_F(xs$5, 1)) {
        const x6$6 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$43 = x6$6.u[i$5];
          f$5(arg1$43);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_C(xs$5, 1)) {
        const x7$6 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$44 = x7$6.u[i$5];
          f$5($bC(arg1$44));
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_B(xs$5, 1)) {
        const x8$6 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$45 = x8$6.u[i$5];
          f$5(arg1$45);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_S(xs$5, 1)) {
        const x9$6 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$46 = x9$6.u[i$5];
          f$5(arg1$46);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_Z(xs$5, 1)) {
        const x10$6 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$47 = x10$6.u[i$5];
          f$5(arg1$47);
          i$5 = ((1 + i$5) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$5)
      };
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x10$5.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x10$5.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x10$5.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x11 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x11.Ltigerpython_parser_ast_AstNode$If__f_test);
      this.walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(x11.Ltigerpython_parser_ast_AstNode$If__f_body);
      this.walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(x11.Ltigerpython_parser_ast_AstNode$If__f_elseBody)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Print)) {
      const x12 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x12.Ltigerpython_parser_ast_AstNode$Print__f_dest);
      const xs$6 = x12.Ltigerpython_parser_ast_AstNode$Print__f_values;
      const f$6 = ((this$7$1) => ((value$2) => {
        const value = value$2;
        this$7$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(value)
      }))(this);
      const len$6 = xs$6.u.length;
      let i$6 = 0;
      if ((xs$6 !== null)) {
        while ((i$6 < len$6)) {
          const arg1$48 = xs$6.u[i$6];
          f$6(arg1$48);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_I(xs$6, 1)) {
        const x3$7 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$49 = x3$7.u[i$6];
          f$6(arg1$49);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_D(xs$6, 1)) {
        const x4$7 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$50 = x4$7.u[i$6];
          f$6(arg1$50);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_J(xs$6, 1)) {
        const x5$7 = xs$6;
        while ((i$6 < len$6)) {
          const t$6 = x5$7.u[i$6];
          const lo$6 = t$6.RTLong__f_lo;
          const hi$6 = t$6.RTLong__f_hi;
          f$6(new $c_RTLong(lo$6, hi$6));
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_F(xs$6, 1)) {
        const x6$7 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$51 = x6$7.u[i$6];
          f$6(arg1$51);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_C(xs$6, 1)) {
        const x7$7 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$52 = x7$7.u[i$6];
          f$6($bC(arg1$52));
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_B(xs$6, 1)) {
        const x8$7 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$53 = x8$7.u[i$6];
          f$6(arg1$53);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_S(xs$6, 1)) {
        const x9$7 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$54 = x9$7.u[i$6];
          f$6(arg1$54);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_Z(xs$6, 1)) {
        const x10$7 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$55 = x10$7.u[i$6];
          f$6(arg1$55);
          i$6 = ((1 + i$6) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$6)
      }
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Raise2)) {
      const x13 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x13.Ltigerpython_parser_ast_AstNode$Raise2__f_exType);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x13.Ltigerpython_parser_ast_AstNode$Raise2__f_inst);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x13.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Raise3)) {
      const x14 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x14.Ltigerpython_parser_ast_AstNode$Raise3__f_ex);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x14.Ltigerpython_parser_ast_AstNode$Raise3__f_cause)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Return)) {
      const x15 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x15.Ltigerpython_parser_ast_AstNode$Return__f_value)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x16 = stmt;
      const xs$7 = x16.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
      const f$7 = ((this$8$1) => ((s$2) => {
        const s = s$2;
        this$8$1.walkNode__Ltigerpython_parser_ast_AstNode__V(s)
      }))(this);
      const len$7 = xs$7.u.length;
      let i$7 = 0;
      if ((xs$7 !== null)) {
        while ((i$7 < len$7)) {
          const arg1$56 = xs$7.u[i$7];
          f$7(arg1$56);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_I(xs$7, 1)) {
        const x3$8 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$57 = x3$8.u[i$7];
          f$7(arg1$57);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_D(xs$7, 1)) {
        const x4$8 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$58 = x4$8.u[i$7];
          f$7(arg1$58);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_J(xs$7, 1)) {
        const x5$8 = xs$7;
        while ((i$7 < len$7)) {
          const t$7 = x5$8.u[i$7];
          const lo$7 = t$7.RTLong__f_lo;
          const hi$7 = t$7.RTLong__f_hi;
          f$7(new $c_RTLong(lo$7, hi$7));
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_F(xs$7, 1)) {
        const x6$8 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$59 = x6$8.u[i$7];
          f$7(arg1$59);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_C(xs$7, 1)) {
        const x7$8 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$60 = x7$8.u[i$7];
          f$7($bC(arg1$60));
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_B(xs$7, 1)) {
        const x8$8 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$61 = x8$8.u[i$7];
          f$7(arg1$61);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_S(xs$7, 1)) {
        const x9$8 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$62 = x9$8.u[i$7];
          f$7(arg1$62);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_Z(xs$7, 1)) {
        const x10$8 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$63 = x10$8.u[i$7];
          f$7(arg1$63);
          i$7 = ((1 + i$7) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$7)
      }
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x17 = stmt;
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x17.Ltigerpython_parser_ast_AstNode$Try__f_body);
      const xs$8 = x17.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
      const f$8 = ((this$9$1) => ((handler$2) => {
        const handler = handler$2;
        this$9$1.walkNode__Ltigerpython_parser_ast_AstNode__V(handler)
      }))(this);
      const len$8 = xs$8.u.length;
      let i$8 = 0;
      if ((xs$8 !== null)) {
        while ((i$8 < len$8)) {
          const arg1$64 = xs$8.u[i$8];
          f$8(arg1$64);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_I(xs$8, 1)) {
        const x3$9 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$65 = x3$9.u[i$8];
          f$8(arg1$65);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_D(xs$8, 1)) {
        const x4$9 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$66 = x4$9.u[i$8];
          f$8(arg1$66);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_J(xs$8, 1)) {
        const x5$9 = xs$8;
        while ((i$8 < len$8)) {
          const t$8 = x5$9.u[i$8];
          const lo$8 = t$8.RTLong__f_lo;
          const hi$8 = t$8.RTLong__f_hi;
          f$8(new $c_RTLong(lo$8, hi$8));
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_F(xs$8, 1)) {
        const x6$9 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$67 = x6$9.u[i$8];
          f$8(arg1$67);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_C(xs$8, 1)) {
        const x7$9 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$68 = x7$9.u[i$8];
          f$8($bC(arg1$68));
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_B(xs$8, 1)) {
        const x8$9 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$69 = x8$9.u[i$8];
          f$8(arg1$69);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_S(xs$8, 1)) {
        const x9$9 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$70 = x9$9.u[i$8];
          f$8(arg1$70);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_Z(xs$8, 1)) {
        const x10$9 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$71 = x10$9.u[i$8];
          f$8(arg1$71);
          i$8 = ((1 + i$8) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$8)
      };
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x17.Ltigerpython_parser_ast_AstNode$Try__f_finalBody);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x17.Ltigerpython_parser_ast_AstNode$Try__f_elseBody)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
      const x18 = stmt;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x18.Ltigerpython_parser_ast_AstNode$While__f_test);
      this.Ltigerpython_parser_ast_AstWalker__f_visitor.enterLoop__Ltigerpython_parser_ast_AstNode$Statement__V(x18);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x18.Ltigerpython_parser_ast_AstNode$While__f_body);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x18.Ltigerpython_parser_ast_AstNode$While__f_elseBody)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$With)) {
      const x19 = stmt;
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x19.Ltigerpython_parser_ast_AstNode$With__f_context);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x19.Ltigerpython_parser_ast_AstNode$With__f_opt_vars);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x19.Ltigerpython_parser_ast_AstNode$With__f_body)
    }
  };
  walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(expr) {
    if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$NameTuple)) {
      const x2 = expr;
      const xs = x2.Ltigerpython_parser_ast_AstNode$NameTuple__f_names;
      const f = ((this$2) => ((name$2) => {
        const name = name$2;
        this$2.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(name)
      }))(this);
      const len = xs.u.length;
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const arg1 = xs.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i < len)) {
          const arg1$1 = x3.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
      const x3$1 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x3$1.Ltigerpython_parser_ast_AstNode$Attribute__f_base);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x3$1.Ltigerpython_parser_ast_AstNode$Attribute__f_attr)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
      const x4$1 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x4$1.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x4$1.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const x5$1 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x5$1.Ltigerpython_parser_ast_AstNode$Call__f_function);
      const xs$1 = x5$1.Ltigerpython_parser_ast_AstNode$Call__f_args;
      const f$1 = ((this$2$1) => ((arg$2) => {
        const arg = arg$2;
        this$2$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(arg)
      }))(this);
      const len$1 = xs$1.u.length;
      let i$1 = 0;
      if ((xs$1 !== null)) {
        while ((i$1 < len$1)) {
          const arg1$8 = xs$1.u[i$1];
          f$1(arg1$8);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_I(xs$1, 1)) {
        const x3$2 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$9 = x3$2.u[i$1];
          f$1(arg1$9);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_D(xs$1, 1)) {
        const x4$2 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$10 = x4$2.u[i$1];
          f$1(arg1$10);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_J(xs$1, 1)) {
        const x5$2 = xs$1;
        while ((i$1 < len$1)) {
          const t$1 = x5$2.u[i$1];
          const lo$1 = t$1.RTLong__f_lo;
          const hi$1 = t$1.RTLong__f_hi;
          f$1(new $c_RTLong(lo$1, hi$1));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_F(xs$1, 1)) {
        const x6$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$11 = x6$1.u[i$1];
          f$1(arg1$11);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_C(xs$1, 1)) {
        const x7$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$12 = x7$1.u[i$1];
          f$1($bC(arg1$12));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_B(xs$1, 1)) {
        const x8$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$13 = x8$1.u[i$1];
          f$1(arg1$13);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_S(xs$1, 1)) {
        const x9$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$14 = x9$1.u[i$1];
          f$1(arg1$14);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_Z(xs$1, 1)) {
        const x10$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$15 = x10$1.u[i$1];
          f$1(arg1$15);
          i$1 = ((1 + i$1) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$1)
      };
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x5$1.Ltigerpython_parser_ast_AstNode$Call__f_starArg);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x5$1.Ltigerpython_parser_ast_AstNode$Call__f_kwArg)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
      const x6$2 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x6$2.Ltigerpython_parser_ast_AstNode$Compare__f_left);
      const xs$2 = x6$2.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
      const p = new $c_sjsr_AnonFunction1(((this$3$1) => ((check$ifrefutable$1$2) => {
        const check$ifrefutable$1 = check$ifrefutable$1$2;
        return (check$ifrefutable$1 !== null)
      }))(this));
      const this$8 = new $c_sc_ArrayOps$WithFilter(p, xs$2);
      const len$2 = $m_sr_ScalaRunTime$().array_length__O__I(this$8.sc_ArrayOps$WithFilter__f_xs);
      let i$2 = 0;
      while ((i$2 < len$2)) {
        const x = $m_sr_ScalaRunTime$().array_apply__O__I__O(this$8.sc_ArrayOps$WithFilter__f_xs, i$2);
        if ((!(!this$8.sc_ArrayOps$WithFilter__f_p.apply__O__O(x)))) {
          const x$1 = x;
          if ((x$1 !== null)) {
            const cmp = x$1._2__O();
            this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(cmp)
          } else {
            throw new $c_s_MatchError(x$1)
          }
        };
        i$2 = ((1 + i$2) | 0)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$IfExpr)) {
      const x7$2 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x7$2.Ltigerpython_parser_ast_AstNode$IfExpr__f_test);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x7$2.Ltigerpython_parser_ast_AstNode$IfExpr__f_body);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x7$2.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Lambda)) {
      const x8$2 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x8$2.Ltigerpython_parser_ast_AstNode$Lambda__f_body)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Generator)) {
      const x9$2 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x9$2.Ltigerpython_parser_ast_AstNode$Generator__f_element);
      const xs$3 = x9$2.Ltigerpython_parser_ast_AstNode$Generator__f_generators;
      const f$2 = ((this$5$1) => ((gen$2) => {
        const gen = gen$2;
        this$5$1.walkNode__Ltigerpython_parser_ast_AstNode__V(gen)
      }))(this);
      const len$3 = xs$3.u.length;
      let i$3 = 0;
      if ((xs$3 !== null)) {
        while ((i$3 < len$3)) {
          const arg1$16 = xs$3.u[i$3];
          f$2(arg1$16);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_I(xs$3, 1)) {
        const x3$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$17 = x3$3.u[i$3];
          f$2(arg1$17);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_D(xs$3, 1)) {
        const x4$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$18 = x4$3.u[i$3];
          f$2(arg1$18);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_J(xs$3, 1)) {
        const x5$3 = xs$3;
        while ((i$3 < len$3)) {
          const t$2 = x5$3.u[i$3];
          const lo$2 = t$2.RTLong__f_lo;
          const hi$2 = t$2.RTLong__f_hi;
          f$2(new $c_RTLong(lo$2, hi$2));
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_F(xs$3, 1)) {
        const x6$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$19 = x6$3.u[i$3];
          f$2(arg1$19);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_C(xs$3, 1)) {
        const x7$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$20 = x7$3.u[i$3];
          f$2($bC(arg1$20));
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_B(xs$3, 1)) {
        const x8$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$21 = x8$3.u[i$3];
          f$2(arg1$21);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_S(xs$3, 1)) {
        const x9$3 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$22 = x9$3.u[i$3];
          f$2(arg1$22);
          i$3 = ((1 + i$3) | 0)
        }
      } else if ($isArrayOf_Z(xs$3, 1)) {
        const x10$2 = xs$3;
        while ((i$3 < len$3)) {
          const arg1$23 = x10$2.u[i$3];
          f$2(arg1$23);
          i$3 = ((1 + i$3) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$3)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Dict)) {
      const x10$3 = expr;
      const xs$4 = x10$3.Ltigerpython_parser_ast_AstNode$Dict__f_keys;
      const f$3 = ((this$6$1) => ((key$2) => {
        const key = key$2;
        this$6$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(key)
      }))(this);
      const len$4 = xs$4.u.length;
      let i$4 = 0;
      if ((xs$4 !== null)) {
        while ((i$4 < len$4)) {
          const arg1$24 = xs$4.u[i$4];
          f$3(arg1$24);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_I(xs$4, 1)) {
        const x3$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$25 = x3$4.u[i$4];
          f$3(arg1$25);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_D(xs$4, 1)) {
        const x4$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$26 = x4$4.u[i$4];
          f$3(arg1$26);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_J(xs$4, 1)) {
        const x5$4 = xs$4;
        while ((i$4 < len$4)) {
          const t$3 = x5$4.u[i$4];
          const lo$3 = t$3.RTLong__f_lo;
          const hi$3 = t$3.RTLong__f_hi;
          f$3(new $c_RTLong(lo$3, hi$3));
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_F(xs$4, 1)) {
        const x6$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$27 = x6$4.u[i$4];
          f$3(arg1$27);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_C(xs$4, 1)) {
        const x7$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$28 = x7$4.u[i$4];
          f$3($bC(arg1$28));
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_B(xs$4, 1)) {
        const x8$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$29 = x8$4.u[i$4];
          f$3(arg1$29);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_S(xs$4, 1)) {
        const x9$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$30 = x9$4.u[i$4];
          f$3(arg1$30);
          i$4 = ((1 + i$4) | 0)
        }
      } else if ($isArrayOf_Z(xs$4, 1)) {
        const x10$4 = xs$4;
        while ((i$4 < len$4)) {
          const arg1$31 = x10$4.u[i$4];
          f$3(arg1$31);
          i$4 = ((1 + i$4) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$4)
      };
      const xs$5 = x10$3.Ltigerpython_parser_ast_AstNode$Dict__f_values;
      const f$4 = ((this$7$1) => ((value$2) => {
        const value = value$2;
        this$7$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(value)
      }))(this);
      const len$5 = xs$5.u.length;
      let i$5 = 0;
      if ((xs$5 !== null)) {
        while ((i$5 < len$5)) {
          const arg1$32 = xs$5.u[i$5];
          f$4(arg1$32);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_I(xs$5, 1)) {
        const x3$5 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$33 = x3$5.u[i$5];
          f$4(arg1$33);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_D(xs$5, 1)) {
        const x4$5 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$34 = x4$5.u[i$5];
          f$4(arg1$34);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_J(xs$5, 1)) {
        const x5$5 = xs$5;
        while ((i$5 < len$5)) {
          const t$4 = x5$5.u[i$5];
          const lo$4 = t$4.RTLong__f_lo;
          const hi$4 = t$4.RTLong__f_hi;
          f$4(new $c_RTLong(lo$4, hi$4));
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_F(xs$5, 1)) {
        const x6$5 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$35 = x6$5.u[i$5];
          f$4(arg1$35);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_C(xs$5, 1)) {
        const x7$5 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$36 = x7$5.u[i$5];
          f$4($bC(arg1$36));
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_B(xs$5, 1)) {
        const x8$5 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$37 = x8$5.u[i$5];
          f$4(arg1$37);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_S(xs$5, 1)) {
        const x9$5 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$38 = x9$5.u[i$5];
          f$4(arg1$38);
          i$5 = ((1 + i$5) | 0)
        }
      } else if ($isArrayOf_Z(xs$5, 1)) {
        const x10$5 = xs$5;
        while ((i$5 < len$5)) {
          const arg1$39 = x10$5.u[i$5];
          f$4(arg1$39);
          i$5 = ((1 + i$5) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$5)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$DictComp)) {
      const x11 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x11.Ltigerpython_parser_ast_AstNode$DictComp__f_key);
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x11.Ltigerpython_parser_ast_AstNode$DictComp__f_value);
      const xs$6 = x11.Ltigerpython_parser_ast_AstNode$DictComp__f_generators;
      const f$5 = ((this$8$1) => ((generator$2) => {
        const generator = generator$2;
        this$8$1.walkNode__Ltigerpython_parser_ast_AstNode__V(generator)
      }))(this);
      const len$6 = xs$6.u.length;
      let i$6 = 0;
      if ((xs$6 !== null)) {
        while ((i$6 < len$6)) {
          const arg1$40 = xs$6.u[i$6];
          f$5(arg1$40);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_I(xs$6, 1)) {
        const x3$6 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$41 = x3$6.u[i$6];
          f$5(arg1$41);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_D(xs$6, 1)) {
        const x4$6 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$42 = x4$6.u[i$6];
          f$5(arg1$42);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_J(xs$6, 1)) {
        const x5$6 = xs$6;
        while ((i$6 < len$6)) {
          const t$5 = x5$6.u[i$6];
          const lo$5 = t$5.RTLong__f_lo;
          const hi$5 = t$5.RTLong__f_hi;
          f$5(new $c_RTLong(lo$5, hi$5));
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_F(xs$6, 1)) {
        const x6$6 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$43 = x6$6.u[i$6];
          f$5(arg1$43);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_C(xs$6, 1)) {
        const x7$6 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$44 = x7$6.u[i$6];
          f$5($bC(arg1$44));
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_B(xs$6, 1)) {
        const x8$6 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$45 = x8$6.u[i$6];
          f$5(arg1$45);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_S(xs$6, 1)) {
        const x9$6 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$46 = x9$6.u[i$6];
          f$5(arg1$46);
          i$6 = ((1 + i$6) | 0)
        }
      } else if ($isArrayOf_Z(xs$6, 1)) {
        const x10$6 = xs$6;
        while ((i$6 < len$6)) {
          const arg1$47 = x10$6.u[i$6];
          f$5(arg1$47);
          i$6 = ((1 + i$6) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$6)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$List)) {
      const x12 = expr;
      const xs$7 = x12.Ltigerpython_parser_ast_AstNode$List__f_elements;
      const f$6 = ((this$9$1) => ((element$2) => {
        const element = element$2;
        this$9$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(element)
      }))(this);
      const len$7 = xs$7.u.length;
      let i$7 = 0;
      if ((xs$7 !== null)) {
        while ((i$7 < len$7)) {
          const arg1$48 = xs$7.u[i$7];
          f$6(arg1$48);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_I(xs$7, 1)) {
        const x3$7 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$49 = x3$7.u[i$7];
          f$6(arg1$49);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_D(xs$7, 1)) {
        const x4$7 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$50 = x4$7.u[i$7];
          f$6(arg1$50);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_J(xs$7, 1)) {
        const x5$7 = xs$7;
        while ((i$7 < len$7)) {
          const t$6 = x5$7.u[i$7];
          const lo$6 = t$6.RTLong__f_lo;
          const hi$6 = t$6.RTLong__f_hi;
          f$6(new $c_RTLong(lo$6, hi$6));
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_F(xs$7, 1)) {
        const x6$7 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$51 = x6$7.u[i$7];
          f$6(arg1$51);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_C(xs$7, 1)) {
        const x7$7 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$52 = x7$7.u[i$7];
          f$6($bC(arg1$52));
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_B(xs$7, 1)) {
        const x8$7 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$53 = x8$7.u[i$7];
          f$6(arg1$53);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_S(xs$7, 1)) {
        const x9$7 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$54 = x9$7.u[i$7];
          f$6(arg1$54);
          i$7 = ((1 + i$7) | 0)
        }
      } else if ($isArrayOf_Z(xs$7, 1)) {
        const x10$7 = xs$7;
        while ((i$7 < len$7)) {
          const arg1$55 = x10$7.u[i$7];
          f$6(arg1$55);
          i$7 = ((1 + i$7) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$7)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$ListComp)) {
      const x13 = expr;
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x13.Ltigerpython_parser_ast_AstNode$ListComp__f_elements);
      const xs$8 = x13.Ltigerpython_parser_ast_AstNode$ListComp__f_generators;
      const f$7 = ((this$10$1) => ((generator$3$2) => {
        const generator$3 = generator$3$2;
        this$10$1.walkNode__Ltigerpython_parser_ast_AstNode__V(generator$3)
      }))(this);
      const len$8 = xs$8.u.length;
      let i$8 = 0;
      if ((xs$8 !== null)) {
        while ((i$8 < len$8)) {
          const arg1$56 = xs$8.u[i$8];
          f$7(arg1$56);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_I(xs$8, 1)) {
        const x3$8 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$57 = x3$8.u[i$8];
          f$7(arg1$57);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_D(xs$8, 1)) {
        const x4$8 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$58 = x4$8.u[i$8];
          f$7(arg1$58);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_J(xs$8, 1)) {
        const x5$8 = xs$8;
        while ((i$8 < len$8)) {
          const t$7 = x5$8.u[i$8];
          const lo$7 = t$7.RTLong__f_lo;
          const hi$7 = t$7.RTLong__f_hi;
          f$7(new $c_RTLong(lo$7, hi$7));
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_F(xs$8, 1)) {
        const x6$8 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$59 = x6$8.u[i$8];
          f$7(arg1$59);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_C(xs$8, 1)) {
        const x7$8 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$60 = x7$8.u[i$8];
          f$7($bC(arg1$60));
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_B(xs$8, 1)) {
        const x8$8 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$61 = x8$8.u[i$8];
          f$7(arg1$61);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_S(xs$8, 1)) {
        const x9$8 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$62 = x9$8.u[i$8];
          f$7(arg1$62);
          i$8 = ((1 + i$8) | 0)
        }
      } else if ($isArrayOf_Z(xs$8, 1)) {
        const x10$8 = xs$8;
        while ((i$8 < len$8)) {
          const arg1$63 = x10$8.u[i$8];
          f$7(arg1$63);
          i$8 = ((1 + i$8) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$8)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Set)) {
      const x14 = expr;
      const xs$9 = x14.Ltigerpython_parser_ast_AstNode$Set__f_elements;
      const f$8 = ((this$11$1) => ((element$3$2) => {
        const element$3 = element$3$2;
        this$11$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(element$3)
      }))(this);
      const len$9 = xs$9.u.length;
      let i$9 = 0;
      if ((xs$9 !== null)) {
        while ((i$9 < len$9)) {
          const arg1$64 = xs$9.u[i$9];
          f$8(arg1$64);
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_I(xs$9, 1)) {
        const x3$9 = xs$9;
        while ((i$9 < len$9)) {
          const arg1$65 = x3$9.u[i$9];
          f$8(arg1$65);
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_D(xs$9, 1)) {
        const x4$9 = xs$9;
        while ((i$9 < len$9)) {
          const arg1$66 = x4$9.u[i$9];
          f$8(arg1$66);
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_J(xs$9, 1)) {
        const x5$9 = xs$9;
        while ((i$9 < len$9)) {
          const t$8 = x5$9.u[i$9];
          const lo$8 = t$8.RTLong__f_lo;
          const hi$8 = t$8.RTLong__f_hi;
          f$8(new $c_RTLong(lo$8, hi$8));
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_F(xs$9, 1)) {
        const x6$9 = xs$9;
        while ((i$9 < len$9)) {
          const arg1$67 = x6$9.u[i$9];
          f$8(arg1$67);
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_C(xs$9, 1)) {
        const x7$9 = xs$9;
        while ((i$9 < len$9)) {
          const arg1$68 = x7$9.u[i$9];
          f$8($bC(arg1$68));
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_B(xs$9, 1)) {
        const x8$9 = xs$9;
        while ((i$9 < len$9)) {
          const arg1$69 = x8$9.u[i$9];
          f$8(arg1$69);
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_S(xs$9, 1)) {
        const x9$9 = xs$9;
        while ((i$9 < len$9)) {
          const arg1$70 = x9$9.u[i$9];
          f$8(arg1$70);
          i$9 = ((1 + i$9) | 0)
        }
      } else if ($isArrayOf_Z(xs$9, 1)) {
        const x10$9 = xs$9;
        while ((i$9 < len$9)) {
          const arg1$71 = x10$9.u[i$9];
          f$8(arg1$71);
          i$9 = ((1 + i$9) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$9)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$SetComp)) {
      const x15 = expr;
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(x15.Ltigerpython_parser_ast_AstNode$SetComp__f_elements);
      const xs$10 = x15.Ltigerpython_parser_ast_AstNode$SetComp__f_generators;
      const f$9 = ((this$12$1) => ((generator$4$2) => {
        const generator$4 = generator$4$2;
        this$12$1.walkNode__Ltigerpython_parser_ast_AstNode__V(generator$4)
      }))(this);
      const len$10 = xs$10.u.length;
      let i$10 = 0;
      if ((xs$10 !== null)) {
        while ((i$10 < len$10)) {
          const arg1$72 = xs$10.u[i$10];
          f$9(arg1$72);
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_I(xs$10, 1)) {
        const x3$10 = xs$10;
        while ((i$10 < len$10)) {
          const arg1$73 = x3$10.u[i$10];
          f$9(arg1$73);
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_D(xs$10, 1)) {
        const x4$10 = xs$10;
        while ((i$10 < len$10)) {
          const arg1$74 = x4$10.u[i$10];
          f$9(arg1$74);
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_J(xs$10, 1)) {
        const x5$10 = xs$10;
        while ((i$10 < len$10)) {
          const t$9 = x5$10.u[i$10];
          const lo$9 = t$9.RTLong__f_lo;
          const hi$9 = t$9.RTLong__f_hi;
          f$9(new $c_RTLong(lo$9, hi$9));
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_F(xs$10, 1)) {
        const x6$10 = xs$10;
        while ((i$10 < len$10)) {
          const arg1$75 = x6$10.u[i$10];
          f$9(arg1$75);
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_C(xs$10, 1)) {
        const x7$10 = xs$10;
        while ((i$10 < len$10)) {
          const arg1$76 = x7$10.u[i$10];
          f$9($bC(arg1$76));
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_B(xs$10, 1)) {
        const x8$10 = xs$10;
        while ((i$10 < len$10)) {
          const arg1$77 = x8$10.u[i$10];
          f$9(arg1$77);
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_S(xs$10, 1)) {
        const x9$10 = xs$10;
        while ((i$10 < len$10)) {
          const arg1$78 = x9$10.u[i$10];
          f$9(arg1$78);
          i$10 = ((1 + i$10) | 0)
        }
      } else if ($isArrayOf_Z(xs$10, 1)) {
        const x10$10 = xs$10;
        while ((i$10 < len$10)) {
          const arg1$79 = x10$10.u[i$10];
          f$9(arg1$79);
          i$10 = ((1 + i$10) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$10)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript)) {
      const x16 = expr;
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x16.Ltigerpython_parser_ast_AstNode$Subscript__f_slice)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
      const x17 = expr;
      const xs$11 = x17.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
      const f$10 = ((this$13$1) => ((element$4$2) => {
        const element$4 = element$4$2;
        this$13$1.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(element$4)
      }))(this);
      const len$11 = xs$11.u.length;
      let i$11 = 0;
      if ((xs$11 !== null)) {
        while ((i$11 < len$11)) {
          const arg1$80 = xs$11.u[i$11];
          f$10(arg1$80);
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_I(xs$11, 1)) {
        const x3$11 = xs$11;
        while ((i$11 < len$11)) {
          const arg1$81 = x3$11.u[i$11];
          f$10(arg1$81);
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_D(xs$11, 1)) {
        const x4$11 = xs$11;
        while ((i$11 < len$11)) {
          const arg1$82 = x4$11.u[i$11];
          f$10(arg1$82);
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_J(xs$11, 1)) {
        const x5$11 = xs$11;
        while ((i$11 < len$11)) {
          const t$10 = x5$11.u[i$11];
          const lo$10 = t$10.RTLong__f_lo;
          const hi$10 = t$10.RTLong__f_hi;
          f$10(new $c_RTLong(lo$10, hi$10));
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_F(xs$11, 1)) {
        const x6$11 = xs$11;
        while ((i$11 < len$11)) {
          const arg1$83 = x6$11.u[i$11];
          f$10(arg1$83);
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_C(xs$11, 1)) {
        const x7$11 = xs$11;
        while ((i$11 < len$11)) {
          const arg1$84 = x7$11.u[i$11];
          f$10($bC(arg1$84));
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_B(xs$11, 1)) {
        const x8$11 = xs$11;
        while ((i$11 < len$11)) {
          const arg1$85 = x8$11.u[i$11];
          f$10(arg1$85);
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_S(xs$11, 1)) {
        const x9$11 = xs$11;
        while ((i$11 < len$11)) {
          const arg1$86 = x9$11.u[i$11];
          f$10(arg1$86);
          i$11 = ((1 + i$11) | 0)
        }
      } else if ($isArrayOf_Z(xs$11, 1)) {
        const x10$11 = xs$11;
        while ((i$11 < len$11)) {
          const arg1$87 = x10$11.u[i$11];
          f$10(arg1$87);
          i$11 = ((1 + i$11) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$11)
      }
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$YieldFrom)) {
      const x18 = expr;
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x18.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source)
    } else if ($is_Ltigerpython_parser_ast_AstNode$ExprWrapper(expr)) {
      this.walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(expr.expr__Ltigerpython_parser_ast_AstNode$Expression())
    }
  };
  walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(stmt) {
    matchEnd17: {
      if ((stmt === null)) {
        break matchEnd17
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment)) {
        const x3 = stmt;
        if ((this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptAssignment__Ltigerpython_parser_ast_AstNode$Assignment__Z(x3), true)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
          break matchEnd17
        }
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$AugAssign)) {
        const x4 = stmt;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptAugAssignment__Ltigerpython_parser_ast_AstNode$AugAssign__Z(x4)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
          break matchEnd17
        }
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Break)) {
        /*<skip>*/
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef)) {
        const x6 = stmt;
        this.Ltigerpython_parser_ast_AstWalker__f_visitor.enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(x6);
        $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
        this.Ltigerpython_parser_ast_AstWalker__f_visitor.leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(x6);
        break matchEnd17
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$For)) {
        /*<skip>*/
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
        const x8 = stmt;
        this.Ltigerpython_parser_ast_AstWalker__f_visitor.enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(x8);
        $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
        this.Ltigerpython_parser_ast_AstWalker__f_visitor.leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(x8);
        break matchEnd17
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
        /*<skip>*/
      };
      if ((((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Import) || ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFrom) || (stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ImportStar))) && this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptImport__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt))) {
        $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
        break matchEnd17
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Global)) {
        const x13 = stmt;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptGlobal__Ltigerpython_parser_ast_AstNode$Global__Z(x13)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
          break matchEnd17
        }
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Return)) {
        const x14 = stmt;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptReturn__Ltigerpython_parser_ast_AstNode$Return__Z(x14)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
          break matchEnd17
        }
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
        const x15 = stmt;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptWhile__Ltigerpython_parser_ast_AstNode$While__Z(x15)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt);
          break matchEnd17
        }
      };
      $p_Ltigerpython_parser_ast_AstWalker___walkStatementFields__Ltigerpython_parser_ast_AstNode$Statement__V(this, stmt)
    }
  };
  walkExpression__Ltigerpython_parser_ast_AstNode$Expression__V(expr) {
    matchEnd9: {
      if ((expr === null)) {
        break matchEnd9
      };
      if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
        const x3 = expr;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptAttribute__Ltigerpython_parser_ast_AstNode$Attribute__Z(x3)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(this, expr);
          break matchEnd9
        }
      };
      if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
        const x4 = expr;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptCall__Ltigerpython_parser_ast_AstNode$Call__Z(x4)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(this, expr);
          break matchEnd9
        }
      };
      if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const x5 = expr;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptName__Ltigerpython_parser_ast_AstNode$Name__Z(x5)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(this, expr);
          break matchEnd9
        }
      };
      if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript)) {
        const x6 = expr;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Z(x6)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(this, expr);
          break matchEnd9
        }
      };
      if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Yield)) {
        const x7 = expr;
        if (this.Ltigerpython_parser_ast_AstWalker__f_visitor.acceptYield__Ltigerpython_parser_ast_AstNode$Yield__Z(x7)) {
          $p_Ltigerpython_parser_ast_AstWalker___walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(this, expr);
          break matchEnd9
        }
      };
      $p_Ltigerpython_parser_ast_AstWalker___walkExpressionFields__Ltigerpython_parser_ast_AstNode$Expression__V(this, expr)
    }
  };
}
const $d_Ltigerpython_parser_ast_AstWalker = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstWalker: 0
}, false, "tigerpython.parser.ast.AstWalker", {
  Ltigerpython_parser_ast_AstWalker: 1,
  O: 1
});
$c_Ltigerpython_parser_ast_AstWalker.prototype.$classData = $d_Ltigerpython_parser_ast_AstWalker;
const $ct_Ltigerpython_parser_errormessages_ModifiableErrorMessages__ = (function($thiz) {
  $thiz.Ltigerpython_parser_errormessages_ModifiableErrorMessages__f_messages = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
  return $thiz
});
class $c_Ltigerpython_parser_errormessages_ModifiableErrorMessages extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_errormessages_ModifiableErrorMessages__f_messages = null
  };
  getMessage__s_Enumeration$Value__T(code) {
    const x1 = this.Ltigerpython_parser_errormessages_ModifiableErrorMessages__f_messages.get__O__s_Option(code);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const msg = x2.s_Some__f_value;
      return msg
    } else {
      const x = $m_s_None$();
      if ((x === x1)) {
        return this._getMessage__s_Enumeration$Value__T(code)
      } else {
        throw new $c_s_MatchError(x1)
      }
    }
  };
  setMessage__s_Enumeration$Value__T__V(code, msg) {
    if (((msg === null) || (msg === ""))) {
      this.Ltigerpython_parser_errormessages_ModifiableErrorMessages__f_messages.remove__O__s_Option(code)
    } else {
      const this$1 = this.Ltigerpython_parser_errormessages_ModifiableErrorMessages__f_messages;
      $p_scm_HashMap__put0__O__O__Z__s_Some(this$1, code, msg, false)
    }
  };
}
const $f_Ltigerpython_parser_errors_ErrorHandler__getAllErrors__ALtigerpython_parser_errors_ExtErrorInfo = (function($thiz) {
  const x1 = $thiz.getFirstError__s_Option();
  if ((x1 instanceof $c_s_Some)) {
    const x2 = x1;
    const item = x2.s_Some__f_value;
    return $makeNativeArrayWrapper($d_Ltigerpython_parser_errors_ExtErrorInfo.getArrayOf(), [item])
  } else {
    const x = $m_s_None$();
    if ((x === x1)) {
      const xs = $m_sci_Nil$();
      const len = xs.length__I();
      const array = $newArrayObject($d_Ltigerpython_parser_errors_ExtErrorInfo.getArrayOf(), [len]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i = 0;
      while (iterator.hasNext__Z()) {
        array.u[i] = iterator.next__O();
        i = ((1 + i) | 0)
      };
      return array
    } else {
      throw new $c_s_MatchError(x1)
    }
  }
});
class $c_Ltigerpython_parser_errors_ErrorTranslator$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_errors_ErrorTranslator$__f_errorTranslator = null;
    $n_Ltigerpython_parser_errors_ErrorTranslator$ = this;
    this.Ltigerpython_parser_errors_ErrorTranslator$__f_errorTranslator = $m_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$()
  };
}
const $d_Ltigerpython_parser_errors_ErrorTranslator$ = new $TypeData().initClass({
  Ltigerpython_parser_errors_ErrorTranslator$: 0
}, false, "tigerpython.parser.errors.ErrorTranslator$", {
  Ltigerpython_parser_errors_ErrorTranslator$: 1,
  O: 1
});
$c_Ltigerpython_parser_errors_ErrorTranslator$.prototype.$classData = $d_Ltigerpython_parser_errors_ErrorTranslator$;
let $n_Ltigerpython_parser_errors_ErrorTranslator$ = (void 0);
function $m_Ltigerpython_parser_errors_ErrorTranslator$() {
  if ((!$n_Ltigerpython_parser_errors_ErrorTranslator$)) {
    $n_Ltigerpython_parser_errors_ErrorTranslator$ = new $c_Ltigerpython_parser_errors_ErrorTranslator$()
  };
  return $n_Ltigerpython_parser_errors_ErrorTranslator$
}
const $ct_Ltigerpython_parser_lexer_CatCodes__ = (function($thiz) {
  $thiz.Ltigerpython_parser_lexer_CatCodes__f_values = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
  $thiz.Ltigerpython_parser_lexer_CatCodes__f_enableUnicodeAlpha = false;
  return $thiz
});
class $c_Ltigerpython_parser_lexer_CatCodes extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_lexer_CatCodes__f_values = null;
    this.Ltigerpython_parser_lexer_CatCodes__f_enableUnicodeAlpha = false
  };
  isUnicodeAlpha__C__Z(c) {
    if (this.Ltigerpython_parser_lexer_CatCodes__f_enableUnicodeAlpha) {
      const this$3 = $m_jl_Character$();
      return this$3.isLetter__I__Z(c)
    } else {
      return false
    }
  };
  apply__C__s_Enumeration$Value(c) {
    const this$2 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    const f = ((this$1, c$1) => (() => (((c$1 > 127) && this$1.isUnicodeAlpha__C__Z(c$1)) ? $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ALPHA : $m_Ltigerpython_parser_lexer_CatCodes$().apply__C__s_Enumeration$Value(c$1))))(this, c);
    const x = $objectGetClass(this$2);
    let $$x1;
    if ((!(x === $d_scm_HashMap.getClassOf()))) {
      const x1 = this$2.get__O__s_Option($bC(c));
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const v = x2.s_Some__f_value;
        $$x1 = v
      } else {
        const x$1 = $m_s_None$();
        if ((!(x$1 === x1))) {
          throw new $c_s_MatchError(x1)
        };
        $$x1 = f()
      }
    } else {
      const originalHash = $m_sr_Statics$().anyHash__O__I($bC(c));
      const hash = (originalHash ^ ((originalHash >>> 16) | 0));
      const x1$1 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[(hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0))];
      const nd = ((x1$1 === null) ? null : x1$1.findNode__O__I__scm_HashMap$Node($bC(c), hash));
      $$x1 = ((nd === null) ? f() : nd.scm_HashMap$Node__f__value)
    };
    return $$x1
  };
  isNewline__C__Z(c) {
    const x = this.apply__C__s_Enumeration$Value(c);
    const x$2 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE;
    return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
  };
  isWhitespace__C__Z(c) {
    const x = this.apply__C__s_Enumeration$Value(c);
    const x$2 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_WHITESPACE;
    return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
  };
}
class $c_Ltigerpython_parser_lexer_Lexer$NameInfo extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_refCount = 0;
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_callCount = 0;
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_listCount = 0;
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_dotCount = 0;
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_refCount = 0;
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_callCount = 0;
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_listCount = 0;
    this.Ltigerpython_parser_lexer_Lexer$NameInfo__f_dotCount = 0
  };
}
function $isArrayOf_Ltigerpython_parser_lexer_Lexer$NameInfo(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_lexer_Lexer$NameInfo)))
}
const $d_Ltigerpython_parser_lexer_Lexer$NameInfo = new $TypeData().initClass({
  Ltigerpython_parser_lexer_Lexer$NameInfo: 0
}, false, "tigerpython.parser.lexer.Lexer$NameInfo", {
  Ltigerpython_parser_lexer_Lexer$NameInfo: 1,
  O: 1
});
$c_Ltigerpython_parser_lexer_Lexer$NameInfo.prototype.$classData = $d_Ltigerpython_parser_lexer_Lexer$NameInfo;
const $p_Ltigerpython_parser_lexer_Scanner___apply__I__C = (function($thiz, absIndex) {
  return (((absIndex >= 0) && (absIndex < $dp_length__I($thiz.Ltigerpython_parser_lexer_Scanner__f_source))) ? $dp_charAt__I__C($thiz.Ltigerpython_parser_lexer_Scanner__f_source, absIndex) : 0)
});
const $p_Ltigerpython_parser_lexer_Scanner___isTripleChar__I__Z = (function($thiz, absIndex) {
  if (((absIndex >= 0) && (((2 + absIndex) | 0) < $dp_length__I($thiz.Ltigerpython_parser_lexer_Scanner__f_source)))) {
    const c = $dp_charAt__I__C($thiz.Ltigerpython_parser_lexer_Scanner__f_source, absIndex);
    return (($dp_charAt__I__C($thiz.Ltigerpython_parser_lexer_Scanner__f_source, ((1 + absIndex) | 0)) === c) && ($dp_charAt__I__C($thiz.Ltigerpython_parser_lexer_Scanner__f_source, ((2 + absIndex) | 0)) === c))
  } else {
    return false
  }
});
class $c_Ltigerpython_parser_lexer_Scanner extends $c_O {
  constructor(source) {
    super();
    this.Ltigerpython_parser_lexer_Scanner__f_source = null;
    this.Ltigerpython_parser_lexer_Scanner__f_catCodes = null;
    this.Ltigerpython_parser_lexer_Scanner__f__indentChar = 0;
    this.Ltigerpython_parser_lexer_Scanner__f__pos = 0;
    this.Ltigerpython_parser_lexer_Scanner__f_source = source;
    this.Ltigerpython_parser_lexer_Scanner__f_catCodes = new $c_Ltigerpython_parser_lexer_Scanner$$anon$1(this);
    this.Ltigerpython_parser_lexer_Scanner__f__indentChar = 0;
    this.Ltigerpython_parser_lexer_Scanner__f__pos = 0
  };
  remaining__I() {
    return (($dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source) - this.Ltigerpython_parser_lexer_Scanner__f__pos) | 0)
  };
  apply__I__C(index) {
    return $p_Ltigerpython_parser_lexer_Scanner___apply__I__C(this, ((this.Ltigerpython_parser_lexer_Scanner__f__pos + index) | 0))
  };
  asLower__I__C(index) {
    const c = $p_Ltigerpython_parser_lexer_Scanner___apply__I__C(this, ((this.Ltigerpython_parser_lexer_Scanner__f__pos + index) | 0));
    return $m_jl_Character$().toLowerCase__C__C(c)
  };
  testChar__I__sci_Seq__Z(index, chars) {
    return chars.contains__O__Z($bC($p_Ltigerpython_parser_lexer_Scanner___apply__I__C(this, ((this.Ltigerpython_parser_lexer_Scanner__f__pos + index) | 0))))
  };
  consume__I__I(count) {
    const result = this.Ltigerpython_parser_lexer_Scanner__f__pos;
    const x = ((this.Ltigerpython_parser_lexer_Scanner__f__pos + count) | 0);
    const that = ((1 + $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source)) | 0);
    this.Ltigerpython_parser_lexer_Scanner__f__pos = ((x < that) ? x : that);
    return result
  };
  consumeLineBreak__Z() {
    const len = (((this.apply__I__C(0) === 13) && (this.apply__I__C(1) === 10)) ? 2 : (((this.apply__I__C(0) === 10) || (this.apply__I__C(0) === 13)) ? 1 : 0));
    this.Ltigerpython_parser_lexer_Scanner__f__pos = ((this.Ltigerpython_parser_lexer_Scanner__f__pos + len) | 0);
    return (len > 0)
  };
  isFloatExponent__I__Z(index) {
    if ((this.asLower__I__C(index) === 101)) {
      const c = this.apply__I__C(((1 + index) | 0));
      let $$x1;
      if (((c === 43) || (c === 45))) {
        const c$1 = this.apply__I__C(((2 + index) | 0));
        const this$3 = $m_jl_Character$();
        $$x1 = this$3.isDigit__I__Z(c$1)
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return true
      } else {
        const this$6 = $m_jl_Character$();
        return this$6.isDigit__I__Z(c)
      }
    } else {
      return false
    }
  };
  isTripleChar__I__Z(index) {
    return $p_Ltigerpython_parser_lexer_Scanner___isTripleChar__I__Z(this, ((this.Ltigerpython_parser_lexer_Scanner__f__pos + index) | 0))
  };
  peekString__I__I__T(index, len) {
    const x = ((this.Ltigerpython_parser_lexer_Scanner__f__pos + index) | 0);
    const start = ((x > 0) ? x : 0);
    const x$1 = ((((this.Ltigerpython_parser_lexer_Scanner__f__pos + index) | 0) + len) | 0);
    const that = $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source);
    const stop = ((x$1 < that) ? x$1 : that);
    return $dp_toString__T($dp_subSequence__I__I__jl_CharSequence(this.Ltigerpython_parser_lexer_Scanner__f_source, start, stop))
  };
  getString__I__I__T(absPos, len) {
    const start = ((absPos > 0) ? absPos : 0);
    const x = ((absPos + len) | 0);
    const that = $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source);
    const stop = ((x < that) ? x : that);
    return $dp_toString__T($dp_subSequence__I__I__jl_CharSequence(this.Ltigerpython_parser_lexer_Scanner__f_source, start, stop))
  };
  getStringLiteral__I__I__T(absPos, len) {
    const input = this.getString__I__I__T(absPos, len);
    if (((input === null) || (input === ""))) {
      return input
    };
    const delimiter = (65535 & (input.charCodeAt(0) | 0));
    const result = $ct_scm_StringBuilder__I__T__(new $c_scm_StringBuilder(), (input.length | 0), "");
    let i = 0;
    while ((i < (input.length | 0))) {
      const i$1 = i;
      if (((65535 & (input.charCodeAt(i$1) | 0)) === 92)) {
        i = ((1 + i) | 0);
        if ((i < (input.length | 0))) {
          const i$2 = i;
          const x1 = (65535 & (input.charCodeAt(i$2) | 0));
          if ((x1 === 98)) {
            result.addOne__C__scm_StringBuilder(8)
          } else if ((x1 === 102)) {
            result.addOne__C__scm_StringBuilder(12)
          } else if ((x1 === 110)) {
            result.addOne__C__scm_StringBuilder(10)
          } else if ((x1 === 114)) {
            result.addOne__C__scm_StringBuilder(13)
          } else if ((x1 === 116)) {
            result.addOne__C__scm_StringBuilder(9)
          } else {
            let $$x1;
            if ((x1 === 13)) {
              if ((((1 + i) | 0) < (input.length | 0))) {
                const i$3 = ((1 + i) | 0);
                $$x1 = ((65535 & (input.charCodeAt(i$3) | 0)) === 10)
              } else {
                $$x1 = false
              }
            } else {
              $$x1 = false
            };
            if ($$x1) {
              i = ((1 + i) | 0)
            } else if ((!((x1 === 10) || (x1 === 13)))) {
              if (((x1 === 92) || ((x1 === 39) || (x1 === 34)))) {
                result.addOne__C__scm_StringBuilder(x1)
              } else {
                result.addOne__C__scm_StringBuilder(63)
              }
            }
          }
        }
      } else {
        const i$4 = i;
        if (((65535 & (input.charCodeAt(i$4) | 0)) !== delimiter)) {
          const i$5 = i;
          const elem = (65535 & (input.charCodeAt(i$5) | 0));
          result.addOne__C__scm_StringBuilder(elem)
        }
      };
      i = ((1 + i) | 0)
    };
    return result.scm_StringBuilder__f_underlying.jl_StringBuilder__f_java$lang$StringBuilder$$content
  };
  prefixLength__s_Enumeration$Value__I__I(cc, startIndex) {
    const x = ((this.Ltigerpython_parser_lexer_Scanner__f__pos + startIndex) | 0);
    const start = ((x > 0) ? x : 0);
    let i = start;
    while (true) {
      let $$x1;
      if ((i < $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source))) {
        const x$1 = this.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i));
        $$x1 = ((x$1 === null) ? (cc === null) : x$1.equals__O__Z(cc))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        i = ((1 + i) | 0)
      } else {
        break
      }
    };
    return ((i - start) | 0)
  };
  prefixLength__s_Enumeration$Value__s_Enumeration$Value__I__I(cc1, cc2, startIndex) {
    const x = ((this.Ltigerpython_parser_lexer_Scanner__f__pos + startIndex) | 0);
    const start = ((x > 0) ? x : 0);
    let i = start;
    while (true) {
      let $$x1;
      if ((i < $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source))) {
        const cc = this.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i));
        $$x1 = (((cc === null) ? (cc1 === null) : cc.equals__O__Z(cc1)) || ((cc === null) ? (cc2 === null) : cc.equals__O__Z(cc2)))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        i = ((1 + i) | 0)
      } else {
        break
      }
    };
    return ((i - start) | 0)
  };
  suffixLength__I__sci_Seq__I(startIndex, ccs) {
    const x = ((this.Ltigerpython_parser_lexer_Scanner__f__pos + startIndex) | 0);
    const start = ((x > 0) ? x : 0);
    let i = (((-1) + start) | 0);
    while (true) {
      let $$x1;
      if ((i > 0)) {
        const cc = this.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i));
        $$x1 = ccs.contains__O__Z(cc)
      } else {
        $$x1 = false
      };
      if ($$x1) {
        i = (((-1) + i) | 0)
      } else {
        break
      }
    };
    return (((((-1) + start) | 0) - i) | 0)
  };
  getIndentationCharIfConsistent__I__C(len) {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      if ((len > 0)) {
        if ((this.Ltigerpython_parser_lexer_Scanner__f__indentChar === 0)) {
          this.Ltigerpython_parser_lexer_Scanner__f__indentChar = $dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, this.Ltigerpython_parser_lexer_Scanner__f__pos)
        };
        const ch = this.Ltigerpython_parser_lexer_Scanner__f__indentChar;
        const isEmpty = (len <= 0);
        const scala$collection$immutable$Range$$lastElement = (((-1) + len) | 0);
        if ((!isEmpty)) {
          let i = 0;
          while (true) {
            const v1 = i;
            if (($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, ((this.Ltigerpython_parser_lexer_Scanner__f__pos + v1) | 0)) !== ch)) {
              throw new $c_sr_NonLocalReturnControl$mcC$sp(nonLocalReturnKey1, 0)
            };
            if ((i === scala$collection$immutable$Range$$lastElement)) {
              break
            };
            i = ((1 + i) | 0)
          }
        };
        return ch
      } else {
        return 32
      }
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          return ex.value$mcC$sp__C()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  skipLine__V() {
    const x = this.Ltigerpython_parser_lexer_Scanner__f__pos;
    const start = ((x > 0) ? x : 0);
    let i = start;
    while (true) {
      let $$x1;
      if ((i < $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source))) {
        const arg1 = $dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i);
        const x$1 = this.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value(arg1);
        const x$2 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE;
        $$x1 = (!((x$1 === null) ? (x$2 === null) : x$1.equals__O__Z(x$2)))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        i = ((1 + i) | 0)
      } else {
        break
      }
    };
    const len = ((i - start) | 0);
    this.consume__I__I(len)
  };
  isFollowingIndentation__Z() {
    let i = (((-1) + this.Ltigerpython_parser_lexer_Scanner__f__pos) | 0);
    while (((i >= 0) && (!this.Ltigerpython_parser_lexer_Scanner__f_catCodes.isNewline__C__Z($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i))))) {
      if (this.Ltigerpython_parser_lexer_Scanner__f_catCodes.isWhitespace__C__Z($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i))) {
        i = (((-1) + i) | 0)
      } else {
        return false
      }
    };
    return true
  };
  peekNonWhiteChar__C() {
    let i = this.Ltigerpython_parser_lexer_Scanner__f__pos;
    while (((i < $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source)) && this.Ltigerpython_parser_lexer_Scanner__f_catCodes.isWhitespace__C__Z($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i)))) {
      i = ((1 + i) | 0)
    };
    return ((i < $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source)) ? $dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i) : 0)
  };
  lineFromPosition__I__I(position) {
    if (((position >= 0) && (position <= $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source)))) {
      let result = 0;
      let i = 0;
      while ((i < position)) {
        if (($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i) === 10)) {
          result = ((1 + result) | 0)
        };
        i = ((1 + i) | 0)
      };
      return result
    } else {
      return 0
    }
  };
  lineOffsetFromPosition__I__I(position) {
    if (((position >= 0) && (position <= $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source)))) {
      let i = (((-1) + position) | 0);
      while (true) {
        let $$x1;
        if ((i >= 0)) {
          const c = $dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i);
          $$x1 = (!((c === 10) || (c === 13)))
        } else {
          $$x1 = false
        };
        if ($$x1) {
          i = (((-1) + i) | 0)
        } else {
          break
        }
      };
      return ((position - ((1 + i) | 0)) | 0)
    } else {
      return 0
    }
  };
  isCompoundStatement__I__Z(position) {
    if ((position >= 0)) {
      let i = position;
      while (true) {
        let $$x1;
        if ((i < $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source))) {
          const c = $dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i);
          const this$3 = $m_jl_Character$();
          $$x1 = this$3.isLowerCase__I__Z(c)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          i = ((1 + i) | 0)
        } else {
          break
        }
      };
      let $$x2;
      if ((i < $dp_length__I(this.Ltigerpython_parser_lexer_Scanner__f_source))) {
        const c$1 = $dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i);
        const this$6 = $m_jl_Character$();
        $$x2 = (!this$6.isLetterOrDigit__I__Z(c$1))
      } else {
        $$x2 = false
      };
      if (($$x2 && ($dp_charAt__I__C(this.Ltigerpython_parser_lexer_Scanner__f_source, i) !== 95))) {
        const word = $dp_toString__T($dp_subSequence__I__I__jl_CharSequence(this.Ltigerpython_parser_lexer_Scanner__f_source, position, i));
        const this$10 = $m_s_Predef$().s_Predef$__f_Set;
        const array = ["def", "if", "while", "for", "with", "class"];
        const elems = new $c_sjsr_WrappedVarArgs(array);
        return this$10.from__sc_IterableOnce__sci_Set(elems).contains__O__Z(word)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
const $d_Ltigerpython_parser_lexer_Scanner = new $TypeData().initClass({
  Ltigerpython_parser_lexer_Scanner: 0
}, false, "tigerpython.parser.lexer.Scanner", {
  Ltigerpython_parser_lexer_Scanner: 1,
  O: 1
});
$c_Ltigerpython_parser_lexer_Scanner.prototype.$classData = $d_Ltigerpython_parser_lexer_Scanner;
class $c_Ltigerpython_parser_lexer_TokenType extends $c_O {
  constructor(category, name) {
    super();
    this.Ltigerpython_parser_lexer_TokenType__f_category = 0;
    this.Ltigerpython_parser_lexer_TokenType__f_name = null;
    this.Ltigerpython_parser_lexer_TokenType__f_category = category;
    this.Ltigerpython_parser_lexer_TokenType__f_name = name
  };
  isLeftBracket__Z() {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
    const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
    return $f_sc_SeqOps__contains__O__Z(tokenTypes, this)
  };
  isRightBracket__Z() {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
    const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
    return $f_sc_SeqOps__contains__O__Z(tokenTypes, this)
  };
  isCompoundKeyword__Z() {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WITH];
    const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
    return $f_sc_SeqOps__contains__O__Z(tokenTypes, this)
  };
  toString__T() {
    return this.Ltigerpython_parser_lexer_TokenType__f_name
  };
}
function $isArrayOf_Ltigerpython_parser_lexer_TokenType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_lexer_TokenType)))
}
const $d_Ltigerpython_parser_lexer_TokenType = new $TypeData().initClass({
  Ltigerpython_parser_lexer_TokenType: 0
}, false, "tigerpython.parser.lexer.TokenType", {
  Ltigerpython_parser_lexer_TokenType: 1,
  O: 1
});
$c_Ltigerpython_parser_lexer_TokenType.prototype.$classData = $d_Ltigerpython_parser_lexer_TokenType;
const $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType = (function($thiz, category, name) {
  const result = new $c_Ltigerpython_parser_lexer_TokenType(category, name);
  const this$1 = $thiz.Ltigerpython_parser_lexer_TokenType$__f_values;
  $p_scm_HashMap__put0__O__O__Z__s_Some(this$1, name, result, false);
  if ((category === $thiz.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD)) {
    const this$2 = $thiz.Ltigerpython_parser_lexer_TokenType$__f_keywords;
    this$2.addOne__O__scm_ArrayBuffer(name)
  };
  return result
});
class $c_Ltigerpython_parser_lexer_TokenType$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_lexer_TokenType$__f_values = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_keywords = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_CARET = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_INDENTATION = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_NAME = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_NEWLINE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ARROW = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_AND = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_AND_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_OR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_OR_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_NOT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_COLON = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_COMMA = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DEC = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DIV = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DIV_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DOT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_STAR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_EQ = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_GEQ = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_GREATER = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_INC = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_INT_DIV = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_INT_DIV_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_LEQ = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_LESS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_MAT_MUL = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_MAT_MUL_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_MUL = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_MINUS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_MOD = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_MOD_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_MUL_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_NEQ = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_PLUS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_POWER = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_POWER_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_REPR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT_ASSIGN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_STAR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BOOL = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_COMPLEX = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_FLOAT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_INT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_LONG = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_STR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_UNICODE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_AND = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_AS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ASYNC = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ASSERT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_AWAIT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_BREAK = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_CLASS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_CONTINUE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DEF = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DEL = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ELIF = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_ELSE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_EXCEPT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_EXEC = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_FALSE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_FINALLY = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_FOR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_FROM = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_GLOBAL = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_IF = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_IMPORT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_IN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_IS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_LAMBDA = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_NONE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_NONLOCAL = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_NOT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_OR = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_PASS = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_PRINT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_RAISE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_REPEAT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_RETURN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_TRUE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_TRY = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_WHILE = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_WITH = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_YIELD = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_NOT_IN = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_IS_NOT = null;
    this.Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_ARROW = null;
    $n_Ltigerpython_parser_lexer_TokenType$ = this;
    this.Ltigerpython_parser_lexer_TokenType$__f_values = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    this.Ltigerpython_parser_lexer_TokenType$__f_keywords = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY = 0;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR = 1;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT = 2;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR = 3;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD = 4;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER = 6;
    this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL = 7;
    this.Ltigerpython_parser_lexer_TokenType$__f_CARET = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY, "<caret>");
    this.Ltigerpython_parser_lexer_TokenType$__f_INDENTATION = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY, "<indent>");
    this.Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY, "<invalid>");
    this.Ltigerpython_parser_lexer_TokenType$__f_NAME = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY, "<name>");
    this.Ltigerpython_parser_lexer_TokenType$__f_NEWLINE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY, "<newline>");
    this.Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "@");
    this.Ltigerpython_parser_lexer_TokenType$__f_ARROW = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, "->");
    this.Ltigerpython_parser_lexer_TokenType$__f_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "=");
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_AND = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "&");
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_AND_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "&=");
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_OR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "|");
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_OR_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "|=");
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_NOT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "~");
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "^");
    this.Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "^=");
    this.Ltigerpython_parser_lexer_TokenType$__f_COLON = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, ":");
    this.Ltigerpython_parser_lexer_TokenType$__f_COMMA = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, ",");
    this.Ltigerpython_parser_lexer_TokenType$__f_DEC = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "-=");
    this.Ltigerpython_parser_lexer_TokenType$__f_DIV = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "/");
    this.Ltigerpython_parser_lexer_TokenType$__f_DIV_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "/=");
    this.Ltigerpython_parser_lexer_TokenType$__f_DOT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, ".");
    this.Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_STAR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "**");
    this.Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY, "...");
    this.Ltigerpython_parser_lexer_TokenType$__f_EQ = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, "==");
    this.Ltigerpython_parser_lexer_TokenType$__f_GEQ = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, ">=");
    this.Ltigerpython_parser_lexer_TokenType$__f_GREATER = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, ">");
    this.Ltigerpython_parser_lexer_TokenType$__f_INC = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "+=");
    this.Ltigerpython_parser_lexer_TokenType$__f_INT_DIV = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "//");
    this.Ltigerpython_parser_lexer_TokenType$__f_INT_DIV_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "//=");
    this.Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, "{");
    this.Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, "[");
    this.Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, "(");
    this.Ltigerpython_parser_lexer_TokenType$__f_LEQ = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, "<=");
    this.Ltigerpython_parser_lexer_TokenType$__f_LESS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, "<");
    this.Ltigerpython_parser_lexer_TokenType$__f_MAT_MUL = this.Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION;
    this.Ltigerpython_parser_lexer_TokenType$__f_MAT_MUL_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "@=");
    this.Ltigerpython_parser_lexer_TokenType$__f_MUL = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "*");
    this.Ltigerpython_parser_lexer_TokenType$__f_MINUS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "-");
    this.Ltigerpython_parser_lexer_TokenType$__f_MOD = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "%");
    this.Ltigerpython_parser_lexer_TokenType$__f_MOD_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "%=");
    this.Ltigerpython_parser_lexer_TokenType$__f_MUL_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "*=");
    this.Ltigerpython_parser_lexer_TokenType$__f_NEQ = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, "!=");
    this.Ltigerpython_parser_lexer_TokenType$__f_PLUS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "+");
    this.Ltigerpython_parser_lexer_TokenType$__f_POWER = this.Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_STAR;
    this.Ltigerpython_parser_lexer_TokenType$__f_POWER_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "**=");
    this.Ltigerpython_parser_lexer_TokenType$__f_REPR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "`");
    this.Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, "}");
    this.Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, "]");
    this.Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, ")");
    this.Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_DELIMITER, ";");
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, "<<");
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, "<<=");
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR, ">>");
    this.Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT_ASSIGN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT, ">>=");
    this.Ltigerpython_parser_lexer_TokenType$__f_STAR = this.Ltigerpython_parser_lexer_TokenType$__f_MUL;
    this.Ltigerpython_parser_lexer_TokenType$__f_BOOL = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<bool>");
    this.Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<bytearray>");
    this.Ltigerpython_parser_lexer_TokenType$__f_COMPLEX = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<complex>");
    this.Ltigerpython_parser_lexer_TokenType$__f_FLOAT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<float>");
    this.Ltigerpython_parser_lexer_TokenType$__f_INT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<int>");
    this.Ltigerpython_parser_lexer_TokenType$__f_LONG = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<long>");
    this.Ltigerpython_parser_lexer_TokenType$__f_STR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<str>");
    this.Ltigerpython_parser_lexer_TokenType$__f_UNICODE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL, "<unicode>");
    this.Ltigerpython_parser_lexer_TokenType$__f_AND = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "and");
    this.Ltigerpython_parser_lexer_TokenType$__f_AS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "as");
    this.Ltigerpython_parser_lexer_TokenType$__f_ASYNC = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "async");
    this.Ltigerpython_parser_lexer_TokenType$__f_ASSERT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "assert");
    this.Ltigerpython_parser_lexer_TokenType$__f_AWAIT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "await");
    this.Ltigerpython_parser_lexer_TokenType$__f_BREAK = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "break");
    this.Ltigerpython_parser_lexer_TokenType$__f_CLASS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "class");
    this.Ltigerpython_parser_lexer_TokenType$__f_CONTINUE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "continue");
    this.Ltigerpython_parser_lexer_TokenType$__f_DEF = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "def");
    this.Ltigerpython_parser_lexer_TokenType$__f_DEL = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "del");
    this.Ltigerpython_parser_lexer_TokenType$__f_ELIF = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "elif");
    this.Ltigerpython_parser_lexer_TokenType$__f_ELSE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "else");
    this.Ltigerpython_parser_lexer_TokenType$__f_EXCEPT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "except");
    this.Ltigerpython_parser_lexer_TokenType$__f_EXEC = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "exec");
    this.Ltigerpython_parser_lexer_TokenType$__f_FALSE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "False");
    this.Ltigerpython_parser_lexer_TokenType$__f_FINALLY = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "finally");
    this.Ltigerpython_parser_lexer_TokenType$__f_FOR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "for");
    this.Ltigerpython_parser_lexer_TokenType$__f_FROM = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "from");
    this.Ltigerpython_parser_lexer_TokenType$__f_GLOBAL = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "global");
    this.Ltigerpython_parser_lexer_TokenType$__f_IF = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "if");
    this.Ltigerpython_parser_lexer_TokenType$__f_IMPORT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "import");
    this.Ltigerpython_parser_lexer_TokenType$__f_IN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "in");
    this.Ltigerpython_parser_lexer_TokenType$__f_IS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "is");
    this.Ltigerpython_parser_lexer_TokenType$__f_LAMBDA = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "lambda");
    this.Ltigerpython_parser_lexer_TokenType$__f_NONE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "None");
    this.Ltigerpython_parser_lexer_TokenType$__f_NONLOCAL = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "nonlocal");
    this.Ltigerpython_parser_lexer_TokenType$__f_NOT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "not");
    this.Ltigerpython_parser_lexer_TokenType$__f_OR = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "or");
    this.Ltigerpython_parser_lexer_TokenType$__f_PASS = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "pass");
    this.Ltigerpython_parser_lexer_TokenType$__f_PRINT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "print");
    this.Ltigerpython_parser_lexer_TokenType$__f_RAISE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "raise");
    this.Ltigerpython_parser_lexer_TokenType$__f_REPEAT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "repeat");
    this.Ltigerpython_parser_lexer_TokenType$__f_RETURN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "return");
    this.Ltigerpython_parser_lexer_TokenType$__f_TRUE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "True");
    this.Ltigerpython_parser_lexer_TokenType$__f_TRY = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "try");
    this.Ltigerpython_parser_lexer_TokenType$__f_WHILE = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "while");
    this.Ltigerpython_parser_lexer_TokenType$__f_WITH = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "with");
    this.Ltigerpython_parser_lexer_TokenType$__f_YIELD = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD, "yield");
    this.Ltigerpython_parser_lexer_TokenType$__f_NOT_IN = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, "not in");
    this.Ltigerpython_parser_lexer_TokenType$__f_IS_NOT = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_COMPARATOR, "is not");
    this.Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_ARROW = $p_Ltigerpython_parser_lexer_TokenType$__Value__I__T__Ltigerpython_parser_lexer_TokenType(this, this.Ltigerpython_parser_lexer_TokenType$__f_TYPE_ANY, "=>")
  };
  getKeywords__AT() {
    const this$2 = this.Ltigerpython_parser_lexer_TokenType$__f_keywords;
    if ((this$2.scm_ArrayBuffer__f_size0 >= 0)) {
      const len = this$2.scm_ArrayBuffer__f_size0;
      const destination = $newArrayObject($d_T.getArrayOf(), [len]);
      this$2.copyToArray__O__I__I__I(destination, 0, this$2.scm_ArrayBuffer__f_size0);
      return destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const this$5 = new $c_scm_ArrayBufferView(this$2.scm_ArrayBuffer__f_array, this$2.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$5);
      while (it.hasNext__Z()) {
        const elem = it.next__O();
        const unboxedElem = ((elem === null) ? null : elem);
        jsElems.push(unboxedElem)
      };
      return $makeNativeArrayWrapper($d_T.getArrayOf(), jsElems)
    }
  };
  fromString__T__Ltigerpython_parser_lexer_TokenType(s) {
    try {
      return this.Ltigerpython_parser_lexer_TokenType$__f_values.apply__O__O(s)
    } catch (e) {
      if ((e instanceof $c_ju_NoSuchElementException)) {
        return this.Ltigerpython_parser_lexer_TokenType$__f_NAME
      } else {
        throw e
      }
    }
  };
  findOperator__T__T2(op) {
    while (true) {
      try {
        const this$1 = op;
        const $$x1 = this$1.length;
        const name = op;
        return $ct_T2__O__O__(new $c_T2(), ($$x1 | 0), this.Ltigerpython_parser_lexer_TokenType$__f_values.apply__O__O(name))
      } catch (e) {
        if ((e instanceof $c_ju_NoSuchElementException)) {
          const this$2 = op;
          if (((this$2.length | 0) > 1)) {
            const $$x2 = $m_sc_StringOps$();
            const x = op;
            op = $$x2.dropRight$extension__T__I__T(x, 1)
          } else {
            return $ct_T2__O__O__(new $c_T2(), 1, this.Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR)
          }
        } else {
          throw e
        }
      }
    }
  };
  getStringDistance__T__T__I(s1, s2) {
    const t1 = s1.toLowerCase();
    const t2 = s2.toLowerCase();
    if ((t1 !== t2)) {
      let result = 0;
      let i = 0;
      let j = 0;
      while (((i < (t1.length | 0)) && (j < (t2.length | 0)))) {
        const i$1 = i;
        const $$x1 = t1.charCodeAt(i$1);
        const i$2 = j;
        if (((65535 & ($$x1 | 0)) !== (65535 & (t2.charCodeAt(i$2) | 0)))) {
          result = ((1 + result) | 0);
          let $$x2;
          if (((((1 + i) | 0) < (t1.length | 0)) && (((1 + j) | 0) < (t2.length | 0)))) {
            const i$3 = ((1 + i) | 0);
            const $$x3 = t1.charCodeAt(i$3);
            const i$4 = ((1 + j) | 0);
            $$x2 = ((65535 & ($$x3 | 0)) === (65535 & (t2.charCodeAt(i$4) | 0)))
          } else {
            $$x2 = false
          };
          if ($$x2) {
            i = ((1 + i) | 0);
            j = ((1 + j) | 0)
          } else {
            let $$x5;
            if (((((1 + i) | 0) < (t1.length | 0)) && (((1 + j) | 0) < (t2.length | 0)))) {
              const i$5 = i;
              const $$x6 = t1.charCodeAt(i$5);
              const i$6 = ((1 + j) | 0);
              $$x5 = ((65535 & ($$x6 | 0)) === (65535 & (t2.charCodeAt(i$6) | 0)))
            } else {
              $$x5 = false
            };
            let $$x4;
            if ($$x5) {
              const i$7 = ((1 + i) | 0);
              const $$x7 = t1.charCodeAt(i$7);
              const i$8 = j;
              $$x4 = ((65535 & ($$x7 | 0)) === (65535 & (t2.charCodeAt(i$8) | 0)))
            } else {
              $$x4 = false
            };
            if ($$x4) {
              i = ((2 + i) | 0);
              j = ((2 + j) | 0)
            } else {
              let $$x8;
              if ((((1 + i) | 0) < (t1.length | 0))) {
                const i$9 = ((1 + i) | 0);
                const $$x9 = t1.charCodeAt(i$9);
                const i$10 = j;
                $$x8 = ((65535 & ($$x9 | 0)) === (65535 & (t2.charCodeAt(i$10) | 0)))
              } else {
                $$x8 = false
              };
              if (($$x8 && ((t1.length | 0) > (t2.length | 0)))) {
                i = ((1 + i) | 0)
              } else {
                let $$x10;
                if ((((1 + j) | 0) < (t2.length | 0))) {
                  const i$11 = i;
                  const $$x11 = t1.charCodeAt(i$11);
                  const i$12 = ((1 + j) | 0);
                  $$x10 = ((65535 & ($$x11 | 0)) === (65535 & (t2.charCodeAt(i$12) | 0)))
                } else {
                  $$x10 = false
                };
                if (($$x10 && ((t1.length | 0) < (t2.length | 0)))) {
                  j = ((1 + j) | 0)
                } else if (((((1 + i) | 0) === (t1.length | 0)) && (((1 + j) | 0) === (t2.length | 0)))) {
                  return result
                } else {
                  return 2147483647
                }
              }
            }
          }
        } else {
          i = ((1 + i) | 0);
          j = ((1 + j) | 0)
        }
      };
      const delta = (((((t1.length | 0) - i) | 0) + (((t2.length | 0) - j) | 0)) | 0);
      return ((result + $imul(delta, delta)) | 0)
    } else {
      return 0
    }
  };
  isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(token, keyword) {
    let $$x1;
    if ((token !== null)) {
      const x = token.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const d = this.getStringDistance__T__T__I(token.Ltigerpython_parser_lexer_Token__f_value, keyword.Ltigerpython_parser_lexer_TokenType__f_name);
      return (d <= 1)
    } else {
      return false
    }
  };
  getPossibleKeywordForName__T__sci_Seq__s_Option(name, suggestions) {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      if ((!suggestions.isEmpty__Z())) {
        suggestions.foreach__F1__V(new $c_sjsr_AnonFunction1(((this$1, name$1, nonLocalReturnKey1$1) => ((suggestion$2) => {
          const suggestion = suggestion$2;
          if (((suggestion !== null) && ($m_Ltigerpython_parser_lexer_TokenType$().getStringDistance__T__T__I(suggestion.Ltigerpython_parser_lexer_TokenType__f_name, name$1) <= 1))) {
            throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1$1, new $c_s_Some(suggestion))
          }
        }))(this, name, nonLocalReturnKey1)))
      };
      const result = new $c_sr_ObjectRef(null);
      const xs = $m_Ltigerpython_parser_lexer_TokenType$().getKeywords__AT();
      const f = ((this$2$1, name$2, nonLocalReturnKey1$2, result$1) => ((keyword$2) => {
        const keyword = keyword$2;
        const x1 = $m_Ltigerpython_parser_lexer_TokenType$().getStringDistance__T__T__I(keyword, name$2);
        switch (x1) {
          case 0: {
            const this$4 = $m_Ltigerpython_parser_lexer_TokenType$();
            throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1$2, new $c_s_Some(this$4.Ltigerpython_parser_lexer_TokenType$__f_values.apply__O__O(keyword)));
            break
          }
          case 1: {
            if ((result$1.sr_ObjectRef__f_elem === null)) {
              result$1.sr_ObjectRef__f_elem = keyword
            } else {
              throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1$2, $m_s_None$())
            };
            break
          }
        }
      }))(this, name, nonLocalReturnKey1, result);
      const len = xs.u.length;
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const arg1 = xs.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i < len)) {
          const arg1$1 = x3.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      };
      if ((result.sr_ObjectRef__f_elem !== null)) {
        const this$6 = $m_Ltigerpython_parser_lexer_TokenType$();
        const name$3 = result.sr_ObjectRef__f_elem;
        return new $c_s_Some(this$6.Ltigerpython_parser_lexer_TokenType$__f_values.apply__O__O(name$3))
      } else {
        return $m_s_None$()
      }
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          return ex.value__O()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  matchBrackets__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType__Z(left, right) {
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    if ((x === left)) {
      const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
      return (right === x$4)
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
      if ((x$5 === left)) {
        const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
        return (right === x$8)
      } else {
        const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((x$9 === left)) {
          const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
          return (right === x$12)
        } else {
          return false
        }
      }
    }
  };
  getMatchingBracket__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType(bracket) {
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    if ((x === bracket)) {
      return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
      if ((x$3 === bracket)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((x$5 === bracket)) {
          return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
          if ((x$7 === bracket)) {
            return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
            if ((x$9 === bracket)) {
              return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
              if ((x$11 === bracket)) {
                return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE
              } else {
                return null
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_lexer_TokenType$ = new $TypeData().initClass({
  Ltigerpython_parser_lexer_TokenType$: 0
}, false, "tigerpython.parser.lexer.TokenType$", {
  Ltigerpython_parser_lexer_TokenType$: 1,
  O: 1
});
$c_Ltigerpython_parser_lexer_TokenType$.prototype.$classData = $d_Ltigerpython_parser_lexer_TokenType$;
let $n_Ltigerpython_parser_lexer_TokenType$ = (void 0);
function $m_Ltigerpython_parser_lexer_TokenType$() {
  if ((!$n_Ltigerpython_parser_lexer_TokenType$)) {
    $n_Ltigerpython_parser_lexer_TokenType$ = new $c_Ltigerpython_parser_lexer_TokenType$()
  };
  return $n_Ltigerpython_parser_lexer_TokenType$
}
const $p_Ltigerpython_parser_parsing_ArgumentParser__placeholderName$lzycompute__Ltigerpython_parser_ast_AstNode$Name = (function($thiz) {
  if ((!$thiz.Ltigerpython_parser_parsing_ArgumentParser__f_bitmap$0)) {
    $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_placeholderName = new $c_Ltigerpython_parser_ast_AstNode$Name((-1), "???");
    $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_bitmap$0 = true
  };
  return $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_placeholderName
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__placeholderName__Ltigerpython_parser_ast_AstNode$Name = (function($thiz) {
  return ((!$thiz.Ltigerpython_parser_parsing_ArgumentParser__f_bitmap$0) ? $p_Ltigerpython_parser_parsing_ArgumentParser__placeholderName$lzycompute__Ltigerpython_parser_ast_AstNode$Name($thiz) : $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_placeholderName)
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List = (function($thiz, tokens, allowTypes) {
  while (true) {
    const x1 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
    let $$x1;
    if ((x === x1)) {
      $$x1 = true
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      $$x1 = (x$3 === x1)
    };
    if ($$x1) {
      return $m_sci_Nil$()
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
      if ((x$5 === x1)) {
        const this$1 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
        const pos = tokens.pos__I();
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
        const params = $m_sci_Nil$();
        this$1.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
        tokens.next__Ltigerpython_parser_lexer_Token()
      } else {
        const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR;
        if ((x$7 === x1)) {
          const pos$1 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
          if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
            const rassoc$1 = new $c_Ltigerpython_parser_parsing_ArgumentParser$StarParameter($thiz, pos$1);
            const this$5 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes);
            return new $c_sci_$colon$colon(rassoc$1, this$5)
          };
          const name = $p_Ltigerpython_parser_parsing_ArgumentParser__parseKeywordName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name($thiz, tokens);
          if ((name === null)) {
            return $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes)
          };
          const annot = (allowTypes ? $p_Ltigerpython_parser_parsing_ArgumentParser__parseParamAnnotation__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression($thiz, tokens) : null);
          const varParam = new $c_Ltigerpython_parser_parsing_ArgumentParser$VarParameter($thiz, pos$1, name.Ltigerpython_parser_ast_AstNode$Name__f_name, annot);
          const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
          if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
            const this$9 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const pos$2 = tokens.prevPos__I();
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED;
            const params$1 = $m_sci_Nil$();
            this$9.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$1, params$1);
            if ($thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
              $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
            }
          };
          const x1$1 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
          const x$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
          if ((x$1 === x1$1)) {
            tokens.next__Ltigerpython_parser_lexer_Token()
          } else {
            const x$3$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
            let $$x2;
            if ((x$3$1 === x1$1)) {
              $$x2 = true
            } else {
              const x$5$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
              if ((x$5$1 === x1$1)) {
                $$x2 = true
              } else {
                const x$7$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                if ((x$7$1 === x1$1)) {
                  $$x2 = true
                } else {
                  const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                  if ((x$9 === x1$1)) {
                    $$x2 = true
                  } else {
                    $$x2 = (x1$1 === null)
                  }
                }
              }
            };
            if ((!$$x2)) {
              $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$())
            }
          };
          const this$10 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes);
          return new $c_sci_$colon$colon(varParam, this$10)
        } else {
          const x$9$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_STAR;
          if ((x$9$1 === x1)) {
            const pos$2$1 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
            const name$2 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseKeywordName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name($thiz, tokens);
            if ((name$2 === null)) {
              return $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes)
            };
            const annot$2 = (allowTypes ? $p_Ltigerpython_parser_parsing_ArgumentParser__parseParamAnnotation__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression($thiz, tokens) : null);
            const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
            if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
              const this$14 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
              const pos$3 = tokens.prevPos__I();
              const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED;
              const params$2 = $m_sci_Nil$();
              this$14.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$2, params$2);
              if ($thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
                $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
              }
            };
            const x1$2 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
            const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
            if ((x$2 === x1$2)) {
              tokens.next__Ltigerpython_parser_lexer_Token()
            } else {
              const x$3$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
              let $$x3;
              if ((x$3$2 === x1$2)) {
                $$x3 = true
              } else {
                const x$5$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
                if ((x$5$2 === x1$2)) {
                  $$x3 = true
                } else {
                  const x$7$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                  if ((x$7$2 === x1$2)) {
                    $$x3 = true
                  } else {
                    const x$9$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                    if ((x$9$2 === x1$2)) {
                      $$x3 = true
                    } else {
                      $$x3 = (x1$2 === null)
                    }
                  }
                }
              };
              if ((!$$x3)) {
                $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$())
              }
            };
            const rassoc$3 = new $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter($thiz, pos$2$1, name$2.Ltigerpython_parser_ast_AstNode$Name__f_name, annot$2);
            const this$15 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes);
            return new $c_sci_$colon$colon(rassoc$3, this$15)
          } else {
            const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
            if ((x$11 === x1)) {
              const pos$3$1 = tokens.pos__I();
              const tuple = $p_Ltigerpython_parser_parsing_ArgumentParser__parseParamNameList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$NameTuple($thiz, tokens);
              const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
              let result;
              if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3))) {
                result = new $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter($thiz, pos$3$1, tuple, $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
              } else {
                result = new $c_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter($thiz, pos$3$1, tuple)
              };
              const x1$3 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
              const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
              if ((x$4 === x1$3)) {
                tokens.next__Ltigerpython_parser_lexer_Token()
              } else {
                const x$3$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
                let $$x4;
                if ((x$3$3 === x1$3)) {
                  $$x4 = true
                } else {
                  const x$5$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
                  if ((x$5$3 === x1$3)) {
                    $$x4 = true
                  } else {
                    const x$7$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                    if ((x$7$3 === x1$3)) {
                      $$x4 = true
                    } else {
                      const x$9$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                      if ((x$9$3 === x1$3)) {
                        $$x4 = true
                      } else {
                        $$x4 = (x1$3 === null)
                      }
                    }
                  }
                };
                if ((!$$x4)) {
                  $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$())
                }
              };
              const this$19 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes);
              return new $c_sci_$colon$colon(result, this$19)
            } else {
              const name$3 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseKeywordName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name($thiz, tokens);
              if ((name$3 === null)) {
                if (tokens.hasNext__Z()) {
                  return $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes)
                } else {
                  return $m_sci_Nil$()
                }
              };
              const annot$3 = (allowTypes ? $p_Ltigerpython_parser_parsing_ArgumentParser__parseParamAnnotation__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression($thiz, tokens) : null);
              const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
              let result$2;
              if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4))) {
                result$2 = new $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter($thiz, name$3.Ltigerpython_parser_ast_AstNode$Name__f_pos, name$3.Ltigerpython_parser_ast_AstNode$Name__f_name, $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens), annot$3)
              } else {
                result$2 = new $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter($thiz, name$3.Ltigerpython_parser_ast_AstNode$Name__f_pos, name$3.Ltigerpython_parser_ast_AstNode$Name__f_name, annot$3)
              };
              const x1$4 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
              const x$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
              if ((x$6 === x1$4)) {
                tokens.next__Ltigerpython_parser_lexer_Token()
              } else {
                const x$3$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
                let $$x5;
                if ((x$3$4 === x1$4)) {
                  $$x5 = true
                } else {
                  const x$5$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
                  if ((x$5$4 === x1$4)) {
                    $$x5 = true
                  } else {
                    const x$7$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                    if ((x$7$4 === x1$4)) {
                      $$x5 = true
                    } else {
                      const x$9$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                      if ((x$9$4 === x1$4)) {
                        $$x5 = true
                      } else {
                        $$x5 = (x1$4 === null)
                      }
                    }
                  }
                };
                if ((!$$x5)) {
                  $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$())
                }
              };
              const this$23 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List($thiz, tokens, allowTypes);
              return new $c_sci_$colon$colon(result$2, this$23)
            }
          }
        }
      }
    }
  }
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__parseKeywordName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name = (function($thiz, tokens) {
  let $$x1;
  if (tokens.hasKeyword__Z()) {
    const this$4 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
    const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
    $$x1 = $f_sc_SeqOps__contains__O__Z(tokenTypes, this$4)
  } else {
    $$x1 = false
  };
  if ($$x1) {
    const token = tokens.next__Ltigerpython_parser_lexer_Token();
    const this$8 = $m_s_Predef$().s_Predef$__f_Set;
    const array$1 = ["repeat", "async", "print", "await", "nonlocal"];
    const elems = new $c_sjsr_WrappedVarArgs(array$1);
    if (this$8.from__sc_IterableOnce__sci_Set(elems).contains__O__Z(token.getStringValue__T())) {
      const this$12 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
      const pos = token.Ltigerpython_parser_lexer_Token__f_pos;
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
      const array$2 = [token.getStringValue__T()];
      const params = new $c_sjsr_WrappedVarArgs(array$2);
      this$12.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
    } else {
      const this$16 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
      const pos$1 = token.Ltigerpython_parser_lexer_Token__f_pos;
      const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
      const array$3 = [token.getStringValue__T()];
      const params$1 = new $c_sjsr_WrappedVarArgs(array$3);
      this$16.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
    };
    return new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.getStringValue__T())
  } else {
    const x1 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x2 = x1;
      return x2
    } else {
      const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4))) {
        $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      };
      const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$5))) {
        $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      };
      const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
      tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$6));
      if ((x1 !== null)) {
        const this$26 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
        const pos$2 = x1.pos__I();
        const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
        const params$2 = $m_sci_Nil$();
        return this$26.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2)
      } else {
        const this$27 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
        const pos$3 = tokens.pos__I();
        const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
        const params$3 = $m_sci_Nil$();
        return this$27.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3)
      }
    }
  }
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__parseParamAnnotation__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression = (function($thiz, tokens) {
  const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
  if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
    if (($thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
      const this$4 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
      const pos = tokens.prevPos__I();
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
      const params = $m_sci_Nil$();
      this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
    };
    return $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
  } else {
    return null
  }
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__parseParamNameList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$NameTuple = (function($thiz, tokens) {
  const startPos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
  const this$1 = $m_scm_ArrayBuffer$();
  const elems = $m_sci_Nil$();
  const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
  while (true) {
    let $$x1;
    if (tokens.hasNext__Z()) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
      $$x1 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array)))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const x1 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x === x1)) {
        const token = tokens.next__Ltigerpython_parser_lexer_Token();
        const elem = new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.Ltigerpython_parser_lexer_Token__f_value);
        result.addOne__O__scm_ArrayBuffer(elem)
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
        if ((x$3 === x1)) {
          $p_Ltigerpython_parser_parsing_ArgumentParser__parseParamNameList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$NameTuple($thiz, tokens)
        } else {
          tokens.next__Ltigerpython_parser_lexer_Token()
        }
      }
    } else {
      break
    }
  };
  tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS);
  let $$x2;
  if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
    const len = result.scm_ArrayBuffer__f_size0;
    const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Name.getArrayOf(), [len]);
    result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
    $$x2 = destination
  } else {
    let capacity = 0;
    let size = 0;
    let jsElems = null;
    capacity = 0;
    size = 0;
    jsElems = [];
    const this$8 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
    const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$8);
    while (it.hasNext__Z()) {
      const elem$1 = it.next__O();
      const unboxedElem = ((elem$1 === null) ? null : elem$1);
      jsElems.push(unboxedElem)
    };
    $$x2 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Name.getArrayOf(), jsElems)
  };
  return new $c_Ltigerpython_parser_ast_AstNode$NameTuple(startPos, $$x2)
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__parseArguments__Ltigerpython_parser_lexer_TokenBuffer__sci_List = (function($thiz, tokens) {
  const x1 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
  let $$x1;
  if ((x1 === null)) {
    $$x1 = true
  } else {
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
    $$x1 = (x === x1)
  };
  if ($$x1) {
    return $m_sci_Nil$()
  };
  const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
  if ((x$3 === x1)) {
    $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$());
    tokens.next__Ltigerpython_parser_lexer_Token();
    return $p_Ltigerpython_parser_parsing_ArgumentParser__parseArguments__Ltigerpython_parser_lexer_TokenBuffer__sci_List($thiz, tokens)
  };
  const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR;
  let result;
  if ((x$5 === x1)) {
    const pos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    result = new $c_Ltigerpython_parser_parsing_ArgumentParser$VarArgument($thiz, pos, $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
  } else {
    const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_STAR;
    if ((x$7 === x1)) {
      const pos$2 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      result = new $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument($thiz, pos$2, $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
    } else if (((x1.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD) && (!$thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)))) {
      const pos$3 = tokens.pos__I();
      const x1$2 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
      const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
      if ((x$9 === x1$2)) {
        const token = tokens.next__Ltigerpython_parser_lexer_Token();
        const this$4 = $m_s_Predef$().s_Predef$__f_Set;
        const array = ["repeat", "async", "print", "await", "nonlocal"];
        const elems = new $c_sjsr_WrappedVarArgs(array);
        if ((!this$4.from__sc_IterableOnce__sci_Set(elems).contains__O__Z(token.getStringValue__T()))) {
          const this$8 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
          const pos$1 = token.Ltigerpython_parser_lexer_Token__f_pos;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
          const array$1 = [token.getStringValue__T()];
          const params = new $c_sjsr_WrappedVarArgs(array$1);
          this$8.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code, params)
        };
        tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN);
        result = new $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument($thiz, pos$3, new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.getStringValue__T()), $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
        let $$x2;
        if ((x$11 === x1$2)) {
          $$x2 = true
        } else {
          const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
          $$x2 = (x$13 === x1$2)
        };
        if ((!$$x2)) {
          $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE, $m_sci_Nil$());
          return $m_sci_Nil$()
        };
        $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME, $m_sci_Nil$());
        const token$2 = tokens.next__Ltigerpython_parser_lexer_Token();
        result = new $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument($thiz, pos$3, new $c_Ltigerpython_parser_ast_AstNode$Name(token$2.Ltigerpython_parser_lexer_Token__f_pos, token$2.getStringValue__T()))
      }
    } else {
      const pos$4 = tokens.pos__I();
      const test = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      const x1$3 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
      const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
      if ((x$15 === x1$3)) {
        result = new $c_Ltigerpython_parser_parsing_ArgumentParser$CompArgument($thiz, pos$4, new $c_Ltigerpython_parser_ast_AstNode$ListComp(pos$4, tokens.endPosOfList__I(), test, $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens)))
      } else {
        const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
        if ((x$17 === x1$3)) {
          tokens.next__Ltigerpython_parser_lexer_Token();
          const value = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
          if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
            const x2 = test;
            result = new $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument($thiz, pos$4, x2, value)
          } else if ((test === null)) {
            const this$9 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
            const params$1 = $m_sci_Nil$();
            this$9.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$1, params$1);
            result = new $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument($thiz, pos$4, $p_Ltigerpython_parser_parsing_ArgumentParser__placeholderName__Ltigerpython_parser_ast_AstNode$Name($thiz), value)
          } else if ((value instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
            const x2$2 = value;
            const this$10 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const pos$5 = test.pos__I();
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
            const params$2 = $m_sci_Nil$();
            this$10.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$2, params$2);
            result = new $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument($thiz, pos$4, x2$2, test)
          } else {
            const this$11 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const pos$6 = test.pos__I();
            const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
            const params$3 = $m_sci_Nil$();
            this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$3, params$3);
            result = new $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument($thiz, pos$4, $p_Ltigerpython_parser_parsing_ArgumentParser__placeholderName__Ltigerpython_parser_ast_AstNode$Name($thiz), value)
          }
        } else if ((x1$3 === null)) {
          result = new $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument($thiz, pos$4, test)
        } else if ((x1$3.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT)) {
          const this$15 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
          const pos$7 = tokens.pos__I();
          const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN;
          const array$2 = [x1$3];
          const params$4 = new $c_sjsr_WrappedVarArgs(array$2);
          this$15.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$4, params$4);
          while (true) {
            let $$x3;
            if (tokens.hasNext__Z()) {
              const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
              $$x3 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3)))
            } else {
              $$x3 = false
            };
            if ($$x3) {
              tokens.next__Ltigerpython_parser_lexer_Token()
            } else {
              break
            }
          };
          result = new $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument($thiz, pos$4, test)
        } else {
          result = new $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument($thiz, pos$4, test)
        }
      }
    }
  };
  const x1$1 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
  const x$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
  if ((x$1 === x1$1)) {
    tokens.next__Ltigerpython_parser_lexer_Token()
  } else {
    const x$3$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
    let $$x4;
    if ((x$3$1 === x1$1)) {
      $$x4 = true
    } else {
      const x$5$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      if ((x$5$1 === x1$1)) {
        $$x4 = true
      } else {
        const x$7$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
        if ((x$7$1 === x1$1)) {
          $$x4 = true
        } else {
          const x$9$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
          if ((x$9$1 === x1$1)) {
            $$x4 = true
          } else {
            $$x4 = (x1$1 === null)
          }
        }
      }
    };
    if ((!$$x4)) {
      $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$())
    }
  };
  const this$19 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseArguments__Ltigerpython_parser_lexer_TokenBuffer__sci_List($thiz, tokens);
  return new $c_sci_$colon$colon(result, this$19)
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__parseSlicePart__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression = (function($thiz, tokens) {
  if (tokens.hasNext__Z()) {
    const x1 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
    if ((x === x1)) {
      return null
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
      let $$x1;
      if ((x$3 === x1)) {
        $$x1 = true
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
        $$x1 = (x$5 === x1)
      };
      if ($$x1) {
        return null
      } else {
        return $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parser.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      }
    }
  } else {
    return null
  }
});
const $p_Ltigerpython_parser_parsing_ArgumentParser__checkName$1__I__T__scm_Set__V = (function($thiz, pos, name, names$1) {
  if (names$1.contains__O__Z(name)) {
    const this$4 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
    const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES;
    const array = [name];
    const params = new $c_sjsr_WrappedVarArgs(array);
    this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
  } else {
    if (($thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_protectFunctions && $m_Ltigerpython_parser_scopes_BuiltinNames$().Ltigerpython_parser_scopes_BuiltinNames$__f_builtins.contains__O__Z(name))) {
      const this$8 = $thiz.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
      const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
      const array$1 = [name];
      const params$1 = new $c_sjsr_WrappedVarArgs(array$1);
      this$8.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1)
    };
    names$1.addOne__O__scm_Growable(name)
  }
});
class $c_Ltigerpython_parser_parsing_ArgumentParser extends $c_O {
  constructor(parser, parserState) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser__f_KeywordArgument$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_NamedArgument$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_SimpleArgument$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_VarArgument$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_CompArgument$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_DefaultParameter$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_DefaultTupleParameter$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_KeywordParameter$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_SimpleParameter$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_TupleParameter$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_VarParameter$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_StarParameter$module = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_placeholderName = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_parser = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState = null;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_bitmap$0 = false;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_parser = parser;
    this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState = parserState
  };
  parseParamList__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Parameters(tokens, allowTypes) {
    let $$x1;
    if (tokens.hasNext__Z()) {
      const x = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
      $$x1 = (!(x === x$2))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const names = $m_scm_Set$().apply__sci_Seq__O($m_sci_Nil$());
      const this$1 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const args = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const this$2 = $m_scm_ArrayBuffer$();
      const elems$1 = $m_sci_Nil$();
      const defaults = this$2.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
      let elem = 0;
      elem = (-1);
      let elem$1 = null;
      elem$1 = null;
      let elem$2 = null;
      elem$2 = null;
      let elem$3 = 0;
      elem$3 = (-1);
      let elem$4 = 0;
      elem$4 = (-1);
      const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      const params = $p_Ltigerpython_parser_parsing_ArgumentParser__parseParameters__Ltigerpython_parser_lexer_TokenBuffer__Z__sci_List(this, tokens, allowTypes);
      let these = params;
      while ((!these.isEmpty__Z())) {
        const arg1 = these.head__O();
        const param = arg1;
        if ((param instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter)) {
          const x2 = param;
          const pos = x2.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_pos;
          const name = x2.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_name;
          const annot = x2.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_annot;
          $p_Ltigerpython_parser_parsing_ArgumentParser__checkName$1__I__T__scm_Set__V(this, pos, name, names);
          const elem$5 = new $c_Ltigerpython_parser_ast_AstNode$NameParameter(pos, name, annot);
          args.addOne__O__scm_ArrayBuffer(elem$5);
          if ((elem >= 0)) {
            defaults.addOne__O__scm_ArrayBuffer(null)
          } else if ((!$f_sc_SeqOps__isEmpty__Z(defaults))) {
            const elem$6 = new $c_Ltigerpython_parser_ast_AstNode$Value(pos, $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_NONE);
            defaults.addOne__O__scm_ArrayBuffer(elem$6);
            if ((elem$3 < 0)) {
              elem$3 = pos
            }
          }
        } else if ((param instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter)) {
          const x3 = param;
          const pos$2 = x3.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_pos;
          const name$2 = x3.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_name;
          const value = x3.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_default;
          const annot$2 = x3.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_annot;
          $p_Ltigerpython_parser_parsing_ArgumentParser__checkName$1__I__T__scm_Set__V(this, pos$2, name$2, names);
          const elem$7 = new $c_Ltigerpython_parser_ast_AstNode$NameParameter(pos$2, name$2, annot$2);
          args.addOne__O__scm_ArrayBuffer(elem$7);
          defaults.addOne__O__scm_ArrayBuffer(value);
          if (((elem$2 !== null) && (elem$4 < 0))) {
            elem$4 = pos$2
          }
        } else if ((param instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter)) {
          const x4 = param;
          const pos$3 = x4.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_pos;
          const tuple = x4.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_dest;
          if ((this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
            const xs = tuple.Ltigerpython_parser_ast_AstNode$NameTuple__f_names;
            const f = ((this$9, pos$3$1, names$1) => ((n$2) => {
              const n = n$2;
              $p_Ltigerpython_parser_parsing_ArgumentParser__checkName$1__I__T__scm_Set__V(this$9, pos$3$1, n.Ltigerpython_parser_ast_AstNode$Name__f_name, names$1)
            }))(this, pos$3, names);
            const len = xs.u.length;
            let i = 0;
            if ((xs !== null)) {
              while ((i < len)) {
                const arg1$1 = xs.u[i];
                f(arg1$1);
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_I(xs, 1)) {
              const x3$1 = xs;
              while ((i < len)) {
                const arg1$2 = x3$1.u[i];
                f(arg1$2);
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_D(xs, 1)) {
              const x4$1 = xs;
              while ((i < len)) {
                const arg1$3 = x4$1.u[i];
                f(arg1$3);
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_J(xs, 1)) {
              const x5 = xs;
              while ((i < len)) {
                const t = x5.u[i];
                const lo = t.RTLong__f_lo;
                const hi = t.RTLong__f_hi;
                f(new $c_RTLong(lo, hi));
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_F(xs, 1)) {
              const x6 = xs;
              while ((i < len)) {
                const arg1$4 = x6.u[i];
                f(arg1$4);
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_C(xs, 1)) {
              const x7 = xs;
              while ((i < len)) {
                const arg1$5 = x7.u[i];
                f($bC(arg1$5));
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_B(xs, 1)) {
              const x8 = xs;
              while ((i < len)) {
                const arg1$6 = x8.u[i];
                f(arg1$6);
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_S(xs, 1)) {
              const x9 = xs;
              while ((i < len)) {
                const arg1$7 = x9.u[i];
                f(arg1$7);
                i = ((1 + i) | 0)
              }
            } else if ($isArrayOf_Z(xs, 1)) {
              const x10 = xs;
              while ((i < len)) {
                const arg1$8 = x10.u[i];
                f(arg1$8);
                i = ((1 + i) | 0)
              }
            } else {
              throw new $c_s_MatchError(xs)
            };
            const elem$8 = new $c_Ltigerpython_parser_ast_AstNode$TupleParameter(pos$3, tuple);
            args.addOne__O__scm_ArrayBuffer(elem$8);
            if ((!$f_sc_SeqOps__isEmpty__Z(defaults))) {
              const elem$9 = new $c_Ltigerpython_parser_ast_AstNode$Value(pos$3, $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_NONE);
              defaults.addOne__O__scm_ArrayBuffer(elem$9);
              if ((elem$3 < 0)) {
                elem$3 = pos$3
              }
            };
            if (((elem >= 0) && (elem$3 < 0))) {
              elem$3 = pos$3
            }
          } else {
            const this$11 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE;
            const params$1 = $m_sci_Nil$();
            this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code, params$1)
          }
        } else if ((param instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter)) {
          const x5$1 = param;
          const pos$4 = x5$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_pos;
          const tuple$2 = x5$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_name;
          const value$2 = x5$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_default;
          if ((this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
            const xs$1 = tuple$2.Ltigerpython_parser_ast_AstNode$NameTuple__f_names;
            const f$1 = ((this$2$1, pos$4$1, names$1$1) => ((n$3$2) => {
              const n$3 = n$3$2;
              $p_Ltigerpython_parser_parsing_ArgumentParser__checkName$1__I__T__scm_Set__V(this$2$1, pos$4$1, n$3.Ltigerpython_parser_ast_AstNode$Name__f_name, names$1$1)
            }))(this, pos$4, names);
            const len$1 = xs$1.u.length;
            let i$1 = 0;
            if ((xs$1 !== null)) {
              while ((i$1 < len$1)) {
                const arg1$9 = xs$1.u[i$1];
                f$1(arg1$9);
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_I(xs$1, 1)) {
              const x3$2 = xs$1;
              while ((i$1 < len$1)) {
                const arg1$10 = x3$2.u[i$1];
                f$1(arg1$10);
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_D(xs$1, 1)) {
              const x4$2 = xs$1;
              while ((i$1 < len$1)) {
                const arg1$11 = x4$2.u[i$1];
                f$1(arg1$11);
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_J(xs$1, 1)) {
              const x5$2 = xs$1;
              while ((i$1 < len$1)) {
                const t$1 = x5$2.u[i$1];
                const lo$1 = t$1.RTLong__f_lo;
                const hi$1 = t$1.RTLong__f_hi;
                f$1(new $c_RTLong(lo$1, hi$1));
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_F(xs$1, 1)) {
              const x6$1 = xs$1;
              while ((i$1 < len$1)) {
                const arg1$12 = x6$1.u[i$1];
                f$1(arg1$12);
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_C(xs$1, 1)) {
              const x7$1 = xs$1;
              while ((i$1 < len$1)) {
                const arg1$13 = x7$1.u[i$1];
                f$1($bC(arg1$13));
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_B(xs$1, 1)) {
              const x8$1 = xs$1;
              while ((i$1 < len$1)) {
                const arg1$14 = x8$1.u[i$1];
                f$1(arg1$14);
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_S(xs$1, 1)) {
              const x9$1 = xs$1;
              while ((i$1 < len$1)) {
                const arg1$15 = x9$1.u[i$1];
                f$1(arg1$15);
                i$1 = ((1 + i$1) | 0)
              }
            } else if ($isArrayOf_Z(xs$1, 1)) {
              const x10$1 = xs$1;
              while ((i$1 < len$1)) {
                const arg1$16 = x10$1.u[i$1];
                f$1(arg1$16);
                i$1 = ((1 + i$1) | 0)
              }
            } else {
              throw new $c_s_MatchError(xs$1)
            };
            const elem$10 = new $c_Ltigerpython_parser_ast_AstNode$TupleParameter(pos$4, tuple$2);
            args.addOne__O__scm_ArrayBuffer(elem$10);
            defaults.addOne__O__scm_ArrayBuffer(value$2);
            if (((elem$2 !== null) && (elem$4 < 0))) {
              elem$4 = pos$4
            }
          } else {
            const this$14 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE;
            const params$2 = $m_sci_Nil$();
            this$14.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$1, params$2)
          }
        } else if ((param instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$StarParameter)) {
          const x6$2 = param;
          const pos$5 = x6$2.Ltigerpython_parser_parsing_ArgumentParser$StarParameter__f_pos;
          if ((this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
            const this$15 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
            const params$3 = $m_sci_Nil$();
            this$15.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$2, params$3)
          };
          if ((elem$1 !== null)) {
            const this$16 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
            const params$4 = $m_sci_Nil$();
            this$16.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$3, params$4)
          };
          elem = args.scm_ArrayBuffer__f_size0
        } else if ((param instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$VarParameter)) {
          const x7$2 = param;
          const pos$6 = x7$2.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_pos;
          const name$3 = x7$2.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_name;
          const annot$3 = x7$2.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_annot;
          $p_Ltigerpython_parser_parsing_ArgumentParser__checkName$1__I__T__scm_Set__V(this, pos$6, name$3, names);
          if (((elem$1 === null) && (elem === (-1)))) {
            elem$1 = new $c_Ltigerpython_parser_ast_AstNode$NameParameter(pos$6, name$3, annot$3)
          } else {
            const this$17 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
            const params$5 = $m_sci_Nil$();
            this$17.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$4, params$5)
          };
          elem = args.scm_ArrayBuffer__f_size0
        } else if ((param instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter)) {
          const x8$2 = param;
          const pos$7 = x8$2.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_pos;
          const name$4 = x8$2.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_name;
          const annot$4 = x8$2.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_annot;
          $p_Ltigerpython_parser_parsing_ArgumentParser__checkName$1__I__T__scm_Set__V(this, pos$7, name$4, names);
          if ((elem$2 === null)) {
            elem$2 = new $c_Ltigerpython_parser_ast_AstNode$NameParameter(pos$7, name$4, annot$4)
          } else {
            const this$18 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
            const params$6 = $m_sci_Nil$();
            this$18.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$5, params$6)
          }
        } else {
          throw new $c_s_MatchError(param)
        };
        these = these.tail__O()
      };
      if ((elem$3 >= 0)) {
        const this$19 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
        const pos$1 = elem$3;
        const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD;
        const params$7 = $m_sci_Nil$();
        this$19.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$6, params$7)
      };
      if ((elem$4 >= 0)) {
        const this$20 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
        const pos$8 = elem$4;
        const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM;
        const params$8 = $m_sci_Nil$();
        this$20.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$7, params$8)
      };
      if ((elem < 0)) {
        elem = args.scm_ArrayBuffer__f_size0
      };
      let $$x3;
      if ((args.scm_ArrayBuffer__f_size0 >= 0)) {
        const len$2 = args.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Parameter.getArrayOf(), [len$2]);
        args.copyToArray__O__I__I__I(destination, 0, args.scm_ArrayBuffer__f_size0);
        $$x3 = destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$24 = new $c_scm_ArrayBufferView(args.scm_ArrayBuffer__f_array, args.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$24);
        while (it.hasNext__Z()) {
          const elem$11 = it.next__O();
          const unboxedElem = ((elem$11 === null) ? null : elem$11);
          jsElems.push(unboxedElem)
        };
        $$x3 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Parameter.getArrayOf(), jsElems)
      };
      let $$x2;
      if ((defaults.scm_ArrayBuffer__f_size0 >= 0)) {
        const len$3 = defaults.scm_ArrayBuffer__f_size0;
        const destination$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$3]);
        defaults.copyToArray__O__I__I__I(destination$1, 0, defaults.scm_ArrayBuffer__f_size0);
        $$x2 = destination$1
      } else {
        let capacity$1 = 0;
        let size$1 = 0;
        let jsElems$1 = null;
        capacity$1 = 0;
        size$1 = 0;
        jsElems$1 = [];
        const this$28 = new $c_scm_ArrayBufferView(defaults.scm_ArrayBuffer__f_array, defaults.scm_ArrayBuffer__f_size0);
        const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$28);
        while (it$1.hasNext__Z()) {
          const elem$12 = it$1.next__O();
          const unboxedElem$1 = ((elem$12 === null) ? null : elem$12);
          jsElems$1.push(unboxedElem$1)
        };
        $$x2 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems$1)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Parameters(startPos, $$x3, $$x2, elem, elem$1, elem$2)
    } else {
      const $$x4 = tokens.pos__I();
      const xs$2 = $m_sci_Nil$();
      const len$4 = xs$2.length__I();
      const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Parameter.getArrayOf(), [len$4]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i$2 = 0;
      while (iterator.hasNext__Z()) {
        array.u[i$2] = iterator.next__O();
        i$2 = ((1 + i$2) | 0)
      };
      const xs$3 = $m_sci_Nil$();
      const len$5 = xs$3.length__I();
      const array$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$5]);
      const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i$3 = 0;
      while (iterator$1.hasNext__Z()) {
        array$1.u[i$3] = iterator$1.next__O();
        i$3 = ((1 + i$3) | 0)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Parameters($$x4, array, array$1, 0, null, null)
    }
  };
  parseArgList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Arguments(tokens) {
    const startPos = tokens.pos__I();
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const values = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    const this$2 = $m_scm_ArrayBuffer$();
    const elems$1 = $m_sci_Nil$();
    const keywords = this$2.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
    let elem = null;
    elem = null;
    let elem$1 = null;
    elem$1 = null;
    let elem$2 = 0;
    elem$2 = (-1);
    let elem$3 = 0;
    elem$3 = (-1);
    const arguments$1 = $p_Ltigerpython_parser_parsing_ArgumentParser__parseArguments__Ltigerpython_parser_lexer_TokenBuffer__sci_List(this, tokens);
    let these = arguments$1;
    while ((!these.isEmpty__Z())) {
      const arg1 = these.head__O();
      const arg = arg1;
      if ((arg instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$CompArgument)) {
        const x2 = arg;
        const pos = x2.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_pos;
        const value = x2.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_value;
        if ((arguments$1.length__I() > 1)) {
          const this$7 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG;
          const params = $m_sci_Nil$();
          this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
        };
        values.addOne__O__scm_ArrayBuffer(value)
      } else if ((arg instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument)) {
        const x3 = arg;
        const pos$2 = x3.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_pos;
        const value$2 = x3.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_value;
        values.addOne__O__scm_ArrayBuffer(value$2);
        if ((((elem !== null) || (elem$1 !== null)) && (elem$2 < 0))) {
          elem$2 = pos$2
        } else if (((!$f_sc_SeqOps__isEmpty__Z(keywords)) && (elem$3 < 0))) {
          elem$3 = pos$2
        }
      } else if ((arg instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument)) {
        const x4 = arg;
        const pos$3 = x4.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_pos;
        const name = x4.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_name;
        const value$3 = x4.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_value;
        if (((elem$1 !== null) && (elem$2 < 0))) {
          elem$2 = pos$3
        };
        const elem$4 = new $c_Ltigerpython_parser_ast_AstNode$Keyword(name.Ltigerpython_parser_ast_AstNode$Name__f_name, value$3);
        keywords.addOne__O__scm_ArrayBuffer(elem$4)
      } else if ((arg instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$VarArgument)) {
        const x5 = arg;
        const pos$4 = x5.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_pos;
        const value$4 = x5.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_value;
        if ((elem === null)) {
          elem = value$4;
          if ((elem$1 !== null)) {
            const this$8 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG;
            const params$1 = $m_sci_Nil$();
            this$8.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$1, params$1)
          }
        } else {
          const this$9 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
          const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS;
          const params$2 = $m_sci_Nil$();
          this$9.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$2, params$2)
        }
      } else if ((arg instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument)) {
        const x6 = arg;
        const pos$5 = x6.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_pos;
        const value$5 = x6.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_value;
        if ((elem$1 === null)) {
          elem$1 = value$5
        } else {
          const this$10 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
          const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS;
          const params$3 = $m_sci_Nil$();
          this$10.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$3, params$3)
        }
      } else {
        throw new $c_s_MatchError(arg)
      };
      these = these.tail__O()
    };
    if ((elem$2 >= 0)) {
      const this$11 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
      const pos$1 = elem$2;
      const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS;
      const params$4 = $m_sci_Nil$();
      this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$4, params$4)
    };
    if ((elem$3 >= 0)) {
      const this$12 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
      const pos$6 = elem$3;
      const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD;
      const params$5 = $m_sci_Nil$();
      this$12.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$5, params$5)
    };
    let $$x2;
    if ((values.scm_ArrayBuffer__f_size0 >= 0)) {
      const len = values.scm_ArrayBuffer__f_size0;
      const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
      values.copyToArray__O__I__I__I(destination, 0, values.scm_ArrayBuffer__f_size0);
      $$x2 = destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const this$16 = new $c_scm_ArrayBufferView(values.scm_ArrayBuffer__f_array, values.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$16);
      while (it.hasNext__Z()) {
        const elem$5 = it.next__O();
        const unboxedElem = ((elem$5 === null) ? null : elem$5);
        jsElems.push(unboxedElem)
      };
      $$x2 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
    };
    let $$x1;
    if ((keywords.scm_ArrayBuffer__f_size0 >= 0)) {
      const len$1 = keywords.scm_ArrayBuffer__f_size0;
      const destination$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Keyword.getArrayOf(), [len$1]);
      keywords.copyToArray__O__I__I__I(destination$1, 0, keywords.scm_ArrayBuffer__f_size0);
      $$x1 = destination$1
    } else {
      let capacity$1 = 0;
      let size$1 = 0;
      let jsElems$1 = null;
      capacity$1 = 0;
      size$1 = 0;
      jsElems$1 = [];
      const this$20 = new $c_scm_ArrayBufferView(keywords.scm_ArrayBuffer__f_array, keywords.scm_ArrayBuffer__f_size0);
      const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$20);
      while (it$1.hasNext__Z()) {
        const elem$6 = it$1.next__O();
        const unboxedElem$1 = ((elem$6 === null) ? null : elem$6);
        jsElems$1.push(unboxedElem$1)
      };
      $$x1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Keyword.getArrayOf(), jsElems$1)
    };
    return new $c_Ltigerpython_parser_ast_AstNode$Arguments(startPos, $$x2, $$x1, elem, elem$1)
  };
  parseSliceList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Slice(tokens) {
    const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const slice = this.parseSlice__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Slice(tokens);
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const this$7 = $m_scm_ArrayBuffer$();
      const array$1 = [slice];
      const elems = new $c_sjsr_WrappedVarArgs(array$1);
      const result = this$7.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      while (true) {
        const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
        let $$x1;
        if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
          const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET];
          $$x1 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3)))
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const elem = this.parseSlice__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Slice(tokens);
          result.addOne__O__scm_ArrayBuffer(elem)
        } else {
          break
        }
      };
      let $$x2;
      if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
        const len = result.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Slice.getArrayOf(), [len]);
        result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
        $$x2 = destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$17 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$17);
        while (it.hasNext__Z()) {
          const elem$1 = it.next__O();
          const unboxedElem = ((elem$1 === null) ? null : elem$1);
          jsElems.push(unboxedElem)
        };
        $$x2 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Slice.getArrayOf(), jsElems)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$MultiSlice(startPos, $$x2)
    } else {
      return slice
    }
  };
  parseSlice__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Slice(tokens) {
    if (tokens.hasNext__Z()) {
      const startPos = tokens.pos__I();
      const lower = $p_Ltigerpython_parser_parsing_ArgumentParser__parseSlicePart__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(this, tokens);
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const upper = $p_Ltigerpython_parser_parsing_ArgumentParser__parseSlicePart__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(this, tokens);
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
        if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
          return new $c_Ltigerpython_parser_ast_AstNode$SliceRange(startPos, lower, upper, $p_Ltigerpython_parser_parsing_ArgumentParser__parseSlicePart__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(this, tokens))
        } else {
          return new $c_Ltigerpython_parser_ast_AstNode$SliceRange(startPos, lower, upper, null)
        }
      } else if ((lower === null)) {
        const this$7 = this.Ltigerpython_parser_parsing_ArgumentParser__f_parserState;
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT;
        const params = $m_sci_Nil$();
        return this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code, params)
      } else {
        return new $c_Ltigerpython_parser_ast_AstNode$Index(startPos, lower)
      }
    } else {
      return null
    }
  };
}
const $d_Ltigerpython_parser_parsing_ArgumentParser = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser: 0
}, false, "tigerpython.parser.parsing.ArgumentParser", {
  Ltigerpython_parser_parsing_ArgumentParser: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser;
const $ct_Ltigerpython_parser_parsing_ArgumentParser$Argument__Ltigerpython_parser_parsing_ArgumentParser__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer = outer
  };
  return $thiz
});
class $c_Ltigerpython_parser_parsing_ArgumentParser$Argument extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer = null
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$Argument(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$Argument)))
}
const $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer = outer
  };
  return $thiz
});
class $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer = null
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$Parameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$Parameter)))
}
const $p_Ltigerpython_parser_parsing_AstStack__push__Ltigerpython_parser_parsing_AstStack$StackItem__V = (function($thiz, item) {
  const this$1 = $thiz.Ltigerpython_parser_parsing_AstStack__f_stmtStack;
  const this$2 = new $c_sc_IndexedSeqView$Id(this$1);
  new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2).next__O().Ltigerpython_parser_parsing_AstStack$StackItem__f_subItem = item;
  const this$3 = $thiz.Ltigerpython_parser_parsing_AstStack__f_stmtStack;
  this$3.prepend__O__scm_ArrayDeque(item)
});
class $c_Ltigerpython_parser_parsing_AstStack extends $c_O {
  constructor(parser) {
    super();
    this.Ltigerpython_parser_parsing_AstStack__f_module = null;
    this.Ltigerpython_parser_parsing_AstStack__f_stmtStack = null;
    this.Ltigerpython_parser_parsing_AstStack__f_module = new $c_Ltigerpython_parser_parsing_AstStack$ModuleItem(this);
    const array = [this.Ltigerpython_parser_parsing_AstStack__f_module];
    const elems = new $c_sjsr_WrappedVarArgs(array);
    const this$5 = new $c_scm_Stack(16);
    this.Ltigerpython_parser_parsing_AstStack__f_stmtStack = this$5.addAll__sc_IterableOnce__scm_ArrayDeque(elems)
  };
  $plus$plus$eq__sc_IterableOnce__V(stmts) {
    const this$1 = this.Ltigerpython_parser_parsing_AstStack__f_stmtStack;
    const this$2 = new $c_sc_IndexedSeqView$Id(this$1);
    const this$3 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2).next__O().Ltigerpython_parser_parsing_AstStack$StackItem__f_items;
    this$3.addAll__sc_IterableOnce__scm_ArrayBuffer(stmts)
  };
  beginSuite__Ltigerpython_parser_ast_AstNode$Statement__T__V(head, fieldName) {
    $p_Ltigerpython_parser_parsing_AstStack__push__Ltigerpython_parser_parsing_AstStack$StackItem__V(this, $ct_Ltigerpython_parser_parsing_AstStack$StackItem__Ltigerpython_parser_parsing_AstStack__Ltigerpython_parser_ast_AstNode$Statement__T__(new $c_Ltigerpython_parser_parsing_AstStack$StackItem(), this, head, fieldName))
  };
  endSuite__Ltigerpython_parser_ast_AstNode$Statement() {
    const this$1 = this.Ltigerpython_parser_parsing_AstStack__f_stmtStack;
    const item = this$1.removeHead__Z__O(false);
    const this$2 = this.Ltigerpython_parser_parsing_AstStack__f_stmtStack;
    const this$3 = new $c_sc_IndexedSeqView$Id(this$2);
    new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$3).next__O().Ltigerpython_parser_parsing_AstStack$StackItem__f_subItem = null;
    return item.toStatement__Ltigerpython_parser_ast_AstNode$Statement()
  };
}
const $d_Ltigerpython_parser_parsing_AstStack = new $TypeData().initClass({
  Ltigerpython_parser_parsing_AstStack: 0
}, false, "tigerpython.parser.parsing.AstStack", {
  Ltigerpython_parser_parsing_AstStack: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_AstStack.prototype.$classData = $d_Ltigerpython_parser_parsing_AstStack;
const $ct_Ltigerpython_parser_parsing_AstStack$StackItem__Ltigerpython_parser_parsing_AstStack__Ltigerpython_parser_ast_AstNode$Statement__T__ = (function($thiz, outer, head, fieldName) {
  $thiz.Ltigerpython_parser_parsing_AstStack$StackItem__f_head = head;
  $thiz.Ltigerpython_parser_parsing_AstStack$StackItem__f_fieldName = fieldName;
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.Ltigerpython_parser_parsing_AstStack$StackItem__f_$outer = outer
  };
  const this$1 = $m_scm_ArrayBuffer$();
  const elems = $m_sci_Nil$();
  $thiz.Ltigerpython_parser_parsing_AstStack$StackItem__f_items = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
  return $thiz
});
class $c_Ltigerpython_parser_parsing_AstStack$StackItem extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_parsing_AstStack$StackItem__f_head = null;
    this.Ltigerpython_parser_parsing_AstStack$StackItem__f_fieldName = null;
    this.Ltigerpython_parser_parsing_AstStack$StackItem__f_items = null;
    this.Ltigerpython_parser_parsing_AstStack$StackItem__f_subItem = null;
    this.Ltigerpython_parser_parsing_AstStack$StackItem__f_$outer = null
  };
  pos__I() {
    return this.Ltigerpython_parser_parsing_AstStack$StackItem__f_head.pos__I()
  };
  getItems__Ltigerpython_parser_ast_AstNode$Statement() {
    let _items;
    if ((this.Ltigerpython_parser_parsing_AstStack$StackItem__f_subItem !== null)) {
      const this$2 = this.Ltigerpython_parser_parsing_AstStack$StackItem__f_items;
      let xs;
      if ((this$2.scm_ArrayBuffer__f_size0 >= 0)) {
        const len = this$2.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len]);
        this$2.copyToArray__O__I__I__I(destination, 0, this$2.scm_ArrayBuffer__f_size0);
        xs = destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$5 = new $c_scm_ArrayBufferView(this$2.scm_ArrayBuffer__f_array, this$2.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$5);
        while (it.hasNext__Z()) {
          const elem = it.next__O();
          const unboxedElem = ((elem === null) ? null : elem);
          jsElems.push(unboxedElem)
        };
        xs = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), jsElems)
      };
      const x = this.Ltigerpython_parser_parsing_AstStack$StackItem__f_subItem.toStatement__Ltigerpython_parser_ast_AstNode$Statement();
      const this$10 = $m_s_Array$();
      const newLength = ((1 + xs.u.length) | 0);
      let dest$1;
      if ($d_Ltigerpython_parser_ast_AstNode$Statement.getClassOf().isAssignableFrom__jl_Class__Z($objectGetClass(xs).getComponentType__jl_Class())) {
        dest$1 = ($d_Ltigerpython_parser_ast_AstNode$Statement.getClassOf().isPrimitive__Z() ? this$10.copyOf__O__I__O(xs, newLength) : $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(xs, newLength, $d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf().getClassOf()))
      } else {
        const dest = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [newLength]);
        $m_s_Array$().copy__O__I__O__I__I__V(xs, 0, dest, 0, xs.u.length);
        dest$1 = dest
      };
      $m_sr_ScalaRunTime$().array_update__O__I__O__V(dest$1, xs.u.length, x);
      _items = dest$1
    } else {
      const this$13 = this.Ltigerpython_parser_parsing_AstStack$StackItem__f_items;
      if ((this$13.scm_ArrayBuffer__f_size0 >= 0)) {
        const len$1 = this$13.scm_ArrayBuffer__f_size0;
        const destination$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len$1]);
        this$13.copyToArray__O__I__I__I(destination$1, 0, this$13.scm_ArrayBuffer__f_size0);
        _items = destination$1
      } else {
        let capacity$1 = 0;
        let size$1 = 0;
        let jsElems$1 = null;
        capacity$1 = 0;
        size$1 = 0;
        jsElems$1 = [];
        const this$16 = new $c_scm_ArrayBufferView(this$13.scm_ArrayBuffer__f_array, this$13.scm_ArrayBuffer__f_size0);
        const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$16);
        while (it$1.hasNext__Z()) {
          const elem$1 = it$1.next__O();
          const unboxedElem$1 = ((elem$1 === null) ? null : elem$1);
          jsElems$1.push(unboxedElem$1)
        };
        _items = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), jsElems$1)
      }
    };
    return ((_items.u.length !== 0) ? ((_items.u.length === 1) ? $m_sc_ArrayOps$().head$extension__O__O(_items) : new $c_Ltigerpython_parser_ast_AstNode$Suite(this.pos__I(), _items)) : new $c_Ltigerpython_parser_ast_AstNode$Pass(this.pos__I()))
  };
  toStatement__Ltigerpython_parser_ast_AstNode$Statement() {
    return (((this.Ltigerpython_parser_parsing_AstStack$StackItem__f_head !== null) && (this.Ltigerpython_parser_parsing_AstStack$StackItem__f_fieldName !== null)) ? (this.Ltigerpython_parser_parsing_AstStack$StackItem__f_head.update__T__Ltigerpython_parser_ast_AstNode$Statement__V(this.Ltigerpython_parser_parsing_AstStack$StackItem__f_fieldName, this.getItems__Ltigerpython_parser_ast_AstNode$Statement()), this.Ltigerpython_parser_parsing_AstStack$StackItem__f_head) : null)
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_AstStack$StackItem(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_AstStack$StackItem)))
}
const $d_Ltigerpython_parser_parsing_AstStack$StackItem = new $TypeData().initClass({
  Ltigerpython_parser_parsing_AstStack$StackItem: 0
}, false, "tigerpython.parser.parsing.AstStack$StackItem", {
  Ltigerpython_parser_parsing_AstStack$StackItem: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_AstStack$StackItem.prototype.$classData = $d_Ltigerpython_parser_parsing_AstStack$StackItem;
const $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType = (function($thiz, index) {
  let $$x1;
  if ((index >= 0)) {
    const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
    $$x1 = (index < this$1.scm_ArrayBuffer__f_size0)
  } else {
    $$x1 = false
  };
  if ($$x1) {
    return $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(index).Ltigerpython_parser_lexer_Token__f_tokenType
  } else {
    return null
  }
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z = (function($thiz, tokenIndex, tokenType) {
  const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
  let pos;
  if ((tokenIndex < this$1.scm_ArrayBuffer__f_size0)) {
    pos = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(tokenIndex).Ltigerpython_parser_lexer_Token__f_pos
  } else {
    const this$2 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
    pos = $f_sc_IndexedSeqOps__last__O(this$2).Ltigerpython_parser_lexer_Token__f_endPos
  };
  $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.insert__I__O__V(tokenIndex, new $c_Ltigerpython_parser_lexer_Token(pos, 0, tokenType));
  if (tokenType.isLeftBracket__Z()) {
    const this$6 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
    const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET;
    const array = [tokenType];
    const params = new $c_sjsr_WrappedVarArgs(array);
    this$6.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
  } else {
    const this$10 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
    const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
    const array$1 = [tokenType];
    const params$1 = new $c_sjsr_WrappedVarArgs(array$1);
    this$10.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1)
  };
  return true
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__insertOpeningToken__I__Ltigerpython_parser_lexer_TokenType__Z = (function($thiz, tokenIndex, closingType) {
  const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
  let openingToken;
  if ((x === closingType)) {
    openingToken = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS
  } else {
    const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
    if ((x$3 === closingType)) {
      openingToken = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
      if ((!(x$5 === closingType))) {
        return false
      };
      openingToken = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE
    }
  };
  return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z($thiz, tokenIndex, openingToken)
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__insertClosingToken__I__Ltigerpython_parser_lexer_TokenType__Z = (function($thiz, tokenIndex, openingType) {
  const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
  let closingToken;
  if ((x === openingType)) {
    closingToken = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS
  } else {
    const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
    if ((x$3 === openingType)) {
      closingToken = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
      if ((!(x$5 === openingType))) {
        return false
      };
      closingToken = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE
    }
  };
  return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z($thiz, tokenIndex, closingToken)
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__deleteToken__I__Z = (function($thiz, tokenIndex) {
  const token = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(tokenIndex);
  $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.remove__I__O(tokenIndex);
  const this$4 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
  const pos = token.Ltigerpython_parser_lexer_Token__f_pos;
  const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
  const array = [token];
  const params = new $c_sjsr_WrappedVarArgs(array);
  this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
  return true
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z = (function($thiz, tokenIndex, tokenType) {
  const token = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(tokenIndex);
  $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.update__I__O__V(tokenIndex, new $c_Ltigerpython_parser_lexer_Token(token.Ltigerpython_parser_lexer_Token__f_pos, token.Ltigerpython_parser_lexer_Token__f_len, tokenType));
  const this$4 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
  const pos = token.Ltigerpython_parser_lexer_Token__f_pos;
  const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
  const array = [tokenType, token];
  const params = new $c_sjsr_WrappedVarArgs(array);
  this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
  return true
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z = (function($thiz, tokenIndex) {
  const temp = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(tokenIndex);
  $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.update__I__O__V(tokenIndex, $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((1 + tokenIndex) | 0)));
  $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.update__I__O__V(((1 + tokenIndex) | 0), temp);
  const this$4 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
  const pos = temp.Ltigerpython_parser_lexer_Token__f_pos;
  const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
  const array = [temp, $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(tokenIndex)];
  const params = new $c_sjsr_WrappedVarArgs(array);
  this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
  return true
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__checkForSuperfluousLeftParenthesis__I__Z = (function($thiz, tokenIndex) {
  const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
  let $$x1;
  if ((((2 + tokenIndex) | 0) < this$1.scm_ArrayBuffer__f_size0)) {
    const x = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((1 + tokenIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    $$x1 = (x === x$2)
  } else {
    $$x1 = false
  };
  if ($$x1) {
    const x$3 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((2 + tokenIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
    let $$x2;
    if ((x$3 === x$4)) {
      const this$2 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
      if ((((3 + tokenIndex) | 0) === this$2.scm_ArrayBuffer__f_size0)) {
        $$x2 = true
      } else {
        const x$5 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((3 + tokenIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
        $$x2 = (x$5 === x$6)
      }
    } else {
      $$x2 = false
    };
    if ($$x2) {
      const this$6 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
      const pos = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(tokenIndex).Ltigerpython_parser_lexer_Token__f_pos;
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
      const array = ["("];
      const params = new $c_sjsr_WrappedVarArgs(array);
      this$6.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.remove__I__O(tokenIndex);
      return true
    } else {
      const this$7 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
      let $$x4;
      if ((((3 + tokenIndex) | 0) < this$7.scm_ArrayBuffer__f_size0)) {
        const x$7 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((3 + tokenIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
        $$x4 = (x$7 === x$8)
      } else {
        $$x4 = false
      };
      let $$x3;
      if ($$x4) {
        const this$8 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
        if ((((4 + tokenIndex) | 0) === this$8.scm_ArrayBuffer__f_size0)) {
          $$x3 = true
        } else {
          const x$9 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((4 + tokenIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
          $$x3 = (x$9 === x$10)
        }
      } else {
        $$x3 = false
      };
      if ($$x3) {
        const this$12 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
        const pos$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(tokenIndex).Ltigerpython_parser_lexer_Token__f_pos;
        const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
        const array$1 = ["("];
        const params$1 = new $c_sjsr_WrappedVarArgs(array$1);
        this$12.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1);
        $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.remove__I__O(tokenIndex);
        return true
      } else {
        return false
      }
    }
  } else {
    return false
  }
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I = (function($thiz, index) {
  const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
  const elem = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(index);
  return $f_sc_SeqOps__indexOf__O__I__I(this$1, elem, 0)
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__findLineStart__I__I = (function($thiz, index) {
  let result = index;
  while (true) {
    let $$x1;
    if ((result > 0)) {
      const this$4 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + result) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION];
      const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
      $$x1 = (!$f_sc_SeqOps__contains__O__Z(tokenTypes, this$4))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      result = (((-1) + result) | 0)
    } else {
      break
    }
  };
  return result
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I = (function($thiz, startIndex, tokenTypes) {
  let depth = 0;
  let result = startIndex;
  while (true) {
    const $$x1 = result;
    const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
    if (($$x1 < this$1.scm_ArrayBuffer__f_size0)) {
      const tt = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(result).Ltigerpython_parser_lexer_Token__f_tokenType;
      if ((tokenTypes.contains__O__Z(tt) && (depth <= 0))) {
        return result
      } else if (tt.isLeftBracket__Z()) {
        depth = ((1 + depth) | 0)
      } else if (tt.isRightBracket__Z()) {
        depth = (((-1) + depth) | 0)
      };
      result = ((1 + result) | 0)
    } else {
      break
    }
  };
  return result
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__findColonIndex__I__I = (function($thiz, startIndex) {
  let result = startIndex;
  while (true) {
    const $$x1 = result;
    const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
    if (($$x1 < this$1.scm_ArrayBuffer__f_size0)) {
      const x1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(result).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      if ((x === x1)) {
        return result
      } else {
        result = ((1 + result) | 0)
      }
    } else {
      break
    }
  };
  return result
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__hasColonInRange__I__I__Z = (function($thiz, startIndex, stopIndex) {
  if ((((1 + startIndex) | 0) < stopIndex)) {
    let elem = 0;
    elem = 0;
    let elem$1 = 0;
    elem$1 = 0;
    const x = ((1 + startIndex) | 0);
    const isEmpty = (x >= stopIndex);
    const scala$collection$immutable$Range$$lastElement = (((-1) + stopIndex) | 0);
    if ((!isEmpty)) {
      let i = x;
      while (true) {
        const v1 = i;
        const x1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(v1).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((x$1 === x1)) {
          elem = ((1 + elem) | 0)
        } else {
          const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
          if ((x$3 === x1)) {
            elem = (((-1) + elem) | 0)
          } else {
            const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            if (((x$5 === x1) && (elem === 0))) {
              elem$1 = ((1 + elem$1) | 0)
            }
          }
        };
        if ((i === scala$collection$immutable$Range$$lastElement)) {
          break
        };
        i = ((1 + i) | 0)
      }
    };
    return (elem$1 > 0)
  } else {
    return false
  }
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__findEndOfExpression__I__I = (function($thiz, startIndex) {
  let depth = 0;
  let result = startIndex;
  while (true) {
    const $$x2 = result;
    const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
    if (($$x2 < this$1.scm_ArrayBuffer__f_size0)) {
      const tt = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(result).Ltigerpython_parser_lexer_Token__f_tokenType;
      if (tt.isLeftBracket__Z()) {
        depth = ((1 + depth) | 0)
      } else if (tt.isRightBracket__Z()) {
        depth = (((-1) + depth) | 0)
      } else {
        let $$x1;
        if ((depth === 0)) {
          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRUE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FALSE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONE];
          const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
          $$x1 = (!$f_sc_SeqOps__contains__O__Z(tokenTypes, tt))
        } else {
          $$x1 = false
        };
        if ($$x1) {
          if (((tt.Ltigerpython_parser_lexer_TokenType__f_category !== $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_LITERAL) && (tt.Ltigerpython_parser_lexer_TokenType__f_category !== $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR))) {
            return result
          }
        }
      };
      result = ((1 + result) | 0)
    } else {
      break
    }
  };
  return result
});
const $p_Ltigerpython_parser_parsing_BracketPatcher__isCountBalanced__Z = (function($thiz) {
  const this$1 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
  let res = 0;
  const this$2 = new $c_scm_ArrayBufferView(this$1.scm_ArrayBuffer__f_array, this$1.scm_ArrayBuffer__f_size0);
  const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2);
  while (it.hasNext__Z()) {
    const arg1 = it.next__O();
    const x$2 = arg1;
    const x = x$2.Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    if ((x === x$3)) {
      res = ((1 + res) | 0)
    }
  };
  const $$x2 = res;
  const this$3 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
  let res$1 = 0;
  const this$4 = new $c_scm_ArrayBufferView(this$3.scm_ArrayBuffer__f_array, this$3.scm_ArrayBuffer__f_size0);
  const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$4);
  while (it$1.hasNext__Z()) {
    const arg1$1 = it$1.next__O();
    const x$3$1 = arg1$1;
    const x$1 = x$3$1.Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$2$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
    if ((x$1 === x$2$1)) {
      res$1 = ((1 + res$1) | 0)
    }
  };
  let $$x1;
  if (($$x2 === res$1)) {
    const this$5 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
    let res$2 = 0;
    const this$6 = new $c_scm_ArrayBufferView(this$5.scm_ArrayBuffer__f_array, this$5.scm_ArrayBuffer__f_size0);
    const it$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$6);
    while (it$2.hasNext__Z()) {
      const arg1$2 = it$2.next__O();
      const x$4 = arg1$2;
      const x$5 = x$4.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
      if ((x$5 === x$2$2)) {
        res$2 = ((1 + res$2) | 0)
      }
    };
    const $$x3 = res$2;
    const this$7 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
    let res$3 = 0;
    const this$8 = new $c_scm_ArrayBufferView(this$7.scm_ArrayBuffer__f_array, this$7.scm_ArrayBuffer__f_size0);
    const it$3 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$8);
    while (it$3.hasNext__Z()) {
      const arg1$3 = it$3.next__O();
      const x$5$1 = arg1$3;
      const x$6 = x$5$1.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
      if ((x$6 === x$2$3)) {
        res$3 = ((1 + res$3) | 0)
      }
    };
    $$x1 = ($$x3 === res$3)
  } else {
    $$x1 = false
  };
  if ($$x1) {
    const this$9 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
    let res$4 = 0;
    const this$10 = new $c_scm_ArrayBufferView(this$9.scm_ArrayBuffer__f_array, this$9.scm_ArrayBuffer__f_size0);
    const it$4 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$10);
    while (it$4.hasNext__Z()) {
      const arg1$4 = it$4.next__O();
      const x$6$1 = arg1$4;
      const x$7 = x$6$1.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
      if ((x$7 === x$2$4)) {
        res$4 = ((1 + res$4) | 0)
      }
    };
    const $$x4 = res$4;
    const this$11 = $thiz.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
    let res$5 = 0;
    const this$12 = new $c_scm_ArrayBufferView(this$11.scm_ArrayBuffer__f_array, this$11.scm_ArrayBuffer__f_size0);
    const it$5 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$12);
    while (it$5.hasNext__Z()) {
      const arg1$5 = it$5.next__O();
      const x$7$1 = arg1$5;
      const x$8 = x$7$1.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
      if ((x$8 === x$2$5)) {
        res$5 = ((1 + res$5) | 0)
      }
    };
    return ($$x4 === res$5)
  } else {
    return false
  }
});
class $c_Ltigerpython_parser_parsing_BracketPatcher extends $c_O {
  constructor(lexer, parserState, tokenSource) {
    super();
    this.Ltigerpython_parser_parsing_BracketPatcher__f_lexer = null;
    this.Ltigerpython_parser_parsing_BracketPatcher__f_parserState = null;
    this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens = null;
    this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets = null;
    this.Ltigerpython_parser_parsing_BracketPatcher__f_lexer = lexer;
    this.Ltigerpython_parser_parsing_BracketPatcher__f_parserState = parserState;
    const this$3 = $m_scm_ArrayBuffer$();
    const elems = $m_sc_ArrayOps$().toIndexedSeq$extension__O__sci_IndexedSeq(tokenSource);
    this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens = this$3.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    const this$4 = $m_scm_ArrayBuffer$();
    const elems$1 = $m_sci_Nil$();
    this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets = this$4.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
    const this$5 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
    const this$6 = new $c_scm_ArrayBufferView(this$5.scm_ArrayBuffer__f_array, this$5.scm_ArrayBuffer__f_size0);
    const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$6);
    while (it.hasNext__Z()) {
      const arg1 = it.next__O();
      const token = arg1;
      if (token.Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z()) {
        const this$7 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
        this$7.addOne__O__scm_ArrayBuffer(token)
      } else if (token.Ltigerpython_parser_lexer_Token__f_tokenType.isRightBracket__Z()) {
        const this$8 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
        let $$x1;
        if ((!$f_sc_SeqOps__isEmpty__Z(this$8))) {
          const $$x2 = $m_Ltigerpython_parser_lexer_TokenType$();
          const this$9 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          $$x1 = $$x2.matchBrackets__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType__Z($f_sc_IndexedSeqOps__last__O(this$9).Ltigerpython_parser_lexer_Token__f_tokenType, token.Ltigerpython_parser_lexer_Token__f_tokenType)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const $$x3 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          const this$10 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          $$x3.remove__I__O((((-1) + this$10.scm_ArrayBuffer__f_size0) | 0))
        } else {
          const this$11 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          this$11.addOne__O__scm_ArrayBuffer(token)
        }
      }
    }
  };
  fix__ALtigerpython_parser_lexer_Token() {
    while (true) {
      const this$1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
      if ((!$f_sc_SeqOps__isEmpty__Z(this$1))) {
        const this$2 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
        const this$3 = new $c_scm_ArrayBufferView(this$2.scm_ArrayBuffer__f_array, this$2.scm_ArrayBuffer__f_size0);
        const this$4 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$3);
        let idx;
        _return: {
          let i = 0;
          this$4.drop__I__sc_Iterator(0);
          while (this$4.hasNext__Z()) {
            const arg1 = this$4.next__O();
            const x$1 = arg1;
            if (x$1.Ltigerpython_parser_lexer_Token__f_tokenType.isRightBracket__Z()) {
              idx = i;
              break _return
            };
            i = ((1 + i) | 0)
          };
          idx = (-1)
        };
        if ((idx < 0)) {
          const this$8 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
          const this$7 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          const elem = $f_sc_IndexedSeqOps__last__O(this$7);
          const index = $f_sc_SeqOps__indexOf__O__I__I(this$8, elem, 0);
          const this$9 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          const x = $f_sc_IndexedSeqOps__last__O(this$9).Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
          if (((x === x$2) && this.fixMissingRightParenthesis__I__Z(index))) {
            const $$x1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
            const this$10 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
            $$x1.remove__I__O((((-1) + this$10.scm_ArrayBuffer__f_size0) | 0))
          } else {
            const $$x2 = $m_Ltigerpython_parser_lexer_TokenType$();
            const this$11 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
            this.fixMissingRightBracket__I__Ltigerpython_parser_lexer_TokenType__Z(index, $$x2.getMatchingBracket__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($f_sc_IndexedSeqOps__last__O(this$11).Ltigerpython_parser_lexer_Token__f_tokenType));
            const $$x3 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
            const this$12 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
            $$x3.remove__I__O((((-1) + this$12.scm_ArrayBuffer__f_size0) | 0))
          }
        } else if ((idx === 0)) {
          const this$15 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
          const this$13 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          const this$14 = new $c_scm_ArrayBufferView(this$13.scm_ArrayBuffer__f_array, this$13.scm_ArrayBuffer__f_size0);
          const elem$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$14).next__O();
          const index$2 = $f_sc_SeqOps__indexOf__O__I__I(this$15, elem$1, 0);
          const $$x4 = $m_Ltigerpython_parser_lexer_TokenType$();
          const this$16 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          const this$17 = new $c_scm_ArrayBufferView(this$16.scm_ArrayBuffer__f_array, this$16.scm_ArrayBuffer__f_size0);
          this.fixMissingLeftBracket__I__Ltigerpython_parser_lexer_TokenType__Z(index$2, $$x4.getMatchingBracket__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType(new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$17).next__O().Ltigerpython_parser_lexer_Token__f_tokenType));
          this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.remove__I__O(0)
        } else if ((idx > 0)) {
          if ((!$m_Ltigerpython_parser_lexer_TokenType$().matchBrackets__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O((((-1) + idx) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType, this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(idx).Ltigerpython_parser_lexer_Token__f_tokenType))) {
            if (this.fixSwappedBrackets__I__Z((((-1) + idx) | 0))) {
              this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.remove__I__I__V((((-2) + idx) | 0), 4)
            } else if (this.fixMissingEnclosedBracket__I__Z(idx)) {
              this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.remove__I__I__V(idx, 1)
            } else if (this.fixMissingEnclosedBracket__I__Z((((-1) + idx) | 0))) {
              this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.remove__I__I__V((((-1) + idx) | 0), 1)
            } else {
              this.fixBracketMismatch__I__Z((((-1) + idx) | 0));
              this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.remove__I__I__V((((-1) + idx) | 0), 2)
            }
          } else {
            this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.remove__I__I__V((((-1) + idx) | 0), 2)
          }
        }
      } else {
        break
      }
    };
    const this$19 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
    if ((this$19.scm_ArrayBuffer__f_size0 >= 0)) {
      const len = this$19.scm_ArrayBuffer__f_size0;
      const destination = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len]);
      this$19.copyToArray__O__I__I__I(destination, 0, this$19.scm_ArrayBuffer__f_size0);
      return destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const this$22 = new $c_scm_ArrayBufferView(this$19.scm_ArrayBuffer__f_array, this$19.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$22);
      while (it.hasNext__Z()) {
        const elem$2 = it.next__O();
        const unboxedElem = ((elem$2 === null) ? null : elem$2);
        jsElems.push(unboxedElem)
      };
      return $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems)
    }
  };
  fixMissingRightParenthesis__I__Z(bracketIndex) {
    if ($p_Ltigerpython_parser_parsing_BracketPatcher__checkForSuperfluousLeftParenthesis__I__Z(this, bracketIndex)) {
      return true
    };
    let lineIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__findLineStart__I__I(this, bracketIndex);
    let $$x1;
    if ((lineIndex < bracketIndex)) {
      const x = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      lineIndex = ((1 + lineIndex) | 0)
    };
    const x1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
    let $$x2;
    if ((x$3 === x1)) {
      $$x2 = true
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
      $$x2 = (x$5 === x1)
    };
    if ($$x2) {
      const colonIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__findColonIndex__I__I(this, bracketIndex);
      if ((colonIndex > bracketIndex)) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, colonIndex, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS)
      }
    } else {
      const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
      if (((x$7 === x1) && (((1 + lineIndex) | 0) === bracketIndex))) {
        const x$9 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, ((2 + bracketIndex) | 0));
        const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
        if ((!(x$9 === x$10))) {
          let i = ((1 + bracketIndex) | 0);
          while (true) {
            const $$x4 = i;
            const this$1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
            let $$x3;
            if (($$x4 < this$1.scm_ArrayBuffer__f_size0)) {
              const this$5 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType;
              const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE];
              const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
              $$x3 = (!$f_sc_SeqOps__contains__O__Z(tokenTypes, this$5))
            } else {
              $$x3 = false
            };
            if ($$x3) {
              i = ((1 + i) | 0)
            } else {
              break
            }
          };
          const x$11 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, i);
          const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
          if ((x$11 === x$12)) {
            return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS)
          }
        } else {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__deleteToken__I__Z(this, bracketIndex)
        }
      }
    };
    if ((lineIndex === bracketIndex)) {
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE];
      const i$2 = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, ((1 + bracketIndex) | 0), new $c_sjsr_WrappedVarArgs(array$1));
      const x$13 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, i$2);
      const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
      if ((x$13 === x$14)) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i$2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS)
      }
    };
    const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    const i$3 = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, ((1 + bracketIndex) | 0), new $c_sjsr_WrappedVarArgs(array$2));
    const x$15 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, i$3);
    const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
    if ((!(x$15 === x$16))) {
      return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i$3, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS)
    } else {
      return false
    }
  };
  fixMissingRightBracket__I__Ltigerpython_parser_lexer_TokenType__Z(bracketIndex, rightBracket) {
    const x = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, bracketIndex);
    const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
    let $$x1;
    if ((!(x === x$2))) {
      const x$3 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, (((-1) + bracketIndex) | 0));
      const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      $$x1 = (x$3 === x$4)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const x$5 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, bracketIndex);
      const x$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
      let secondaryAllowed;
      if ((x$5 === x$6)) {
        secondaryAllowed = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN
      } else {
        secondaryAllowed = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON
      };
      let i = $p_Ltigerpython_parser_parsing_BracketPatcher__findEndOfExpression__I__I(this, ((1 + bracketIndex) | 0));
      while (true) {
        const this$4 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, i);
        const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, secondaryAllowed];
        const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
        if ($f_sc_SeqOps__contains__O__Z(tokenTypes, this$4)) {
          i = $p_Ltigerpython_parser_parsing_BracketPatcher__findEndOfExpression__I__I(this, ((1 + i) | 0))
        } else {
          break
        }
      };
      while (true) {
        const x$7 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, i);
        const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
        let $$x3;
        if ((x$7 === x$8)) {
          const this$8 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, (((-1) + i) | 0));
          const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MOD, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MUL, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV];
          const tokenTypes$1 = new $c_sjsr_WrappedVarArgs(array$1);
          $$x3 = $f_sc_SeqOps__contains__O__Z(tokenTypes$1, this$8)
        } else {
          $$x3 = false
        };
        if ((($$x3 && ($p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, ((2 + i) | 0)) !== null)) && $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((2 + i) | 0)), this.Ltigerpython_parser_parsing_BracketPatcher__f_parserState))) {
          const $$x2 = i;
          const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE];
          i = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, ((1 + $$x2) | 0), new $c_sjsr_WrappedVarArgs(array$2))
        } else {
          break
        }
      };
      return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i, rightBracket)
    } else {
      const x$9 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, bracketIndex);
      const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
      if ((x$9 === x$10)) {
        const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE];
        let i$2 = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, ((1 + bracketIndex) | 0), new $c_sjsr_WrappedVarArgs(array$3));
        while (true) {
          const x$11 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, i$2);
          const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
          let $$x7;
          if ((x$11 === x$12)) {
            const this$18 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, (((-1) + i$2) | 0));
            const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS];
            const tokenTypes$2 = new $c_sjsr_WrappedVarArgs(array$4);
            $$x7 = $f_sc_SeqOps__contains__O__Z(tokenTypes$2, this$18)
          } else {
            $$x7 = false
          };
          if ($$x7) {
            const x$13 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, ((1 + i$2) | 0));
            const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION;
            let $$x4;
            if ((x$13 === x$14)) {
              const $$x5 = i$2;
              const this$19 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
              $$x4 = (((2 + $$x5) | 0) < this$19.scm_ArrayBuffer__f_size0)
            } else {
              $$x4 = false
            };
            if (($$x4 && $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((2 + i$2) | 0)), this.Ltigerpython_parser_parsing_BracketPatcher__f_parserState))) {
              const $$x6 = i$2;
              const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE];
              i$2 = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, ((1 + $$x6) | 0), new $c_sjsr_WrappedVarArgs(array$5))
            } else {
              return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i$2, rightBracket)
            }
          } else {
            break
          }
        };
        return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i$2, rightBracket)
      } else {
        const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
        let i$3 = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, ((1 + bracketIndex) | 0), new $c_sjsr_WrappedVarArgs(array$6));
        while (true) {
          const x$15 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, i$3);
          const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
          let $$x11;
          if ((x$15 === x$16)) {
            const this$29 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, (((-1) + i$3) | 0));
            const array$7 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS];
            const tokenTypes$3 = new $c_sjsr_WrappedVarArgs(array$7);
            $$x11 = $f_sc_SeqOps__contains__O__Z(tokenTypes$3, this$29)
          } else {
            $$x11 = false
          };
          if ($$x11) {
            const x$17 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, ((1 + i$3) | 0));
            const x$18 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION;
            let $$x8;
            if ((x$17 === x$18)) {
              const $$x9 = i$3;
              const this$30 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
              $$x8 = (((2 + $$x9) | 0) < this$30.scm_ArrayBuffer__f_size0)
            } else {
              $$x8 = false
            };
            if (($$x8 && $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((2 + i$3) | 0)), this.Ltigerpython_parser_parsing_BracketPatcher__f_parserState))) {
              const $$x10 = i$3;
              const array$8 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
              i$3 = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, ((1 + $$x10) | 0), new $c_sjsr_WrappedVarArgs(array$8))
            } else {
              return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i$3, rightBracket)
            }
          } else {
            break
          }
        };
        return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i$3, rightBracket)
      }
    }
  };
  fixMissingLeftBracket__I__Ltigerpython_parser_lexer_TokenType__Z(bracketIndex, leftBracket) {
    let lineIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__findLineStart__I__I(this, bracketIndex);
    let $$x1;
    if ((lineIndex < bracketIndex)) {
      const x = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      lineIndex = ((1 + lineIndex) | 0)
    };
    const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    if ((leftBracket === x$4)) {
      const x1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
      let $$x2;
      if ((x$5 === x1)) {
        $$x2 = true
      } else {
        const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
        $$x2 = (x$7 === x1)
      };
      if ($$x2) {
        const $$x3 = lineIndex;
        const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
        const colonIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, $$x3, new $c_sjsr_WrappedVarArgs(array));
        if (((((2 + lineIndex) | 0) <= bracketIndex) && (bracketIndex === (((-1) + colonIndex) | 0)))) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, ((2 + lineIndex) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS)
        }
      } else {
        const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
        let $$x4;
        if ((x$9 === x1)) {
          const x$11 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, ((1 + bracketIndex) | 0));
          const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
          $$x4 = (x$11 === x$12)
        } else {
          $$x4 = false
        };
        if ($$x4) {
          const $$x5 = lineIndex;
          const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
          const colonIndex$2 = $p_Ltigerpython_parser_parsing_BracketPatcher__findTokenType__I__sci_Seq__I(this, $$x5, new $c_sjsr_WrappedVarArgs(array$1));
          if ((bracketIndex < colonIndex$2)) {
            return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, ((1 + lineIndex) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS)
          }
        }
      }
    };
    let $$x7;
    if ((((1 + lineIndex) | 0) === bracketIndex)) {
      const x$13 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, lineIndex);
      const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      $$x7 = (x$13 === x$14)
    } else {
      $$x7 = false
    };
    let $$x6;
    if ($$x7) {
      const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
      $$x6 = (!(leftBracket === x$16))
    } else {
      $$x6 = false
    };
    if ($$x6) {
      return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, bracketIndex, leftBracket)
    } else {
      const x1$2 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, (((-1) + bracketIndex) | 0));
      const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
      if ((x$17 === x1$2)) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__insertToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, bracketIndex, leftBracket)
      } else {
        const x$20 = $p_Ltigerpython_parser_parsing_BracketPatcher__tokenTypes__I__Ltigerpython_parser_lexer_TokenType(this, bracketIndex);
        if ((x1$2 === x$20)) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__deleteToken__I__Z(this, bracketIndex)
        }
      }
    };
    return false
  };
  fixSwappedBrackets__I__Z(bracketIndex) {
    let $$x1;
    if (($p_Ltigerpython_parser_parsing_BracketPatcher__isCountBalanced__Z(this) && ((((-1) + bracketIndex) | 0) >= 0))) {
      const this$1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
      $$x1 = (((2 + bracketIndex) | 0) < this$1.scm_ArrayBuffer__f_size0)
    } else {
      $$x1 = false
    };
    if ((((($$x1 && this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O((((-1) + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z()) && this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(((2 + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType.isRightBracket__Z()) && $m_Ltigerpython_parser_lexer_TokenType$().matchBrackets__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O((((-1) + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType, this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(((1 + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType)) && $m_Ltigerpython_parser_lexer_TokenType$().matchBrackets__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType, this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(((2 + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType))) {
      const tokenIndex1 = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, (((-1) + bracketIndex) | 0));
      const tokenIndex2 = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, bracketIndex);
      const tokenIndex3 = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, ((1 + bracketIndex) | 0));
      const tokenIndex4 = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, ((2 + bracketIndex) | 0));
      const canSwap1 = (((1 + tokenIndex1) | 0) === tokenIndex2);
      const canSwap2 = (((1 + tokenIndex3) | 0) === tokenIndex4);
      if ((canSwap1 && canSwap2)) {
        const x = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O((((-1) + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        let $$x2;
        if (((x === x$2) && (tokenIndex1 > 0))) {
          const x$3 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          $$x2 = (x$3 === x$4)
        } else {
          $$x2 = false
        };
        if ($$x2) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex1)
        };
        if (((bracketIndex >= 2) && this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O((((-2) + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z())) {
          const x$5 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
          let preType;
          if (((x$5 === x$6) && this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-2) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType.isRightBracket__Z())) {
            const this$2 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$();
            const token = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-2) + tokenIndex1) | 0));
            preType = this$2.fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(token.Ltigerpython_parser_lexer_Token__f_tokenType)
          } else {
            preType = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN
          };
          const x$7 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((1 + tokenIndex4) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
          let $$x3;
          if ((x$7 === x$8)) {
            if (this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((2 + tokenIndex4) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z()) {
              $$x3 = true
            } else {
              const x$9 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((2 + tokenIndex4) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
              const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
              if ((x$9 === x$10)) {
                const x$11 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((3 + tokenIndex4) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
                const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION;
                if (((x$11 === x$12) && this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((3 + tokenIndex4) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z())) {
                  $$x3 = true
                } else {
                  $$x3 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((3 + tokenIndex4) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z()
                }
              } else {
                $$x3 = false
              }
            }
          } else {
            $$x3 = false
          };
          let postType;
          if ($$x3) {
            const this$3 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$();
            const token$1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((2 + tokenIndex4) | 0));
            postType = this$3.fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(token$1.Ltigerpython_parser_lexer_Token__f_tokenType)
          } else {
            postType = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN
          };
          const x$14 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN;
          let $$x4;
          if ((!((preType === null) ? (x$14 === null) : preType.equals__O__Z(x$14)))) {
            const x$16 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_PARENS;
            $$x4 = (!((preType === null) ? (x$16 === null) : preType.equals__O__Z(x$16)))
          } else {
            $$x4 = false
          };
          if ($$x4) {
            const x$18 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN;
            let $$x5;
            if (((postType === null) ? (x$18 === null) : postType.equals__O__Z(x$18))) {
              $$x5 = true
            } else {
              const x$20 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_PARENS;
              $$x5 = ((postType === null) ? (x$20 === null) : postType.equals__O__Z(x$20))
            };
            if (($$x5 || ((postType === null) ? (preType === null) : postType.equals__O__Z(preType)))) {
              const this$4 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$();
              const token$2 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex);
              const x$23 = this$4.fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(token$2.Ltigerpython_parser_lexer_Token__f_tokenType);
              if (((x$23 === null) ? (preType === null) : x$23.equals__O__Z(preType))) {
                return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex1)
              } else {
                return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex3)
              }
            }
          } else {
            const x$26 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN;
            let $$x6;
            if ((!((postType === null) ? (x$26 === null) : postType.equals__O__Z(x$26)))) {
              const x$28 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$().Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_PARENS;
              $$x6 = (!((postType === null) ? (x$28 === null) : postType.equals__O__Z(x$28)))
            } else {
              $$x6 = false
            };
            if ($$x6) {
              const this$5 = $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$();
              const token$3 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex);
              const x$29 = this$5.fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(token$3.Ltigerpython_parser_lexer_Token__f_tokenType);
              if (((x$29 === null) ? (postType === null) : x$29.equals__O__Z(postType))) {
                return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex1)
              } else {
                return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex3)
              }
            }
          }
        };
        const x$31 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O((((-1) + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$32 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((x$31 === x$32)) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex1)
        } else {
          const x$33 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$34 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
          if ((x$33 === x$34)) {
            return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex3)
          } else {
            const x$35 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O((((-1) + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$36 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
            if ((x$35 === x$36)) {
              if ((tokenIndex1 > 0)) {
                const x1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
                const x$37 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
                let $$x7;
                if ((x$37 === x1)) {
                  $$x7 = true
                } else {
                  const x$39 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
                  if ((x$39 === x1)) {
                    $$x7 = true
                  } else {
                    const x$41 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                    if ((x$41 === x1)) {
                      $$x7 = true
                    } else {
                      const x$43 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                      $$x7 = (x$43 === x1)
                    }
                  }
                };
                if ($$x7) {
                  return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex3)
                } else {
                  return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex1)
                }
              } else {
                return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex3)
              }
            } else {
              return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex3)
            }
          }
        }
      } else if (canSwap1) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex1)
      } else if (canSwap2) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__swapTokens__I__Z(this, tokenIndex3)
      };
      return false
    } else {
      return false
    }
  };
  fixMissingEnclosedBracket__I__Z(bracketIndex) {
    let $$x1;
    if ((bracketIndex > 0)) {
      const this$1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
      $$x1 = (((1 + bracketIndex) | 0) < this$1.scm_ArrayBuffer__f_size0)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      let i = (((-1) + bracketIndex) | 0);
      let j = ((1 + bracketIndex) | 0);
      while (true) {
        let $$x2;
        if ((i >= 0)) {
          const $$x3 = j;
          const this$2 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
          $$x2 = ($$x3 < this$2.scm_ArrayBuffer__f_size0)
        } else {
          $$x2 = false
        };
        if (($$x2 && $m_Ltigerpython_parser_lexer_TokenType$().matchBrackets__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType, this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(j).Ltigerpython_parser_lexer_Token__f_tokenType))) {
          i = (((-1) + i) | 0);
          j = ((1 + j) | 0)
        } else {
          break
        }
      };
      let $$x5;
      if ((i === (-1))) {
        const $$x6 = j;
        const this$3 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
        $$x5 = ($$x6 === this$3.scm_ArrayBuffer__f_size0)
      } else {
        $$x5 = false
      };
      let $$x4;
      if (($$x5 || ((i === (-1)) && this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(j).Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z()))) {
        $$x4 = true
      } else {
        const $$x7 = j;
        const this$4 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets;
        if (($$x7 === this$4.scm_ArrayBuffer__f_size0)) {
          $$x4 = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType.isRightBracket__Z()
        } else {
          $$x4 = false
        }
      };
      if ($$x4) {
        if (this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType.isLeftBracket__Z()) {
          this.fixMissingEnclosedRightBracket__I__Z(bracketIndex)
        } else {
          this.fixMissingEnclosedLeftBracket__I__Z(bracketIndex)
        };
        return true
      } else {
        return false
      }
    } else {
      return false
    }
  };
  fixMissingEnclosedRightBracket__I__Z(bracketIndex) {
    const bracket = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex);
    const this$4 = this.Ltigerpython_parser_parsing_BracketPatcher__f_parserState;
    const pos = bracket.Ltigerpython_parser_lexer_Token__f_pos;
    const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET;
    const array = [bracket];
    const params = new $c_sjsr_WrappedVarArgs(array);
    this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
    const tokenIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, bracketIndex);
    let i = ((1 + tokenIndex) | 0);
    if ($m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(i), this.Ltigerpython_parser_parsing_BracketPatcher__f_parserState)) {
      const endIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, ((1 + bracketIndex) | 0));
      i = endIndex
    };
    return $p_Ltigerpython_parser_parsing_BracketPatcher__insertClosingToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i, this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType)
  };
  fixMissingEnclosedLeftBracket__I__Z(bracketIndex) {
    const x = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
    if ((!(x === x$2))) {
      const beginIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, (((-1) + bracketIndex) | 0));
      const tokenIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, bracketIndex);
      let i = (((-1) + tokenIndex) | 0);
      let depth = 0;
      while ((i > beginIndex)) {
        const x1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
        if (((x$3 === x1) && (depth === 0))) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__insertOpeningToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, ((1 + i) | 0), this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType)
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          let $$x2;
          if ((x$5 === x1)) {
            $$x2 = true
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
            if ((x$7 === x1)) {
              $$x2 = true
            } else {
              const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
              $$x2 = (x$9 === x1)
            }
          };
          let $$x1;
          if ($$x2) {
            if ((depth === 0)) {
              const x$11 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + i) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
              const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
              $$x1 = (x$11 === x$12)
            } else {
              $$x1 = false
            }
          } else {
            $$x1 = false
          };
          if ($$x1) {
            return $p_Ltigerpython_parser_parsing_BracketPatcher__insertOpeningToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, i, this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType)
          } else {
            if (x1.isRightBracket__Z()) {
              depth = ((1 + depth) | 0)
            } else if (x1.isLeftBracket__Z()) {
              depth = (((-1) + depth) | 0)
            };
            i = (((-1) + i) | 0)
          }
        }
      };
      return $p_Ltigerpython_parser_parsing_BracketPatcher__deleteToken__I__Z(this, tokenIndex)
    } else {
      return false
    }
  };
  fixBracketMismatch__I__Z(bracketIndex) {
    const tokenIndex1 = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, bracketIndex);
    const tokenIndex2 = $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, ((1 + bracketIndex) | 0));
    const leftBracket = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(bracketIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
    const rightBracket = this.Ltigerpython_parser_parsing_BracketPatcher__f_brackets.apply__I__O(((1 + bracketIndex) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
    let lineIndex = $p_Ltigerpython_parser_parsing_BracketPatcher__findLineStart__I__I(this, bracketIndex);
    let $$x1;
    if ((lineIndex < bracketIndex)) {
      const x = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      lineIndex = ((1 + lineIndex) | 0)
    };
    let $$x2;
    if ($p_Ltigerpython_parser_parsing_BracketPatcher__hasColonInRange__I__I__Z(this, lineIndex, tokenIndex1)) {
      const this$4 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR];
      const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
      $$x2 = $f_sc_SeqOps__contains__O__Z(tokenTypes, this$4)
    } else {
      $$x2 = false
    };
    if ($$x2) {
      while (true) {
        let $$x3;
        if ((lineIndex < tokenIndex1)) {
          const x$3 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
          $$x3 = (!(x$3 === x$4))
        } else {
          $$x3 = false
        };
        if ($$x3) {
          lineIndex = ((1 + lineIndex) | 0)
        } else {
          break
        }
      }
    };
    const x1 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(lineIndex).Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
    let $$x4;
    if ((x$5 === x1)) {
      $$x4 = true
    } else {
      const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
      $$x4 = (x$7 === x1)
    };
    if ($$x4) {
      const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
      if ((leftBracket === x$10)) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS)
      } else {
        const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
        if ((rightBracket === x$12)) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS)
        }
      }
    } else {
      const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL;
      let $$x5;
      if ((x$13 === x1)) {
        const x$15 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
        $$x5 = (x$15 === x$16)
      } else {
        $$x5 = false
      };
      if ($$x5) {
        const this$8 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-2) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
        const tokenTypes$1 = new $c_sjsr_WrappedVarArgs(array$1);
        if ($f_sc_SeqOps__contains__O__Z(tokenTypes$1, this$8)) {
          const x$18 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
          if ((leftBracket === x$18)) {
            return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET)
          } else {
            const x$20 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
            if ((rightBracket === x$20)) {
              return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET)
            }
          }
        }
      } else {
        const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
        let $$x6;
        if ((x$21 === x1)) {
          $$x6 = true
        } else {
          const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
          $$x6 = (x$23 === x1)
        };
        if (($$x6 && (lineIndex === (((-1) + tokenIndex1) | 0)))) {
          const this$9 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens;
          let $$x7;
          if ((((1 + tokenIndex2) | 0) < this$9.scm_ArrayBuffer__f_size0)) {
            const x$25 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O(((1 + tokenIndex2) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$26 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            $$x7 = (x$25 === x$26)
          } else {
            $$x7 = false
          };
          if ($$x7) {
            const x$28 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
            if ((leftBracket === x$28)) {
              return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS)
            } else {
              const x$30 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
              if ((rightBracket === x$30)) {
                return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS)
              }
            }
          }
        }
      }
    };
    let $$x8;
    if ((tokenIndex1 > 0)) {
      const x$31 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$32 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
      $$x8 = (x$31 === x$32)
    } else {
      $$x8 = false
    };
    if ($$x8) {
      const x$34 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
      if ((leftBracket === x$34)) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET)
      } else {
        const x$36 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
        if ((rightBracket === x$36)) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET)
        }
      }
    };
    const x$38 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
    let $$x9;
    if ((leftBracket === x$38)) {
      $$x9 = true
    } else {
      const x$40 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
      $$x9 = (rightBracket === x$40)
    };
    if ($$x9) {
      let $$x10;
      if ((tokenIndex1 > 0)) {
        const x$41 = this.Ltigerpython_parser_parsing_BracketPatcher__f_tokens.apply__I__O((((-1) + tokenIndex1) | 0)).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$42 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
        $$x10 = (x$41 === x$42)
      } else {
        $$x10 = false
      };
      if ($$x10) {
        const x$44 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((leftBracket === x$44)) {
          const x$46 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
          if ((rightBracket === x$46)) {
            $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS)
          } else {
            $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET)
          }
        } else {
          const x$48 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
          if ((leftBracket === x$48)) {
            $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS)
          } else {
            $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET)
          }
        };
        return true
      };
      if ($p_Ltigerpython_parser_parsing_BracketPatcher__hasColonInRange__I__I__Z(this, tokenIndex1, $p_Ltigerpython_parser_parsing_BracketPatcher__bracketToTokenIndex__I__I(this, ((1 + bracketIndex) | 0)))) {
        const x$50 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((leftBracket === x$50)) {
          $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE)
        } else {
          $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE)
        };
        return true
      }
    };
    const x$52 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
    if ((rightBracket === x$52)) {
      const x$53 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
      if ((x$53 === leftBracket)) {
        return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET)
      } else {
        const x$55 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((x$55 === leftBracket)) {
          return $p_Ltigerpython_parser_parsing_BracketPatcher__replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(this, tokenIndex2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE)
        }
      }
    };
    return false
  };
}
const $d_Ltigerpython_parser_parsing_BracketPatcher = new $TypeData().initClass({
  Ltigerpython_parser_parsing_BracketPatcher: 0
}, false, "tigerpython.parser.parsing.BracketPatcher", {
  Ltigerpython_parser_parsing_BracketPatcher: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_BracketPatcher.prototype.$classData = $d_Ltigerpython_parser_parsing_BracketPatcher;
const $p_Ltigerpython_parser_parsing_ExpressionParser__checkMissingOperator__Ltigerpython_parser_lexer_TokenBuffer__V = (function($thiz, tokens) {
  const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
  let $$x1;
  if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
    const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AND, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_OR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE];
    $$x1 = (!tokens.isPossibleKeyword__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1)))
  } else {
    $$x1 = false
  };
  if ($$x1) {
    $thiz.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA, $m_sci_Nil$());
    tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR)
  }
});
const $p_Ltigerpython_parser_parsing_ExpressionParser__checkDoubleName__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression = (function($thiz, token, tokens) {
  const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
  let $$x1;
  if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
    const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AND, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_OR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE];
    $$x1 = (!tokens.isPossibleKeyword__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1)))
  } else {
    $$x1 = false
  };
  if ($$x1) {
    const s1 = token.Ltigerpython_parser_lexer_Token__f_value;
    const s2 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
    const x1 = $thiz.Ltigerpython_parser_parsing_ExpressionParser__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().connectNames__T__T__s_Option(s1, s2);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const s = x2.s_Some__f_value;
      $thiz.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE, $m_sci_Nil$());
      tokens.skipToken__V();
      return new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, s)
    } else {
      return new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.Ltigerpython_parser_lexer_Token__f_value)
    }
  } else {
    return new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.Ltigerpython_parser_lexer_Token__f_value)
  }
});
const $p_Ltigerpython_parser_parsing_ExpressionParser__stopParsingTestList__sci_Seq__Ltigerpython_parser_lexer_TokenBuffer__Z = (function($thiz, base, tokens) {
  if ((base.length__I() === 1)) {
    const x1 = base.head__O();
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const x4 = x1;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const x1$2 = x4.Ltigerpython_parser_ast_AstNode$Call__f_function;
        if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
          const x2 = x1$2;
          const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
          return (name === "switch")
        } else {
          return false
        }
      }
    };
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x2$2 = x1;
      const name$2 = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
      return (name$2 === "print")
    };
    return false
  } else {
    return false
  }
});
class $c_Ltigerpython_parser_parsing_ExpressionParser extends $c_O {
  constructor(parser, parserState) {
    super();
    this.Ltigerpython_parser_parsing_ExpressionParser__f_parser = null;
    this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState = null;
    this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack = null;
    this.Ltigerpython_parser_parsing_ExpressionParser__f_parser = parser;
    this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState = parserState;
    const elems = $m_sci_Nil$();
    const this$2 = new $c_scm_Stack(16);
    this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack = this$2.addAll__sc_IterableOnce__scm_ArrayDeque(elems)
  };
  firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens) {
    if (tokens.hasNext__Z()) {
      const token = tokens.head__Ltigerpython_parser_lexer_Token();
      return $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
    } else {
      return false
    }
  };
  parseName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens) {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const token = tokens.next__Ltigerpython_parser_lexer_Token();
      const x = tokens.headType__Ltigerpython_parser_lexer_TokenType();
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x === x$2)) {
        const this$7 = $m_scm_ArrayBuffer$();
        const array$1 = [token.Ltigerpython_parser_lexer_Token__f_value];
        const elems = new $c_sjsr_WrappedVarArgs(array$1);
        const result = this$7.from__sc_IterableOnce__scm_ArrayBuffer(elems);
        while (true) {
          const x$3 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
          const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          if ((x$3 === x$4)) {
            const elem = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
            result.addOne__O__scm_ArrayBuffer(elem)
          } else {
            break
          }
        };
        const s = $f_sc_IterableOnceOps__mkString__T__T__T__T(result, "", " ", "");
        const this$11 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
        const pos = token.Ltigerpython_parser_lexer_Token__f_pos;
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
        const array$2 = [s];
        const params = new $c_sjsr_WrappedVarArgs(array$2);
        this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
        return new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, s)
      } else {
        return new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.Ltigerpython_parser_lexer_Token__f_value)
      }
    } else {
      this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$());
      return new $c_Ltigerpython_parser_ast_AstNode$Name(tokens.pos__I(), "")
    }
  };
  parseDefName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens) {
    if (tokens.hasNext__Z()) {
      const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      const this$1 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const x1 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x === x1)) {
        const elem = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
        result.addOne__O__scm_ArrayBuffer(elem)
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
        let $$x1;
        if ((x$3 === x1)) {
          $$x1 = true
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
          if ((x$5 === x1)) {
            $$x1 = true
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            $$x1 = (x$7 === x1)
          }
        };
        if ($$x1) {
          return this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$())
        } else {
          const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT;
          let $$x2;
          if ((x$9 === x1)) {
            $$x2 = true
          } else {
            const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
            if ((x$11 === x1)) {
              $$x2 = true
            } else {
              const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS;
              $$x2 = (x$13 === x1)
            }
          };
          if ($$x2) {
            const elem$1 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_name;
            result.addOne__O__scm_ArrayBuffer(elem$1)
          } else {
            const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
            let $$x3;
            if ((x$15 === x1)) {
              $$x3 = true
            } else {
              const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG;
              $$x3 = (x$17 === x1)
            };
            if ($$x3) {
              const elem$2 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
              result.addOne__O__scm_ArrayBuffer(elem$2)
            } else {
              const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
              if ((x$19 === x1)) {
                this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$());
                const elem$3 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
                result.addOne__O__scm_ArrayBuffer(elem$3)
              } else {
                return this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$())
              }
            }
          }
        }
      };
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON];
      let $$x4;
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
        $$x4 = tokens.hasPeekType__I__sci_Seq__Z(1, new $c_sjsr_WrappedVarArgs(array$1))
      } else {
        $$x4 = false
      };
      if ($$x4) {
        const elem$4 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_name;
        result.addOne__O__scm_ArrayBuffer(elem$4)
      };
      while (true) {
        const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_AND, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_NOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT];
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
          const x1$2 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          let $$x5;
          if ((x$21 === x1$2)) {
            $$x5 = true
          } else {
            const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
            if ((x$23 === x1$2)) {
              $$x5 = true
            } else {
              const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG;
              if ((x$25 === x1$2)) {
                $$x5 = true
              } else {
                const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR;
                if ((x$27 === x1$2)) {
                  $$x5 = true
                } else {
                  const x$29 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
                  $$x5 = (x$29 === x1$2)
                }
              }
            }
          };
          if ($$x5) {
            const elem$5 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
            result.addOne__O__scm_ArrayBuffer(elem$5)
          } else {
            const elem$6 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_name;
            result.addOne__O__scm_ArrayBuffer(elem$6)
          }
        } else {
          break
        }
      };
      if ((result.scm_ArrayBuffer__f_size0 > 1)) {
        const this$14 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
        const array$3 = [$f_sc_IterableOnceOps__mkString__T__T__T__T(result, "", " ", "")];
        const params = new $c_sjsr_WrappedVarArgs(array$3);
        this$14.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code, params)
      };
      return ((!$f_sc_SeqOps__isEmpty__Z(result)) ? new $c_Ltigerpython_parser_ast_AstNode$Name(startPos, $f_sc_IterableOnceOps__mkString__T__T__T__T(result, "", "", "")) : this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$()))
    } else {
      return this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT, $m_sci_Nil$())
    }
  };
  parseNameList__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Name(tokens) {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const elem = new $c_Ltigerpython_parser_ast_AstNode$Name(startPos, tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value);
        result.addOne__O__scm_ArrayBuffer(elem);
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
        tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))
      } else {
        break
      }
    };
    if ($f_sc_SeqOps__isEmpty__Z(result)) {
      this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$())
    };
    if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
      const len = result.scm_ArrayBuffer__f_size0;
      const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Name.getArrayOf(), [len]);
      result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
      return destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const this$11 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$11);
      while (it.hasNext__Z()) {
        const elem$1 = it.next__O();
        const unboxedElem = ((elem$1 === null) ? null : elem$1);
        jsElems.push(unboxedElem)
      };
      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Name.getArrayOf(), jsElems)
    }
  };
  parseDottedName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens) {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      const this$4 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const result = this$4.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const elem = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
      result.addOne__O__scm_ArrayBuffer(elem);
      while (true) {
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT];
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
          tokens.next__Ltigerpython_parser_lexer_Token();
          const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
          if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
            const elem$1 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
            result.addOne__O__scm_ArrayBuffer(elem$1)
          } else {
            result.addOne__O__scm_ArrayBuffer("???")
          }
        } else {
          break
        }
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Name(startPos, $f_sc_IterableOnceOps__mkString__T__T__T__T(result, "", ".", ""))
    } else {
      return null
    }
  };
  parseAsNames__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Alias(tokens) {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const result = this.parseAsNames__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Alias(tokens);
      tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS);
      return result
    } else {
      const startPos = tokens.pos__I();
      const this$4 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const names = this$4.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      while (true) {
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
          const name = this.parseDottedName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens);
          const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AS];
          let asName;
          if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
            asName = this.parseName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens)
          } else {
            asName = null
          };
          if ((name !== null)) {
            const elem = new $c_Ltigerpython_parser_ast_AstNode$Alias(startPos, name, asName);
            names.addOne__O__scm_ArrayBuffer(elem)
          };
          const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
          if ((!tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3)))) {
            const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
            if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4))) {
              this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$())
            }
          }
        } else {
          break
        }
      };
      if ((names.scm_ArrayBuffer__f_size0 >= 0)) {
        const len = names.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Alias.getArrayOf(), [len]);
        names.copyToArray__O__I__I__I(destination, 0, names.scm_ArrayBuffer__f_size0);
        return destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$20 = new $c_scm_ArrayBufferView(names.scm_ArrayBuffer__f_array, names.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$20);
        while (it.hasNext__Z()) {
          const elem$1 = it.next__O();
          const unboxedElem = ((elem$1 === null) ? null : elem$1);
          jsElems.push(unboxedElem)
        };
        return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Alias.getArrayOf(), jsElems)
      }
    }
  };
  parseDecorator__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const name = this.parseName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens);
        result = new $c_Ltigerpython_parser_ast_AstNode$Attribute(result.pos__I(), name.endPos__I(), result, name)
      } else {
        break
      }
    };
    const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
      const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
        result = $m_Ltigerpython_parser_ast_AstNode$Call$().withoutArguments__Ltigerpython_parser_ast_AstNode$Expression__I__Ltigerpython_parser_ast_AstNode$Call(result, tokens.prevEndPos__I())
      } else {
        const arg = this.Ltigerpython_parser_parsing_ExpressionParser__f_parser.Ltigerpython_parser_parsing_Parser__f_argumentParser.parseArgList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Arguments(tokens);
        tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS);
        const f = result;
        const endPos = tokens.prevEndPos__I();
        result = new $c_Ltigerpython_parser_ast_AstNode$Call(f.pos__I(), endPos, f, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_values, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs)
      }
    };
    return result
  };
  parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const curIndex = tokens.Ltigerpython_parser_lexer_TokenBuffer__f_index;
    const result = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    let rc11 = false;
    let x5 = null;
    const x1 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
    if ((x1 === null)) {
      return result
    };
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
    if ((x === x1)) {
      this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED, $m_sci_Nil$());
      tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EQ);
      tokens.reset__I__V(curIndex);
      return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    };
    const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_ARROW;
    if ((x$3 === x1)) {
      const $$x2 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
      const $$x1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
      const array = ["=>", ">="];
      $$x2.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x1, new $c_sjsr_WrappedVarArgs(array));
      tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GEQ);
      tokens.reset__I__V(curIndex);
      return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    };
    const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
    if ((x$5 === x1)) {
      rc11 = true;
      x5 = x1;
      let $$x3;
      if ((result instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const token = tokens.peek__I__Ltigerpython_parser_lexer_Token(1);
        $$x3 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
      } else {
        $$x3 = false
      };
      if ($$x3) {
        tokens.next__Ltigerpython_parser_lexer_Token();
        this.parseExprList__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Expression(tokens);
        const x1$2 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
        const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EQ;
        let $$x4;
        if ((x$7 === x1$2)) {
          $$x4 = true
        } else {
          const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEQ;
          if ((x$9 === x1$2)) {
            $$x4 = true
          } else {
            const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LESS;
            if ((x$11 === x1$2)) {
              $$x4 = true
            } else {
              const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEQ;
              if ((x$13 === x1$2)) {
                $$x4 = true
              } else {
                const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GREATER;
                if ((x$15 === x1$2)) {
                  $$x4 = true
                } else {
                  const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GEQ;
                  $$x4 = (x$17 === x1$2)
                }
              }
            }
          }
        };
        if ($$x4) {
          const op = tokens.next__Ltigerpython_parser_lexer_Token();
          const right = this.parseExprListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
          if ((right instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
            const this$4 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
            const pos = result.pos__I();
            const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE;
            const params = $m_sci_Nil$();
            this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
          } else {
            const this$5 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
            const pos$1 = result.pos__I();
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
            const params$1 = $m_sci_Nil$();
            this$5.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
          };
          return $m_Ltigerpython_parser_ast_AstNode$Compare$().fromSimple__I__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_ast_AstNode$Compare(result.pos__I(), result, $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(op.Ltigerpython_parser_lexer_Token__f_tokenType), right)
        } else {
          const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
          let $$x5;
          if ((x$19 === x1$2)) {
            $$x5 = true
          } else {
            const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT_IN;
            if ((x$21 === x1$2)) {
              $$x5 = true
            } else {
              const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS;
              if ((x$23 === x1$2)) {
                $$x5 = true
              } else {
                const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS_NOT;
                $$x5 = (x$25 === x1$2)
              }
            }
          };
          if ($$x5) {
            const op$2 = tokens.next__Ltigerpython_parser_lexer_Token();
            const right$2 = this.parseExprListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
            const this$6 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
            const pos$2 = result.pos__I();
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
            const params$2 = $m_sci_Nil$();
            this$6.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2);
            return $m_Ltigerpython_parser_ast_AstNode$Compare$().fromSimple__I__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_ast_AstNode$Compare(result.pos__I(), result, $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(op$2.Ltigerpython_parser_lexer_Token__f_tokenType), right$2)
          } else {
            return result
          }
        }
      }
    };
    if (rc11) {
      if ((result instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
        const this$7 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
        const pos$3 = tokens.pos__I();
        const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA;
        const params$3 = $m_sci_Nil$();
        this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3);
        tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AND);
        tokens.reset__I__V(curIndex);
        return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      } else {
        const this$11 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
        const pos$4 = tokens.pos__I();
        const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
        const array$1 = [","];
        const params$4 = new $c_sjsr_WrappedVarArgs(array$1);
        this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$4, params$4);
        tokens.skipToken__V();
        tokens.reset__I__V(curIndex);
        return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      }
    };
    const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT_ASSIGN;
    let $$x6;
    if ((x$27 === x1)) {
      $$x6 = true
    } else {
      const x$29 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT_ASSIGN;
      $$x6 = (x$29 === x1)
    };
    if ($$x6) {
      const x$32 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT_ASSIGN;
      let new_tt;
      if ((x1 === x$32)) {
        new_tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEQ
      } else {
        new_tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GEQ
      };
      const $$x8 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
      const $$x7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
      const array$2 = [x1, new_tt];
      $$x8.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x7, new $c_sjsr_WrappedVarArgs(array$2));
      tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V(new_tt);
      tokens.reset__I__V(curIndex);
      return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    };
    const x$33 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
    if ((x$33 === x1)) {
      const orig_str = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
      const x1$3 = orig_str.toLowerCase();
      let tt;
      matchResult: {
        if ((x1$3 === "i")) {
          const this$18 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
          const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT];
          const tokenTypes = new $c_sjsr_WrappedVarArgs(array$3);
          if ($f_sc_SeqOps__contains__O__Z(tokenTypes, this$18)) {
            tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS;
            break matchResult
          } else {
            tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
            break matchResult
          }
        } else if (((x1$3 === "is") || ((x1$3 === "s") || (x1$3 === "si")))) {
          tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS;
          break matchResult
        } else if (((x1$3 === "in") || ((x1$3 === "n") || (x1$3 === "ni")))) {
          tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
          break matchResult
        } else if (((x1$3 === "not") || ((x1$3 === "nto") || ((x1$3 === "ont") || ((x1$3 === "nt") || ((x1$3 === "no") || (x1$3 === "ot"))))))) {
          tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT;
          break matchResult
        } else if ((x1$3 === "notin")) {
          tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT_IN;
          break matchResult
        } else if ((x1$3 === "isnot")) {
          tt = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS_NOT;
          break matchResult
        } else if ((x1$3 === "ind")) {
          const token$1 = tokens.peek__I__Ltigerpython_parser_lexer_Token(1);
          if ($m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token$1, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)) {
            return result
          }
        };
        if (((((x1$3.length | 0) >= 0) && (x1$3.substring(0, ("in".length | 0)) === "in")) || (((x1$3.length | 0) >= 0) && (x1$3.substring(0, ("is".length | 0)) === "is")))) {
          const this$21 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
          const pos$5 = ((2 + tokens.pos__I()) | 0);
          const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
          const params$5 = $m_sci_Nil$();
          this$21.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$5, params$5);
          const $$x10 = tokens.head__Ltigerpython_parser_lexer_Token();
          const $$x9 = $m_sc_StringOps$();
          const x$1 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
          $$x10.Ltigerpython_parser_lexer_Token__f_value = $$x9.drop$extension__T__I__T(x$1, 2);
          if ((((x1$3.length | 0) >= 0) && (x1$3.substring(0, ("is".length | 0)) === "is"))) {
            tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS)
          } else {
            tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN)
          };
          tokens.reset__I__V(curIndex);
          return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
        };
        return result
      };
      const $$x12 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
      const $$x11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
      const array$4 = [orig_str, tt];
      $$x12.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x11, new $c_sjsr_WrappedVarArgs(array$4));
      tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V(tt);
      tokens.reset__I__V(curIndex);
      return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    };
    if ((x1.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT)) {
      this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN, $m_sci_Nil$());
      tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EQ);
      tokens.reset__I__V(curIndex);
      return this.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    };
    return result
  };
  parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LAMBDA];
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      return this.parseLambdaDef__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)
    } else {
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
      const nonLocalReturnKey1 = $ct_O__(new $c_O());
      let $$x2;
      try {
        const end = (array$1.length | 0);
        const isEmpty = (end <= 0);
        const scala$collection$immutable$Range$$lastElement = (((-1) + end) | 0);
        if ((!isEmpty)) {
          let i = 0;
          while (true) {
            const v1 = i;
            const x = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(v1);
            const x$2 = array$1[v1];
            if ((!(x === x$2))) {
              throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1, false)
            };
            if ((i === scala$collection$immutable$Range$$lastElement)) {
              break
            };
            i = ((1 + i) | 0)
          }
        };
        $$x2 = true
      } catch (e) {
        if ((e instanceof $c_sr_NonLocalReturnControl)) {
          const ex = e;
          if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
            $$x2 = ex.value$mcZ$sp__Z()
          } else {
            throw ex
          }
        } else {
          throw e
        }
      };
      let $$x1;
      if (($$x2 && tokens.hasTokenOfType__I__Ltigerpython_parser_lexer_TokenType__Z(1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON))) {
        $$x1 = true
      } else {
        const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
        const nonLocalReturnKey1$1 = $ct_O__(new $c_O());
        try {
          const end$1 = (array$2.length | 0);
          const isEmpty$1 = (end$1 <= 0);
          const scala$collection$immutable$Range$$lastElement$1 = (((-1) + end$1) | 0);
          if ((!isEmpty$1)) {
            let i$1 = 0;
            while (true) {
              const v1$1 = i$1;
              const x$1 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(v1$1);
              const x$2$1 = array$2[v1$1];
              if ((!(x$1 === x$2$1))) {
                throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1$1, false)
              };
              if ((i$1 === scala$collection$immutable$Range$$lastElement$1)) {
                break
              };
              i$1 = ((1 + i$1) | 0)
            }
          };
          $$x1 = true
        } catch (e$1) {
          if ((e$1 instanceof $c_sr_NonLocalReturnControl)) {
            const ex$1 = e$1;
            if ((ex$1.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1$1)) {
              $$x1 = ex$1.value$mcZ$sp__Z()
            } else {
              throw ex$1
            }
          } else {
            throw e$1
          }
        }
      };
      if (($$x1 && $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LAMBDA))) {
        return this.parseLambdaDef__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)
      } else {
        const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT];
        if ((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3)) && (!this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_printStatement))) {
          tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME);
          return this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
        } else {
          const result = this.parseOrTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
          const tokenType = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
          let $$x4;
          if (tokens.hasNext__Z()) {
            const tt = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
            if ((tt === tokenType)) {
              $$x4 = true
            } else {
              let $$x5;
              if (($m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), tokenType) && (tokens.remaining__I() > 1))) {
                const arg1 = tokens.peek__I__Ltigerpython_parser_lexer_Token(1);
                $$x5 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(arg1, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
              } else {
                $$x5 = false
              };
              if ($$x5) {
                const $$x9 = tokens.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
                const $$x8 = tokens.pos__I();
                const $$x7 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(tokens, tokens.pos__I());
                const $$x6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                const array$4 = [tokens.head__Ltigerpython_parser_lexer_Token(), tokenType];
                $$x9.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x8, $$x7, $$x6, new $c_sjsr_WrappedVarArgs(array$4));
                tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V(tokenType);
                $$x4 = true
              } else {
                $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), tokenType);
                $$x4 = false
              }
            }
          } else {
            $$x4 = false
          };
          let $$x3;
          if ($$x4) {
            tokens.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((1 + tokens.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0);
            $$x3 = true
          } else {
            $$x3 = false
          };
          if ($$x3) {
            const cmp = this.parseOrTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
            const elsePart = (tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE) ? this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) : null);
            return new $c_Ltigerpython_parser_ast_AstNode$IfExpr(result.pos__I(), cmp, result, elsePart)
          } else {
            return result
          }
        }
      }
    }
  };
  parseOrTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseAndTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    while (true) {
      const tokenType = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_OR;
      let $$x1;
      if (tokens.hasNext__Z()) {
        const tt = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
        if ((tt === tokenType)) {
          $$x1 = true
        } else {
          let $$x2;
          if (($m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), tokenType) && (tokens.remaining__I() > 1))) {
            const arg1 = tokens.peek__I__Ltigerpython_parser_lexer_Token(1);
            $$x2 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(arg1, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
          } else {
            $$x2 = false
          };
          if ($$x2) {
            const $$x6 = tokens.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
            const $$x5 = tokens.pos__I();
            const $$x4 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(tokens, tokens.pos__I());
            const $$x3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
            const array = [tokens.head__Ltigerpython_parser_lexer_Token(), tokenType];
            $$x6.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x5, $$x4, $$x3, new $c_sjsr_WrappedVarArgs(array));
            tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V(tokenType);
            $$x1 = true
          } else {
            $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), tokenType);
            $$x1 = false
          }
        }
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseAndTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        break
      }
    };
    return result
  };
  parseAndTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseNotTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    while (true) {
      const tokenType = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AND;
      let $$x1;
      if (tokens.hasNext__Z()) {
        const tt = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
        if ((tt === tokenType)) {
          $$x1 = true
        } else {
          let $$x2;
          if (($m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), tokenType) && (tokens.remaining__I() > 1))) {
            const arg1 = tokens.peek__I__Ltigerpython_parser_lexer_Token(1);
            $$x2 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(arg1, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
          } else {
            $$x2 = false
          };
          if ($$x2) {
            const $$x6 = tokens.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
            const $$x5 = tokens.pos__I();
            const $$x4 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(tokens, tokens.pos__I());
            const $$x3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
            const array = [tokens.head__Ltigerpython_parser_lexer_Token(), tokenType];
            $$x6.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x5, $$x4, $$x3, new $c_sjsr_WrappedVarArgs(array));
            tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V(tokenType);
            $$x1 = true
          } else {
            $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), tokenType);
            $$x1 = false
          }
        }
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseNotTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        break
      }
    };
    return result
  };
  parseNotTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT];
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const pos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      return new $c_Ltigerpython_parser_ast_AstNode$UnaryOp(pos, $m_Ltigerpython_parser_ast_UnOp$().Ltigerpython_parser_ast_UnOp$__f_NOT, this.parseNotTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
    } else {
      return this.parseComparison__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    }
  };
  parseComparison__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const left = this.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    if ((left === null)) {
      return null
    };
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EQ, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEQ, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS_NOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEQ, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LESS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT_IN, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GEQ, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GREATER];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        const elem = $ct_T2__O__O__(new $c_T2(), op, this.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens));
        result.addOne__O__scm_ArrayBuffer(elem)
      } else {
        break
      }
    };
    if ((!$f_sc_SeqOps__isEmpty__Z(result))) {
      const $$x2 = left.pos__I();
      let $$x1;
      if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
        const len = result.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_T2.getArrayOf(), [len]);
        result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
        $$x1 = destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$8 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$8);
        while (it.hasNext__Z()) {
          const elem$1 = it.next__O();
          const unboxedElem = ((elem$1 === null) ? null : elem$1);
          jsElems.push(unboxedElem)
        };
        $$x1 = $makeNativeArrayWrapper($d_T2.getArrayOf(), jsElems)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Compare($$x2, left, $$x1)
    } else {
      return left
    }
  };
  parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    if (tokens.hasNext__Z()) {
      const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR];
      const hasStar = tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
      let result = this.parseAndExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      while (true) {
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_OR];
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
          const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
          result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseAndExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
        } else {
          break
        }
      };
      return (hasStar ? new $c_Ltigerpython_parser_ast_AstNode$Starred(startPos, result) : result)
    } else {
      const this$7 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
      const pos = tokens.pos__I();
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
      const params = $m_sci_Nil$();
      return this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
    }
  };
  parseAndExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseXorExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_AND];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseXorExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        break
      }
    };
    return result
  };
  parseXorExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseShiftExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        if ((this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode && (!this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_sagePower))) {
          const x1 = result;
          matchEnd18: {
            if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
              const x2 = x1;
              const p4 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
              const p5 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
              const p6 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
              const x = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_MUL;
              if ((((x === null) ? (p4 === null) : x.equals__O__Z(p4)) && (p5 instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                const x7 = p5;
                const p9 = x7.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
                const x$3 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER;
                let $$x1;
                if (((x$3 === null) ? (p9 === null) : x$3.equals__O__Z(p9))) {
                  $$x1 = true
                } else {
                  const x$5 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_FLOAT;
                  $$x1 = ((x$5 === null) ? (p9 === null) : x$5.equals__O__Z(p9))
                };
                if (($$x1 && (p6 instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                  const x10 = p6;
                  const p12 = x10.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
                  const x$7 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER;
                  if (((x$7 === null) ? (p12 === null) : x$7.equals__O__Z(p12))) {
                    this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_PYTHON_POWER, $m_sci_Nil$());
                    break matchEnd18
                  }
                }
              }
            }
          }
        };
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseShiftExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        break
      }
    };
    return result
  };
  parseShiftExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseArithExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseArithExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        break
      }
    };
    return result
  };
  parseArithExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseTerm__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseTerm__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        break
      }
    };
    return result
  };
  parseTerm__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    let result = this.parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT_DIV, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MOD, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const op = $m_Ltigerpython_parser_ast_BinOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
        result = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(result.pos__I(), op, result, this.parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        break
      }
    };
    return result
  };
  parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const x1 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS;
    if ((x === x1)) {
      tokens.next__Ltigerpython_parser_lexer_Token();
      return this.parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
      if ((x$3 === x1)) {
        const pos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
        const x1$2 = this.parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
        return new $c_Ltigerpython_parser_ast_AstNode$UnaryOp(pos, $m_Ltigerpython_parser_ast_UnOp$().Ltigerpython_parser_ast_UnOp$__f_NEG, x1$2)
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_NOT;
        if ((x$5 === x1)) {
          const pos$2 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
          return new $c_Ltigerpython_parser_ast_AstNode$UnaryOp(pos$2, $m_Ltigerpython_parser_ast_UnOp$().Ltigerpython_parser_ast_UnOp$__f_BIT_NOT, this.parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
        } else {
          return this.parsePower__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
        }
      }
    }
  };
  parsePower__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    if (tokens.hasNext__Z()) {
      const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AWAIT];
      const hasAwait = tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
      const result = this.parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(this.parseAtom__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens), tokens);
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_POWER];
      let res;
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
        res = new $c_Ltigerpython_parser_ast_AstNode$BinaryOp(startPos, $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_POW, result, this.parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        res = result
      };
      return (hasAwait ? new $c_Ltigerpython_parser_ast_AstNode$Await(startPos, res) : res)
    } else {
      return this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT, $m_sci_Nil$())
    }
  };
  parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(base, tokens) {
    const x1 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    if ((x === x1)) {
      tokens.next__Ltigerpython_parser_lexer_Token();
      const this$1 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
      const elem = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
      this$1.prepend__O__scm_ArrayDeque(elem);
      const args = this.Ltigerpython_parser_parsing_ExpressionParser__f_parser.Ltigerpython_parser_parsing_Parser__f_argumentParser.parseArgList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Arguments(tokens);
      tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS);
      const this$2 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
      this$2.removeHead__Z__O(false);
      const endPos = tokens.prevEndPos__I();
      return this.parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(new $c_Ltigerpython_parser_ast_AstNode$Call(base.pos__I(), endPos, base, args.Ltigerpython_parser_ast_AstNode$Arguments__f_values, args.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords, args.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs, args.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs), tokens)
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
      if ((x$3 === x1)) {
        matchEnd9: {
          if ((base instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
            const x2 = base;
            const p4 = x2.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
            const x$5 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER;
            let $$x1;
            if (((x$5 === null) ? (p4 === null) : x$5.equals__O__Z(p4))) {
              $$x1 = true
            } else {
              const x$7 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_FLOAT;
              if (((x$7 === null) ? (p4 === null) : x$7.equals__O__Z(p4))) {
                $$x1 = true
              } else {
                const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMPLEX;
                $$x1 = (x$9 === p4)
              }
            };
            if ($$x1) {
              const this$4 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
              const pos = tokens.pos__I();
              const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE;
              const params = $m_sci_Nil$();
              this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
              break matchEnd9
            }
          }
        };
        tokens.next__Ltigerpython_parser_lexer_Token();
        const this$5 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
        const elem$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        this$5.prepend__O__scm_ArrayDeque(elem$1);
        const slice = this.Ltigerpython_parser_parsing_ExpressionParser__f_parser.Ltigerpython_parser_parsing_Parser__f_argumentParser.parseSliceList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Slice(tokens);
        tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET);
        const this$6 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
        this$6.removeHead__Z__O(false);
        return this.parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(new $c_Ltigerpython_parser_ast_AstNode$Subscript(base.pos__I(), tokens.prevEndPos__I(), base, slice), tokens)
      } else {
        const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT;
        if ((x$11 === x1)) {
          tokens.next__Ltigerpython_parser_lexer_Token();
          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
          if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
            const token = tokens.next__Ltigerpython_parser_lexer_Token();
            const name = new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.Ltigerpython_parser_lexer_Token__f_value);
            return this.parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(new $c_Ltigerpython_parser_ast_AstNode$Attribute(base.pos__I(), tokens.prevEndPos__I(), base, name), tokens)
          } else {
            const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FALSE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRUE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONE];
            if ((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1)) && (this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3))) {
              const token$2 = tokens.next__Ltigerpython_parser_lexer_Token();
              const name$2 = new $c_Ltigerpython_parser_ast_AstNode$Name(token$2.Ltigerpython_parser_lexer_Token__f_pos, token$2.Ltigerpython_parser_lexer_Token__f_value);
              return this.parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(new $c_Ltigerpython_parser_ast_AstNode$Attribute(base.pos__I(), tokens.prevEndPos__I(), base, name$2), tokens)
            } else {
              let $$x2;
              if (this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_allowPrintAsName) {
                const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PASS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AWAIT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXEC, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GLOBAL, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FALSE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRUE];
                $$x2 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))
              } else {
                $$x2 = false
              };
              if ($$x2) {
                const token$3 = tokens.next__Ltigerpython_parser_lexer_Token();
                const name$3 = new $c_Ltigerpython_parser_ast_AstNode$Name(token$3.Ltigerpython_parser_lexer_Token__f_pos, token$3.Ltigerpython_parser_lexer_Token__f_value);
                return this.parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(new $c_Ltigerpython_parser_ast_AstNode$Attribute(base.pos__I(), tokens.prevEndPos__I(), base, name$3), tokens)
              } else {
                const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BREAK, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CONTINUE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXEC, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LAMBDA];
                if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3))) {
                  const token$4 = tokens.next__Ltigerpython_parser_lexer_Token();
                  const name$4 = new $c_Ltigerpython_parser_ast_AstNode$Name(token$4.Ltigerpython_parser_lexer_Token__f_pos, token$4.Ltigerpython_parser_lexer_Token__f_value);
                  return this.parseTrailer__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(new $c_Ltigerpython_parser_ast_AstNode$Attribute(base.pos__I(), tokens.prevEndPos__I(), base, name$4), tokens)
                } else {
                  const this$19 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                  let $$x4;
                  if ((!this$19.isEmpty__Z())) {
                    const this$20 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                    const this$21 = new $c_sc_IndexedSeqView$Id(this$20);
                    const x$13 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$21).next__O();
                    const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
                    $$x4 = ((x$13 === null) ? (x$14 === null) : $dp_equals__O__Z(x$13, x$14))
                  } else {
                    $$x4 = false
                  };
                  let $$x3;
                  if ($$x4) {
                    const x$15 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType((-2));
                    const x$16 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(0);
                    $$x3 = (x$15 === x$16)
                  } else {
                    $$x3 = false
                  };
                  if ($$x3) {
                    tokens.back__V();
                    const $$x6 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                    const $$x5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN;
                    const array$4 = [".", ","];
                    $$x6.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x5, new $c_sjsr_WrappedVarArgs(array$4));
                    tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA);
                    return base
                  } else {
                    if ((tokens.hasNext__Z() && (tokens.headType__Ltigerpython_parser_lexer_TokenType().Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD))) {
                      this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME, $m_sci_Nil$())
                    } else {
                      this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$())
                    };
                    return base
                  }
                }
              }
            }
          }
        } else {
          return base
        }
      }
    }
  };
  parseAtom__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    if (tokens.hasNext__Z()) {
      const token = tokens.next__Ltigerpython_parser_lexer_Token();
      const x1 = token.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x === x1)) {
        return $p_Ltigerpython_parser_parsing_ExpressionParser__checkDoubleName__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(this, token, tokens)
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
        if ((x$3 === x1)) {
          $p_Ltigerpython_parser_parsing_ExpressionParser__checkMissingOperator__Ltigerpython_parser_lexer_TokenBuffer__V(this, tokens);
          const result = new $c_Ltigerpython_parser_ast_AstNode$Value(token.Ltigerpython_parser_lexer_Token__f_pos, $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_FLOAT);
          result.Ltigerpython_parser_ast_AstNode$Value__f_value = token.Ltigerpython_parser_lexer_Token__f_value;
          return result
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
          let $$x1;
          if ((x$5 === x1)) {
            $$x1 = true
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG;
            $$x1 = (x$7 === x1)
          };
          if ($$x1) {
            $p_Ltigerpython_parser_parsing_ExpressionParser__checkMissingOperator__Ltigerpython_parser_lexer_TokenBuffer__V(this, tokens);
            const result$2 = new $c_Ltigerpython_parser_ast_AstNode$Value(token.Ltigerpython_parser_lexer_Token__f_pos, $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER);
            result$2.Ltigerpython_parser_ast_AstNode$Value__f_value = token.Ltigerpython_parser_lexer_Token__f_value;
            return result$2
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMPLEX;
            if ((x$9 === x1)) {
              return new $c_Ltigerpython_parser_ast_AstNode$Value(token.Ltigerpython_parser_lexer_Token__f_pos, $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_COMPLEX)
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONE;
              if ((x$11 === x1)) {
                return new $c_Ltigerpython_parser_ast_AstNode$Value(token.Ltigerpython_parser_lexer_Token__f_pos, $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_NONE)
              } else {
                const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRUE;
                if ((x$13 === x1)) {
                  return new $c_Ltigerpython_parser_ast_AstNode$BooleanValue(token.Ltigerpython_parser_lexer_Token__f_pos, true)
                } else {
                  const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FALSE;
                  if ((x$15 === x1)) {
                    return new $c_Ltigerpython_parser_ast_AstNode$BooleanValue(token.Ltigerpython_parser_lexer_Token__f_pos, false)
                  } else {
                    const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS;
                    if ((x$17 === x1)) {
                      return new $c_Ltigerpython_parser_ast_AstNode$Ellipsis(token.Ltigerpython_parser_lexer_Token__f_pos)
                    } else {
                      const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
                      let $$x2;
                      if ((x$19 === x1)) {
                        $$x2 = true
                      } else {
                        const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
                        $$x2 = (x$21 === x1)
                      };
                      if ($$x2) {
                        let resultTT = x1;
                        let result$3 = token.Ltigerpython_parser_lexer_Token__f_value;
                        let endPos = token.Ltigerpython_parser_lexer_Token__f_endPos;
                        while (true) {
                          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE];
                          if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
                            const token$2 = tokens.next__Ltigerpython_parser_lexer_Token();
                            const x$23 = token$2.Ltigerpython_parser_lexer_Token__f_tokenType;
                            const x$24 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
                            if ((x$23 === x$24)) {
                              resultTT = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE
                            };
                            endPos = token$2.Ltigerpython_parser_lexer_Token__f_endPos;
                            result$3 = (("" + result$3) + token$2.Ltigerpython_parser_lexer_Token__f_value)
                          } else {
                            break
                          }
                        };
                        const $$x5 = token.Ltigerpython_parser_lexer_Token__f_pos;
                        const $$x4 = endPos;
                        const $$x3 = result$3;
                        const x$25 = resultTT;
                        const x$26 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
                        return new $c_Ltigerpython_parser_ast_AstNode$StringValue($$x5, $$x4, $$x3, (x$25 === x$26))
                      } else {
                        const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY;
                        if ((x$27 === x1)) {
                          while (true) {
                            const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY];
                            if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
                              tokens.next__Ltigerpython_parser_lexer_Token()
                            } else {
                              break
                            }
                          };
                          return new $c_Ltigerpython_parser_ast_AstNode$Value(token.Ltigerpython_parser_lexer_Token__f_pos, $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_BYTE_ARRAY)
                        } else {
                          const x$29 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                          if ((x$29 === x1)) {
                            let $$x6;
                            if ((tokens.Ltigerpython_parser_lexer_TokenBuffer__f_index <= 1)) {
                              const x$31 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
                              const x$32 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                              $$x6 = (x$31 === x$32)
                            } else {
                              $$x6 = false
                            };
                            if ($$x6) {
                              let rc9 = false;
                              let x2 = null;
                              const x1$2 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
                              matchEnd10: {
                                const x$33 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                                if ((x$33 === x1$2)) {
                                  rc9 = true;
                                  x2 = x1$2;
                                  const array$2 = ["define", "let", "defun"];
                                  if (tokens.isName__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
                                    const this$13 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                    const pos = tokens.prevPos__I();
                                    const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                    const array$3 = ["Lisp"];
                                    const params = new $c_sjsr_WrappedVarArgs(array$3);
                                    this$13.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
                                    break matchEnd10
                                  }
                                };
                                let $$x7;
                                if (rc9) {
                                  const array$4 = ["defn", "fn", "ns", "require", "do"];
                                  $$x7 = tokens.isName__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4))
                                } else {
                                  $$x7 = false
                                };
                                if ($$x7) {
                                  const this$20 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                  const pos$1 = tokens.prevPos__I();
                                  const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                  const array$5 = ["Clojure"];
                                  const params$1 = new $c_sjsr_WrappedVarArgs(array$5);
                                  this$20.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1);
                                  break matchEnd10
                                };
                                const x$35 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
                                let $$x8;
                                if ((x$35 === x1$2)) {
                                  $$x8 = true
                                } else {
                                  const x$37 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                  if ((x$37 === x1$2)) {
                                    $$x8 = true
                                  } else {
                                    const x$39 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT;
                                    if ((x$39 === x1$2)) {
                                      $$x8 = true
                                    } else {
                                      const x$41 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
                                      $$x8 = (x$41 === x1$2)
                                    }
                                  }
                                };
                                if ($$x8) {
                                  const this$24 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                  const pos$2 = tokens.prevPos__I();
                                  const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                  const array$6 = ["Lisp"];
                                  const params$2 = new $c_sjsr_WrappedVarArgs(array$6);
                                  this$24.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2);
                                  break matchEnd10
                                }
                              }
                            };
                            const this$25 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                            const elem = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                            this$25.prepend__O__scm_ArrayDeque(elem);
                            const array$7 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD];
                            let result$4;
                            if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$7))) {
                              result$4 = this.parseYieldExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
                            } else {
                              const array$8 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
                              if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$8))) {
                                const $$x9 = tokens.pos__I();
                                const xs = $m_sci_Nil$();
                                const len = xs.length__I();
                                const array$9 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
                                const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                                let i = 0;
                                while (iterator.hasNext__Z()) {
                                  array$9.u[i] = iterator.next__O();
                                  i = ((1 + i) | 0)
                                };
                                result$4 = new $c_Ltigerpython_parser_ast_AstNode$Tuple($$x9, array$9)
                              } else {
                                result$4 = this.parseTestListComp__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
                              }
                            };
                            tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS);
                            const this$34 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                            this$34.removeHead__Z__O(false);
                            const array$10 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
                            let $$x10;
                            if ((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$10)) && this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
                              const this$38 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                              $$x10 = (!this$38.isEmpty__Z())
                            } else {
                              $$x10 = false
                            };
                            if ($$x10) {
                              this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$());
                              tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA)
                            };
                            return result$4
                          } else {
                            const x$43 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
                            if ((x$43 === x1)) {
                              const this$39 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                              const elem$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
                              this$39.prepend__O__scm_ArrayDeque(elem$1);
                              const array$11 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET];
                              let result$5;
                              if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$11))) {
                                const $$x12 = tokens.pos__I();
                                const $$x11 = tokens.endPosOfList__I();
                                const xs$1 = $m_sci_Nil$();
                                const len$1 = xs$1.length__I();
                                const array$12 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$1]);
                                const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                                let i$1 = 0;
                                while (iterator$1.hasNext__Z()) {
                                  array$12.u[i$1] = iterator$1.next__O();
                                  i$1 = ((1 + i$1) | 0)
                                };
                                result$5 = new $c_Ltigerpython_parser_ast_AstNode$List($$x12, $$x11, array$12)
                              } else {
                                result$5 = this.parseListMaker__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
                              };
                              tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET);
                              const this$45 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                              this$45.removeHead__Z__O(false);
                              const array$13 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET];
                              let $$x13;
                              if ((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$13)) && this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
                                const this$49 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                                $$x13 = (!this$49.isEmpty__Z())
                              } else {
                                $$x13 = false
                              };
                              if ($$x13) {
                                this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$());
                                tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA)
                              };
                              return result$5
                            } else {
                              const x$45 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
                              if ((x$45 === x1)) {
                                const array$14 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE];
                                if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$14))) {
                                  const token$3 = tokens.next__Ltigerpython_parser_lexer_Token();
                                  const $$x15 = token$3.Ltigerpython_parser_lexer_Token__f_pos;
                                  const $$x14 = token$3.Ltigerpython_parser_lexer_Token__f_endPos;
                                  const xs$2 = $m_sci_Nil$();
                                  const len$2 = xs$2.length__I();
                                  const array$15 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$2]);
                                  const iterator$2 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                                  let i$2 = 0;
                                  while (iterator$2.hasNext__Z()) {
                                    array$15.u[i$2] = iterator$2.next__O();
                                    i$2 = ((1 + i$2) | 0)
                                  };
                                  const xs$3 = $m_sci_Nil$();
                                  const len$3 = xs$3.length__I();
                                  const array$16 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$3]);
                                  const iterator$3 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                                  let i$3 = 0;
                                  while (iterator$3.hasNext__Z()) {
                                    array$16.u[i$3] = iterator$3.next__O();
                                    i$3 = ((1 + i$3) | 0)
                                  };
                                  return new $c_Ltigerpython_parser_ast_AstNode$Dict($$x15, $$x14, array$15, array$16)
                                } else {
                                  const this$57 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                                  const elem$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
                                  this$57.prepend__O__scm_ArrayDeque(elem$2);
                                  const result$6 = this.parseDictOrSetMaker__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
                                  tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE);
                                  const this$58 = this.Ltigerpython_parser_parsing_ExpressionParser__f_bracketStack;
                                  this$58.removeHead__Z__O(false);
                                  return result$6
                                }
                              } else {
                                const x$47 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPR;
                                if ((x$47 === x1)) {
                                  const result$7 = this.parseTestList__Ltigerpython_parser_lexer_TokenBuffer__Z__ALtigerpython_parser_ast_AstNode$Expression(tokens, true);
                                  tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPR);
                                  return $m_Ltigerpython_parser_ast_AstNode$Call$().withName__I__I__T__ALtigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_ast_AstNode$Call(token.Ltigerpython_parser_lexer_Token__f_pos, tokens.pos__I(), "repr", result$7)
                                } else {
                                  const x$49 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
                                  let $$x16;
                                  if ((x$49 === x1)) {
                                    $$x16 = true
                                  } else {
                                    const x$51 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                                    if ((x$51 === x1)) {
                                      $$x16 = true
                                    } else {
                                      const x$53 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                                      $$x16 = (x$53 === x1)
                                    }
                                  };
                                  if ($$x16) {
                                    const this$62 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                    const pos$3 = token.Ltigerpython_parser_lexer_Token__f_pos;
                                    const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
                                    const array$17 = [token];
                                    const params$3 = new $c_sjsr_WrappedVarArgs(array$17);
                                    return this$62.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3)
                                  } else {
                                    const x$55 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
                                    if ((x$55 === x1)) {
                                      return this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_EXPRESSION, $m_sci_Nil$())
                                    } else {
                                      const x1$3 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
                                      const x$57 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
                                      let $$x17;
                                      if ((x$57 === x1$3)) {
                                        $$x17 = true
                                      } else {
                                        const x$59 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG;
                                        if ((x$59 === x1$3)) {
                                          $$x17 = true
                                        } else {
                                          const x$61 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
                                          if ((x$61 === x1$3)) {
                                            $$x17 = true
                                          } else {
                                            const x$63 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
                                            if ((x$63 === x1$3)) {
                                              $$x17 = true
                                            } else {
                                              const x$65 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMPLEX;
                                              if ((x$65 === x1$3)) {
                                                $$x17 = true
                                              } else {
                                                const x$67 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
                                                if ((x$67 === x1$3)) {
                                                  $$x17 = true
                                                } else {
                                                  const x$69 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY;
                                                  if ((x$69 === x1$3)) {
                                                    $$x17 = true
                                                  } else {
                                                    const x$71 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                                                    if ((x$71 === x1$3)) {
                                                      $$x17 = true
                                                    } else {
                                                      const x$73 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
                                                      if ((x$73 === x1$3)) {
                                                        $$x17 = true
                                                      } else {
                                                        const x$75 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
                                                        if ((x$75 === x1$3)) {
                                                          $$x17 = true
                                                        } else {
                                                          const x$77 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                                                          $$x17 = (x$77 === x1$3)
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      };
                                      if ($$x17) {
                                        const this$66 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                        const pos$4 = token.Ltigerpython_parser_lexer_Token__f_pos;
                                        const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                        const array$18 = [token];
                                        const params$4 = new $c_sjsr_WrappedVarArgs(array$18);
                                        this$66.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$4, params$4);
                                        return this.parseAtom__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
                                      } else {
                                        const x$79 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS;
                                        let $$x19;
                                        if ((x$79 === x1$3)) {
                                          $$x19 = true
                                        } else {
                                          const x$81 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
                                          $$x19 = (x$81 === x1$3)
                                        };
                                        let $$x18;
                                        if ($$x19) {
                                          const array$19 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT];
                                          $$x18 = tokens.hasPeekType__I__sci_Seq__Z(1, new $c_sjsr_WrappedVarArgs(array$19))
                                        } else {
                                          $$x18 = false
                                        };
                                        if ($$x18) {
                                          const this$73 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                          const pos$5 = token.Ltigerpython_parser_lexer_Token__f_pos;
                                          const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                          const array$20 = [token];
                                          const params$5 = new $c_sjsr_WrappedVarArgs(array$20);
                                          this$73.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$5, params$5);
                                          return this.parseFactor__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
                                        } else if ((token.Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD)) {
                                          if ((tokens.peekTypeCategory__I__I(0) === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_OPERATOR)) {
                                            const this$77 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                            const pos$6 = token.Ltigerpython_parser_lexer_Token__f_pos;
                                            const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                                            const array$21 = [token.getStringValue__T()];
                                            const params$6 = new $c_sjsr_WrappedVarArgs(array$21);
                                            this$77.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$6, params$6);
                                            return new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.getStringValue__T())
                                          } else {
                                            const this$81 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                            const pos$7 = token.Ltigerpython_parser_lexer_Token__f_pos;
                                            const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
                                            const array$22 = [token.getStringValue__T()];
                                            const params$7 = new $c_sjsr_WrappedVarArgs(array$22);
                                            return this$81.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$7, params$7)
                                          }
                                        } else {
                                          const this$85 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                                          const pos$8 = token.Ltigerpython_parser_lexer_Token__f_pos;
                                          const code$8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
                                          const array$23 = [token];
                                          const params$8 = new $c_sjsr_WrappedVarArgs(array$23);
                                          return this$85.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$8, params$8)
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      return this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT, $m_sci_Nil$())
    }
  };
  parseListMaker__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const test = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR];
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const c = this.parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens);
      return new $c_Ltigerpython_parser_ast_AstNode$ListComp(startPos, tokens.endPosOfList__I(), test, c)
    } else {
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
      let $$x1;
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
        const x = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
        $$x1 = (x === x$2)
      } else {
        $$x1 = false
      };
      if (($$x1 && $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR))) {
        const $$x3 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
        const $$x2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
        const array$2 = [tokens.head__Ltigerpython_parser_lexer_Token(), "for"];
        $$x3.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x2, new $c_sjsr_WrappedVarArgs(array$2));
        tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR);
        const c$2 = this.parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens);
        return new $c_Ltigerpython_parser_ast_AstNode$ListComp(startPos, tokens.endPosOfList__I(), test, c$2)
      } else if (tokens.hasNext__Z()) {
        const this$13 = $m_scm_ArrayBuffer$();
        const array$3 = [test];
        const elems = new $c_sjsr_WrappedVarArgs(array$3);
        const result = this$13.from__sc_IterableOnce__scm_ArrayBuffer(elems);
        while ((tokens.hasNext__Z() && (!tokens.isEndOfList__Z()))) {
          if ((tokens.headType__Ltigerpython_parser_lexer_TokenType().Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT)) {
            if ((!$f_sc_SeqOps__isEmpty__Z(result))) {
              this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED, $m_sci_Nil$());
              tokens.next__Ltigerpython_parser_lexer_Token();
              const left = result.remove__I__O((((-1) + result.scm_ArrayBuffer__f_size0) | 0));
              const elem = $m_Ltigerpython_parser_ast_AstNode$Compare$().fromSimple__I__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_ast_AstNode$Compare(left.pos__I(), left, $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_EQ, this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens));
              result.addOne__O__scm_ArrayBuffer(elem)
            } else {
              this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN, $m_sci_Nil$());
              while ((tokens.hasNext__Z() && (!tokens.isEndOfList__Z()))) {
                tokens.next__Ltigerpython_parser_lexer_Token()
              };
              const $$x5 = tokens.endPosOfList__I();
              let $$x4;
              if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
                const len = result.scm_ArrayBuffer__f_size0;
                const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
                result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
                $$x4 = destination
              } else {
                let capacity = 0;
                let size = 0;
                let jsElems = null;
                capacity = 0;
                size = 0;
                jsElems = [];
                const this$17 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
                const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$17);
                while (it.hasNext__Z()) {
                  const elem$1 = it.next__O();
                  const unboxedElem = ((elem$1 === null) ? null : elem$1);
                  jsElems.push(unboxedElem)
                };
                $$x4 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
              };
              return new $c_Ltigerpython_parser_ast_AstNode$List(startPos, $$x5, $$x4)
            }
          } else {
            const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
            if ((!tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4)))) {
              this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA, $m_sci_Nil$())
            }
          };
          if (this.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
            const elem$2 = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
            result.addOne__O__scm_ArrayBuffer(elem$2)
          } else {
            const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
            if (((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$5))) && (!tokens.isEndOfList__Z()))) {
              tokens.discard__V()
            }
          }
        };
        const $$x7 = tokens.endPosOfList__I();
        let $$x6;
        if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
          const len$1 = result.scm_ArrayBuffer__f_size0;
          const destination$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$1]);
          result.copyToArray__O__I__I__I(destination$1, 0, result.scm_ArrayBuffer__f_size0);
          $$x6 = destination$1
        } else {
          let capacity$1 = 0;
          let size$1 = 0;
          let jsElems$1 = null;
          capacity$1 = 0;
          size$1 = 0;
          jsElems$1 = [];
          const this$27 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
          const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$27);
          while (it$1.hasNext__Z()) {
            const elem$3 = it$1.next__O();
            const unboxedElem$1 = ((elem$3 === null) ? null : elem$3);
            jsElems$1.push(unboxedElem$1)
          };
          $$x6 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems$1)
        };
        return new $c_Ltigerpython_parser_ast_AstNode$List(startPos, $$x7, $$x6)
      } else {
        return new $c_Ltigerpython_parser_ast_AstNode$List(startPos, tokens.endPosOfList__I(), $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [test]))
      }
    }
  };
  parseDictOrSetMaker__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const startPos = tokens.pos__I();
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_STAR];
    let x1___1;
    let x1___2;
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      if ((this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
        const this$4 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
        const params = $m_sci_Nil$();
        this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code, params)
      };
      const _1 = new $c_Ltigerpython_parser_ast_AstNode$Value(tokens.prevPos__I(), $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_NONE);
      const $$x1___1 = _1;
      const $$x1___2 = true;
      x1___1 = $$x1___1;
      x1___2 = $$x1___2
    } else {
      const t = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
      const _2 = tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1));
      const $$x2___1 = t;
      const $$x2___2 = _2;
      x1___1 = $$x2___1;
      x1___2 = $$x2___2
    };
    const test = x1___1;
    const isDict = (!(!x1___2));
    if (isDict) {
      const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
      const nonLocalReturnKey1 = $ct_O__(new $c_O());
      let $$x3;
      try {
        const end = (array$2.length | 0);
        const isEmpty = (end <= 0);
        const scala$collection$immutable$Range$$lastElement = (((-1) + end) | 0);
        if ((!isEmpty)) {
          let i = 0;
          while (true) {
            const v1 = i;
            const x = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(v1);
            const x$2 = array$2[v1];
            if ((!(x === x$2))) {
              throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1, false)
            };
            if ((i === scala$collection$immutable$Range$$lastElement)) {
              break
            };
            i = ((1 + i) | 0)
          }
        };
        $$x3 = true
      } catch (e) {
        if ((e instanceof $c_sr_NonLocalReturnControl)) {
          const ex = e;
          if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
            $$x3 = ex.value$mcZ$sp__Z()
          } else {
            throw ex
          }
        } else {
          throw e
        }
      };
      if ($$x3) {
        const this$14 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
        const pos = tokens.peek__I__Ltigerpython_parser_lexer_Token(1).Ltigerpython_parser_lexer_Token__f_pos;
        const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
        const params$1 = $m_sci_Nil$();
        this$14.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1);
        tokens.insertToken__Ltigerpython_parser_lexer_TokenType__I__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, 1)
      };
      const value = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3))) {
        const c = this.parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens);
        return new $c_Ltigerpython_parser_ast_AstNode$DictComp(startPos, tokens.endPosOfList__I(), test, value, c)
      } else {
        const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
        let $$x4;
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4))) {
          const x$1 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
          const x$2$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          $$x4 = (x$1 === x$2$1)
        } else {
          $$x4 = false
        };
        if (($$x4 && $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR))) {
          const $$x6 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
          const $$x5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
          const array$5 = [tokens.head__Ltigerpython_parser_lexer_Token(), "for"];
          $$x6.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x5, new $c_sjsr_WrappedVarArgs(array$5));
          tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR);
          const c$2 = this.parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens);
          return new $c_Ltigerpython_parser_ast_AstNode$DictComp(startPos, tokens.endPosOfList__I(), test, value, c$2)
        } else {
          const this$27 = $m_scm_ArrayBuffer$();
          const array$6 = [test];
          const elems = new $c_sjsr_WrappedVarArgs(array$6);
          const keys = this$27.from__sc_IterableOnce__scm_ArrayBuffer(elems);
          const this$31 = $m_scm_ArrayBuffer$();
          const array$7 = [value];
          const elems$1 = new $c_sjsr_WrappedVarArgs(array$7);
          const values = this$31.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
          while ((tokens.hasNext__Z() && (!tokens.isEndOfList__Z()))) {
            tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA);
            const pairPos = tokens.pos__I();
            const array$8 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_STAR];
            if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$8))) {
              if ((this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
                const this$35 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
                const params$2 = $m_sci_Nil$();
                this$35.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pairPos, (-1), code$2, params$2)
              };
              if ($m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_ParserState__Z(tokens, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)) {
                const elem = new $c_Ltigerpython_parser_ast_AstNode$Value(tokens.prevPos__I(), $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_NONE);
                keys.addOne__O__scm_ArrayBuffer(elem);
                const elem$1 = this.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
                values.addOne__O__scm_ArrayBuffer(elem$1)
              } else {
                const this$36 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                const params$3 = $m_sci_Nil$();
                this$36.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pairPos, (-1), code$3, params$3)
              }
            } else {
              const key = (this.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens) ? this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) : null);
              const array$9 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE];
              if ((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$9)))) {
                tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON);
                if (this.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
                  const array$10 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
                  const nonLocalReturnKey1$1 = $ct_O__(new $c_O());
                  let $$x7;
                  try {
                    const end$1 = (array$10.length | 0);
                    const isEmpty$1 = (end$1 <= 0);
                    const scala$collection$immutable$Range$$lastElement$1 = (((-1) + end$1) | 0);
                    if ((!isEmpty$1)) {
                      let i$1 = 0;
                      while (true) {
                        const v1$1 = i$1;
                        const x$3 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(v1$1);
                        const x$2$2 = array$10[v1$1];
                        if ((!(x$3 === x$2$2))) {
                          throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1$1, false)
                        };
                        if ((i$1 === scala$collection$immutable$Range$$lastElement$1)) {
                          break
                        };
                        i$1 = ((1 + i$1) | 0)
                      }
                    };
                    $$x7 = true
                  } catch (e$1) {
                    if ((e$1 instanceof $c_sr_NonLocalReturnControl)) {
                      const ex$1 = e$1;
                      if ((ex$1.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1$1)) {
                        $$x7 = ex$1.value$mcZ$sp__Z()
                      } else {
                        throw ex$1
                      }
                    } else {
                      throw e$1
                    }
                  };
                  if ($$x7) {
                    const this$46 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                    const pos$1 = tokens.peek__I__Ltigerpython_parser_lexer_Token(1).Ltigerpython_parser_lexer_Token__f_pos;
                    const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
                    const params$4 = $m_sci_Nil$();
                    this$46.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$4, params$4);
                    tokens.insertToken__Ltigerpython_parser_lexer_TokenType__I__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, 1)
                  };
                  keys.addOne__O__scm_ArrayBuffer(key);
                  const elem$2 = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
                  values.addOne__O__scm_ArrayBuffer(elem$2)
                } else {
                  const this$47 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
                  const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                  const params$5 = $m_sci_Nil$();
                  this$47.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pairPos, (-1), code$5, params$5);
                  const array$11 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE];
                  if ((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$11)))) {
                    tokens.discard__V()
                  }
                }
              }
            }
          };
          const $$x10 = tokens.endPosOfList__I();
          let $$x9;
          if ((keys.scm_ArrayBuffer__f_size0 >= 0)) {
            const len = keys.scm_ArrayBuffer__f_size0;
            const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
            keys.copyToArray__O__I__I__I(destination, 0, keys.scm_ArrayBuffer__f_size0);
            $$x9 = destination
          } else {
            let capacity = 0;
            let size = 0;
            let jsElems = null;
            capacity = 0;
            size = 0;
            jsElems = [];
            const this$54 = new $c_scm_ArrayBufferView(keys.scm_ArrayBuffer__f_array, keys.scm_ArrayBuffer__f_size0);
            const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$54);
            while (it.hasNext__Z()) {
              const elem$3 = it.next__O();
              const unboxedElem = ((elem$3 === null) ? null : elem$3);
              jsElems.push(unboxedElem)
            };
            $$x9 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
          };
          let $$x8;
          if ((values.scm_ArrayBuffer__f_size0 >= 0)) {
            const len$1 = values.scm_ArrayBuffer__f_size0;
            const destination$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$1]);
            values.copyToArray__O__I__I__I(destination$1, 0, values.scm_ArrayBuffer__f_size0);
            $$x8 = destination$1
          } else {
            let capacity$1 = 0;
            let size$1 = 0;
            let jsElems$1 = null;
            capacity$1 = 0;
            size$1 = 0;
            jsElems$1 = [];
            const this$58 = new $c_scm_ArrayBufferView(values.scm_ArrayBuffer__f_array, values.scm_ArrayBuffer__f_size0);
            const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$58);
            while (it$1.hasNext__Z()) {
              const elem$4 = it$1.next__O();
              const unboxedElem$1 = ((elem$4 === null) ? null : elem$4);
              jsElems$1.push(unboxedElem$1)
            };
            $$x8 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems$1)
          };
          return new $c_Ltigerpython_parser_ast_AstNode$Dict(startPos, $$x10, $$x9, $$x8)
        }
      }
    } else {
      const array$12 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$12))) {
        return new $c_Ltigerpython_parser_ast_AstNode$SetComp(startPos, test, this.parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens))
      } else {
        let $$x11;
        if ((tokens.hasNext__Z() && $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR))) {
          const x$3$1 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
          const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          $$x11 = (x$3$1 === x$4)
        } else {
          $$x11 = false
        };
        if ($$x11) {
          const $$x13 = this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState;
          const $$x12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
          const array$13 = [tokens.head__Ltigerpython_parser_lexer_Token(), "for"];
          $$x13.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x12, new $c_sjsr_WrappedVarArgs(array$13));
          tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR);
          return new $c_Ltigerpython_parser_ast_AstNode$SetComp(startPos, test, this.parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens))
        } else {
          const this$68 = $m_scm_ArrayBuffer$();
          const array$14 = [test];
          const elems$2 = new $c_sjsr_WrappedVarArgs(array$14);
          const items = this$68.from__sc_IterableOnce__scm_ArrayBuffer(elems$2);
          while ((tokens.hasNext__Z() && (!tokens.isEndOfList__Z()))) {
            tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA);
            if (this.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
              const elem$5 = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
              items.addOne__O__scm_ArrayBuffer(elem$5)
            } else {
              let $$x14;
              if ((!tokens.isEndOfList__Z())) {
                const array$15 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
                $$x14 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$15)))
              } else {
                $$x14 = false
              };
              if ($$x14) {
                tokens.discard__V()
              }
            }
          };
          let $$x15;
          if ((items.scm_ArrayBuffer__f_size0 >= 0)) {
            const len$2 = items.scm_ArrayBuffer__f_size0;
            const destination$2 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$2]);
            items.copyToArray__O__I__I__I(destination$2, 0, items.scm_ArrayBuffer__f_size0);
            $$x15 = destination$2
          } else {
            let capacity$2 = 0;
            let size$2 = 0;
            let jsElems$2 = null;
            capacity$2 = 0;
            size$2 = 0;
            jsElems$2 = [];
            const this$75 = new $c_scm_ArrayBufferView(items.scm_ArrayBuffer__f_array, items.scm_ArrayBuffer__f_size0);
            const it$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$75);
            while (it$2.hasNext__Z()) {
              const elem$6 = it$2.next__O();
              const unboxedElem$2 = ((elem$6 === null) ? null : elem$6);
              jsElems$2.push(unboxedElem$2)
            };
            $$x15 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems$2)
          };
          return new $c_Ltigerpython_parser_ast_AstNode$Set(startPos, $$x15)
        }
      }
    }
  };
  parseSaveTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LAMBDA];
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      return this.parseLambdaDef__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, false)
    } else {
      return this.parseOrTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    }
  };
  parseSaveTestList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    if (tokens.hasNext__Z()) {
      const startPos = tokens.pos__I();
      const this$1 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const elem = this.parseSaveTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      result.addOne__O__scm_ArrayBuffer(elem);
      while (true) {
        const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
        if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
          const elem$1 = this.parseSaveTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
          result.addOne__O__scm_ArrayBuffer(elem$1)
        } else {
          break
        }
      };
      if ((result.scm_ArrayBuffer__f_size0 === 1)) {
        const this$5 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
        return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$5).next__O()
      } else {
        let $$x1;
        if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
          const len = result.scm_ArrayBuffer__f_size0;
          const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
          result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
          $$x1 = destination
        } else {
          let capacity = 0;
          let size = 0;
          let jsElems = null;
          capacity = 0;
          size = 0;
          jsElems = [];
          const this$9 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
          const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$9);
          while (it.hasNext__Z()) {
            const elem$2 = it.next__O();
            const unboxedElem = ((elem$2 === null) ? null : elem$2);
            jsElems.push(unboxedElem)
          };
          $$x1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
        };
        return new $c_Ltigerpython_parser_ast_AstNode$Tuple(startPos, $$x1)
      }
    } else {
      return null
    }
  };
  parseComprehension__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Comprehension(tokens) {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const generators = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        const target = this.parseExprListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
        tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN);
        const iter = this.parseSaveTestList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
        const this$5 = $m_scm_ArrayBuffer$();
        const elems$1 = $m_sci_Nil$();
        const ifs = this$5.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
        while (true) {
          const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF];
          if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
            const elem = this.parseSaveTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
            ifs.addOne__O__scm_ArrayBuffer(elem)
          } else {
            break
          }
        };
        const $$x2 = target.pos__I();
        let $$x1;
        if ((ifs.scm_ArrayBuffer__f_size0 >= 0)) {
          const len = ifs.scm_ArrayBuffer__f_size0;
          const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
          ifs.copyToArray__O__I__I__I(destination, 0, ifs.scm_ArrayBuffer__f_size0);
          $$x1 = destination
        } else {
          let capacity = 0;
          let size = 0;
          let jsElems = null;
          capacity = 0;
          size = 0;
          jsElems = [];
          const this$12 = new $c_scm_ArrayBufferView(ifs.scm_ArrayBuffer__f_array, ifs.scm_ArrayBuffer__f_size0);
          const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$12);
          while (it.hasNext__Z()) {
            const elem$1 = it.next__O();
            const unboxedElem = ((elem$1 === null) ? null : elem$1);
            jsElems.push(unboxedElem)
          };
          $$x1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
        };
        const elem$2 = new $c_Ltigerpython_parser_ast_AstNode$Comprehension($$x2, target, iter, $$x1);
        generators.addOne__O__scm_ArrayBuffer(elem$2)
      } else {
        break
      }
    };
    if ((generators.scm_ArrayBuffer__f_size0 >= 0)) {
      const len$1 = generators.scm_ArrayBuffer__f_size0;
      const destination$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Comprehension.getArrayOf(), [len$1]);
      generators.copyToArray__O__I__I__I(destination$1, 0, generators.scm_ArrayBuffer__f_size0);
      return destination$1
    } else {
      let capacity$1 = 0;
      let size$1 = 0;
      let jsElems$1 = null;
      capacity$1 = 0;
      size$1 = 0;
      jsElems$1 = [];
      const this$16 = new $c_scm_ArrayBufferView(generators.scm_ArrayBuffer__f_array, generators.scm_ArrayBuffer__f_size0);
      const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$16);
      while (it$1.hasNext__Z()) {
        const elem$3 = it$1.next__O();
        const unboxedElem$1 = ((elem$3 === null) ? null : elem$3);
        jsElems$1.push(unboxedElem$1)
      };
      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Comprehension.getArrayOf(), jsElems$1)
    }
  };
  parseTestListComp__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const x1 = this.parseListMaker__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$List)) {
      const x2 = x1;
      const pos = x2.Ltigerpython_parser_ast_AstNode$List__f_pos;
      const items = x2.Ltigerpython_parser_ast_AstNode$List__f_elements;
      let $$x1;
      if ((items.u.length === 1)) {
        const x = tokens.prev__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
        $$x1 = (!(x === x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return $m_sc_ArrayOps$().head$extension__O__O(items)
      } else {
        return new $c_Ltigerpython_parser_ast_AstNode$Tuple(pos, items)
      }
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$ListComp)) {
      const x4 = x1;
      const pos$2 = x4.Ltigerpython_parser_ast_AstNode$ListComp__f_pos;
      const elements = x4.Ltigerpython_parser_ast_AstNode$ListComp__f_elements;
      const generators = x4.Ltigerpython_parser_ast_AstNode$ListComp__f_generators;
      return new $c_Ltigerpython_parser_ast_AstNode$Generator(pos$2, elements, generators)
    } else {
      return x1
    }
  };
  parseLambdaDef__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, allowIfExpr) {
    const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LAMBDA);
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    let p;
    if ((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array)))) {
      p = this.Ltigerpython_parser_parsing_ExpressionParser__f_parser.Ltigerpython_parser_parsing_Parser__f_argumentParser.parseParamList__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Parameters(tokens, false)
    } else {
      p = $m_Ltigerpython_parser_ast_AstNode$Parameters$().empty__I__Ltigerpython_parser_ast_AstNode$Parameters(tokens.pos__I())
    };
    return (tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON) ? (allowIfExpr ? new $c_Ltigerpython_parser_ast_AstNode$Lambda(startPos, p, this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)) : new $c_Ltigerpython_parser_ast_AstNode$Lambda(startPos, p, this.parseOrTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))) : null)
  };
  parseExprList__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Expression(tokens) {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    const elem = this.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    result.addOne__O__scm_ArrayBuffer(elem);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        if ($m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_ParserState__Z(tokens, this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)) {
          const elem$1 = this.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
          result.addOne__O__scm_ArrayBuffer(elem$1)
        }
      } else {
        break
      }
    };
    if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
      const len = result.scm_ArrayBuffer__f_size0;
      const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
      result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
      return destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const this$8 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$8);
      while (it.hasNext__Z()) {
        const elem$2 = it.next__O();
        const unboxedElem = ((elem$2 === null) ? null : elem$2);
        jsElems.push(unboxedElem)
      };
      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
    }
  };
  parseExprListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    if (tokens.hasNext__Z()) {
      const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      const result = this.parseExprList__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Expression(tokens);
      return ((result === null) ? null : ((result.u.length === 1) ? $m_sc_ArrayOps$().head$extension__O__O(result) : new $c_Ltigerpython_parser_ast_AstNode$Tuple(startPos, result)))
    } else {
      const $$x1 = tokens.endPos__I();
      const xs = $m_sci_Nil$();
      const len = xs.length__I();
      const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i = 0;
      while (iterator.hasNext__Z()) {
        array.u[i] = iterator.next__O();
        i = ((1 + i) | 0)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Tuple($$x1, array)
    }
  };
  parseTestList__Ltigerpython_parser_lexer_TokenBuffer__Z__ALtigerpython_parser_ast_AstNode$Expression(tokens, insertComma) {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    const elem = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    result.addOne__O__scm_ArrayBuffer(elem);
    while (true) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
        if (this.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
          const elem$1 = this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
          result.addOne__O__scm_ArrayBuffer(elem$1)
        }
      } else {
        break
      }
    };
    let $$x1;
    if (((insertComma && tokens.hasNext__Z()) && this.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens))) {
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPR];
      $$x1 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1)))
    } else {
      $$x1 = false
    };
    if (($$x1 && (!$p_Ltigerpython_parser_parsing_ExpressionParser__stopParsingTestList__sci_Seq__Ltigerpython_parser_lexer_TokenBuffer__Z(this, $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(result), tokens)))) {
      let $$x2;
      if ((!$f_sc_SeqOps__isEmpty__Z(result))) {
        const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR];
        $$x2 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))
      } else {
        $$x2 = false
      };
      let missingParens;
      if ($$x2) {
        const x1 = $f_sc_IndexedSeqOps__last__O(result);
        matchEnd5: {
          if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
            const x2 = x1;
            const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
            if (this.Ltigerpython_parser_parsing_ExpressionParser__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().isLikelyFunctionName__T__Z(name)) {
              missingParens = true;
              break matchEnd5
            }
          };
          missingParens = false
        }
      } else {
        missingParens = false
      };
      if (missingParens) {
        this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES, $m_sci_Nil$())
      } else {
        this.Ltigerpython_parser_parsing_ExpressionParser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA, $m_sci_Nil$())
      };
      const xs = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.parseTestList__Ltigerpython_parser_lexer_TokenBuffer__Z__ALtigerpython_parser_ast_AstNode$Expression(tokens, true));
      result.addAll__sc_IterableOnce__scm_ArrayBuffer(xs)
    };
    if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
      const len = result.scm_ArrayBuffer__f_size0;
      const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
      result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
      return destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const this$14 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$14);
      while (it.hasNext__Z()) {
        const elem$2 = it.next__O();
        const unboxedElem = ((elem$2 === null) ? null : elem$2);
        jsElems.push(unboxedElem)
      };
      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
    }
  };
  parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, insertComma) {
    if (tokens.hasNext__Z()) {
      const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      const result = this.parseTestList__Ltigerpython_parser_lexer_TokenBuffer__Z__ALtigerpython_parser_ast_AstNode$Expression(tokens, insertComma);
      if ((result === null)) {
        return null
      } else {
        let $$x1;
        if ((result.u.length === 1)) {
          const x = tokens.prev__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
          $$x1 = (!(x === x$2))
        } else {
          $$x1 = false
        };
        if ($$x1) {
          return $m_sc_ArrayOps$().head$extension__O__O(result)
        } else {
          return new $c_Ltigerpython_parser_ast_AstNode$Tuple(startPos, result)
        }
      }
    } else {
      const $$x2 = tokens.endPos__I();
      const xs = $m_sci_Nil$();
      const len = xs.length__I();
      const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i = 0;
      while (iterator.hasNext__Z()) {
        array.u[i] = iterator.next__O();
        i = ((1 + i) | 0)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Tuple($$x2, array)
    }
  };
  parseYieldExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens) {
    const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
        return new $c_Ltigerpython_parser_ast_AstNode$YieldFrom(startPos, this.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
      } else {
        return (this.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens) ? new $c_Ltigerpython_parser_ast_AstNode$Yield(startPos, this.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)) : new $c_Ltigerpython_parser_ast_AstNode$Yield(startPos, null))
      }
    } else {
      return null
    }
  };
}
const $d_Ltigerpython_parser_parsing_ExpressionParser = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ExpressionParser: 0
}, false, "tigerpython.parser.parsing.ExpressionParser", {
  Ltigerpython_parser_parsing_ExpressionParser: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_ExpressionParser.prototype.$classData = $d_Ltigerpython_parser_parsing_ExpressionParser;
class $c_Ltigerpython_parser_parsing_ExpressionParser$ extends $c_O {
  firstOfExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_ParserState__Z(tokens, parserState) {
    return (tokens.hasNext__Z() && this.firstOfExpr__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(tokens.head__Ltigerpython_parser_lexer_Token(), parserState))
  };
  firstOfExpr__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token, parserState) {
    const x1 = token.Ltigerpython_parser_lexer_Token__f_tokenType;
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
    let $$x1;
    if ((x === x1)) {
      $$x1 = true
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG;
      if ((x$3 === x1)) {
        $$x1 = true
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
        if ((x$5 === x1)) {
          $$x1 = true
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
          if ((x$7 === x1)) {
            $$x1 = true
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMPLEX;
            if ((x$9 === x1)) {
              $$x1 = true
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
              if ((x$11 === x1)) {
                $$x1 = true
              } else {
                const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY;
                $$x1 = (x$13 === x1)
              }
            }
          }
        }
      }
    };
    if ($$x1) {
      return true
    } else {
      const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x$15 === x1)) {
        return true
      } else {
        const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
        let $$x2;
        if ((x$17 === x1)) {
          $$x2 = true
        } else {
          const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
          if ((x$19 === x1)) {
            $$x2 = true
          } else {
            const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
            $$x2 = (x$21 === x1)
          }
        };
        if ($$x2) {
          return true
        } else {
          const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPR;
          if ((x$23 === x1)) {
            return true
          } else {
            const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS;
            let $$x3;
            if ((x$25 === x1)) {
              $$x3 = true
            } else {
              const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
              if ((x$27 === x1)) {
                $$x3 = true
              } else {
                const x$29 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_NOT;
                $$x3 = (x$29 === x1)
              }
            };
            if ($$x3) {
              return true
            } else {
              const x$31 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONE;
              let $$x4;
              if ((x$31 === x1)) {
                $$x4 = true
              } else {
                const x$33 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRUE;
                if ((x$33 === x1)) {
                  $$x4 = true
                } else {
                  const x$35 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FALSE;
                  $$x4 = (x$35 === x1)
                }
              };
              if ($$x4) {
                return true
              } else {
                const x$37 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR;
                if (((x$37 === x1) && (parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion >= 3))) {
                  return true
                } else {
                  const x$39 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS;
                  if ((x$39 === x1)) {
                    return true
                  } else {
                    const x$41 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AWAIT;
                    return (x$41 === x1)
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token, parserState) {
    const x1 = token.Ltigerpython_parser_lexer_Token__f_tokenType;
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
    let $$x1;
    if ((x === x1)) {
      $$x1 = true
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG;
      if ((x$3 === x1)) {
        $$x1 = true
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
        if ((x$5 === x1)) {
          $$x1 = true
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
          if ((x$7 === x1)) {
            $$x1 = true
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMPLEX;
            if ((x$9 === x1)) {
              $$x1 = true
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
              if ((x$11 === x1)) {
                $$x1 = true
              } else {
                const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY;
                $$x1 = (x$13 === x1)
              }
            }
          }
        }
      }
    };
    if ($$x1) {
      return true
    } else {
      const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x$15 === x1)) {
        return true
      } else {
        const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
        let $$x2;
        if ((x$17 === x1)) {
          $$x2 = true
        } else {
          const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
          if ((x$19 === x1)) {
            $$x2 = true
          } else {
            const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
            $$x2 = (x$21 === x1)
          }
        };
        if ($$x2) {
          return true
        } else {
          const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS;
          let $$x3;
          if ((x$23 === x1)) {
            $$x3 = true
          } else {
            const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
            if ((x$25 === x1)) {
              $$x3 = true
            } else {
              const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_NOT;
              $$x3 = (x$27 === x1)
            }
          };
          if ($$x3) {
            return true
          } else {
            const x$29 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPR;
            if ((x$29 === x1)) {
              return true
            } else {
              const x$31 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONE;
              let $$x4;
              if ((x$31 === x1)) {
                $$x4 = true
              } else {
                const x$33 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRUE;
                if ((x$33 === x1)) {
                  $$x4 = true
                } else {
                  const x$35 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FALSE;
                  $$x4 = (x$35 === x1)
                }
              };
              if ($$x4) {
                return true
              } else {
                const x$37 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LAMBDA;
                let $$x5;
                if ((x$37 === x1)) {
                  $$x5 = true
                } else {
                  const x$39 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT;
                  $$x5 = (x$39 === x1)
                };
                if ($$x5) {
                  return true
                } else {
                  const x$41 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR;
                  if (((x$41 === x1) && (parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion >= 3))) {
                    return true
                  } else {
                    const x$43 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS;
                    if ((x$43 === x1)) {
                      return true
                    } else {
                      const x$45 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AWAIT;
                      return (x$45 === x1)
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_parsing_ExpressionParser$ = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ExpressionParser$: 0
}, false, "tigerpython.parser.parsing.ExpressionParser$", {
  Ltigerpython_parser_parsing_ExpressionParser$: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_ExpressionParser$.prototype.$classData = $d_Ltigerpython_parser_parsing_ExpressionParser$;
let $n_Ltigerpython_parser_parsing_ExpressionParser$ = (void 0);
function $m_Ltigerpython_parser_parsing_ExpressionParser$() {
  if ((!$n_Ltigerpython_parser_parsing_ExpressionParser$)) {
    $n_Ltigerpython_parser_parsing_ExpressionParser$ = new $c_Ltigerpython_parser_parsing_ExpressionParser$()
  };
  return $n_Ltigerpython_parser_parsing_ExpressionParser$
}
const $p_Ltigerpython_parser_parsing_ExtParserUtils__isLoop__Ltigerpython_parser_ast_AstNode$Statement__Z = (function($thiz, stmt) {
  return ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$For) || (stmt instanceof $c_Ltigerpython_parser_ast_AstNode$While))
});
const $p_Ltigerpython_parser_parsing_ExtParserUtils__isComparison__Ltigerpython_parser_ast_AstNode$Expression__Z = (function($thiz, expr) {
  if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
    const x2 = expr;
    const this$1 = $m_Ltigerpython_parser_ast_BinOp$();
    const op = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
    return this$1.Ltigerpython_parser_ast_BinOp$__f_comparisons.contains__O__Z(op)
  } else {
    return (expr instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)
  }
});
const $p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D = (function($thiz, value) {
  const x1 = value.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
  const x = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_FLOAT;
  if (((x === null) ? (x1 === null) : x.equals__O__Z(x1))) {
    const x$1 = value.Ltigerpython_parser_ast_AstNode$Value__f_value;
    return $m_jl_Double$().parseDouble__T__D(x$1)
  } else {
    const x$3 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER;
    if (((x$3 === null) ? (x1 === null) : x$3.equals__O__Z(x1))) {
      const x$2 = value.Ltigerpython_parser_ast_AstNode$Value__f_value;
      const this$5 = $m_jl_Integer$();
      return this$5.parseInt__T__I__I(x$2, 10)
    } else {
      throw new $c_Ltigerpython_parser_parsing_ExtParserUtils$NoValueException($thiz)
    }
  }
});
const $p_Ltigerpython_parser_parsing_ExtParserUtils__getModuleScope__I__Z__s_Option = (function($thiz, pos, useEntireText) {
  const $$x1 = $m_Ltigerpython_parser_scopes_Scope$();
  const this$1 = $thiz.Ltigerpython_parser_parsing_ExtParserUtils__f_parser;
  const this$2 = this$1.Ltigerpython_parser_parsing_Parser__f_astStack;
  const this$3 = this$2.Ltigerpython_parser_parsing_AstStack__f_module;
  const moduleScope = $$x1.fromAst__T__Ltigerpython_parser_ast_AstNode__Ltigerpython_parser_scopes_ModuleLoader__Ltigerpython_parser_scopes_ModuleScope("", this$3.getItems__Ltigerpython_parser_ast_AstNode$Statement(), $m_Ltigerpython_parser_scopes_ModuleLoader$().Ltigerpython_parser_scopes_ModuleLoader$__f_defaultModuleLoader);
  return moduleScope.findScope__I__s_Option(pos)
});
const $p_Ltigerpython_parser_parsing_ExtParserUtils___hasName__T__Z = (function($thiz, name) {
  return ((name !== "") && ($thiz.Ltigerpython_parser_parsing_ExtParserUtils__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(name) > 0))
});
class $c_Ltigerpython_parser_parsing_ExtParserUtils extends $c_O {
  constructor(parser, parserState) {
    super();
    this.Ltigerpython_parser_parsing_ExtParserUtils__f_parser = null;
    this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState = null;
    this.Ltigerpython_parser_parsing_ExtParserUtils__f_parser = parser;
    this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState = parserState
  };
  checkForErrors__Ltigerpython_parser_ast_AstNode$Statement__V(stmt) {
    this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(stmt, null, false, false, false);
    const typeChecker = new $c_Ltigerpython_parser_parsing_TypeChecker(this, this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState);
    $f_Ltigerpython_parser_ast_AstVisitor__walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(typeChecker, stmt)
  };
  checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(stmt, parent, isFunction, isClass, hasLoop) {
    matchEnd22: {
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
        const x2 = stmt;
        if (this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
          if ((isFunction && this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_flatFunctions)) {
            const this$4 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
            const pos = stmt.pos__I();
            const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NESTED_FUNCTIONS;
            const array = [x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name];
            const params = new $c_sjsr_WrappedVarArgs(array);
            this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
          };
          if ((hasLoop && $p_Ltigerpython_parser_parsing_ExtParserUtils__isLoop__Ltigerpython_parser_ast_AstNode$Statement__Z(this, parent))) {
            const this$8 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
            const pos$1 = x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
            const array$1 = ["function"];
            const params$1 = new $c_sjsr_WrappedVarArgs(array$1);
            this$8.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
          };
          if ((parent instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef)) {
            const array$2 = ["classmethod"];
            const decoratorNames = new $c_sjsr_WrappedVarArgs(array$2);
            if (($f_Ltigerpython_parser_ast_AstNode$Decoratable__hasDecorator__sci_Seq__Z(x2, decoratorNames) || (x2.getName__T() === "__new__"))) {
              if ((!x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.hasClassSelf__Z())) {
                const this$12 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                const pos$2 = x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.Ltigerpython_parser_ast_AstNode$Parameters__f_pos;
                const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF;
                const params$2 = $m_sci_Nil$();
                this$12.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2)
              }
            } else {
              const array$3 = ["staticmethod"];
              const decoratorNames$1 = new $c_sjsr_WrappedVarArgs(array$3);
              if (((!$f_Ltigerpython_parser_ast_AstNode$Decoratable__hasDecorator__sci_Seq__Z(x2, decoratorNames$1)) && (!x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.hasSelf__Z()))) {
                if ((this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion >= 3)) {
                  let $$x1;
                  if (((x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs === null) && (!x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.hasClassSelf__Z()))) {
                    const this$16 = x2.getName__T();
                    $$x1 = (!(((this$16.length | 0) >= 0) && (this$16.substring(0, ("_".length | 0)) === "_")))
                  } else {
                    $$x1 = false
                  };
                  if ($$x1) {
                    const this$18 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                    const pos$3 = x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.Ltigerpython_parser_ast_AstNode$Parameters__f_pos;
                    const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                    const params$3 = $m_sci_Nil$();
                    this$18.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3)
                  }
                } else {
                  const this$19 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                  const pos$4 = x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.Ltigerpython_parser_ast_AstNode$Parameters__f_pos;
                  const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                  const params$4 = $m_sci_Nil$();
                  this$19.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$4, params$4)
                }
              }
            }
          }
        };
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body, x2, true, false, false);
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef)) {
        const x3 = stmt;
        if (((hasLoop && this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) && $p_Ltigerpython_parser_parsing_ExtParserUtils__isLoop__Ltigerpython_parser_ast_AstNode$Statement__Z(this, parent))) {
          const this$23 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$5 = x3.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos;
          const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
          const array$4 = ["class"];
          const params$5 = new $c_sjsr_WrappedVarArgs(array$4);
          this$23.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$5, params$5)
        };
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x3.Ltigerpython_parser_ast_AstNode$ClassDef__f_body, x3, false, true, false);
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$For)) {
        const x4 = stmt;
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x4.Ltigerpython_parser_ast_AstNode$For__f_body, x4, isFunction, false, true);
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x4.Ltigerpython_parser_ast_AstNode$For__f_elseBody, x4, isFunction, false, hasLoop);
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
        const x5 = stmt;
        if (this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
          this.checkCondition__Ltigerpython_parser_ast_AstNode$Expression__s_Option__V(x5.Ltigerpython_parser_ast_AstNode$While__f_test, $m_s_None$())
        };
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x5.Ltigerpython_parser_ast_AstNode$While__f_body, x5, isFunction, false, true);
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x5.Ltigerpython_parser_ast_AstNode$While__f_elseBody, x5, isFunction, false, hasLoop);
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
        const x6 = stmt;
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x6.Ltigerpython_parser_ast_AstNode$Try__f_body, x6, isFunction, false, hasLoop);
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x6.Ltigerpython_parser_ast_AstNode$Try__f_elseBody, x6, isFunction, false, hasLoop);
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x6.Ltigerpython_parser_ast_AstNode$Try__f_finalBody, x6, isFunction, false, hasLoop);
        const xs = x6.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
        const f = ((this$25, x6$1, isFunction$1, hasLoop$1) => ((handler$2) => {
          const handler = handler$2;
          this$25.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(handler.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body, x6$1, isFunction$1, false, hasLoop$1)
        }))(this, x6, isFunction, hasLoop);
        const len = xs.u.length;
        let i = 0;
        if ((xs !== null)) {
          while ((i < len)) {
            const arg1 = xs.u[i];
            f(arg1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_I(xs, 1)) {
          const x3$1 = xs;
          while ((i < len)) {
            const arg1$1 = x3$1.u[i];
            f(arg1$1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_D(xs, 1)) {
          const x4$1 = xs;
          while ((i < len)) {
            const arg1$2 = x4$1.u[i];
            f(arg1$2);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_J(xs, 1)) {
          const x5$1 = xs;
          while ((i < len)) {
            const t = x5$1.u[i];
            const lo = t.RTLong__f_lo;
            const hi = t.RTLong__f_hi;
            f(new $c_RTLong(lo, hi));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_F(xs, 1)) {
          const x6$2 = xs;
          while ((i < len)) {
            const arg1$3 = x6$2.u[i];
            f(arg1$3);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_C(xs, 1)) {
          const x7 = xs;
          while ((i < len)) {
            const arg1$4 = x7.u[i];
            f($bC(arg1$4));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_B(xs, 1)) {
          const x8 = xs;
          while ((i < len)) {
            const arg1$5 = x8.u[i];
            f(arg1$5);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_S(xs, 1)) {
          const x9 = xs;
          while ((i < len)) {
            const arg1$6 = x9.u[i];
            f(arg1$6);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_Z(xs, 1)) {
          const x10 = xs;
          while ((i < len)) {
            const arg1$7 = x10.u[i];
            f(arg1$7);
            i = ((1 + i) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs)
        };
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$With)) {
        const x7$1 = stmt;
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x7$1.Ltigerpython_parser_ast_AstNode$With__f_body, x7$1, isFunction, false, hasLoop);
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
        const x8$1 = stmt;
        const xs$1 = x8$1.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
        const f$1 = ((this$2$1, parent$1, isFunction$2, isClass$1, hasLoop$2) => ((s$2) => {
          const s = s$2;
          this$2$1.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(s, parent$1, isFunction$2, isClass$1, hasLoop$2)
        }))(this, parent, isFunction, isClass, hasLoop);
        const len$1 = xs$1.u.length;
        let i$1 = 0;
        if ((xs$1 !== null)) {
          while ((i$1 < len$1)) {
            const arg1$8 = xs$1.u[i$1];
            f$1(arg1$8);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_I(xs$1, 1)) {
          const x3$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$9 = x3$2.u[i$1];
            f$1(arg1$9);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_D(xs$1, 1)) {
          const x4$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$10 = x4$2.u[i$1];
            f$1(arg1$10);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_J(xs$1, 1)) {
          const x5$2 = xs$1;
          while ((i$1 < len$1)) {
            const t$1 = x5$2.u[i$1];
            const lo$1 = t$1.RTLong__f_lo;
            const hi$1 = t$1.RTLong__f_hi;
            f$1(new $c_RTLong(lo$1, hi$1));
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_F(xs$1, 1)) {
          const x6$3 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$11 = x6$3.u[i$1];
            f$1(arg1$11);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_C(xs$1, 1)) {
          const x7$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$12 = x7$2.u[i$1];
            f$1($bC(arg1$12));
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_B(xs$1, 1)) {
          const x8$2 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$13 = x8$2.u[i$1];
            f$1(arg1$13);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_S(xs$1, 1)) {
          const x9$1 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$14 = x9$1.u[i$1];
            f$1(arg1$14);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_Z(xs$1, 1)) {
          const x10$1 = xs$1;
          while ((i$1 < len$1)) {
            const arg1$15 = x10$1.u[i$1];
            f$1(arg1$15);
            i$1 = ((1 + i$1) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs$1)
        };
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
        const x9$2 = stmt;
        if (this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
          this.checkCondition__Ltigerpython_parser_ast_AstNode$Expression__s_Option__V(x9$2.Ltigerpython_parser_ast_AstNode$If__f_test, $m_s_None$());
          this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x9$2.Ltigerpython_parser_ast_AstNode$If__f_body, x9$2, isFunction, false, hasLoop);
          this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(x9$2.Ltigerpython_parser_ast_AstNode$If__f_elseBody, x9$2, isFunction, false, hasLoop);
          break matchEnd22
        }
      };
      if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Import) || ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFrom) || ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ImportStar) || (stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFuture))))) {
        if (((hasLoop && this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) && $p_Ltigerpython_parser_parsing_ExtParserUtils__isLoop__Ltigerpython_parser_ast_AstNode$Statement__Z(this, parent))) {
          const this$29 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$6 = stmt.pos__I();
          const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP;
          const params$6 = $m_sci_Nil$();
          this$29.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$6, params$6);
          break matchEnd22
        } else {
          break matchEnd22
        }
      };
      if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Break) && (!hasLoop))) {
        if (isFunction) {
          const this$30 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$7 = stmt.pos__I();
          const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK;
          const params$7 = $m_sci_Nil$();
          this$30.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$7, params$7);
          break matchEnd22
        } else {
          const this$34 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$8 = stmt.pos__I();
          const code$8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
          const array$5 = ["break"];
          const params$8 = new $c_sjsr_WrappedVarArgs(array$5);
          this$34.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$8, params$8);
          break matchEnd22
        }
      };
      if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Continue) && (!hasLoop))) {
        const this$38 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
        const pos$9 = stmt.pos__I();
        const code$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
        const array$6 = ["continue"];
        const params$9 = new $c_sjsr_WrappedVarArgs(array$6);
        this$38.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$9, (-1), code$9, params$9);
        break matchEnd22
      };
      if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Return) && (!isFunction))) {
        if (hasLoop) {
          const this$39 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$10 = stmt.pos__I();
          const code$10 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN;
          const params$10 = $m_sci_Nil$();
          this$39.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$10, (-1), code$10, params$10);
          break matchEnd22
        } else {
          const this$40 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$11 = stmt.pos__I();
          const code$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION;
          const params$11 = $m_sci_Nil$();
          this$40.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$11, (-1), code$11, params$11);
          break matchEnd22
        }
      };
      if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Global) && ((this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode && (!isFunction)) && (!isClass)))) {
        const this$44 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
        const pos$12 = stmt.pos__I();
        const code$12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
        const array$7 = ["global"];
        const params$12 = new $c_sjsr_WrappedVarArgs(array$7);
        this$44.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$12, (-1), code$12, params$12);
        break matchEnd22
      };
      if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$NonLocal) && ((this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode && (!isFunction)) && (!isClass)))) {
        const this$48 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
        const pos$13 = stmt.pos__I();
        const code$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
        const array$8 = ["nonlocal"];
        const params$13 = new $c_sjsr_WrappedVarArgs(array$8);
        this$48.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$13, (-1), code$13, params$13);
        break matchEnd22
      };
      if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
        const x19 = stmt;
        if ((!isFunction)) {
          const x1$2 = x19.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
          if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Yield)) {
            const this$49 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
            const pos$14 = x19.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos;
            const code$14 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION;
            const params$14 = $m_sci_Nil$();
            this$49.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$14, (-1), code$14, params$14)
          };
          break matchEnd22
        }
      };
      if ($is_Ltigerpython_parser_ast_AstNode$Body(stmt)) {
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(stmt.body__Ltigerpython_parser_ast_AstNode$Statement(), stmt, isFunction, false, hasLoop);
        this.checkForInvalidBreaks__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement__Z__Z__Z__V(stmt.elseBody__Ltigerpython_parser_ast_AstNode$Statement(), stmt, isFunction, false, hasLoop);
        break matchEnd22
      }
    }
  };
  checkCondition__Ltigerpython_parser_ast_AstNode$Expression__s_Option__V(test, parentOp) {
    matchEnd9: {
      if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
        const x2 = test;
        const x1$2 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
        const x = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_AND;
        let $$x1;
        if (((x === null) ? (x1$2 === null) : x.equals__O__Z(x1$2))) {
          $$x1 = true
        } else {
          const x$3 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_OR;
          $$x1 = ((x$3 === null) ? (x1$2 === null) : x$3.equals__O__Z(x1$2))
        };
        if ($$x1) {
          this.checkCondition__Ltigerpython_parser_ast_AstNode$Expression__s_Option__V(x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left, new $c_s_Some(x1$2));
          this.checkCondition__Ltigerpython_parser_ast_AstNode$Expression__s_Option__V(x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right, new $c_s_Some(x1$2));
          if ($p_Ltigerpython_parser_parsing_ExtParserUtils__isComparison__Ltigerpython_parser_ast_AstNode$Expression__Z(this, x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right)) {
            const x1$3 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
            if ((x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
              const x2$2 = x1$3;
              const pos = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_pos;
              const name = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
              let rc7 = false;
              let x2$3 = null;
              const x1$4 = this.getTypeOfName__I__T__Z__s_Option(pos, name, true);
              matchEnd8: {
                if ((x1$4 instanceof $c_s_Some)) {
                  rc7 = true;
                  x2$3 = x1$4;
                  const p3 = x2$3.s_Some__f_value;
                  const x$5 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN;
                  if ((x$5 === p3)) {
                    break matchEnd8
                  }
                };
                if (rc7) {
                  const dt = x2$3.s_Some__f_value;
                  const array = [$m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_UNKNOWN_TYPE];
                  const dataTypes = new $c_sjsr_WrappedVarArgs(array);
                  if ((!$f_sc_SeqOps__contains__O__Z(dataTypes, dt))) {
                    break matchEnd8
                  }
                }
              }
            }
          }
        } else {
          const x$9 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_BIT_AND;
          let $$x2;
          if (((x$9 === null) ? (x1$2 === null) : x$9.equals__O__Z(x1$2))) {
            $$x2 = true
          } else {
            const x$11 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_BIT_OR;
            if (((x$11 === null) ? (x1$2 === null) : x$11.equals__O__Z(x1$2))) {
              $$x2 = true
            } else {
              const x$13 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_BIT_XOR;
              $$x2 = ((x$13 === null) ? (x1$2 === null) : x$13.equals__O__Z(x1$2))
            }
          };
          if ($$x2) {
            /*<skip>*/
          } else {
            const x$15 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_SHIFT_L;
            let $$x3;
            if (((x$15 === null) ? (x1$2 === null) : x$15.equals__O__Z(x1$2))) {
              $$x3 = true
            } else {
              const x$17 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_SHIFT_R;
              $$x3 = ((x$17 === null) ? (x1$2 === null) : x$17.equals__O__Z(x1$2))
            };
            if ($$x3) {
              const x$20 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_SHIFT_L;
              let new_op;
              if (((x1$2 === null) ? (x$20 === null) : x1$2.equals__O__Z(x$20))) {
                new_op = "<"
              } else {
                new_op = ">"
              };
              const this$7 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
              const pos$1 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos;
              const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
              const array$1 = [x1$2, new_op];
              const params = new $c_sjsr_WrappedVarArgs(array$1);
              this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code, params)
            } else {
              const this$8 = $m_Ltigerpython_parser_ast_BinOp$();
              if ((!this$8.Ltigerpython_parser_ast_BinOp$__f_comparisons.contains__O__Z(x1$2))) {
                const this$9 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                const pos$2 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos;
                const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
                const params$1 = $m_sci_Nil$();
                this$9.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$1, params$1)
              }
            }
          }
        };
        break matchEnd9
      };
      if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
        const x3 = test;
        const xs = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
        if ((xs.u.length !== 0)) {
          if (((x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length > 1) && this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
            const $$x4 = $m_sc_ArrayOps$();
            const xs$1 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
            const x1$5 = $$x4.last$extension__O__O(xs$1);
            matchEnd9$2: {
              if ((x1$5 !== null)) {
                const p2 = x1$5._1__O();
                const bool = x1$5._2__O();
                const x$22 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_EQ;
                if ((((x$22 === null) ? (p2 === null) : x$22.equals__O__Z(p2)) && (bool instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue))) {
                  const x5 = bool;
                  if (x5.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value) {
                    const this$16 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                    const pos$3 = x5.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos;
                    const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                    const array$2 = ["True"];
                    const params$2 = new $c_sjsr_WrappedVarArgs(array$2);
                    this$16.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$2, params$2);
                    break matchEnd9$2
                  } else {
                    const this$20 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                    const pos$4 = x5.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos;
                    const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                    const array$3 = ["False"];
                    const params$3 = new $c_sjsr_WrappedVarArgs(array$3);
                    this$20.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$3, params$3);
                    break matchEnd9$2
                  }
                }
              };
              if ((x1$5 !== null)) {
                const p3$2 = x1$5._1__O();
                const bool$2 = x1$5._2__O();
                const x$24 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ;
                if ((((x$24 === null) ? (p3$2 === null) : x$24.equals__O__Z(p3$2)) && (bool$2 instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue))) {
                  const x7 = bool$2;
                  if (x7.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value) {
                    const this$24 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                    const pos$5 = x7.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos;
                    const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                    const array$4 = ["True"];
                    const params$4 = new $c_sjsr_WrappedVarArgs(array$4);
                    this$24.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$4, params$4);
                    break matchEnd9$2
                  } else {
                    const this$28 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                    const pos$6 = x7.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos;
                    const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                    const array$5 = ["False"];
                    const params$5 = new $c_sjsr_WrappedVarArgs(array$5);
                    this$28.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$5, params$5);
                    break matchEnd9$2
                  }
                }
              }
            }
          };
          const x1$6 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_left;
          matchEnd14: {
            if ((x1$6 instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
              const x9 = x1$6;
              if ((x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 2)) {
                const x1$7 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u[0];
                if ((x1$7 === null)) {
                  throw new $c_s_MatchError(x1$7)
                };
                const op1 = x1$7._1__O();
                const val1 = x1$7._2__O();
                const x1$8 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u[1];
                if ((x1$8 === null)) {
                  throw new $c_s_MatchError(x1$8)
                };
                const op2 = x1$8._1__O();
                const val2 = x1$8._2__O();
                let op;
                if ((!((op1 === null) ? (op2 === null) : op1.equals__O__Z(op2)))) {
                  const x$28 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT;
                  let $$x6;
                  if (((x$28 === null) ? (op1 === null) : x$28.equals__O__Z(op1))) {
                    const x$30 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ;
                    $$x6 = ((x$30 === null) ? (op2 === null) : x$30.equals__O__Z(op2))
                  } else {
                    $$x6 = false
                  };
                  let $$x5;
                  if ($$x6) {
                    $$x5 = true
                  } else {
                    const x$32 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ;
                    if (((x$32 === null) ? (op1 === null) : x$32.equals__O__Z(op1))) {
                      const x$34 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT;
                      $$x5 = ((x$34 === null) ? (op2 === null) : x$34.equals__O__Z(op2))
                    } else {
                      $$x5 = false
                    }
                  };
                  if ($$x5) {
                    op = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT
                  } else {
                    const x$36 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT;
                    let $$x8;
                    if (((x$36 === null) ? (op1 === null) : x$36.equals__O__Z(op1))) {
                      const x$38 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ;
                      $$x8 = ((x$38 === null) ? (op2 === null) : x$38.equals__O__Z(op2))
                    } else {
                      $$x8 = false
                    };
                    let $$x7;
                    if ($$x8) {
                      $$x7 = true
                    } else {
                      const x$40 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ;
                      if (((x$40 === null) ? (op1 === null) : x$40.equals__O__Z(op1))) {
                        const x$42 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT;
                        $$x7 = ((x$42 === null) ? (op2 === null) : x$42.equals__O__Z(op2))
                      } else {
                        $$x7 = false
                      }
                    };
                    if ($$x7) {
                      op = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT
                    } else {
                      op = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_INVALID
                    }
                  }
                } else {
                  op = op1
                };
                let $$x9;
                if ((!(val1 instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                  const x$45 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_INVALID;
                  $$x9 = (!((op === null) ? (x$45 === null) : op.equals__O__Z(x$45)))
                } else {
                  $$x9 = false
                };
                if ($$x9) {
                  matchEnd9$3: {
                    if ((val2 instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
                      const x5$2 = val2;
                      this.checkValues__I__D__s_Enumeration$Value__D__V(test.pos__I(), $p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x9), op, $p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x5$2));
                      break matchEnd9$3
                    };
                    if ((val2 instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
                      const x2$4 = val2;
                      const p4$2 = x2$4.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
                      const rightValue = x2$4.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
                      const x$46 = $m_Ltigerpython_parser_ast_UnOp$().Ltigerpython_parser_ast_UnOp$__f_NEG;
                      if ((((x$46 === null) ? (p4$2 === null) : x$46.equals__O__Z(p4$2)) && (rightValue instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                        const x7$2 = rightValue;
                        this.checkValues__I__D__s_Enumeration$Value__D__V(test.pos__I(), $p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x9), op1, (-$p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x7$2)));
                        break matchEnd9$3
                      }
                    }
                  };
                  break matchEnd14
                } else {
                  break matchEnd14
                }
              } else {
                break matchEnd14
              }
            };
            if ((x1$6 instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
              const x2$5 = x1$6;
              const p4$3 = x2$5.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
              const leftValue = x2$5.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
              const x$49 = $m_Ltigerpython_parser_ast_UnOp$().Ltigerpython_parser_ast_UnOp$__f_NEG;
              if ((((x$49 === null) ? (p4$3 === null) : x$49.equals__O__Z(p4$3)) && (leftValue instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                const x11 = leftValue;
                if ((x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 2)) {
                  const x1$11 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u[0];
                  if ((x1$11 === null)) {
                    throw new $c_s_MatchError(x1$11)
                  };
                  const op1$3 = x1$11._1__O();
                  const val1$3 = x1$11._2__O();
                  const x1$12 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u[1];
                  if ((x1$12 === null)) {
                    throw new $c_s_MatchError(x1$12)
                  };
                  const op2$3 = x1$12._1__O();
                  const val2$3 = x1$12._2__O();
                  let op$2;
                  if ((!((op1$3 === null) ? (op2$3 === null) : op1$3.equals__O__Z(op2$3)))) {
                    const x$53 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT;
                    let $$x11;
                    if (((x$53 === null) ? (op1$3 === null) : x$53.equals__O__Z(op1$3))) {
                      const x$55 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ;
                      $$x11 = ((x$55 === null) ? (op2$3 === null) : x$55.equals__O__Z(op2$3))
                    } else {
                      $$x11 = false
                    };
                    let $$x10;
                    if ($$x11) {
                      $$x10 = true
                    } else {
                      const x$57 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ;
                      if (((x$57 === null) ? (op1$3 === null) : x$57.equals__O__Z(op1$3))) {
                        const x$59 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT;
                        $$x10 = ((x$59 === null) ? (op2$3 === null) : x$59.equals__O__Z(op2$3))
                      } else {
                        $$x10 = false
                      }
                    };
                    if ($$x10) {
                      op$2 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT
                    } else {
                      const x$61 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT;
                      let $$x13;
                      if (((x$61 === null) ? (op1$3 === null) : x$61.equals__O__Z(op1$3))) {
                        const x$63 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ;
                        $$x13 = ((x$63 === null) ? (op2$3 === null) : x$63.equals__O__Z(op2$3))
                      } else {
                        $$x13 = false
                      };
                      let $$x12;
                      if ($$x13) {
                        $$x12 = true
                      } else {
                        const x$65 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ;
                        if (((x$65 === null) ? (op1$3 === null) : x$65.equals__O__Z(op1$3))) {
                          const x$67 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT;
                          $$x12 = ((x$67 === null) ? (op2$3 === null) : x$67.equals__O__Z(op2$3))
                        } else {
                          $$x12 = false
                        }
                      };
                      if ($$x12) {
                        op$2 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT
                      } else {
                        op$2 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_INVALID
                      }
                    }
                  } else {
                    op$2 = op1$3
                  };
                  let $$x14;
                  if ((!(val1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                    const x$70 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_INVALID;
                    $$x14 = (!((op$2 === null) ? (x$70 === null) : op$2.equals__O__Z(x$70)))
                  } else {
                    $$x14 = false
                  };
                  if ($$x14) {
                    matchEnd9$4: {
                      if ((val2$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
                        const x5$3 = val2$3;
                        this.checkValues__I__D__s_Enumeration$Value__D__V(test.pos__I(), (-$p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x11)), op1$3, $p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x5$3));
                        break matchEnd9$4
                      };
                      if ((val2$3 instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
                        const x2$6 = val2$3;
                        const p4$5 = x2$6.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
                        const rightValue$2 = x2$6.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
                        const x$71 = $m_Ltigerpython_parser_ast_UnOp$().Ltigerpython_parser_ast_UnOp$__f_NEG;
                        if ((((x$71 === null) ? (p4$5 === null) : x$71.equals__O__Z(p4$5)) && (rightValue$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                          const x7$3 = rightValue$2;
                          this.checkValues__I__D__s_Enumeration$Value__D__V(test.pos__I(), (-$p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x11)), op1$3, (-$p_Ltigerpython_parser_parsing_ExtParserUtils__getDoubleValue__Ltigerpython_parser_ast_AstNode$Value__D(this, x7$3)));
                          break matchEnd9$4
                        }
                      }
                    };
                    break matchEnd14
                  } else {
                    break matchEnd14
                  }
                }
              }
            };
            if ((x1$6 instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
              const x5$4 = x1$6;
              const pos$2$1 = x5$4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos;
              const p6$3 = x5$4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
              const x$74 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_DIV;
              if (((x$74 === null) ? (p6$3 === null) : x$74.equals__O__Z(p6$3))) {
                if (((x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 1) && this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
                  const $$x15 = $m_sc_ArrayOps$();
                  const xs$2 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
                  const x1$15 = $$x15.head$extension__O__O(xs$2);
                  matchEnd7: {
                    if ((x1$15 !== null)) {
                      const p2$4 = x1$15._1__O();
                      const value = x1$15._2__O();
                      const x$76 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_EQ;
                      let $$x16;
                      if (((x$76 === null) ? (p2$4 === null) : x$76.equals__O__Z(p2$4))) {
                        $$x16 = true
                      } else {
                        const x$78 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ;
                        $$x16 = ((x$78 === null) ? (p2$4 === null) : x$78.equals__O__Z(p2$4))
                      };
                      if (($$x16 && (value instanceof $c_Ltigerpython_parser_ast_AstNode$Value))) {
                        const x5$5 = value;
                        if (x5$5.isZero__Z()) {
                          const this$30 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                          const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV;
                          const params$6 = $m_sci_Nil$();
                          this$30.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos$2$1, (-1), code$6, params$6);
                          break matchEnd7
                        }
                      }
                    }
                  };
                  break matchEnd14
                } else {
                  break matchEnd14
                }
              }
            };
            if (((x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 1) && this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
              const $$x17 = $m_sc_ArrayOps$();
              const xs$3 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
              const x1$16 = $$x17.head$extension__O__O(xs$3);
              matchEnd6: {
                if ((x1$16 !== null)) {
                  const p2$5 = x1$16._1__O();
                  const bool$3 = x1$16._2__O();
                  const x$81 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ;
                  if ((((x$81 === null) ? (p2$5 === null) : x$81.equals__O__Z(p2$5)) && (bool$3 instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue))) {
                    const x4 = bool$3;
                    const this$35 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                    const pos$7 = x4.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos;
                    const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ;
                    const array$6 = [x4.notToString__T(), x4.toString__T()];
                    const params$7 = new $c_sjsr_WrappedVarArgs(array$6);
                    this$35.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$7, params$7);
                    break matchEnd6
                  }
                }
              }
            }
          };
          break matchEnd9
        }
      };
      if ($is_Ltigerpython_parser_ast_AstNode$ExprWrapper(test)) {
        this.checkCondition__Ltigerpython_parser_ast_AstNode$Expression__s_Option__V(test.expr__Ltigerpython_parser_ast_AstNode$Expression(), $m_s_None$());
        break matchEnd9
      };
      if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue)) {
        break matchEnd9
      };
      if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)) {
        const x6 = test;
        if ((!parentOp.isEmpty__Z())) {
          const this$39 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$8 = x6.Ltigerpython_parser_ast_AstNode$StringValue__f_pos;
          const code$8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
          const array$7 = [$dp_toString__T(parentOp.get__O())];
          const params$8 = new $c_sjsr_WrappedVarArgs(array$7);
          this$39.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$8, params$8);
          break matchEnd9
        } else if (this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
          const this$43 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$9 = x6.Ltigerpython_parser_ast_AstNode$StringValue__f_pos;
          const code$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_CONDITION;
          const array$8 = [x6.toString__T()];
          const params$9 = new $c_sjsr_WrappedVarArgs(array$8);
          this$43.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$9, (-1), code$9, params$9);
          break matchEnd9
        } else {
          break matchEnd9
        }
      };
      if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
        const x7$4 = test;
        if ((!parentOp.isEmpty__Z())) {
          const this$47 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$10 = x7$4.Ltigerpython_parser_ast_AstNode$Value__f_pos;
          const code$10 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
          const array$9 = [$dp_toString__T(parentOp.get__O())];
          const params$10 = new $c_sjsr_WrappedVarArgs(array$9);
          this$47.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$10, (-1), code$10, params$10);
          break matchEnd9
        } else if (this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
          const this$51 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const pos$11 = x7$4.Ltigerpython_parser_ast_AstNode$Value__f_pos;
          const code$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_CONDITION;
          const array$10 = [x7$4.Ltigerpython_parser_ast_AstNode$Value__f_value];
          const params$11 = new $c_sjsr_WrappedVarArgs(array$10);
          this$51.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$11, (-1), code$11, params$11);
          break matchEnd9
        } else {
          break matchEnd9
        }
      }
    }
  };
  checkValues__I__D__s_Enumeration$Value__D__V(pos, leftValue, op, rightValue) {
    try {
      const x = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_EQ;
      if (((x === null) ? (op === null) : x.equals__O__Z(op))) {
        if ((leftValue !== rightValue)) {
          const this$1 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
          const params = $m_sci_Nil$();
          this$1.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
        } else {
          const this$2 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
          const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
          const params$1 = $m_sci_Nil$();
          this$2.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1)
        }
      } else {
        const x$3 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ;
        if (((x$3 === null) ? (op === null) : x$3.equals__O__Z(op))) {
          if ((leftValue === rightValue)) {
            const this$3 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
            const params$2 = $m_sci_Nil$();
            this$3.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$2, params$2)
          } else {
            const this$4 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
            const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
            const params$3 = $m_sci_Nil$();
            this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$3, params$3)
          }
        } else {
          const x$5 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT;
          if (((x$5 === null) ? (op === null) : x$5.equals__O__Z(op))) {
            if ((leftValue >= rightValue)) {
              const this$5 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
              const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
              const params$4 = $m_sci_Nil$();
              this$5.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$4, params$4)
            }
          } else {
            const x$7 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ;
            if (((x$7 === null) ? (op === null) : x$7.equals__O__Z(op))) {
              if ((leftValue > rightValue)) {
                const this$6 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                const params$5 = $m_sci_Nil$();
                this$6.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$5, params$5)
              }
            } else {
              const x$9 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT;
              if (((x$9 === null) ? (op === null) : x$9.equals__O__Z(op))) {
                if ((leftValue <= rightValue)) {
                  const this$7 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                  const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                  const params$6 = $m_sci_Nil$();
                  this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$6, params$6)
                }
              } else {
                const x$11 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ;
                if (((x$11 === null) ? (op === null) : x$11.equals__O__Z(op))) {
                  if ((leftValue < rightValue)) {
                    const this$8 = this.Ltigerpython_parser_parsing_ExtParserUtils__f_parserState;
                    const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                    const params$7 = $m_sci_Nil$();
                    this$8.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$7, params$7)
                  }
                }
              }
            }
          }
        }
      }
    } catch (e) {
      const e$2 = $m_sjsr_package$().wrapJavaScriptException__O__jl_Throwable(e);
      if ((e$2 === null)) {
        throw e
      }
    }
  };
  isCallableName__I__T__Z(pos, name) {
    const x1 = this.getTypeOfName__I__T__Z__s_Option(pos, name, false);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const dt = x2.s_Some__f_value;
      if (dt.isCallable__Z()) {
        return true
      }
    };
    return false
  };
  hasName__I__T__Z(pos, name) {
    try {
      if ((this.Ltigerpython_parser_parsing_ExtParserUtils__f_parser.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(name) > 0)) {
        return true
      } else {
        const x1 = $p_Ltigerpython_parser_parsing_ExtParserUtils__getModuleScope__I__Z__s_Option(this, pos, false);
        if ((x1 instanceof $c_s_Some)) {
          const x2 = x1;
          const scope = x2.s_Some__f_value;
          const this$1 = scope.findName__T__s_Option(name);
          return (!this$1.isEmpty__Z())
        } else {
          return false
        }
      }
    } catch (e) {
      const e$2 = $m_sjsr_package$().wrapJavaScriptException__O__jl_Throwable(e);
      if ((e$2 !== null)) {
        return false
      } else {
        throw e
      }
    }
  };
  getTypeOfName__I__T__Z__s_Option(pos, name, useEntireText) {
    try {
      const x1 = $p_Ltigerpython_parser_parsing_ExtParserUtils__getModuleScope__I__Z__s_Option(this, pos, useEntireText);
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const scope = x2.s_Some__f_value;
        return scope.findLocal__T__s_Option(name)
      } else {
        return $m_s_None$()
      }
    } catch (e) {
      const e$2 = $m_sjsr_package$().wrapJavaScriptException__O__jl_Throwable(e);
      if ((e$2 !== null)) {
        return $m_s_None$()
      } else {
        throw e
      }
    }
  };
  trySplitName__T__s_Option(name) {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      const end = (name.length | 0);
      const isEmpty = (end <= 1);
      const scala$collection$immutable$Range$$lastElement = (((-1) + end) | 0);
      if ((!isEmpty)) {
        let i = 1;
        while (true) {
          const v1 = i;
          if (($p_Ltigerpython_parser_parsing_ExtParserUtils___hasName__T__Z(this, $m_sc_StringOps$().take$extension__T__I__T(name, v1)) && $p_Ltigerpython_parser_parsing_ExtParserUtils___hasName__T__Z(this, $m_sc_StringOps$().drop$extension__T__I__T(name, v1)))) {
            throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1, new $c_s_Some($ct_T2__O__O__(new $c_T2(), $m_sc_StringOps$().take$extension__T__I__T(name, v1), $m_sc_StringOps$().drop$extension__T__I__T(name, v1))))
          } else {
            const c = (65535 & (name.charCodeAt(v1) | 0));
            const this$18 = $m_jl_Character$();
            if ((((this$18.isDigit__I__Z(c) || ((65535 & (name.charCodeAt(v1) | 0)) === 95)) && $p_Ltigerpython_parser_parsing_ExtParserUtils___hasName__T__Z(this, $m_sc_StringOps$().take$extension__T__I__T(name, v1))) && $p_Ltigerpython_parser_parsing_ExtParserUtils___hasName__T__Z(this, $m_sc_StringOps$().drop$extension__T__I__T(name, ((1 + v1) | 0))))) {
              throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1, new $c_s_Some($ct_T2__O__O__(new $c_T2(), $m_sc_StringOps$().take$extension__T__I__T(name, v1), $m_sc_StringOps$().drop$extension__T__I__T(name, ((1 + v1) | 0)))))
            }
          };
          if ((i === scala$collection$immutable$Range$$lastElement)) {
            break
          };
          i = ((1 + i) | 0)
        }
      };
      return $m_s_None$()
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          return ex.value__O()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
}
const $d_Ltigerpython_parser_parsing_ExtParserUtils = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ExtParserUtils: 0
}, false, "tigerpython.parser.parsing.ExtParserUtils", {
  Ltigerpython_parser_parsing_ExtParserUtils: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_ExtParserUtils.prototype.$classData = $d_Ltigerpython_parser_parsing_ExtParserUtils;
const $p_Ltigerpython_parser_parsing_Parser__lexer$lzycompute__Ltigerpython_parser_lexer_Lexer = (function($thiz) {
  if (((((1 & $thiz.Ltigerpython_parser_parsing_Parser__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.Ltigerpython_parser_parsing_Parser__f_lexer = new $c_Ltigerpython_parser_lexer_Lexer($thiz.Ltigerpython_parser_parsing_Parser__f_source, $thiz.Ltigerpython_parser_parsing_Parser__f_parserState, $thiz.Ltigerpython_parser_parsing_Parser__f_caretPos);
    $thiz.Ltigerpython_parser_parsing_Parser__f_bitmap$0 = (((1 | $thiz.Ltigerpython_parser_parsing_Parser__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_parsing_Parser__f_lexer
});
const $p_Ltigerpython_parser_parsing_Parser__preParser$lzycompute__Ltigerpython_parser_parsing_PreParser = (function($thiz) {
  if (((((2 & $thiz.Ltigerpython_parser_parsing_Parser__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.Ltigerpython_parser_parsing_Parser__f_preParser = new $c_Ltigerpython_parser_parsing_PreParser($thiz.Ltigerpython_parser_parsing_Parser__f_source, $thiz.lexer__Ltigerpython_parser_lexer_Lexer(), $thiz.Ltigerpython_parser_parsing_Parser__f_parserState);
    $thiz.Ltigerpython_parser_parsing_Parser__f_bitmap$0 = (((2 | $thiz.Ltigerpython_parser_parsing_Parser__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_parsing_Parser__f_preParser
});
const $p_Ltigerpython_parser_parsing_Parser__preParser__Ltigerpython_parser_parsing_PreParser = (function($thiz) {
  return (((((2 & $thiz.Ltigerpython_parser_parsing_Parser__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_parsing_Parser__preParser$lzycompute__Ltigerpython_parser_parsing_PreParser($thiz) : $thiz.Ltigerpython_parser_parsing_Parser__f_preParser)
});
const $p_Ltigerpython_parser_parsing_Parser__isAlwaysTrue__Ltigerpython_parser_ast_AstNode$Expression__Z = (function($thiz, test) {
  if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue)) {
    const x2 = test;
    const p4 = x2.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value;
    if ((p4 === true)) {
      return true
    }
  };
  return false
});
const $p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z = (function($thiz, stmt) {
  while (true) {
    const x1 = stmt;
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x2 = x1;
      const xs = x2.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
      let $$x1;
      _return: {
        let i = 0;
        while ((i < xs.u.length)) {
          const arg1 = xs.u[i];
          const stmt$2 = arg1;
          if ($p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z($thiz, stmt$2)) {
            $$x1 = i;
            break _return
          };
          i = ((1 + i) | 0)
        };
        $$x1 = (-1)
      };
      return ($$x1 >= 0)
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x3 = x1;
      if ($p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z($thiz, x3.Ltigerpython_parser_ast_AstNode$If__f_body)) {
        return true
      } else {
        stmt = x3.Ltigerpython_parser_ast_AstNode$If__f_elseBody
      }
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x4 = x1;
      if ((($p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z($thiz, x4.Ltigerpython_parser_ast_AstNode$Try__f_body) || $p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z($thiz, x4.Ltigerpython_parser_ast_AstNode$Try__f_finalBody)) || $p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z($thiz, x4.Ltigerpython_parser_ast_AstNode$Try__f_elseBody))) {
        return true
      } else {
        const xs$1 = x4.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
        let $$x2;
        _return$1: {
          let i$1 = 0;
          while ((i$1 < xs$1.u.length)) {
            const arg1$1 = xs$1.u[i$1];
            const x = arg1$1;
            if ($p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z($thiz, x.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body)) {
              $$x2 = i$1;
              break _return$1
            };
            i$1 = ((1 + i$1) | 0)
          };
          $$x2 = (-1)
        };
        return ($$x2 >= 0)
      }
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$With)) {
      const x5 = x1;
      stmt = x5.Ltigerpython_parser_ast_AstNode$With__f_body
    } else {
      return (x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Break)
    }
  }
});
const $p_Ltigerpython_parser_parsing_Parser___parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement = (function($thiz, line, followLines) {
  let $$x2;
  if (((line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 3) && (line.headTokenType__Ltigerpython_parser_lexer_TokenType().Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD))) {
    const x = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
    $$x2 = (x === x$2)
  } else {
    $$x2 = false
  };
  let $$x1;
  if ($$x2) {
    const this$1 = $thiz.Ltigerpython_parser_parsing_Parser__f_expressionParser;
    const token = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[2];
    $$x1 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token, this$1.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
  } else {
    $$x1 = false
  };
  if ($$x1) {
    $thiz.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME, $m_sci_Nil$());
    line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0] = $m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].Ltigerpython_parser_lexer_Token__f_pos, line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].getStringValue__T())
  };
  if (line.hasExtraLineNumber__Z()) {
    const this$2 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
    const pos = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
    const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINE_NUMBER;
    const params = $m_sci_Nil$();
    this$2.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
    const $$x3 = $m_sc_ArrayOps$();
    const xs = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    const newTokens = $$x3.tail$extension__O__O(xs);
    return $p_Ltigerpython_parser_parsing_Parser___parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement($thiz, new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
  };
  const $$x4 = $m_sc_ArrayOps$();
  const xs$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
  const x1 = $$x4.head$extension__O__O(xs$1);
  if ((x1 !== null)) {
    const tokenType = x1.Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
    if ((x$3 === tokenType)) {
      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseClassDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
      if ((x$5 === tokenType)) {
        let $$x5;
        if ((!line.hasSuite__Z())) {
          const xs$2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
          let $$x6;
          _return$1: {
            let i = 0;
            while ((i < xs$2.u.length)) {
              const arg1 = xs$2.u[i];
              const x$8 = arg1;
              const x$1 = x$8.Ltigerpython_parser_lexer_Token__f_tokenType;
              const x$2$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
              if ((x$1 === x$2$1)) {
                $$x6 = i;
                break _return$1
              };
              i = ((1 + i) | 0)
            };
            $$x6 = (-1)
          };
          $$x5 = (!($$x6 >= 0))
        } else {
          $$x5 = false
        };
        if ($$x5) {
          let $$x8;
          if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 2)) {
            const x$7 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
            $$x8 = (x$7 === x$9)
          } else {
            $$x8 = false
          };
          let $$x7;
          if ($$x8) {
            if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length === 2)) {
              $$x7 = true
            } else {
              const this$11 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[2].Ltigerpython_parser_lexer_Token__f_tokenType;
              const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
              const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
              $$x7 = $f_sc_SeqOps__contains__O__Z(tokenTypes, this$11)
            }
          } else {
            $$x7 = false
          };
          if ($$x7) {
            const this$15 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
            const array$1 = ["def", "del"];
            const params$1 = new $c_sjsr_WrappedVarArgs(array$1);
            this$15.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1);
            line.replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL);
            return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, followLines)
          } else {
            const this$19 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
            const array$2 = ["def"];
            const params$2 = new $c_sjsr_WrappedVarArgs(array$2);
            this$19.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2);
            const $$x9 = $m_sc_ArrayOps$();
            const xs$3 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
            const newTokens$1 = $$x9.tail$extension__O__O(xs$3);
            return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens$1, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), followLines)
          }
        } else {
          return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseFunctionDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
        }
      } else {
        const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
        if ((x$10 === tokenType)) {
          if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 2)) {
            const x1$3 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
            if ((x$12 === x1$3)) {
              return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseFunctionDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
            } else {
              const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
              if ((x$14 === x1$3)) {
                return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseFor__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines)])
              } else {
                const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WITH;
                if ((x$16 === x1$3)) {
                  return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseWith__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
                } else {
                  const x$18 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
                  if ((x$18 === x1$3)) {
                    const this$24 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const pos$3 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                    const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                    const array$3 = ["async"];
                    const params$3 = new $c_sjsr_WrappedVarArgs(array$3);
                    this$24.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3);
                    const $$x10 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                    const srcToken = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                    const newType = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                    $$x10.u[0] = new $c_Ltigerpython_parser_lexer_Token(srcToken.Ltigerpython_parser_lexer_Token__f_pos, srcToken.Ltigerpython_parser_lexer_Token__f_len, newType);
                    return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, followLines)
                  } else {
                    $thiz.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC, $m_sci_Nil$());
                    const $$x11 = $m_sc_ArrayOps$();
                    const xs$4 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                    const newTokens$2 = $$x11.drop$extension__O__I__O(xs$4, 1);
                    return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens$2, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), followLines)
                  }
                }
              }
            }
          } else {
            const $$x14 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
            const $$x13 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
            const $$x12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
            const array$4 = ["async"];
            return $$x14.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N($$x13, $$x12, new $c_sjsr_WrappedVarArgs(array$4))
          }
        } else {
          const x$20 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
          if ((x$20 === tokenType)) {
            return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseIf__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines)])
          } else {
            const x$22 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
            if ((x$22 === tokenType)) {
              return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseWhile__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines)])
            } else {
              const x$24 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
              if ((x$24 === tokenType)) {
                return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseFor__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines)])
              } else {
                const x$26 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_OR;
                if (((x$26 === tokenType) && ((line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer().hasTokenOfType__I__Ltigerpython_parser_lexer_TokenType__Z(1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN) && line.hasSuite__Z()) && line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer().hasColonAtEnd__Z()))) {
                  const this$33 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const pos$4 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                  const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                  const array$5 = ["or", "for"];
                  const params$4 = new $c_sjsr_WrappedVarArgs(array$5);
                  this$33.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$4, params$4);
                  line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer().replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR);
                  return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseFor__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines)])
                } else {
                  const x$28 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT;
                  if ((x$28 === tokenType)) {
                    return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseRepeat__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
                  } else {
                    const x$30 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WITH;
                    if ((x$30 === tokenType)) {
                      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseWith__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
                    } else {
                      const x$32 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
                      if ((x$32 === tokenType)) {
                        return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseTry__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines)])
                      } else {
                        const x$34 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION;
                        if ((x$34 === tokenType)) {
                          return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [$thiz.parseAnnotation__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines)])
                        } else {
                          const x$36 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
                          let $$x16;
                          if ((x$36 === tokenType)) {
                            $$x16 = true
                          } else {
                            const x$38 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
                            $$x16 = (x$38 === tokenType)
                          };
                          let $$x15;
                          if ($$x16) {
                            if (((line.Ltigerpython_parser_parsing_PreParser$Line__f_prevLine !== null) && line.Ltigerpython_parser_parsing_PreParser$Line__f_prevLine.hasSuite__Z())) {
                              const $$x17 = $m_sc_ArrayOps$();
                              const xs$5 = line.Ltigerpython_parser_parsing_PreParser$Line__f_prevLine.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                              const this$38 = $$x17.last$extension__O__O(xs$5).headTokenType__Ltigerpython_parser_lexer_TokenType();
                              const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF];
                              const tokenTypes$1 = new $c_sjsr_WrappedVarArgs(array$6);
                              $$x15 = $f_sc_SeqOps__contains__O__Z(tokenTypes$1, this$38)
                            } else {
                              $$x15 = false
                            }
                          } else {
                            $$x15 = false
                          };
                          if ($$x15) {
                            const $$x20 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                            const $$x19 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                            const $$x18 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED;
                            const array$7 = ["else"];
                            $$x20.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N($$x19, $$x18, new $c_sjsr_WrappedVarArgs(array$7));
                            const xs$6 = $m_sci_Nil$();
                            const len = xs$6.length__I();
                            const array$8 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len]);
                            const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                            let i$1 = 0;
                            while (iterator.hasNext__Z()) {
                              array$8.u[i$1] = iterator.next__O();
                              i$1 = ((1 + i$1) | 0)
                            };
                            return array$8
                          } else {
                            const x$40 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
                            if ((x$40 === tokenType)) {
                              let $$x21;
                              if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_parentLine !== null)) {
                                const line$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_parentLine;
                                const x1$1 = line$1.headTokenType__Ltigerpython_parser_lexer_TokenType();
                                const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                let $$x22;
                                if ((x$4 === x1$1)) {
                                  $$x22 = true
                                } else {
                                  const x$3$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                                  if ((x$3$1 === x1$1)) {
                                    $$x22 = true
                                  } else {
                                    const x$5$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                                    if ((x$5$1 === x1$1)) {
                                      $$x22 = true
                                    } else {
                                      const x$7$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
                                      if ((x$7$1 === x1$1)) {
                                        $$x22 = true
                                      } else {
                                        const x$9$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
                                        $$x22 = (x$9$1 === x1$1)
                                      }
                                    }
                                  }
                                };
                                if ($$x22) {
                                  $$x21 = true
                                } else {
                                  let $$x23;
                                  if ((line$1.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 3)) {
                                    const $$x24 = $m_sc_ArrayOps$();
                                    const xs$7 = line$1.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                    const x$11 = $$x24.last$extension__O__O(xs$7).Ltigerpython_parser_lexer_Token__f_tokenType;
                                    const x$12$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
                                    $$x23 = (x$11 === x$12$1)
                                  } else {
                                    $$x23 = false
                                  };
                                  if ($$x23) {
                                    const x1$2 = line$1.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
                                    const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                    if ((x$13 === x1$2)) {
                                      $$x21 = true
                                    } else {
                                      const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                                      if ((x$15 === x1$2)) {
                                        $$x21 = true
                                      } else {
                                        const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                                        if ((x$17 === x1$2)) {
                                          $$x21 = true
                                        } else {
                                          const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
                                          if ((x$19 === x1$2)) {
                                            $$x21 = true
                                          } else {
                                            const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
                                            $$x21 = (x$21 === x1$2)
                                          }
                                        }
                                      }
                                    }
                                  } else {
                                    $$x21 = false
                                  }
                                }
                              } else {
                                $$x21 = false
                              };
                              if ($$x21) {
                                const $$x27 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                const $$x26 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                const $$x25 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                const array$9 = ["else"];
                                $$x27.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N($$x26, $$x25, new $c_sjsr_WrappedVarArgs(array$9))
                              } else {
                                const $$x30 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                const $$x29 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                const $$x28 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                const array$10 = ["else"];
                                $$x30.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N($$x29, $$x28, new $c_sjsr_WrappedVarArgs(array$10))
                              };
                              const xs$8 = $m_sci_Nil$();
                              const len$1 = xs$8.length__I();
                              const array$11 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len$1]);
                              const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                              let i$2 = 0;
                              while (iterator$1.hasNext__Z()) {
                                array$11.u[i$2] = iterator$1.next__O();
                                i$2 = ((1 + i$2) | 0)
                              };
                              return array$11
                            } else {
                              const x$42 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
                              if ((x$42 === tokenType)) {
                                let $$x31;
                                if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_parentLine !== null)) {
                                  const x$44 = line.Ltigerpython_parser_parsing_PreParser$Line__f_parentLine.headTokenType__Ltigerpython_parser_lexer_TokenType();
                                  const x$45 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                  $$x31 = (x$44 === x$45)
                                } else {
                                  $$x31 = false
                                };
                                if ($$x31) {
                                  const $$x34 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                  const $$x33 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                  const $$x32 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                  const array$12 = ["elif"];
                                  $$x34.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N($$x33, $$x32, new $c_sjsr_WrappedVarArgs(array$12))
                                } else {
                                  const $$x37 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                  const $$x36 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                  const $$x35 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                  const array$13 = ["elif"];
                                  $$x37.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N($$x36, $$x35, new $c_sjsr_WrappedVarArgs(array$13))
                                };
                                const xs$9 = $m_sci_Nil$();
                                const len$2 = xs$9.length__I();
                                const array$14 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len$2]);
                                const iterator$2 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                                let i$3 = 0;
                                while (iterator$2.hasNext__Z()) {
                                  array$14.u[i$3] = iterator$2.next__O();
                                  i$3 = ((1 + i$3) | 0)
                                };
                                return array$14
                              } else {
                                const x$46 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXCEPT;
                                let $$x38;
                                if ((x$46 === tokenType)) {
                                  $$x38 = true
                                } else {
                                  const x$48 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FINALLY;
                                  $$x38 = (x$48 === tokenType)
                                };
                                if ($$x38) {
                                  $thiz.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD, $m_sci_Nil$());
                                  const xs$10 = $m_sci_Nil$();
                                  const len$3 = xs$10.length__I();
                                  const array$15 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len$3]);
                                  const iterator$3 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                                  let i$4 = 0;
                                  while (iterator$3.hasNext__Z()) {
                                    array$15.u[i$4] = iterator$3.next__O();
                                    i$4 = ((1 + i$4) | 0)
                                  };
                                  return array$15
                                } else {
                                  const x$50 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CARET;
                                  if ((x$50 === tokenType)) {
                                    const $$x39 = $m_sc_ArrayOps$();
                                    const xs$11 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                    return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [new $c_Ltigerpython_parser_ast_AstNode$Nothing($$x39.head$extension__O__O(xs$11).Ltigerpython_parser_lexer_Token__f_pos)])
                                  } else {
                                    const x$52 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL;
                                    let $$x40;
                                    if ((x$52 === tokenType)) {
                                      if ((line.hasSuite__Z() && line.hasColonAtEnd__Z())) {
                                        const array$16 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
                                        const nonLocalReturnKey1 = $ct_O__(new $c_O());
                                        try {
                                          if (((array$16.length | 0) <= line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length)) {
                                            const end = (array$16.length | 0);
                                            const isEmpty = (end <= 0);
                                            const scala$collection$immutable$Range$$lastElement = (((-1) + end) | 0);
                                            if ((!isEmpty)) {
                                              let i$5 = 0;
                                              while (true) {
                                                const v1 = i$5;
                                                const x$6 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[v1].Ltigerpython_parser_lexer_Token__f_tokenType;
                                                const x$2$2 = array$16[v1];
                                                if ((!(x$6 === x$2$2))) {
                                                  throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1, false)
                                                };
                                                if ((i$5 === scala$collection$immutable$Range$$lastElement)) {
                                                  break
                                                };
                                                i$5 = ((1 + i$5) | 0)
                                              }
                                            };
                                            $$x40 = true
                                          } else {
                                            $$x40 = false
                                          }
                                        } catch (e) {
                                          if ((e instanceof $c_sr_NonLocalReturnControl)) {
                                            const ex = e;
                                            if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
                                              $$x40 = ex.value$mcZ$sp__Z()
                                            } else {
                                              throw ex
                                            }
                                          } else {
                                            throw e
                                          }
                                        }
                                      } else {
                                        $$x40 = false
                                      }
                                    } else {
                                      $$x40 = false
                                    };
                                    if ($$x40) {
                                      const this$74 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                      const pos$5 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                      const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                      const array$17 = ["del", "def"];
                                      const params$5 = new $c_sjsr_WrappedVarArgs(array$17);
                                      this$74.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$5, params$5);
                                      line.replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF);
                                      return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, followLines)
                                    } else if (line.hasSuite__Z()) {
                                      const x$54 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
                                      const x$55 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                                      let $$x42;
                                      if ((x$54 === x$55)) {
                                        $$x42 = true
                                      } else {
                                        const x1$4 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
                                        const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                        let $$x43;
                                        if ((x$23 === x1$4)) {
                                          $$x43 = true
                                        } else {
                                          const x$3$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                                          if ((x$3$2 === x1$4)) {
                                            $$x43 = true
                                          } else {
                                            const x$5$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                                            if ((x$5$2 === x1$4)) {
                                              $$x43 = true
                                            } else {
                                              const x$7$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
                                              if ((x$7$2 === x1$4)) {
                                                $$x43 = true
                                              } else {
                                                const x$9$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
                                                $$x43 = (x$9$2 === x1$4)
                                              }
                                            }
                                          }
                                        };
                                        if ($$x43) {
                                          $$x42 = true
                                        } else {
                                          let $$x44;
                                          if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 3)) {
                                            const $$x45 = $m_sc_ArrayOps$();
                                            const xs$12 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                            const x$11$1 = $$x45.last$extension__O__O(xs$12).Ltigerpython_parser_lexer_Token__f_tokenType;
                                            const x$12$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
                                            $$x44 = (x$11$1 === x$12$2)
                                          } else {
                                            $$x44 = false
                                          };
                                          if ($$x44) {
                                            const x1$2$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
                                            const x$13$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                            if ((x$13$1 === x1$2$1)) {
                                              $$x42 = true
                                            } else {
                                              const x$15$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                                              if ((x$15$1 === x1$2$1)) {
                                                $$x42 = true
                                              } else {
                                                const x$17$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                                                if ((x$17$1 === x1$2$1)) {
                                                  $$x42 = true
                                                } else {
                                                  const x$19$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
                                                  if ((x$19$1 === x1$2$1)) {
                                                    $$x42 = true
                                                  } else {
                                                    const x$21$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
                                                    $$x42 = (x$21$1 === x1$2$1)
                                                  }
                                                }
                                              }
                                            }
                                          } else {
                                            $$x42 = false
                                          }
                                        }
                                      };
                                      let $$x41;
                                      if ($$x42) {
                                        const $$x46 = $m_sc_ArrayOps$();
                                        const xs$13 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                        const x$56 = $$x46.last$extension__O__O(xs$13).Ltigerpython_parser_lexer_Token__f_tokenType;
                                        const x$57 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
                                        $$x41 = (x$56 === x$57)
                                      } else {
                                        $$x41 = false
                                      };
                                      if ($$x41) {
                                        const $$x47 = $m_sc_ArrayOps$();
                                        const xs$14 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                        const headName = $$x47.head$extension__O__O(xs$14).getStringValue__T();
                                        let keyword;
                                        if (((!line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType.isCompoundKeyword__Z()) && (headName !== "ef"))) {
                                          const $$x48 = $m_Ltigerpython_parser_lexer_TokenType$();
                                          const array$18 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF];
                                          keyword = $$x48.getPossibleKeywordForName__T__sci_Seq__s_Option(headName, new $c_sjsr_WrappedVarArgs(array$18))
                                        } else {
                                          keyword = $m_s_None$()
                                        };
                                        if ((!keyword.isEmpty__Z())) {
                                          const x1$4$1 = keyword.get__O();
                                          const x$58 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                                          let $$x49;
                                          if ((x$58 === x1$4$1)) {
                                            if ((((headName.length | 0) >= 0) && (headName.substring(0, ("for".length | 0)) === "for"))) {
                                              const x$60 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
                                              const x$61 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
                                              $$x49 = (x$60 === x$61)
                                            } else {
                                              $$x49 = false
                                            }
                                          } else {
                                            $$x49 = false
                                          };
                                          if ($$x49) {
                                            const this$83 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                            const pos$6 = ((3 + line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos) | 0);
                                            const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                            const params$6 = $m_sci_Nil$();
                                            this$83.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$6, params$6);
                                            const this$84 = $m_scm_ArrayBuffer$();
                                            const elems = $m_sci_Nil$();
                                            const newTokens$3 = this$84.from__sc_IterableOnce__scm_ArrayBuffer(elems);
                                            const headToken = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                                            const elem = new $c_Ltigerpython_parser_lexer_Token(headToken.Ltigerpython_parser_lexer_Token__f_pos, 3, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR);
                                            newTokens$3.addOne__O__scm_ArrayBuffer(elem);
                                            const $$x51 = $m_Ltigerpython_parser_lexer_Token$();
                                            const $$x50 = headToken.Ltigerpython_parser_lexer_Token__f_pos;
                                            const this$85 = headToken.Ltigerpython_parser_lexer_Token__f_value;
                                            const elem$1 = $$x51.createNameToken__I__T__Ltigerpython_parser_lexer_Token(((3 + $$x50) | 0), this$85.substring(3));
                                            newTokens$3.addOne__O__scm_ArrayBuffer(elem$1);
                                            const $$x53 = $m_s_Predef$();
                                            const $$x52 = $m_sc_ArrayOps$();
                                            const xs$15 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                            const xs$16 = $$x53.wrapRefArray__AO__scm_ArraySeq$ofRef($$x52.drop$extension__O__I__O(xs$15, 1));
                                            newTokens$3.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$16);
                                            let newTokens$4;
                                            if ((newTokens$3.scm_ArrayBuffer__f_size0 >= 0)) {
                                              const len$4 = newTokens$3.scm_ArrayBuffer__f_size0;
                                              const destination = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$4]);
                                              newTokens$3.copyToArray__O__I__I__I(destination, 0, newTokens$3.scm_ArrayBuffer__f_size0);
                                              newTokens$4 = destination
                                            } else {
                                              let capacity = 0;
                                              let size = 0;
                                              let jsElems = null;
                                              capacity = 0;
                                              size = 0;
                                              jsElems = [];
                                              const this$91 = new $c_scm_ArrayBufferView(newTokens$3.scm_ArrayBuffer__f_array, newTokens$3.scm_ArrayBuffer__f_size0);
                                              const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$91);
                                              while (it.hasNext__Z()) {
                                                const elem$2 = it.next__O();
                                                const unboxedElem = ((elem$2 === null) ? null : elem$2);
                                                jsElems.push(unboxedElem)
                                              };
                                              newTokens$4 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems)
                                            };
                                            return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens$4, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
                                          } else {
                                            const x$62 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
                                            let $$x54;
                                            if ((x$62 === x1$4$1)) {
                                              $$x54 = true
                                            } else {
                                              const x$64 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
                                              if ((x$64 === x1$4$1)) {
                                                $$x54 = true
                                              } else {
                                                const x$66 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                                if ((x$66 === x1$4$1)) {
                                                  $$x54 = true
                                                } else {
                                                  const x$68 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
                                                  if ((x$68 === x1$4$1)) {
                                                    $$x54 = true
                                                  } else {
                                                    const x$70 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                                                    if ((x$70 === x1$4$1)) {
                                                      $$x54 = true
                                                    } else {
                                                      const x$72 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                                                      if ((x$72 === x1$4$1)) {
                                                        $$x54 = true
                                                      } else {
                                                        const x$74 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
                                                        if ((x$74 === x1$4$1)) {
                                                          $$x54 = true
                                                        } else {
                                                          const x$76 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
                                                          if ((x$76 === x1$4$1)) {
                                                            $$x54 = true
                                                          } else {
                                                            const x$78 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WITH;
                                                            if ((x$78 === x1$4$1)) {
                                                              $$x54 = true
                                                            } else {
                                                              const x$80 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT;
                                                              $$x54 = (x$80 === x1$4$1)
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            };
                                            if ($$x54) {
                                              const prefix = x1$4$1.Ltigerpython_parser_lexer_TokenType__f_name;
                                              if ((((headName.length | 0) >= 0) && (headName.substring(0, (prefix.length | 0)) === prefix))) {
                                                const this$93 = x1$4$1.Ltigerpython_parser_lexer_TokenType__f_name;
                                                const ttLen = (this$93.length | 0);
                                                const rest = $m_sc_StringOps$().drop$extension__T__I__T(headName, ttLen);
                                                if (((rest === "") && (headName === "repeat"))) {
                                                  const this$95 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                                  const pos$7 = line.firstTokenPos__I();
                                                  const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_REPEAT_NOT_ENABLED;
                                                  const params$7 = $m_sci_Nil$();
                                                  this$95.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$7, params$7);
                                                  const $$x55 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                                  const qual$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                                                  const x$1$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT;
                                                  const x$2$2$1 = qual$1.Ltigerpython_parser_lexer_Token__f_pos;
                                                  const x$3$2$1 = qual$1.Ltigerpython_parser_lexer_Token__f_len;
                                                  $$x55.u[0] = new $c_Ltigerpython_parser_lexer_Token(x$2$2$1, x$3$2$1, x$1$1);
                                                  return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, $m_sci_Nil$())
                                                } else {
                                                  let $$x56;
                                                  if ((rest !== "")) {
                                                    _return$3: {
                                                      let i$6 = 0;
                                                      const len$5 = (rest.length | 0);
                                                      while ((i$6 < len$5)) {
                                                        const index = i$6;
                                                        const arg1$1 = (65535 & (rest.charCodeAt(index) | 0));
                                                        const this$101 = $m_jl_Character$();
                                                        if ((!this$101.isDigit__I__Z(arg1$1))) {
                                                          $$x56 = false;
                                                          break _return$3
                                                        };
                                                        i$6 = ((1 + i$6) | 0)
                                                      };
                                                      $$x56 = true
                                                    }
                                                  } else {
                                                    $$x56 = false
                                                  };
                                                  if ($$x56) {
                                                    const this$102 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                                    const pos$8 = ((line.firstTokenPos__I() + ttLen) | 0);
                                                    const code$8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                    const params$8 = $m_sci_Nil$();
                                                    this$102.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$8, params$8);
                                                    const xs$17 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [new $c_Ltigerpython_parser_lexer_Token(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].Ltigerpython_parser_lexer_Token__f_pos, ttLen, x1$4$1)]);
                                                    const xs$18 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                                    const this$107 = $m_s_Array$();
                                                    const newLength = ((xs$17.u.length + xs$18.u.length) | 0);
                                                    let dest$1;
                                                    if ($d_Ltigerpython_parser_lexer_Token.getClassOf().isAssignableFrom__jl_Class__Z($d_Ltigerpython_parser_lexer_Token.getClassOf())) {
                                                      dest$1 = ($d_Ltigerpython_parser_lexer_Token.getClassOf().isPrimitive__Z() ? this$107.copyOf__O__I__O(xs$17, newLength) : $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(xs$17, newLength, $d_Ltigerpython_parser_lexer_Token.getArrayOf().getClassOf()))
                                                    } else {
                                                      const dest = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [newLength]);
                                                      $m_s_Array$().copy__O__I__O__I__I__V(xs$17, 0, dest, 0, xs$17.u.length);
                                                      dest$1 = dest
                                                    };
                                                    $m_s_Array$().copy__O__I__O__I__I__V(xs$18, 0, dest$1, xs$17.u.length, xs$18.u.length);
                                                    const tokens = dest$1;
                                                    tokens.u[1] = $m_Ltigerpython_parser_lexer_Token$().createIntegerToken__I__T__Ltigerpython_parser_lexer_Token(((tokens.u[1].Ltigerpython_parser_lexer_Token__f_pos + ttLen) | 0), $m_sc_StringOps$().drop$extension__T__I__T(headName, ttLen));
                                                    return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, tokens, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
                                                  } else if (($thiz.lexer__Ltigerpython_parser_lexer_Lexer().getNameListCount__T__I(rest) > 0)) {
                                                    const this$110 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                                    const pos$9 = ((line.firstTokenPos__I() + ttLen) | 0);
                                                    const code$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                    const params$9 = $m_sci_Nil$();
                                                    this$110.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$9, (-1), code$9, params$9);
                                                    const xs$19 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [new $c_Ltigerpython_parser_lexer_Token(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].Ltigerpython_parser_lexer_Token__f_pos, ttLen, x1$4$1)]);
                                                    const xs$20 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                                    const this$115 = $m_s_Array$();
                                                    const newLength$1 = ((xs$19.u.length + xs$20.u.length) | 0);
                                                    let dest$3;
                                                    if ($d_Ltigerpython_parser_lexer_Token.getClassOf().isAssignableFrom__jl_Class__Z($d_Ltigerpython_parser_lexer_Token.getClassOf())) {
                                                      dest$3 = ($d_Ltigerpython_parser_lexer_Token.getClassOf().isPrimitive__Z() ? this$115.copyOf__O__I__O(xs$19, newLength$1) : $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(xs$19, newLength$1, $d_Ltigerpython_parser_lexer_Token.getArrayOf().getClassOf()))
                                                    } else {
                                                      const dest$2 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [newLength$1]);
                                                      $m_s_Array$().copy__O__I__O__I__I__V(xs$19, 0, dest$2, 0, xs$19.u.length);
                                                      dest$3 = dest$2
                                                    };
                                                    $m_s_Array$().copy__O__I__O__I__I__V(xs$20, 0, dest$3, xs$19.u.length, xs$20.u.length);
                                                    const tokens$2 = dest$3;
                                                    tokens$2.u[1] = $m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(((tokens$2.u[1].Ltigerpython_parser_lexer_Token__f_pos + ttLen) | 0), $m_sc_StringOps$().drop$extension__T__I__T(headName, ttLen));
                                                    return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, tokens$2, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
                                                  } else if (((rest.toLowerCase() === "true") || (rest.toLowerCase() === "false"))) {
                                                    const this$118 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                                    const pos$10 = ((line.firstTokenPos__I() + ttLen) | 0);
                                                    const code$10 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                    const params$10 = $m_sci_Nil$();
                                                    this$118.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$10, (-1), code$10, params$10);
                                                    const xs$21 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [new $c_Ltigerpython_parser_lexer_Token(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].Ltigerpython_parser_lexer_Token__f_pos, ttLen, x1$4$1)]);
                                                    const xs$22 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                                    const this$123 = $m_s_Array$();
                                                    const newLength$2 = ((xs$21.u.length + xs$22.u.length) | 0);
                                                    let dest$5;
                                                    if ($d_Ltigerpython_parser_lexer_Token.getClassOf().isAssignableFrom__jl_Class__Z($d_Ltigerpython_parser_lexer_Token.getClassOf())) {
                                                      dest$5 = ($d_Ltigerpython_parser_lexer_Token.getClassOf().isPrimitive__Z() ? this$123.copyOf__O__I__O(xs$21, newLength$2) : $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(xs$21, newLength$2, $d_Ltigerpython_parser_lexer_Token.getArrayOf().getClassOf()))
                                                    } else {
                                                      const dest$4 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [newLength$2]);
                                                      $m_s_Array$().copy__O__I__O__I__I__V(xs$21, 0, dest$4, 0, xs$21.u.length);
                                                      dest$5 = dest$4
                                                    };
                                                    $m_s_Array$().copy__O__I__O__I__I__V(xs$22, 0, dest$5, xs$21.u.length, xs$22.u.length);
                                                    const tokens$3 = dest$5;
                                                    if ((rest.toLowerCase() === "true")) {
                                                      tokens$3.u[1] = new $c_Ltigerpython_parser_lexer_Token(((tokens$3.u[1].Ltigerpython_parser_lexer_Token__f_pos + ttLen) | 0), 4, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRUE)
                                                    } else {
                                                      tokens$3.u[1] = new $c_Ltigerpython_parser_lexer_Token(((tokens$3.u[1].Ltigerpython_parser_lexer_Token__f_pos + ttLen) | 0), 5, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FALSE)
                                                    };
                                                    return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, tokens$3, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
                                                  }
                                                }
                                              };
                                              const this$129 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                              const pos$11 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                              const code$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                              const $$x57 = $m_sc_ArrayOps$();
                                              const xs$23 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                              const array$19 = [$$x57.head$extension__O__O(xs$23), x1$4$1];
                                              const params$11 = new $c_sjsr_WrappedVarArgs(array$19);
                                              this$129.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$11, (-1), code$11, params$11);
                                              const t = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                                              line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0] = new $c_Ltigerpython_parser_lexer_Token(t.Ltigerpython_parser_lexer_Token__f_pos, t.Ltigerpython_parser_lexer_Token__f_len, x1$4$1);
                                              return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, $m_sci_Nil$())
                                            }
                                          }
                                        };
                                        const x$82 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
                                        const x$83 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                                        if (((x$82 === x$83) && ((((headName.length | 0) >= 0) && (headName.substring(0, ("def".length | 0)) === "def")) || (((headName.length | 0) >= 0) && (headName.substring(0, ("class".length | 0)) === "class"))))) {
                                          const index$1 = ((((headName.length | 0) >= 0) && (headName.substring(0, ("def".length | 0)) === "def")) ? 3 : 5);
                                          const this$133 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                          const pos$12 = ((line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos + index$1) | 0);
                                          const code$12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                          const params$12 = $m_sci_Nil$();
                                          this$133.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$12, (-1), code$12, params$12);
                                          const this$134 = $m_scm_ArrayBuffer$();
                                          const elems$1 = $m_sci_Nil$();
                                          const newTokens$2$1 = this$134.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
                                          const headToken$2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                                          const elem$3 = new $c_Ltigerpython_parser_lexer_Token(headToken$2.Ltigerpython_parser_lexer_Token__f_pos, index$1, ((index$1 === 3) ? $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF : $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS));
                                          newTokens$2$1.addOne__O__scm_ArrayBuffer(elem$3);
                                          const nameToken = new $c_Ltigerpython_parser_lexer_Token(((headToken$2.Ltigerpython_parser_lexer_Token__f_pos + index$1) | 0), ((headToken$2.Ltigerpython_parser_lexer_Token__f_len - index$1) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME);
                                          const this$135 = headToken$2.Ltigerpython_parser_lexer_Token__f_value;
                                          nameToken.Ltigerpython_parser_lexer_Token__f_value = this$135.substring(index$1);
                                          newTokens$2$1.addOne__O__scm_ArrayBuffer(nameToken);
                                          const $$x59 = $m_s_Predef$();
                                          const $$x58 = $m_sc_ArrayOps$();
                                          const xs$24 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                          const xs$25 = $$x59.wrapRefArray__AO__scm_ArraySeq$ofRef($$x58.drop$extension__O__I__O(xs$24, 1));
                                          newTokens$2$1.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$25);
                                          let newTokens$5;
                                          if ((newTokens$2$1.scm_ArrayBuffer__f_size0 >= 0)) {
                                            const len$6 = newTokens$2$1.scm_ArrayBuffer__f_size0;
                                            const destination$1 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$6]);
                                            newTokens$2$1.copyToArray__O__I__I__I(destination$1, 0, newTokens$2$1.scm_ArrayBuffer__f_size0);
                                            newTokens$5 = destination$1
                                          } else {
                                            let capacity$1 = 0;
                                            let size$1 = 0;
                                            let jsElems$1 = null;
                                            capacity$1 = 0;
                                            size$1 = 0;
                                            jsElems$1 = [];
                                            const this$141 = new $c_scm_ArrayBufferView(newTokens$2$1.scm_ArrayBuffer__f_array, newTokens$2$1.scm_ArrayBuffer__f_size0);
                                            const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$141);
                                            while (it$1.hasNext__Z()) {
                                              const elem$4 = it$1.next__O();
                                              const unboxedElem$1 = ((elem$4 === null) ? null : elem$4);
                                              jsElems$1.push(unboxedElem$1)
                                            };
                                            newTokens$5 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems$1)
                                          };
                                          return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens$5, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
                                        } else {
                                          const this$145 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
                                          const array$20 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS];
                                          const tokenTypes$2 = new $c_sjsr_WrappedVarArgs(array$20);
                                          let $$x61;
                                          if ($f_sc_SeqOps__contains__O__Z(tokenTypes$2, this$145)) {
                                            const x$84 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[2].Ltigerpython_parser_lexer_Token__f_tokenType;
                                            const x$85 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                                            $$x61 = (x$84 === x$85)
                                          } else {
                                            $$x61 = false
                                          };
                                          let $$x60;
                                          if ($$x61) {
                                            const x$86 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[3].Ltigerpython_parser_lexer_Token__f_tokenType;
                                            const x$87 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                                            $$x60 = (x$86 === x$87)
                                          } else {
                                            $$x60 = false
                                          };
                                          if ($$x60) {
                                            if (((headName === "private") || (headName === "protected"))) {
                                              const this$149 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                              const pos$13 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                              const code$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE;
                                              const array$21 = [headName];
                                              const params$13 = new $c_sjsr_WrappedVarArgs(array$21);
                                              this$149.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$13, (-1), code$13, params$13)
                                            } else if ((headName === "async")) {
                                              const this$150 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                              const pos$14 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                              const code$14 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
                                              const params$14 = $m_sci_Nil$();
                                              this$150.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$14, (-1), code$14, params$14)
                                            } else {
                                              const this$154 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                              const pos$15 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                              const code$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                              const array$22 = [headName];
                                              const params$15 = new $c_sjsr_WrappedVarArgs(array$22);
                                              this$154.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$15, (-1), code$15, params$15)
                                            };
                                            const $$x62 = $m_sc_ArrayOps$();
                                            const xs$26 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                            const newTokens$6 = $$x62.drop$extension__O__I__O(xs$26, 1);
                                            return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens$6, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
                                          } else {
                                            let $$x63;
                                            if ((((headName.length | 0) >= 0) && (headName.substring(0, ("for".length | 0)) === "for"))) {
                                              const x$88 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
                                              const x$89 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
                                              $$x63 = (x$88 === x$89)
                                            } else {
                                              $$x63 = false
                                            };
                                            if ($$x63) {
                                              const this$157 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                              const pos$16 = ((3 + line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos) | 0);
                                              const code$16 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                              const params$16 = $m_sci_Nil$();
                                              this$157.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$16, (-1), code$16, params$16);
                                              const this$158 = $m_scm_ArrayBuffer$();
                                              const elems$2 = $m_sci_Nil$();
                                              const newTokens$3$1 = this$158.from__sc_IterableOnce__scm_ArrayBuffer(elems$2);
                                              const headToken$3 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                                              const elem$5 = new $c_Ltigerpython_parser_lexer_Token(headToken$3.Ltigerpython_parser_lexer_Token__f_pos, 3, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR);
                                              newTokens$3$1.addOne__O__scm_ArrayBuffer(elem$5);
                                              const $$x65 = $m_Ltigerpython_parser_lexer_Token$();
                                              const $$x64 = headToken$3.Ltigerpython_parser_lexer_Token__f_pos;
                                              const this$159 = headToken$3.Ltigerpython_parser_lexer_Token__f_value;
                                              const elem$6 = $$x65.createNameToken__I__T__Ltigerpython_parser_lexer_Token(((3 + $$x64) | 0), this$159.substring(3));
                                              newTokens$3$1.addOne__O__scm_ArrayBuffer(elem$6);
                                              const $$x67 = $m_s_Predef$();
                                              const $$x66 = $m_sc_ArrayOps$();
                                              const xs$27 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                              const xs$28 = $$x67.wrapRefArray__AO__scm_ArraySeq$ofRef($$x66.drop$extension__O__I__O(xs$27, 1));
                                              newTokens$3$1.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$28);
                                              let newTokens$7;
                                              if ((newTokens$3$1.scm_ArrayBuffer__f_size0 >= 0)) {
                                                const len$7 = newTokens$3$1.scm_ArrayBuffer__f_size0;
                                                const destination$2 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$7]);
                                                newTokens$3$1.copyToArray__O__I__I__I(destination$2, 0, newTokens$3$1.scm_ArrayBuffer__f_size0);
                                                newTokens$7 = destination$2
                                              } else {
                                                let capacity$2 = 0;
                                                let size$2 = 0;
                                                let jsElems$2 = null;
                                                capacity$2 = 0;
                                                size$2 = 0;
                                                jsElems$2 = [];
                                                const this$165 = new $c_scm_ArrayBufferView(newTokens$3$1.scm_ArrayBuffer__f_array, newTokens$3$1.scm_ArrayBuffer__f_size0);
                                                const it$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$165);
                                                while (it$2.hasNext__Z()) {
                                                  const elem$7 = it$2.next__O();
                                                  const unboxedElem$2 = ((elem$7 === null) ? null : elem$7);
                                                  jsElems$2.push(unboxedElem$2)
                                                };
                                                newTokens$7 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems$2)
                                              };
                                              return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens$7, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$())
                                            } else if ((headName === "ef")) {
                                              let $$x70;
                                              if (((followLines.isEmpty__Z() && (line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 5)) && line.hasColonAtEnd__Z())) {
                                                const x$90 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[(((-2) + line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length) | 0)].Ltigerpython_parser_lexer_Token__f_tokenType;
                                                const x$91 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
                                                $$x70 = (x$90 === x$91)
                                              } else {
                                                $$x70 = false
                                              };
                                              let $$x69;
                                              if ($$x70) {
                                                const this$169 = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
                                                const array$23 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
                                                const nonLocalReturnKey1$1 = $ct_O__(new $c_O());
                                                try {
                                                  const end$1 = (array$23.length | 0);
                                                  const isEmpty$1 = (end$1 <= 0);
                                                  const scala$collection$immutable$Range$$lastElement$1 = (((-1) + end$1) | 0);
                                                  if ((!isEmpty$1)) {
                                                    let i$7 = 0;
                                                    while (true) {
                                                      const v1$1 = i$7;
                                                      const x$25 = this$169.peekType__I__Ltigerpython_parser_lexer_TokenType(v1$1);
                                                      const x$2$3 = array$23[v1$1];
                                                      if ((!(x$25 === x$2$3))) {
                                                        throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1$1, false)
                                                      };
                                                      if ((i$7 === scala$collection$immutable$Range$$lastElement$1)) {
                                                        break
                                                      };
                                                      i$7 = ((1 + i$7) | 0)
                                                    }
                                                  };
                                                  $$x69 = true
                                                } catch (e$1) {
                                                  if ((e$1 instanceof $c_sr_NonLocalReturnControl)) {
                                                    const ex$1 = e$1;
                                                    if ((ex$1.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1$1)) {
                                                      $$x69 = ex$1.value$mcZ$sp__Z()
                                                    } else {
                                                      throw ex$1
                                                    }
                                                  } else {
                                                    throw e$1
                                                  }
                                                }
                                              } else {
                                                $$x69 = false
                                              };
                                              let $$x68;
                                              if (($$x69 && (!$m_Ltigerpython_parser_scopes_BuiltinNames$().Ltigerpython_parser_scopes_BuiltinNames$__f_builtins.contains__O__Z(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_value)))) {
                                                const this$176 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[3].Ltigerpython_parser_lexer_Token__f_tokenType;
                                                const array$24 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
                                                const tokenTypes$3 = new $c_sjsr_WrappedVarArgs(array$24);
                                                $$x68 = $f_sc_SeqOps__contains__O__Z(tokenTypes$3, this$176)
                                              } else {
                                                $$x68 = false
                                              };
                                              if ($$x68) {
                                                const tokens$4 = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
                                                const x1$6 = tokens$4.findNextClosingBracket__I__s_Option(3);
                                                if ((x1$6 instanceof $c_s_Some)) {
                                                  const x2 = x1$6;
                                                  const idx = (x2.s_Some__f_value | 0);
                                                  if ((((2 + idx) | 0) === line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length)) {
                                                    const this$180 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                                    const pos$17 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                                    const code$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                                    const array$25 = ["ef", "def"];
                                                    const params$17 = new $c_sjsr_WrappedVarArgs(array$25);
                                                    this$180.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$17, (-1), code$17, params$17);
                                                    const $$x71 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                                    const srcToken$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                                                    const newType$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
                                                    $$x71.u[0] = new $c_Ltigerpython_parser_lexer_Token(srcToken$1.Ltigerpython_parser_lexer_Token__f_pos, srcToken$1.Ltigerpython_parser_lexer_Token__f_len, newType$1);
                                                    return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, followLines)
                                                  }
                                                }
                                              };
                                              const this$185 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                              const pos$18 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                              const code$18 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                              const array$26 = ["ef", "if"];
                                              const params$18 = new $c_sjsr_WrappedVarArgs(array$26);
                                              this$185.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$18, (-1), code$18, params$18);
                                              const $$x72 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                              const srcToken$2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
                                              const newType$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                                              $$x72.u[0] = new $c_Ltigerpython_parser_lexer_Token(srcToken$2.Ltigerpython_parser_lexer_Token__f_pos, srcToken$2.Ltigerpython_parser_lexer_Token__f_len, newType$2);
                                              return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, followLines)
                                            } else if (line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType.isCompoundKeyword__Z()) {
                                              const this$190 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                              const pos$19 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                              const code$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                              const array$27 = [line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0]];
                                              const params$19 = new $c_sjsr_WrappedVarArgs(array$27);
                                              this$190.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$19, (-1), code$19, params$19);
                                              const $$x73 = $m_sc_ArrayOps$();
                                              const xs$29 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                              const newTokens$8 = $$x73.tail$extension__O__O(xs$29);
                                              return $thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, newTokens$8, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), followLines)
                                            }
                                          }
                                        }
                                      };
                                      const this$192 = $m_scm_ArrayBuffer$();
                                      const elems$3 = $m_sci_Nil$();
                                      const result = this$192.from__sc_IterableOnce__scm_ArrayBuffer(elems$3);
                                      const xs$30 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef($thiz.parseSimpleStatement__Ltigerpython_parser_parsing_PreParser$Line__ALtigerpython_parser_ast_AstNode$Statement(line));
                                      result.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$30);
                                      const x$92 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
                                      if ((x$92 === tokenType)) {
                                        const xs$31 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                        if (((xs$31.u.length !== 0) && (!$p_Ltigerpython_parser_parsing_Parser___resultIsCompound$1__scm_ArrayBuffer__Z($thiz, result)))) {
                                          const $$x75 = $m_sc_ArrayOps$();
                                          const xs$32 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                          let $$x74;
                                          if ($$x75.head$extension__O__O(xs$32).isCompoundStatementHeader__Z()) {
                                            const $$x76 = $m_sc_ArrayOps$();
                                            const xs$33 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                            $$x74 = (!$$x76.head$extension__O__O(xs$33).hasSuite__Z())
                                          } else {
                                            $$x74 = false
                                          };
                                          if ($$x74) {
                                            const this$203 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                            const $$x77 = $m_sc_ArrayOps$();
                                            const xs$34 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                            const pos$20 = $$x77.head$extension__O__O(xs$34).Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                            const code$20 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_HEADER;
                                            const $$x79 = $m_sc_ArrayOps$();
                                            const $$x78 = $m_sc_ArrayOps$();
                                            const xs$35 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                            const xs$36 = $$x78.head$extension__O__O(xs$35).Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                                            const array$28 = [$$x79.head$extension__O__O(xs$36)];
                                            const params$20 = new $c_sjsr_WrappedVarArgs(array$28);
                                            this$203.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$20, (-1), code$20, params$20);
                                            const $$x82 = $m_s_Predef$();
                                            const $$x80 = $m_sc_ArrayOps$();
                                            const xs$37 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                            const this$206 = $$x80.head$extension__O__O(xs$37);
                                            const $$x81 = $m_sc_ArrayOps$();
                                            const xs$38 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                            const newSuite = $$x81.tail$extension__O__O(xs$38);
                                            const xs$39 = $$x82.wrapRefArray__AO__scm_ArraySeq$ofRef($thiz.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(this$206.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, this$206.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, this$206.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, this$206.Ltigerpython_parser_parsing_PreParser$Line__f_tokens, newSuite, this$206.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, this$206.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler), $m_sci_Nil$()));
                                            result.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$39)
                                          } else {
                                            const this$208 = $thiz.Ltigerpython_parser_parsing_Parser__f_parserState;
                                            const $$x83 = $m_sc_ArrayOps$();
                                            const xs$40 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                            const pos$21 = $$x83.head$extension__O__O(xs$40).Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                                            const code$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION;
                                            const params$21 = $m_sci_Nil$();
                                            this$208.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$21, (-1), code$21, params$21);
                                            const xs$41 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
                                            const f = ((this$2$1, result$1) => ((l$2) => {
                                              const l = l$2;
                                              const xs$42 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this$2$1.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(l, $m_sci_Nil$()));
                                              return result$1.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$42)
                                            }))($thiz, result);
                                            const len$8 = xs$41.u.length;
                                            let i$8 = 0;
                                            if ((xs$41 !== null)) {
                                              while ((i$8 < len$8)) {
                                                const arg1$2 = xs$41.u[i$8];
                                                f(arg1$2);
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_I(xs$41, 1)) {
                                              const x3 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const arg1$3 = x3.u[i$8];
                                                f(arg1$3);
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_D(xs$41, 1)) {
                                              const x4 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const arg1$4 = x4.u[i$8];
                                                f(arg1$4);
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_J(xs$41, 1)) {
                                              const x5 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const t$1 = x5.u[i$8];
                                                const lo = t$1.RTLong__f_lo;
                                                const hi$4 = t$1.RTLong__f_hi;
                                                f(new $c_RTLong(lo, hi$4));
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_F(xs$41, 1)) {
                                              const x6 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const arg1$5 = x6.u[i$8];
                                                f(arg1$5);
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_C(xs$41, 1)) {
                                              const x7 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const arg1$6 = x7.u[i$8];
                                                f($bC(arg1$6));
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_B(xs$41, 1)) {
                                              const x8 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const arg1$7 = x8.u[i$8];
                                                f(arg1$7);
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_S(xs$41, 1)) {
                                              const x9 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const arg1$8 = x9.u[i$8];
                                                f(arg1$8);
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else if ($isArrayOf_Z(xs$41, 1)) {
                                              const x10 = xs$41;
                                              while ((i$8 < len$8)) {
                                                const arg1$9 = x10.u[i$8];
                                                f(arg1$9);
                                                i$8 = ((1 + i$8) | 0)
                                              }
                                            } else {
                                              throw new $c_s_MatchError(xs$41)
                                            }
                                          }
                                        }
                                      };
                                      if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
                                        const len$9 = result.scm_ArrayBuffer__f_size0;
                                        const destination$3 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len$9]);
                                        result.copyToArray__O__I__I__I(destination$3, 0, result.scm_ArrayBuffer__f_size0);
                                        return destination$3
                                      } else {
                                        let capacity$3 = 0;
                                        let size$3 = 0;
                                        let jsElems$3 = null;
                                        capacity$3 = 0;
                                        size$3 = 0;
                                        jsElems$3 = [];
                                        const this$214 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
                                        const it$3 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$214);
                                        while (it$3.hasNext__Z()) {
                                          const elem$8 = it$3.next__O();
                                          const unboxedElem$3 = ((elem$8 === null) ? null : elem$8);
                                          jsElems$3.push(unboxedElem$3)
                                        };
                                        return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), jsElems$3)
                                      }
                                    } else {
                                      return $thiz.parseSimpleStatement__Ltigerpython_parser_parsing_PreParser$Line__ALtigerpython_parser_ast_AstNode$Statement(line)
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    const xs$43 = $m_sci_Nil$();
    const len$10 = xs$43.length__I();
    const array$29 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len$10]);
    const iterator$4 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$9 = 0;
    while (iterator$4.hasNext__Z()) {
      array$29.u[i$9] = iterator$4.next__O();
      i$9 = ((1 + i$9) | 0)
    };
    return array$29
  }
});
const $p_Ltigerpython_parser_parsing_Parser__suiteContainsBreak__ALtigerpython_parser_parsing_PreParser$Line__Z = (function($thiz, suite) {
  try {
    let $$x1;
    _return: {
      let i = 0;
      while ((i < suite.u.length)) {
        const arg1 = suite.u[i];
        const x$11 = arg1;
        const xs = x$11.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
        let $$x2;
        _return$1: {
          let i$1 = 0;
          while ((i$1 < xs.u.length)) {
            const arg1$1 = xs.u[i$1];
            const x$12 = arg1$1;
            const this$10 = x$12.Ltigerpython_parser_lexer_Token__f_tokenType;
            const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BREAK, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CONTINUE];
            const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
            if ($f_sc_SeqOps__contains__O__Z(tokenTypes, this$10)) {
              $$x2 = i$1;
              break _return$1
            };
            i$1 = ((1 + i$1) | 0)
          };
          $$x2 = (-1)
        };
        if (($$x2 >= 0)) {
          $$x1 = i;
          break _return
        };
        i = ((1 + i) | 0)
      };
      $$x1 = (-1)
    };
    return ($$x1 >= 0)
  } catch (e) {
    const e$2 = $m_sjsr_package$().wrapJavaScriptException__O__jl_Throwable(e);
    if ((e$2 !== null)) {
      return false
    } else {
      throw e
    }
  }
});
const $p_Ltigerpython_parser_parsing_Parser__isCallOfFunction__Ltigerpython_parser_ast_AstNode$Expression__T__Z = (function($thiz, expr, name) {
  if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
    const x2 = expr;
    const x1$2 = x2.Ltigerpython_parser_ast_AstNode$Call__f_function;
    if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x2$2 = x1$2;
      const n = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
      return (n === name)
    } else {
      return false
    }
  } else {
    return false
  }
});
const $p_Ltigerpython_parser_parsing_Parser__hasSideEffect__Ltigerpython_parser_ast_AstNode$Expression__Z = (function($thiz, expr) {
  while (true) {
    const x1 = expr;
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      return false
    };
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
      return false
    };
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
      const x10 = x1;
      expr = x10.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
      continue
    };
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
      const x2 = x1;
      const left = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
      const right = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
      if ($p_Ltigerpython_parser_parsing_Parser__hasSideEffect__Ltigerpython_parser_ast_AstNode$Expression__Z($thiz, left)) {
        return true
      } else {
        expr = right;
        continue
      }
    };
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
      const x5 = x1;
      const operand = x5.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
      expr = operand;
      continue
    };
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
      const x11 = x1;
      if ((!$p_Ltigerpython_parser_parsing_Parser__hasSideEffect__Ltigerpython_parser_ast_AstNode$Expression__Z($thiz, x11.Ltigerpython_parser_ast_AstNode$Compare__f_left))) {
        const xs = x11.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
        let $$x1;
        _return: {
          let i = 0;
          while ((i < xs.u.length)) {
            const arg1 = xs.u[i];
            const x = arg1;
            if ($p_Ltigerpython_parser_parsing_Parser__hasSideEffect__Ltigerpython_parser_ast_AstNode$Expression__Z($thiz, x._2__O())) {
              $$x1 = i;
              break _return
            };
            i = ((1 + i) | 0)
          };
          $$x1 = (-1)
        };
        return ($$x1 >= 0)
      }
    };
    return true
  }
});
const $p_Ltigerpython_parser_parsing_Parser__splitSimpleName__T__I = (function($thiz, name) {
  const nonLocalReturnKey4 = $ct_O__(new $c_O());
  try {
    let keywords;
    if (($thiz.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion >= 3)) {
      const $$x1 = $m_sci_Seq$();
      const array = ["return", "yield", "import"];
      keywords = $$x1.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array))
    } else {
      const $$x2 = $m_sci_Seq$();
      const array$1 = ["return", "yield", "import", "print"];
      keywords = $$x2.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array$1))
    };
    keywords.foreach__F1__V(new $c_sjsr_AnonFunction1(((this$7, name$1, nonLocalReturnKey4$1) => ((keyword$2) => {
      const keyword = keyword$2;
      if ((((name$1.length | 0) >= 0) && (name$1.substring(0, (keyword.length | 0)) === keyword))) {
        const value = $m_sc_StringOps$().drop$extension__T__I__T(name$1, (keyword.length | 0));
        let $$x3;
        _return: {
          let i = 0;
          const len = (value.length | 0);
          while ((i < len)) {
            const index = i;
            const arg1 = (65535 & (value.charCodeAt(index) | 0));
            const this$14 = $m_jl_Character$();
            if ((!this$14.isDigit__I__Z(arg1))) {
              $$x3 = false;
              break _return
            };
            i = ((1 + i) | 0)
          };
          $$x3 = true
        };
        if (($$x3 && (keyword !== "import"))) {
          throw new $c_sr_NonLocalReturnControl$mcI$sp(nonLocalReturnKey4$1, (keyword.length | 0))
        };
        if ((this$7.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(value) > 0)) {
          throw new $c_sr_NonLocalReturnControl$mcI$sp(nonLocalReturnKey4$1, (keyword.length | 0))
        }
      }
    }))($thiz, name, nonLocalReturnKey4)));
    return (-1)
  } catch (e) {
    if ((e instanceof $c_sr_NonLocalReturnControl)) {
      const ex = e;
      if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey4)) {
        return ex.value$mcI$sp__I()
      } else {
        throw ex
      }
    } else {
      throw e
    }
  }
});
const $p_Ltigerpython_parser_parsing_Parser__getDecoratorName__Ltigerpython_parser_ast_AstNode$Expression__T = (function($thiz, expr) {
  while (true) {
    const x1 = expr;
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x2 = x1;
      const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
      return name
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const x4 = x1;
      const function$1 = x4.Ltigerpython_parser_ast_AstNode$Call__f_function;
      expr = function$1
    } else {
      return ""
    }
  }
});
const $p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z = (function($thiz, node, returnOnly) {
  const nonLocalReturnKey5 = $ct_O__(new $c_O());
  try {
    if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x2 = node;
      const stmts = x2.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
      const f = ((this$2, returnOnly$1, nonLocalReturnKey5$1) => ((stmt$2) => {
        const stmt = stmt$2;
        if ($p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z(this$2, stmt, returnOnly$1)) {
          throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey5$1, true)
        }
      }))($thiz, returnOnly, nonLocalReturnKey5);
      const len = stmts.u.length;
      let i = 0;
      if ((stmts !== null)) {
        while ((i < len)) {
          const arg1 = stmts.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(stmts, 1)) {
        const x3 = stmts;
        while ((i < len)) {
          const arg1$1 = x3.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(stmts, 1)) {
        const x4 = stmts;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(stmts, 1)) {
        const x5 = stmts;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(stmts, 1)) {
        const x6 = stmts;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(stmts, 1)) {
        const x7 = stmts;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(stmts, 1)) {
        const x8 = stmts;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(stmts, 1)) {
        const x9 = stmts;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(stmts, 1)) {
        const x10 = stmts;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(stmts)
      };
      return false
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x4$1 = node;
      return ($p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x4$1.Ltigerpython_parser_ast_AstNode$If__f_body, returnOnly) || $p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x4$1.Ltigerpython_parser_ast_AstNode$If__f_elseBody, returnOnly))
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x5$1 = node;
      const result = (($p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x5$1.Ltigerpython_parser_ast_AstNode$Try__f_body, returnOnly) || $p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x5$1.Ltigerpython_parser_ast_AstNode$Try__f_elseBody, returnOnly)) || $p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x5$1.Ltigerpython_parser_ast_AstNode$Try__f_finalBody, returnOnly));
      if ((!result)) {
        const xs = x5$1.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
        const f$1 = ((this$2$1, returnOnly$2, nonLocalReturnKey5$2) => ((h$2) => {
          const h = h$2;
          if ($p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z(this$2$1, h.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body, returnOnly$2)) {
            throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey5$2, true)
          }
        }))($thiz, returnOnly, nonLocalReturnKey5);
        const len$1 = xs.u.length;
        let i$1 = 0;
        if ((xs !== null)) {
          while ((i$1 < len$1)) {
            const arg1$8 = xs.u[i$1];
            f$1(arg1$8);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_I(xs, 1)) {
          const x3$1 = xs;
          while ((i$1 < len$1)) {
            const arg1$9 = x3$1.u[i$1];
            f$1(arg1$9);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_D(xs, 1)) {
          const x4$2 = xs;
          while ((i$1 < len$1)) {
            const arg1$10 = x4$2.u[i$1];
            f$1(arg1$10);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_J(xs, 1)) {
          const x5$2 = xs;
          while ((i$1 < len$1)) {
            const t$1 = x5$2.u[i$1];
            const lo$1 = t$1.RTLong__f_lo;
            const hi$1 = t$1.RTLong__f_hi;
            f$1(new $c_RTLong(lo$1, hi$1));
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_F(xs, 1)) {
          const x6$1 = xs;
          while ((i$1 < len$1)) {
            const arg1$11 = x6$1.u[i$1];
            f$1(arg1$11);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_C(xs, 1)) {
          const x7$1 = xs;
          while ((i$1 < len$1)) {
            const arg1$12 = x7$1.u[i$1];
            f$1($bC(arg1$12));
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_B(xs, 1)) {
          const x8$1 = xs;
          while ((i$1 < len$1)) {
            const arg1$13 = x8$1.u[i$1];
            f$1(arg1$13);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_S(xs, 1)) {
          const x9$1 = xs;
          while ((i$1 < len$1)) {
            const arg1$14 = x9$1.u[i$1];
            f$1(arg1$14);
            i$1 = ((1 + i$1) | 0)
          }
        } else if ($isArrayOf_Z(xs, 1)) {
          const x10$1 = xs;
          while ((i$1 < len$1)) {
            const arg1$15 = x10$1.u[i$1];
            f$1(arg1$15);
            i$1 = ((1 + i$1) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs)
        }
      };
      return result
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$For)) {
      const x6$2 = node;
      return ($p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x6$2.Ltigerpython_parser_ast_AstNode$For__f_body, true) || $p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x6$2.Ltigerpython_parser_ast_AstNode$For__f_elseBody, true))
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
      const x7$2 = node;
      return ($p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x7$2.Ltigerpython_parser_ast_AstNode$While__f_body, true) || $p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z($thiz, x7$2.Ltigerpython_parser_ast_AstNode$While__f_elseBody, true))
    } else {
      return ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Break) ? (!returnOnly) : ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Return) || (node instanceof $c_Ltigerpython_parser_ast_AstNode$Yield)))
    }
  } catch (e) {
    if ((e instanceof $c_sr_NonLocalReturnControl)) {
      const ex = e;
      if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey5)) {
        return ex.value$mcZ$sp__Z()
      } else {
        throw ex
      }
    } else {
      throw e
    }
  }
});
const $p_Ltigerpython_parser_parsing_Parser___resultIsCompound$1__scm_ArrayBuffer__Z = (function($thiz, result$3) {
  if ((!$f_sc_SeqOps__isEmpty__Z(result$3))) {
    const x1 = $f_sc_IndexedSeqOps__last__O(result$3);
    return ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef) || ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef) || ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$If) || ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$While) || (x1 instanceof $c_Ltigerpython_parser_ast_AstNode$For)))))
  } else {
    return false
  }
});
class $c_Ltigerpython_parser_parsing_Parser extends $c_O {
  constructor(source, pythonVersion, caretPos, errorHandler) {
    super();
    this.Ltigerpython_parser_parsing_Parser__f_lexer = null;
    this.Ltigerpython_parser_parsing_Parser__f_preParser = null;
    this.Ltigerpython_parser_parsing_Parser__f_source = null;
    this.Ltigerpython_parser_parsing_Parser__f_pythonVersion = 0;
    this.Ltigerpython_parser_parsing_Parser__f_caretPos = 0;
    this.Ltigerpython_parser_parsing_Parser__f_errorHandler = null;
    this.Ltigerpython_parser_parsing_Parser__f_parserState = null;
    this.Ltigerpython_parser_parsing_Parser__f_expressionParser = null;
    this.Ltigerpython_parser_parsing_Parser__f_argumentParser = null;
    this.Ltigerpython_parser_parsing_Parser__f_extParserUtils = null;
    this.Ltigerpython_parser_parsing_Parser__f_future_print_import = false;
    this.Ltigerpython_parser_parsing_Parser__f_allow_future_import = false;
    this.Ltigerpython_parser_parsing_Parser__f_astStack = null;
    this.Ltigerpython_parser_parsing_Parser__f_bitmap$0 = 0;
    this.Ltigerpython_parser_parsing_Parser__f_source = source;
    this.Ltigerpython_parser_parsing_Parser__f_pythonVersion = pythonVersion;
    this.Ltigerpython_parser_parsing_Parser__f_caretPos = caretPos;
    this.Ltigerpython_parser_parsing_Parser__f_errorHandler = errorHandler;
    this.Ltigerpython_parser_parsing_Parser__f_parserState = new $c_Ltigerpython_parser_parsing_ParserState(source, pythonVersion, errorHandler);
    this.Ltigerpython_parser_parsing_Parser__f_expressionParser = new $c_Ltigerpython_parser_parsing_ExpressionParser(this, this.Ltigerpython_parser_parsing_Parser__f_parserState);
    this.Ltigerpython_parser_parsing_Parser__f_argumentParser = new $c_Ltigerpython_parser_parsing_ArgumentParser(this, this.Ltigerpython_parser_parsing_Parser__f_parserState);
    this.Ltigerpython_parser_parsing_Parser__f_extParserUtils = new $c_Ltigerpython_parser_parsing_ExtParserUtils(this, this.Ltigerpython_parser_parsing_Parser__f_parserState);
    this.Ltigerpython_parser_parsing_Parser__f_future_print_import = false;
    this.Ltigerpython_parser_parsing_Parser__f_allow_future_import = true;
    this.Ltigerpython_parser_parsing_Parser__f_astStack = new $c_Ltigerpython_parser_parsing_AstStack(this)
  };
  lexer__Ltigerpython_parser_lexer_Lexer() {
    return (((((1 & this.Ltigerpython_parser_parsing_Parser__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_parsing_Parser__lexer$lzycompute__Ltigerpython_parser_lexer_Lexer(this) : this.Ltigerpython_parser_parsing_Parser__f_lexer)
  };
  parse__Ltigerpython_parser_ast_AstNode() {
    this.Ltigerpython_parser_parsing_Parser__f_future_print_import = false;
    this.Ltigerpython_parser_parsing_Parser__f_allow_future_import = true;
    const result = this.parseSuite__sc_BufferedIterator__Ltigerpython_parser_ast_AstNode$Suite($p_Ltigerpython_parser_parsing_Parser__preParser__Ltigerpython_parser_parsing_PreParser(this));
    const this$1 = new $c_Ltigerpython_parser_parsing_NameContextWalker();
    $f_Ltigerpython_parser_ast_AstVisitor__walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(this$1, result);
    const x = this.Ltigerpython_parser_parsing_Parser__f_errorHandler;
    const x$2 = $m_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$();
    if ((!((x !== null) && x.equals__O__Z(x$2)))) {
      this.Ltigerpython_parser_parsing_Parser__f_extParserUtils.checkForErrors__Ltigerpython_parser_ast_AstNode$Statement__V(result);
      if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
        const this$2 = new $c_Ltigerpython_parser_parsing_ReturnValueChecker(this, this.Ltigerpython_parser_parsing_Parser__f_parserState);
        $f_Ltigerpython_parser_ast_AstVisitor__walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(this$2, result);
        const this$3 = new $c_Ltigerpython_parser_parsing_ControlFlowChecker(this.Ltigerpython_parser_parsing_Parser__f_parserState);
        $f_Ltigerpython_parser_ast_AstVisitor__walkStatement__Ltigerpython_parser_ast_AstNode$Statement__V(this$3, result)
      };
      if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_checkNames) {
        new $c_Ltigerpython_parser_parsing_NameChecker(this, this.Ltigerpython_parser_parsing_Parser__f_parserState)
      }
    };
    return result
  };
  parseSuite__sc_BufferedIterator__Ltigerpython_parser_ast_AstNode$Suite(lines) {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    const hasBreak = new $c_sr_BooleanRef(false);
    let hasStmt = false;
    let deadCodeError = (-1);
    while (lines.hasNext__Z()) {
      let line = lines.next__O();
      if (this.Ltigerpython_parser_parsing_Parser__f_future_print_import) {
        line.makePrintAName__V()
      };
      if ((hasBreak.sr_BooleanRef__f_elem && (deadCodeError < 0))) {
        deadCodeError = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos
      };
      if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
        const x1 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
        const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GLOBAL;
        let $$x1;
        if ((x === x1)) {
          $$x1 = true
        } else {
          const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONLOCAL;
          $$x1 = (x$3 === x1)
        };
        if ($$x1) {
          if (hasStmt) {
            const this$7 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const $$x2 = $m_sc_ArrayOps$();
            const xs = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
            const pos = $$x2.head$extension__O__O(xs).Ltigerpython_parser_lexer_Token__f_pos;
            const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
            const array = [x1];
            const params = new $c_sjsr_WrappedVarArgs(array);
            this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
          }
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
          let $$x3;
          if ((x$5 === x1)) {
            $$x3 = true
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
            if ((x$7 === x1)) {
              $$x3 = true
            } else {
              const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT;
              if ((x$9 === x1)) {
                $$x3 = true
              } else {
                const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM;
                $$x3 = (x$11 === x1)
              }
            }
          };
          if ((!$$x3)) {
            const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
            let $$x4;
            if ((x$13 === x1)) {
              $$x4 = true
            } else {
              const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
              $$x4 = (x$15 === x1)
            };
            if ((!$$x4)) {
              hasStmt = true
            }
          }
        }
      };
      const x$17 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
      const x$18 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT_DIV;
      if ((x$17 === x$18)) {
        const this$11 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
        const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
        const array$1 = ["//", "#"];
        const params$1 = new $c_sjsr_WrappedVarArgs(array$1);
        this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
      } else {
        const line$1 = line;
        const x1$1 = line$1.headTokenType__Ltigerpython_parser_lexer_TokenType();
        const x$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
        let $$x6;
        if ((x$1 === x1$1)) {
          $$x6 = true
        } else {
          const x$3$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
          if ((x$3$1 === x1$1)) {
            $$x6 = true
          } else {
            const x$5$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
            if ((x$5$1 === x1$1)) {
              $$x6 = true
            } else {
              const x$7$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
              if ((x$7$1 === x1$1)) {
                $$x6 = true
              } else {
                const x$9$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
                $$x6 = (x$9$1 === x1$1)
              }
            }
          }
        };
        let $$x5;
        if ($$x6) {
          $$x5 = true
        } else {
          let $$x7;
          if ((line$1.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 3)) {
            const $$x8 = $m_sc_ArrayOps$();
            const xs$1 = line$1.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
            const x$11$1 = $$x8.last$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            $$x7 = (x$11$1 === x$12)
          } else {
            $$x7 = false
          };
          if ($$x7) {
            const x1$2 = line$1.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$13$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
            if ((x$13$1 === x1$2)) {
              $$x5 = true
            } else {
              const x$15$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
              if ((x$15$1 === x1$2)) {
                $$x5 = true
              } else {
                const x$17$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                if ((x$17$1 === x1$2)) {
                  $$x5 = true
                } else {
                  const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY;
                  if ((x$19 === x1$2)) {
                    $$x5 = true
                  } else {
                    const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
                    $$x5 = (x$21 === x1$2)
                  }
                }
              }
            }
          } else {
            $$x5 = false
          }
        };
        if ($$x5) {
          const this$14 = $m_scm_ArrayBuffer$();
          const elems$1 = $m_sci_Nil$();
          const followLines = this$14.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
          while (true) {
            let $$x9;
            if (lines.hasNext__Z()) {
              const line$2 = lines.head__O();
              const x1$3 = line$2.headTokenType__Ltigerpython_parser_lexer_TokenType();
              const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
              if ((x$2 === x1$3)) {
                $$x9 = true
              } else {
                const x$3$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FINALLY;
                if ((x$3$2 === x1$3)) {
                  $$x9 = true
                } else {
                  const x$5$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
                  if ((x$5$2 === x1$3)) {
                    $$x9 = true
                  } else {
                    const x$7$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXCEPT;
                    $$x9 = (x$7$2 === x1$3)
                  }
                }
              }
            } else {
              $$x9 = false
            };
            if ($$x9) {
              const elem = lines.next__O();
              followLines.addOne__O__scm_ArrayBuffer(elem)
            } else {
              break
            }
          };
          let $$x10;
          if ((lines.hasNext__Z() && this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
            const this$16 = $m_Ltigerpython_parser_parsing_Parser$();
            const line$3 = lines.head__O();
            const xs$2 = line$3.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
            let $$x12;
            if ((xs$2.u.length !== 0)) {
              const x$4 = line$3.headTokenType__Ltigerpython_parser_lexer_TokenType();
              const x$2$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
              $$x12 = (x$4 === x$2$1)
            } else {
              $$x12 = false
            };
            let $$x11;
            if ($$x12) {
              const $$x13 = $m_sc_ArrayOps$();
              const xs$3 = line$3.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              $$x11 = ($$x13.head$extension__O__O(xs$3).Ltigerpython_parser_lexer_Token__f_value === "end")
            } else {
              $$x11 = false
            };
            if ($$x11) {
              const xs$4 = line$3.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const f = ((this$21) => ((x$1$2) => {
                const x$1$1 = x$1$2;
                return x$1$1.Ltigerpython_parser_lexer_Token__f_tokenType
              }))(this$16);
              const len = xs$4.u.length;
              const ys = $newArrayObject($d_Ltigerpython_parser_lexer_TokenType.getArrayOf(), [len]);
              if ((len > 0)) {
                let i = 0;
                if ((xs$4 !== null)) {
                  while ((i < len)) {
                    const $$x14 = i;
                    const arg1 = xs$4.u[i];
                    ys.u[$$x14] = f(arg1);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_I(xs$4, 1)) {
                  const x3 = xs$4;
                  while ((i < len)) {
                    const $$x15 = i;
                    const arg1$1 = x3.u[i];
                    ys.u[$$x15] = f(arg1$1);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_D(xs$4, 1)) {
                  const x4 = xs$4;
                  while ((i < len)) {
                    const $$x16 = i;
                    const arg1$2 = x4.u[i];
                    ys.u[$$x16] = f(arg1$2);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_J(xs$4, 1)) {
                  const x5 = xs$4;
                  while ((i < len)) {
                    const $$x17 = i;
                    const t = x5.u[i];
                    const lo = t.RTLong__f_lo;
                    const hi = t.RTLong__f_hi;
                    ys.u[$$x17] = f(new $c_RTLong(lo, hi));
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_F(xs$4, 1)) {
                  const x6 = xs$4;
                  while ((i < len)) {
                    const $$x18 = i;
                    const arg1$3 = x6.u[i];
                    ys.u[$$x18] = f(arg1$3);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_C(xs$4, 1)) {
                  const x7 = xs$4;
                  while ((i < len)) {
                    const $$x19 = i;
                    const arg1$4 = x7.u[i];
                    ys.u[$$x19] = f($bC(arg1$4));
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_B(xs$4, 1)) {
                  const x8 = xs$4;
                  while ((i < len)) {
                    const $$x20 = i;
                    const arg1$5 = x8.u[i];
                    ys.u[$$x20] = f(arg1$5);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_S(xs$4, 1)) {
                  const x9 = xs$4;
                  while ((i < len)) {
                    const $$x21 = i;
                    const arg1$6 = x9.u[i];
                    ys.u[$$x21] = f(arg1$6);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_Z(xs$4, 1)) {
                  const x10 = xs$4;
                  while ((i < len)) {
                    const $$x22 = i;
                    const arg1$7 = x10.u[i];
                    ys.u[$$x22] = f(arg1$7);
                    i = ((1 + i) | 0)
                  }
                } else {
                  throw new $c_s_MatchError(xs$4)
                }
              };
              matchEnd25: {
                if (((new $c_s_Array$UnapplySeqWrapper(ys), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys, 1) === 0))) {
                  $$x10 = true;
                  break matchEnd25
                };
                if (((new $c_s_Array$UnapplySeqWrapper(ys), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys, 2) === 0))) {
                  const p6 = ys.u[1];
                  const x$3$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
                  if ((x$3$3 === p6)) {
                    $$x10 = true;
                    break matchEnd25
                  }
                };
                if (((new $c_s_Array$UnapplySeqWrapper(ys), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys, 2) === 0))) {
                  const p9 = ys.u[1];
                  const x$5$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                  let $$x23;
                  if ((x$5$3 === p9)) {
                    $$x23 = true
                  } else {
                    const x$7$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                    if ((x$7$3 === p9)) {
                      $$x23 = true
                    } else {
                      const x$9$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                      if ((x$9$2 === p9)) {
                        $$x23 = true
                      } else {
                        const x$11$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                        $$x23 = (x$11$2 === p9)
                      }
                    }
                  };
                  if ($$x23) {
                    $$x10 = true;
                    break matchEnd25
                  }
                };
                if (((new $c_s_Array$UnapplySeqWrapper(ys), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys, 3) === 0))) {
                  const p12 = ys.u[1];
                  const p13 = ys.u[2];
                  const x$13$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                  let $$x25;
                  if ((x$13$2 === p12)) {
                    $$x25 = true
                  } else {
                    const x$15$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                    if ((x$15$2 === p12)) {
                      $$x25 = true
                    } else {
                      const x$17$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                      if ((x$17$2 === p12)) {
                        $$x25 = true
                      } else {
                        const x$19$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                        $$x25 = (x$19$1 === p12)
                      }
                    }
                  };
                  let $$x24;
                  if ($$x25) {
                    const x$21$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
                    $$x24 = (x$21$1 === p13)
                  } else {
                    $$x24 = false
                  };
                  if ($$x24) {
                    $$x10 = true;
                    break matchEnd25
                  }
                };
                $$x10 = false
              }
            } else {
              $$x10 = false
            }
          } else {
            $$x10 = false
          };
          if ($$x10) {
            const this$44 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$2 = lines.head__O().Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
            const params$2 = $m_sci_Nil$();
            this$44.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2);
            lines.next__O()
          };
          if (this.Ltigerpython_parser_parsing_Parser__f_future_print_import) {
            const this$45 = new $c_scm_ArrayBufferView(followLines.scm_ArrayBuffer__f_array, followLines.scm_ArrayBuffer__f_size0);
            const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$45);
            while (it.hasNext__Z()) {
              const arg1$8 = it.next__O();
              const f$1 = arg1$8;
              f$1.makePrintAName__V()
            }
          };
          let res = 0;
          const this$46 = new $c_scm_ArrayBufferView(followLines.scm_ArrayBuffer__f_array, followLines.scm_ArrayBuffer__f_size0);
          const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$46);
          while (it$1.hasNext__Z()) {
            const arg1$9 = it$1.next__O();
            const x$4$2 = arg1$9;
            const x$6 = x$4$2.headTokenType__Ltigerpython_parser_lexer_TokenType();
            const x$2$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
            if ((x$6 === x$2$2)) {
              res = ((1 + res) | 0)
            }
          };
          if ((res > 1)) {
            const this$47 = new $c_scm_ArrayBufferView(followLines.scm_ArrayBuffer__f_array, followLines.scm_ArrayBuffer__f_size0);
            const this$48 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$47);
            let idx1;
            _return: {
              let i$1 = 0;
              this$48.drop__I__sc_Iterator(0);
              while (this$48.hasNext__Z()) {
                const arg1$10 = this$48.next__O();
                const x$5$2$1 = arg1$10;
                const x$8 = x$5$2$1.headTokenType__Ltigerpython_parser_lexer_TokenType();
                const x$2$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
                if ((x$8 === x$2$3)) {
                  idx1 = i$1;
                  break _return
                };
                i$1 = ((1 + i$1) | 0)
              };
              idx1 = (-1)
            };
            const from = ((1 + idx1) | 0);
            const this$51 = new $c_scm_ArrayBufferView(followLines.scm_ArrayBuffer__f_array, followLines.scm_ArrayBuffer__f_size0);
            const this$52 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$51);
            let idx2;
            _return$1: {
              let i$2 = ((from > 0) ? from : 0);
              this$52.drop__I__sc_Iterator(from);
              while (this$52.hasNext__Z()) {
                const arg1$11 = this$52.next__O();
                const x$6$2 = arg1$11;
                const x$10 = x$6$2.headTokenType__Ltigerpython_parser_lexer_TokenType();
                const x$2$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
                if ((x$10 === x$2$4)) {
                  idx2 = i$2;
                  break _return$1
                };
                i$2 = ((1 + i$2) | 0)
              };
              idx2 = (-1)
            };
            const x$19$2 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
            const x$20 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
            let $$x26;
            if ((((x$19$2 === x$20) && (idx1 >= 0)) && followLines.apply__I__O(idx1).hasSuite__Z())) {
              const branch = followLines.apply__I__O(idx1).Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              if ((branch.u.length > 2)) {
                const x$14 = branch.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
                const x$2$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
                $$x26 = (!(x$14 === x$2$5))
              } else {
                $$x26 = false
              }
            } else {
              $$x26 = false
            };
            if ($$x26) {
              const $$x27 = followLines.apply__I__O(idx1).Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const srcToken = followLines.apply__I__O(idx1).Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0];
              const newType = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
              $$x27.u[0] = new $c_Ltigerpython_parser_lexer_Token(srcToken.Ltigerpython_parser_lexer_Token__f_pos, srcToken.Ltigerpython_parser_lexer_Token__f_len, newType);
              const this$56 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos$3 = followLines.apply__I__O(idx1).Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
              const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE;
              const params$3 = $m_sci_Nil$();
              this$56.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3)
            } else if ((idx2 >= 0)) {
              const this$61 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos$4 = followLines.apply__I__O(idx2).Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
              const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
              const $$x28 = $m_sc_ArrayOps$();
              const xs$5 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const array$2 = [$$x28.head$extension__O__O(xs$5)];
              const params$4 = new $c_sjsr_WrappedVarArgs(array$2);
              this$61.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$4, params$4)
            } else {
              const this$66 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos$5 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
              const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
              const $$x29 = $m_sc_ArrayOps$();
              const xs$6 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const array$3 = [$$x29.head$extension__O__O(xs$6)];
              const params$5 = new $c_sjsr_WrappedVarArgs(array$3);
              this$66.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$5, params$5)
            }
          };
          const stmts = this.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(followLines));
          if ((stmts.u.length === 1)) {
            const x1$2$1 = $m_sc_ArrayOps$().head$extension__O__O(stmts);
            matchEnd4: {
              if ((x1$2$1 instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
                const x2 = x1$2$1;
                if ((this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode && $p_Ltigerpython_parser_parsing_Parser__isAlwaysTrue__Ltigerpython_parser_ast_AstNode$Expression__Z(this, x2.Ltigerpython_parser_ast_AstNode$While__f_test))) {
                  if ((!$p_Ltigerpython_parser_parsing_Parser__whileHasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(this, x2.Ltigerpython_parser_ast_AstNode$While__f_body))) {
                    hasBreak.sr_BooleanRef__f_elem = true;
                    break matchEnd4
                  } else {
                    break matchEnd4
                  }
                }
              }
            }
          };
          const xs$7 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(stmts);
          result.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$7)
        } else {
          const x$21$2 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
          const x$22 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION;
          if ((x$21$2 === x$22)) {
            const this$68 = $m_scm_ArrayBuffer$();
            const elems$2 = $m_sci_Nil$();
            const followLines$2 = this$68.from__sc_IterableOnce__scm_ArrayBuffer(elems$2);
            while (true) {
              let $$x30;
              if (lines.hasNext__Z()) {
                const x$23 = lines.head__O().headTokenType__Ltigerpython_parser_lexer_TokenType();
                const x$24 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION;
                $$x30 = (x$23 === x$24)
              } else {
                $$x30 = false
              };
              if ($$x30) {
                const elem$1 = lines.next__O();
                followLines$2.addOne__O__scm_ArrayBuffer(elem$1)
              } else {
                break
              }
            };
            let $$x31;
            if (lines.hasNext__Z()) {
              const line$4 = lines.head__O();
              const this$73 = line$4.headTokenType__Ltigerpython_parser_lexer_TokenType();
              const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF];
              const tokenTypes = new $c_sjsr_WrappedVarArgs(array$4);
              $$x31 = $f_sc_SeqOps__contains__O__Z(tokenTypes, this$73)
            } else {
              $$x31 = false
            };
            if ($$x31) {
              const elem$2 = lines.next__O();
              followLines$2.addOne__O__scm_ArrayBuffer(elem$2);
              let $$x32;
              if ((lines.hasNext__Z() && this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
                const this$74 = $m_Ltigerpython_parser_parsing_Parser$();
                const line$5 = lines.head__O();
                const xs$8 = line$5.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                let $$x34;
                if ((xs$8.u.length !== 0)) {
                  const x$16 = line$5.headTokenType__Ltigerpython_parser_lexer_TokenType();
                  const x$2$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                  $$x34 = (x$16 === x$2$6)
                } else {
                  $$x34 = false
                };
                let $$x33;
                if ($$x34) {
                  const $$x35 = $m_sc_ArrayOps$();
                  const xs$9 = line$5.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                  $$x33 = ($$x35.head$extension__O__O(xs$9).Ltigerpython_parser_lexer_Token__f_value === "end")
                } else {
                  $$x33 = false
                };
                if ($$x33) {
                  const xs$10 = line$5.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
                  const f$2 = ((this$79) => ((x$1$2$1) => {
                    const x$1$3 = x$1$2$1;
                    return x$1$3.Ltigerpython_parser_lexer_Token__f_tokenType
                  }))(this$74);
                  const len$1 = xs$10.u.length;
                  const ys$1 = $newArrayObject($d_Ltigerpython_parser_lexer_TokenType.getArrayOf(), [len$1]);
                  if ((len$1 > 0)) {
                    let i$3 = 0;
                    if ((xs$10 !== null)) {
                      while ((i$3 < len$1)) {
                        const $$x36 = i$3;
                        const arg1$12 = xs$10.u[i$3];
                        ys$1.u[$$x36] = f$2(arg1$12);
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_I(xs$10, 1)) {
                      const x3$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x37 = i$3;
                        const arg1$13 = x3$1.u[i$3];
                        ys$1.u[$$x37] = f$2(arg1$13);
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_D(xs$10, 1)) {
                      const x4$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x38 = i$3;
                        const arg1$14 = x4$1.u[i$3];
                        ys$1.u[$$x38] = f$2(arg1$14);
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_J(xs$10, 1)) {
                      const x5$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x39 = i$3;
                        const t$1 = x5$1.u[i$3];
                        const lo$1 = t$1.RTLong__f_lo;
                        const hi$1 = t$1.RTLong__f_hi;
                        ys$1.u[$$x39] = f$2(new $c_RTLong(lo$1, hi$1));
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_F(xs$10, 1)) {
                      const x6$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x40 = i$3;
                        const arg1$15 = x6$1.u[i$3];
                        ys$1.u[$$x40] = f$2(arg1$15);
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_C(xs$10, 1)) {
                      const x7$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x41 = i$3;
                        const arg1$16 = x7$1.u[i$3];
                        ys$1.u[$$x41] = f$2($bC(arg1$16));
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_B(xs$10, 1)) {
                      const x8$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x42 = i$3;
                        const arg1$17 = x8$1.u[i$3];
                        ys$1.u[$$x42] = f$2(arg1$17);
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_S(xs$10, 1)) {
                      const x9$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x43 = i$3;
                        const arg1$18 = x9$1.u[i$3];
                        ys$1.u[$$x43] = f$2(arg1$18);
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else if ($isArrayOf_Z(xs$10, 1)) {
                      const x10$1 = xs$10;
                      while ((i$3 < len$1)) {
                        const $$x44 = i$3;
                        const arg1$19 = x10$1.u[i$3];
                        ys$1.u[$$x44] = f$2(arg1$19);
                        i$3 = ((1 + i$3) | 0)
                      }
                    } else {
                      throw new $c_s_MatchError(xs$10)
                    }
                  };
                  matchEnd25$1: {
                    if (((new $c_s_Array$UnapplySeqWrapper(ys$1), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys$1, 1) === 0))) {
                      $$x32 = true;
                      break matchEnd25$1
                    };
                    if (((new $c_s_Array$UnapplySeqWrapper(ys$1), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys$1, 2) === 0))) {
                      const p6$1 = ys$1.u[1];
                      const x$3$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
                      if ((x$3$4 === p6$1)) {
                        $$x32 = true;
                        break matchEnd25$1
                      }
                    };
                    if (((new $c_s_Array$UnapplySeqWrapper(ys$1), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys$1, 2) === 0))) {
                      const p9$1 = ys$1.u[1];
                      const x$5$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                      let $$x45;
                      if ((x$5$4 === p9$1)) {
                        $$x45 = true
                      } else {
                        const x$7$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                        if ((x$7$4 === p9$1)) {
                          $$x45 = true
                        } else {
                          const x$9$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                          if ((x$9$3 === p9$1)) {
                            $$x45 = true
                          } else {
                            const x$11$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                            $$x45 = (x$11$3 === p9$1)
                          }
                        }
                      };
                      if ($$x45) {
                        $$x32 = true;
                        break matchEnd25$1
                      }
                    };
                    if (((new $c_s_Array$UnapplySeqWrapper(ys$1), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(ys$1, 3) === 0))) {
                      const p12$1 = ys$1.u[1];
                      const p13$1 = ys$1.u[2];
                      const x$13$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                      let $$x47;
                      if ((x$13$3 === p12$1)) {
                        $$x47 = true
                      } else {
                        const x$15$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
                        if ((x$15$3 === p12$1)) {
                          $$x47 = true
                        } else {
                          const x$17$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
                          if ((x$17$3 === p12$1)) {
                            $$x47 = true
                          } else {
                            const x$19$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR;
                            $$x47 = (x$19$3 === p12$1)
                          }
                        }
                      };
                      let $$x46;
                      if ($$x47) {
                        const x$21$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
                        $$x46 = (x$21$3 === p13$1)
                      } else {
                        $$x46 = false
                      };
                      if ($$x46) {
                        $$x32 = true;
                        break matchEnd25$1
                      }
                    };
                    $$x32 = false
                  }
                } else {
                  $$x32 = false
                }
              } else {
                $$x32 = false
              };
              if ($$x32) {
                const this$102 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                const pos$6 = lines.head__O().Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
                const params$6 = $m_sci_Nil$();
                this$102.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$6, params$6);
                lines.next__O()
              };
              const xs$11 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(followLines$2)));
              result.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$11)
            } else {
              const this$103 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos$7 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
              const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE;
              const params$7 = $m_sci_Nil$();
              this$103.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$7, params$7)
            }
          } else {
            const this$104 = $m_scm_ArrayBuffer$();
            const elems$3 = $m_sci_Nil$();
            const followLines$3 = this$104.from__sc_IterableOnce__scm_ArrayBuffer(elems$3);
            if (line.hasSuite__Z()) {
              line = line.checkForDotSuite__Ltigerpython_parser_parsing_ParserState__Ltigerpython_parser_parsing_PreParser$Line(this.Ltigerpython_parser_parsing_Parser__f_parserState)
            };
            let $$x49;
            if ((line.hasSuite__Z() && lines.hasNext__Z())) {
              const line$6 = lines.head__O();
              const x1$4 = line$6.headTokenType__Ltigerpython_parser_lexer_TokenType();
              const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
              if ((x$25 === x1$4)) {
                $$x49 = true
              } else {
                const x$3$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FINALLY;
                if ((x$3$5 === x1$4)) {
                  $$x49 = true
                } else {
                  const x$5$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
                  if ((x$5$5 === x1$4)) {
                    $$x49 = true
                  } else {
                    const x$7$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXCEPT;
                    $$x49 = (x$7$5 === x1$4)
                  }
                }
              }
            } else {
              $$x49 = false
            };
            let $$x48;
            if ($$x49) {
              const x$25$1 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
              const x$26 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
              $$x48 = (x$25$1 === x$26)
            } else {
              $$x48 = false
            };
            if ($$x48) {
              const $$x50 = $m_sc_ArrayOps$();
              const xs$12 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const name = $$x50.head$extension__O__O(xs$12).Ltigerpython_parser_lexer_Token__f_value;
              const $$x51 = $m_Ltigerpython_parser_lexer_TokenType$();
              const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR];
              const keyword = $$x51.getPossibleKeywordForName__T__sci_Seq__s_Option(name, new $c_sjsr_WrappedVarArgs(array$5));
              if ((((!keyword.isEmpty__Z()) && keyword.get__O().isCompoundKeyword__Z()) || (name === "ef"))) {
                while (true) {
                  let $$x52;
                  if (lines.hasNext__Z()) {
                    const line$7 = lines.head__O();
                    const x1$5 = line$7.headTokenType__Ltigerpython_parser_lexer_TokenType();
                    const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
                    if ((x$27 === x1$5)) {
                      $$x52 = true
                    } else {
                      const x$3$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FINALLY;
                      if ((x$3$6 === x1$5)) {
                        $$x52 = true
                      } else {
                        const x$5$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
                        if ((x$5$6 === x1$5)) {
                          $$x52 = true
                        } else {
                          const x$7$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXCEPT;
                          $$x52 = (x$7$6 === x1$5)
                        }
                      }
                    }
                  } else {
                    $$x52 = false
                  };
                  if ($$x52) {
                    const elem$3 = lines.next__O();
                    followLines$3.addOne__O__scm_ArrayBuffer(elem$3)
                  } else {
                    break
                  }
                };
                if (this.Ltigerpython_parser_parsing_Parser__f_future_print_import) {
                  const this$111 = new $c_scm_ArrayBufferView(followLines$3.scm_ArrayBuffer__f_array, followLines$3.scm_ArrayBuffer__f_size0);
                  const it$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$111);
                  while (it$2.hasNext__Z()) {
                    const arg1$20 = it$2.next__O();
                    const f$3 = arg1$20;
                    f$3.makePrintAName__V()
                  }
                }
              }
            };
            const xs$13 = this.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(followLines$3));
            const f$4 = ((this$6$1, hasBreak$1, result$1) => ((stmt$2) => {
              const stmt = stmt$2;
              if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Return) || ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Break) || (stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Continue)))) {
                hasBreak$1.sr_BooleanRef__f_elem = true
              };
              return result$1.addOne__O__scm_ArrayBuffer(stmt)
            }))(this, hasBreak, result);
            const len$2 = xs$13.u.length;
            let i$4 = 0;
            if ((xs$13 !== null)) {
              while ((i$4 < len$2)) {
                const arg1$21 = xs$13.u[i$4];
                f$4(arg1$21);
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_I(xs$13, 1)) {
              const x3$2 = xs$13;
              while ((i$4 < len$2)) {
                const arg1$22 = x3$2.u[i$4];
                f$4(arg1$22);
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_D(xs$13, 1)) {
              const x4$2 = xs$13;
              while ((i$4 < len$2)) {
                const arg1$23 = x4$2.u[i$4];
                f$4(arg1$23);
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_J(xs$13, 1)) {
              const x5$2 = xs$13;
              while ((i$4 < len$2)) {
                const t$2 = x5$2.u[i$4];
                const lo$2 = t$2.RTLong__f_lo;
                const hi$2 = t$2.RTLong__f_hi;
                f$4(new $c_RTLong(lo$2, hi$2));
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_F(xs$13, 1)) {
              const x6$2 = xs$13;
              while ((i$4 < len$2)) {
                const arg1$24 = x6$2.u[i$4];
                f$4(arg1$24);
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_C(xs$13, 1)) {
              const x7$2 = xs$13;
              while ((i$4 < len$2)) {
                const arg1$25 = x7$2.u[i$4];
                f$4($bC(arg1$25));
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_B(xs$13, 1)) {
              const x8$2 = xs$13;
              while ((i$4 < len$2)) {
                const arg1$26 = x8$2.u[i$4];
                f$4(arg1$26);
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_S(xs$13, 1)) {
              const x9$2 = xs$13;
              while ((i$4 < len$2)) {
                const arg1$27 = x9$2.u[i$4];
                f$4(arg1$27);
                i$4 = ((1 + i$4) | 0)
              }
            } else if ($isArrayOf_Z(xs$13, 1)) {
              const x10$2 = xs$13;
              while ((i$4 < len$2)) {
                const arg1$28 = x10$2.u[i$4];
                f$4(arg1$28);
                i$4 = ((1 + i$4) | 0)
              }
            } else {
              throw new $c_s_MatchError(xs$13)
            }
          }
        }
      };
      if (this.Ltigerpython_parser_parsing_Parser__f_allow_future_import) {
        const x1$3$1 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
        const x$27$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM;
        if ((!((x$27$1 === x1$3$1) && ((line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 4) && line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].isName__T__Z("__future__"))))) {
          const x$29 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
          let $$x53;
          if ((x$29 === x1$3$1)) {
            const xs$14 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
            _return$2: {
              let i$5 = 0;
              while ((i$5 < xs$14.u.length)) {
                const arg1$29 = xs$14.u[i$5];
                const x$7$2$1 = arg1$29;
                const this$119 = x$7$2$1.Ltigerpython_parser_lexer_Token__f_tokenType;
                const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE];
                const tokenTypes$1 = new $c_sjsr_WrappedVarArgs(array$6);
                if ((!$f_sc_SeqOps__contains__O__Z(tokenTypes$1, this$119))) {
                  $$x53 = false;
                  break _return$2
                };
                i$5 = ((1 + i$5) | 0)
              };
              $$x53 = true
            }
          } else {
            $$x53 = false
          };
          if ((!$$x53)) {
            this.Ltigerpython_parser_parsing_Parser__f_allow_future_import = false
          }
        }
      }
    };
    if (((deadCodeError >= 0) && this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode)) {
      const this$120 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const pos$8 = deadCodeError;
      const code$8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE;
      const params$8 = $m_sci_Nil$();
      this$120.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$8, params$8)
    };
    let $$x54;
    if ((!$f_sc_SeqOps__isEmpty__Z(result))) {
      const this$121 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
      $$x54 = (new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$121).next__O() !== null)
    } else {
      $$x54 = false
    };
    if ($$x54) {
      const this$122 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
      const $$x56 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$122).next__O().pos__I();
      let $$x55;
      if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
        const len$3 = result.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len$3]);
        result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
        $$x55 = destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$126 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
        const it$3 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$126);
        while (it$3.hasNext__Z()) {
          const elem$4 = it$3.next__O();
          const unboxedElem = ((elem$4 === null) ? null : elem$4);
          jsElems.push(unboxedElem)
        };
        $$x55 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), jsElems)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Suite($$x56, $$x55)
    } else {
      return null
    }
  };
  parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, followLines) {
    const result = $p_Ltigerpython_parser_parsing_Parser___parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(this, line, followLines);
    this.Ltigerpython_parser_parsing_Parser__f_astStack.$plus$plus$eq__sc_IterableOnce__V($m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(result));
    return result
  };
  parseStatement__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line) {
    const result = this.parseStatements__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__ALtigerpython_parser_ast_AstNode$Statement(line, $m_sci_Nil$());
    return ((result.u.length === 1) ? $m_sc_ArrayOps$().head$extension__O__O(result) : ((result.u.length !== 0) ? new $c_Ltigerpython_parser_ast_AstNode$Suite($m_sc_ArrayOps$().head$extension__O__O(result).pos__I(), result) : null))
  };
  parseSimpleStatement__Ltigerpython_parser_parsing_PreParser$Line__ALtigerpython_parser_ast_AstNode$Statement(line) {
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const stmts = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    while (tokens.hasNext__Z()) {
      let stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens);
      let $$x1;
      if (tokens.hasNext__Z()) {
        const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON];
        $$x1 = (!tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array)))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        let rc8 = false;
        let x2 = null;
        const x1 = stmt;
        matchEnd9$2: {
          if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
            rc8 = true;
            x2 = x1;
            const this$5 = x2;
            if (((this$5.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression instanceof $c_Ltigerpython_parser_ast_AstNode$Name) && this.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens))) {
              const name = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression.Ltigerpython_parser_ast_AstNode$Name__f_name;
              const $$x2 = $m_Ltigerpython_parser_lexer_TokenType$();
              const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM];
              const keyword = $$x2.getPossibleKeywordForName__T__sci_Seq__s_Option(name, new $c_sjsr_WrappedVarArgs(array$1));
              if ((!keyword.isEmpty__Z())) {
                const x1$2 = keyword.get__O();
                const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT;
                if (((x === x1$2) && ((!this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_printStatement) && (name === "print")))) {
                  tokens.back__V();
                  this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES, $m_sci_Nil$());
                  stmt = this.parsePrint__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                } else {
                  const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT;
                  let $$x3;
                  if ((x$3 === x1$2)) {
                    $$x3 = true
                  } else {
                    const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RETURN;
                    if ((x$5 === x1$2)) {
                      $$x3 = true
                    } else {
                      const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD;
                      if ((x$7 === x1$2)) {
                        $$x3 = true
                      } else {
                        const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM;
                        if ((x$9 === x1$2)) {
                          $$x3 = true
                        } else {
                          const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT;
                          $$x3 = (x$11 === x1$2)
                        }
                      }
                    }
                  };
                  if ($$x3) {
                    tokens.back__V();
                    const $$x5 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const $$x4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                    const array$2 = [name, x1$2];
                    $$x5.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x4, new $c_sjsr_WrappedVarArgs(array$2));
                    if (line.replaceToken__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), keyword.get__O())) {
                      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [this.parseStatement__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
                    } else {
                      const xs = $m_sci_Nil$();
                      const len = xs.length__I();
                      const array$3 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [len]);
                      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
                      let i = 0;
                      while (iterator.hasNext__Z()) {
                        array$3.u[i] = iterator.next__O();
                        i = ((1 + i) | 0)
                      };
                      return array$3
                    }
                  } else {
                    stmt = null
                  }
                }
              } else {
                let $$x8;
                if (((name === "let") || (name === "make"))) {
                  const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
                  $$x8 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4))
                } else {
                  $$x8 = false
                };
                let $$x7;
                if ($$x8) {
                  const x$13 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
                  const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                  $$x7 = (!(x$13 === x$14))
                } else {
                  $$x7 = false
                };
                let $$x6;
                if ($$x7) {
                  const x$15 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
                  const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
                  if ((x$15 === x$16)) {
                    $$x6 = true
                  } else {
                    const this$17 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser;
                    const token = tokens.peek__I__Ltigerpython_parser_lexer_Token(1);
                    $$x6 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token, this$17.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
                  }
                } else {
                  $$x6 = false
                };
                if ($$x6) {
                  const this$21 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const pos = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                  const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                  const array$5 = [name];
                  const params = new $c_sjsr_WrappedVarArgs(array$5);
                  this$21.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
                  const target = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens);
                  const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
                  tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$6));
                  const source = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
                  stmt = new $c_Ltigerpython_parser_ast_AstNode$Assignment(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [target]), source)
                } else {
                  let $$x9;
                  if ((name === "to")) {
                    const array$7 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
                    $$x9 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$7))
                  } else {
                    $$x9 = false
                  };
                  if ($$x9) {
                    const this$31 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const pos$1 = tokens.prevPos__I();
                    const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD;
                    const array$8 = ["to"];
                    const params$1 = new $c_sjsr_WrappedVarArgs(array$8);
                    this$31.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1);
                    tokens.skipAll__V();
                    stmt = null
                  } else if ((((name === "case") && tokens.hasColonAtEnd__Z()) && line.hasSuite__Z())) {
                    const this$35 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const pos$2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                    const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                    const array$9 = ["case/switch"];
                    const params$2 = new $c_sjsr_WrappedVarArgs(array$9);
                    this$35.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2);
                    tokens.skipAll__V();
                    stmt = null
                  } else {
                    let $$x10;
                    if (((name === "var") || (name === "val"))) {
                      const array$10 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
                      $$x10 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$10))
                    } else {
                      $$x10 = false
                    };
                    if ($$x10) {
                      const this$42 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                      const pos$3 = stmt.pos__I();
                      const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                      const array$11 = [name];
                      const params$3 = new $c_sjsr_WrappedVarArgs(array$11);
                      this$42.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3);
                      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)])
                    } else if (tokens.hasAssignment__Z()) {
                      const pos$4 = tokens.pos__I();
                      const this$46 = $m_scm_ArrayBuffer$();
                      const array$12 = [name];
                      const elems$1 = new $c_sjsr_WrappedVarArgs(array$12);
                      const target$2 = this$46.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
                      while (true) {
                        let $$x11;
                        if (tokens.hasNext__Z()) {
                          const array$13 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
                          $$x11 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$13)))
                        } else {
                          $$x11 = false
                        };
                        if ($$x11) {
                          const this$50 = tokens.next__Ltigerpython_parser_lexer_Token();
                          const elem = this$50.getStringValue__T();
                          target$2.addOne__O__scm_ArrayBuffer(elem)
                        } else {
                          break
                        }
                      };
                      const this$54 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                      const pos$5 = stmt.pos__I();
                      const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                      const array$14 = [$f_sc_IterableOnceOps__mkString__T__T__T__T(target$2, "", " ", "")];
                      const params$4 = new $c_sjsr_WrappedVarArgs(array$14);
                      this$54.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$4, params$4);
                      const array$15 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
                      tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$15));
                      stmt = new $c_Ltigerpython_parser_ast_AstNode$Assignment(pos$4, $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression]), this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens))
                    } else if ($m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.prev__Ltigerpython_parser_lexer_Token(), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM)) {
                      tokens.back__V();
                      const $$x13 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                      const $$x12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                      const array$16 = [name, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM];
                      $$x13.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x12, new $c_sjsr_WrappedVarArgs(array$16));
                      line.replaceToken__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM);
                      return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [this.parseStatement__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)])
                    } else {
                      let $$x14;
                      if ((((name.length | 0) >= 0) && (name.substring(0, ("def".length | 0)) === "def"))) {
                        const x$17 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
                        const x$18 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                        $$x14 = (x$17 === x$18)
                      } else {
                        $$x14 = false
                      };
                      if ((($$x14 && line.hasSuite__Z()) && tokens.hasColonAtEnd__Z())) {
                        if ((name === "define")) {
                          const this$65 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                          const pos$6 = tokens.prevPos__I();
                          const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                          const array$17 = ["define", "def"];
                          const params$5 = new $c_sjsr_WrappedVarArgs(array$17);
                          this$65.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$5, params$5)
                        } else {
                          const this$66 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                          const pos$7 = ((3 + tokens.prevPos__I()) | 0);
                          const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                          const params$6 = $m_sci_Nil$();
                          this$66.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$6, params$6);
                          if ((tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value !== null)) {
                            tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value = (("" + $m_sc_StringOps$().drop$extension__T__I__T(name, 3)) + tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value)
                          }
                        };
                        tokens.back__V();
                        tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF);
                        stmt = this.parseFunctionDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)
                      } else {
                        stmt = null
                      }
                    }
                  }
                }
              };
              let $$x15;
              if ((stmt === null)) {
                const array$18 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT];
                $$x15 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$18))
              } else {
                $$x15 = false
              };
              if (($$x15 && (tokens.peekTypeCategory__I__I(1) === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT))) {
                const s1 = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression.Ltigerpython_parser_ast_AstNode$Name__f_name;
                const s2 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
                let $$x16;
                if (((s1 === "var") || (s1 === "val"))) {
                  const array$19 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
                  $$x16 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$19))
                } else {
                  $$x16 = false
                };
                if ((($$x16 && (this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(s2) > this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I((("" + s1) + s2)))) && (this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(s2) > this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(((s1 + "_") + s2))))) {
                  const $$x18 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const $$x17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                  const array$20 = [s1];
                  $$x18.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x17, new $c_sjsr_WrappedVarArgs(array$20));
                  stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                } else if ((((this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I((("" + s1) + s2)) > 0) || (this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(((s1 + "_") + s2)) > 0)) && ((this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(s1) <= 1) || (this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(s2) <= 1)))) {
                  this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE, $m_sci_Nil$());
                  tokens.replaceToken__Ltigerpython_parser_lexer_Token__V($m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(tokens.prevPos__I(), (("" + s1) + s2)));
                  stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                } else {
                  let $$x19;
                  if ((s2 !== "")) {
                    const $$x20 = this.lexer__Ltigerpython_parser_lexer_Lexer();
                    const c = (65535 & (s2.charCodeAt(0) | 0));
                    $$x19 = ($$x20.getNameCount__T__I(((("" + s1) + $bC($m_jl_Character$().toUpperCase__C__C(c))) + $m_sc_StringOps$().slice$extension__T__I__I__T(s2, 1, (s2.length | 0)))) > 0)
                  } else {
                    $$x19 = false
                  };
                  if (($$x19 && ((this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(s1) <= 1) || (this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(s2) <= 1)))) {
                    this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE, $m_sci_Nil$());
                    const $$x22 = $m_Ltigerpython_parser_lexer_Token$();
                    const $$x21 = tokens.prevPos__I();
                    const c$1 = (65535 & (s2.charCodeAt(0) | 0));
                    tokens.replaceToken__Ltigerpython_parser_lexer_Token__V($$x22.createNameToken__I__T__Ltigerpython_parser_lexer_Token($$x21, ((("" + s1) + $bC($m_jl_Character$().toUpperCase__C__C(c$1))) + $m_sc_StringOps$().slice$extension__T__I__I__T(s2, 1, (s2.length | 0)))));
                    stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                  } else {
                    let $$x23;
                    if ((this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(((s1 + ".") + s2)) > 0)) {
                      const x$19 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
                      const x$20 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
                      if ((!(x$19 === x$20))) {
                        $$x23 = true
                      } else {
                        $$x23 = (((1 + this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(((s1 + ".") + s2))) | 0) >= this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(s2))
                      }
                    } else {
                      $$x23 = false
                    };
                    if ($$x23) {
                      this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT, $m_sci_Nil$());
                      tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT);
                      tokens.reset__I__V(0);
                      stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                    } else {
                      this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA, $m_sci_Nil$());
                      tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA);
                      tokens.reset__I__V(0);
                      stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                    }
                  }
                }
              } else {
                let $$x25;
                if ((stmt === null)) {
                  const array$21 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
                  $$x25 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$21))
                } else {
                  $$x25 = false
                };
                let $$x24;
                if ($$x25) {
                  const x$21 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
                  const x$22 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
                  $$x24 = (x$21 === x$22)
                } else {
                  $$x24 = false
                };
                if ($$x24) {
                  const s1$2 = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression.Ltigerpython_parser_ast_AstNode$Name__f_name;
                  const s2$2 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
                  if ((this.Ltigerpython_parser_parsing_Parser__f_extParserUtils.hasName__I__T__Z(tokens.prevPos__I(), (("" + s1$2) + s2$2)) || this.Ltigerpython_parser_parsing_Parser__f_extParserUtils.hasName__I__T__Z(tokens.prevPos__I(), ((s1$2 + "_") + s2$2)))) {
                    this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE, $m_sci_Nil$());
                    tokens.replaceToken__Ltigerpython_parser_lexer_Token__V($m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(tokens.prevPos__I(), (("" + s1$2) + s2$2)));
                    stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                  } else {
                    let $$x26;
                    if ((s2$2 !== "")) {
                      const $$x28 = this.Ltigerpython_parser_parsing_Parser__f_extParserUtils;
                      const $$x27 = tokens.prevPos__I();
                      const c$2 = (65535 & (s2$2.charCodeAt(0) | 0));
                      $$x26 = $$x28.hasName__I__T__Z($$x27, ((("" + s1$2) + $bC($m_jl_Character$().toUpperCase__C__C(c$2))) + $m_sc_StringOps$().slice$extension__T__I__I__T(s2$2, 1, (s2$2.length | 0))))
                    } else {
                      $$x26 = false
                    };
                    if ($$x26) {
                      this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE, $m_sci_Nil$());
                      const $$x30 = $m_Ltigerpython_parser_lexer_Token$();
                      const $$x29 = tokens.prevPos__I();
                      const c$3 = (65535 & (s2$2.charCodeAt(0) | 0));
                      tokens.replaceToken__Ltigerpython_parser_lexer_Token__V($$x30.createNameToken__I__T__Ltigerpython_parser_lexer_Token($$x29, ((("" + s1$2) + $bC($m_jl_Character$().toUpperCase__C__C(c$3))) + $m_sc_StringOps$().slice$extension__T__I__I__T(s2$2, 1, (s2$2.length | 0)))));
                      stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                    }
                  }
                }
              };
              if (((stmt === null) && tokens.hasNext__Z())) {
                const s1$3 = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression.Ltigerpython_parser_ast_AstNode$Name__f_name;
                const s2$3 = s1$3.toLowerCase();
                if (this.Ltigerpython_parser_parsing_Parser__f_extParserUtils.isCallableName__I__T__Z(tokens.pos__I(), x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression.Ltigerpython_parser_ast_AstNode$Name__f_name)) {
                  this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES, $m_sci_Nil$());
                  const arg = this.Ltigerpython_parser_parsing_Parser__f_argumentParser.parseArgList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Arguments(tokens);
                  const $$x31 = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos;
                  const f = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
                  const endPos = tokens.prevEndPos__I();
                  stmt = new $c_Ltigerpython_parser_ast_AstNode$ExprStatement($$x31, new $c_Ltigerpython_parser_ast_AstNode$Call(f.pos__I(), endPos, f, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_values, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs, arg.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs));
                  break matchEnd9$2
                } else {
                  const array$22 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
                  const nonLocalReturnKey1 = $ct_O__(new $c_O());
                  let $$x33;
                  try {
                    const end = (array$22.length | 0);
                    const isEmpty = (end <= 0);
                    const scala$collection$immutable$Range$$lastElement = (((-1) + end) | 0);
                    if ((!isEmpty)) {
                      let i$1 = 0;
                      while (true) {
                        const v1 = i$1;
                        const x$1 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(v1);
                        const x$2 = array$22[v1];
                        if ((!(x$1 === x$2))) {
                          throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1, false)
                        };
                        if ((i$1 === scala$collection$immutable$Range$$lastElement)) {
                          break
                        };
                        i$1 = ((1 + i$1) | 0)
                      }
                    };
                    $$x33 = true
                  } catch (e) {
                    if ((e instanceof $c_sr_NonLocalReturnControl)) {
                      const ex = e;
                      if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
                        $$x33 = ex.value$mcZ$sp__Z()
                      } else {
                        throw ex
                      }
                    } else {
                      throw e
                    }
                  };
                  let $$x32;
                  if (($$x33 && (s1$3 !== s2$3))) {
                    const this$118 = $m_s_Predef$().s_Predef$__f_Set;
                    const array$23 = ["class", "def"];
                    const elems$2 = new $c_sjsr_WrappedVarArgs(array$23);
                    $$x32 = this$118.from__sc_IterableOnce__sci_Set(elems$2).contains__O__Z(s2$3)
                  } else {
                    $$x32 = false
                  };
                  if ($$x32) {
                    const this$122 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const pos$8 = (((-1) + tokens.pos__I()) | 0);
                    const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                    const array$24 = [s1$3, s2$3];
                    const params$7 = new $c_sjsr_WrappedVarArgs(array$24);
                    this$122.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$7, params$7);
                    tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().fromString__T__Ltigerpython_parser_lexer_TokenType(s2$3));
                    break matchEnd9$2
                  } else {
                    const array$25 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT];
                    if (((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$25)) && (((1 + ((x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos + (name.length | 0)) | 0)) | 0) === tokens.pos__I())) && this.Ltigerpython_parser_parsing_Parser__f_extParserUtils.hasName__I__T__Z(x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos, name))) {
                      const this$126 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                      const pos$9 = (((-1) + tokens.pos__I()) | 0);
                      const code$8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                      const params$8 = $m_sci_Nil$();
                      this$126.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$9, (-1), code$8, params$8);
                      tokens.replaceToken__Ltigerpython_parser_lexer_Token__V($m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos, (("" + name) + tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value)));
                      break matchEnd9$2
                    } else {
                      this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT, $m_sci_Nil$());
                      const array$26 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD];
                      let source$2;
                      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$26))) {
                        source$2 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseYieldExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
                      } else {
                        source$2 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)
                      };
                      stmt = new $c_Ltigerpython_parser_ast_AstNode$Assignment(x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos, $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression]), source$2);
                      break matchEnd9$2
                    }
                  }
                }
              } else {
                break matchEnd9$2
              }
            }
          };
          let $$x34;
          if (rc8) {
            const this$130 = x2;
            let $$x35;
            if ((this$130.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
              const array$27 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE];
              $$x35 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$27))
            } else {
              $$x35 = false
            };
            if ($$x35) {
              $$x34 = $p_Ltigerpython_parser_parsing_Parser__isCallOfFunction__Ltigerpython_parser_ast_AstNode$Expression__T__Z(this, x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression, "switch")
            } else {
              $$x34 = false
            }
          } else {
            $$x34 = false
          };
          if ($$x34) {
            const this$137 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$10 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
            const code$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
            const array$28 = ["case/switch"];
            const params$9 = new $c_sjsr_WrappedVarArgs(array$28);
            this$137.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$10, (-1), code$9, params$9);
            tokens.skipAll__V();
            break matchEnd9$2
          };
          let $$x36;
          if (rc8) {
            const this$138 = x2;
            let $$x37;
            if ((this$138.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
              const array$29 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
              $$x37 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$29))
            } else {
              $$x37 = false
            };
            if ($$x37) {
              $$x36 = line.hasSuite__Z()
            } else {
              $$x36 = false
            }
          } else {
            $$x36 = false
          };
          if ($$x36) {
            let rc7 = false;
            let x2$2 = null;
            const x1$3 = x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression.Ltigerpython_parser_ast_AstNode$Call__f_function;
            matchEnd8: {
              if ((x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                rc7 = true;
                x2$2 = x1$3;
                const pos$2$1 = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_pos;
                const name$2 = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
                if ((((name$2.length | 0) >= 0) && (name$2.substring(0, ("class".length | 0)) === "class"))) {
                  const this$143 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const pos$11 = ((5 + pos$2$1) | 0);
                  const code$10 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                  const params$10 = $m_sci_Nil$();
                  this$143.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$11, (-1), code$10, params$10);
                  break matchEnd8
                }
              };
              if (rc7) {
                const pos$3$1 = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_pos;
                const name$3 = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
                if ((((name$3.length | 0) >= 0) && (name$3.substring(0, ("def".length | 0)) === "def"))) {
                  const this$145 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const pos$12 = ((3 + pos$3$1) | 0);
                  const code$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                  const params$11 = $m_sci_Nil$();
                  this$145.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$12, (-1), code$11, params$11);
                  break matchEnd8
                }
              };
              if (rc7) {
                const name$4 = x2$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
                if (((name$4 === "switch") && line.hasSuite__Z())) {
                  const this$149 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const pos$13 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
                  const code$12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                  const array$30 = ["case/switch"];
                  const params$12 = new $c_sjsr_WrappedVarArgs(array$30);
                  this$149.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$13, (-1), code$12, params$12);
                  break matchEnd8
                }
              };
              const this$153 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos$14 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
              const code$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
              const array$31 = ["def"];
              const params$13 = new $c_sjsr_WrappedVarArgs(array$31);
              this$153.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$14, (-1), code$13, params$13);
              const rassoc$1 = new $c_Ltigerpython_parser_lexer_Token(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, 0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF);
              const xs$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const len$1 = ((1 + xs$1.u.length) | 0);
              const dest = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$1]);
              dest.u[0] = rassoc$1;
              $m_s_Array$().copy__O__I__O__I__I__V(xs$1, 0, dest, 1, xs$1.u.length);
              return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [this.parseStatement__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, dest, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler))])
            };
            tokens.skipAll__V();
            break matchEnd9$2
          };
          let $$x38;
          if (rc8) {
            const this$158 = x2;
            if ((this$158.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
              const array$32 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT];
              $$x38 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$32))
            } else {
              $$x38 = false
            }
          } else {
            $$x38 = false
          };
          if ($$x38) {
            this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TWO_STATEMENTS, $m_sci_Nil$());
            tokens.skipAll__V();
            break matchEnd9$2
          };
          let $$x39;
          if (rc8) {
            let $$x40;
            if ((x2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
              const array$33 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
              $$x40 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$33))
            } else {
              $$x40 = false
            };
            if ($$x40) {
              $$x39 = line.hasSuite__Z()
            } else {
              $$x39 = false
            }
          } else {
            $$x39 = false
          };
          if ($$x39) {
            if ($p_Ltigerpython_parser_parsing_Parser__suiteContainsBreak__ALtigerpython_parser_parsing_PreParser$Line__Z(this, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite)) {
              const this$168 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos$15 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
              const code$14 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
              const array$34 = ["while"];
              const params$14 = new $c_sjsr_WrappedVarArgs(array$34);
              this$168.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$15, (-1), code$14, params$14);
              const rassoc$2 = new $c_Ltigerpython_parser_lexer_Token(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, 0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE);
              const xs$2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const len$2 = ((1 + xs$2.u.length) | 0);
              const dest$1 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$2]);
              dest$1.u[0] = rassoc$2;
              $m_s_Array$().copy__O__I__O__I__I__V(xs$2, 0, dest$1, 1, xs$2.u.length);
              return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [this.parseStatement__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, dest$1, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler))])
            } else {
              const this$176 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos$16 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
              const code$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
              const array$35 = ["if"];
              const params$15 = new $c_sjsr_WrappedVarArgs(array$35);
              this$176.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$16, (-1), code$15, params$15);
              const rassoc$3 = new $c_Ltigerpython_parser_lexer_Token(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, 0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF);
              const xs$3 = line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
              const len$3 = ((1 + xs$3.u.length) | 0);
              const dest$2 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$3]);
              dest$2.u[0] = rassoc$3;
              $m_s_Array$().copy__O__I__O__I__I__V(xs$3, 0, dest$2, 1, xs$3.u.length);
              return $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Statement.getArrayOf(), [this.parseStatement__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(new $c_Ltigerpython_parser_parsing_PreParser$Line(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_indentation, dest$2, line.Ltigerpython_parser_parsing_PreParser$Line__f_suite, line.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, line.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler))])
            }
          };
          const this$184 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
          const array$36 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
          const tokenTypes = new $c_sjsr_WrappedVarArgs(array$36);
          if ($f_sc_SeqOps__contains__O__Z(tokenTypes, this$184)) {
            this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET, $m_sci_Nil$())
          } else {
            this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$())
          };
          tokens.skipAll__V()
        }
      } else if (((stmt !== null) && stmt.isSingleName__Z())) {
        const name$5 = stmt.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression.Ltigerpython_parser_ast_AstNode$Name__f_name;
        const idx = $p_Ltigerpython_parser_parsing_Parser__splitSimpleName__T__I(this, name$5);
        if ((idx > 0)) {
          const this$185 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos$17 = ((stmt.pos__I() + idx) | 0);
          const code$16 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
          const params$16 = $m_sci_Nil$();
          this$185.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$17, (-1), code$16, params$16);
          const value = $m_sc_StringOps$().drop$extension__T__I__T(name$5, idx);
          let $$x41;
          _return$2: {
            let i$2 = 0;
            const len$4 = (value.length | 0);
            while ((i$2 < len$4)) {
              const index = i$2;
              const arg1 = (65535 & (value.charCodeAt(index) | 0));
              const this$191 = $m_jl_Character$();
              if ((!this$191.isDigit__I__Z(arg1))) {
                $$x41 = false;
                break _return$2
              };
              i$2 = ((1 + i$2) | 0)
            };
            $$x41 = true
          };
          if ($$x41) {
            tokens.insertToken__Ltigerpython_parser_lexer_Token__I__V(new $c_Ltigerpython_parser_lexer_Token(((stmt.pos__I() + idx) | 0), (value.length | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT), 0)
          } else {
            tokens.insertToken__Ltigerpython_parser_lexer_Token__I__V($m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(((stmt.pos__I() + idx) | 0), value), 0)
          };
          tokens.back__V();
          const x1$4 = $m_sc_StringOps$().take$extension__T__I__T(name$5, idx);
          if ((x1$4 === "return")) {
            tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RETURN)
          } else if ((x1$4 === "print")) {
            tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT)
          } else if ((x1$4 === "import")) {
            tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT)
          } else if ((x1$4 === "yield")) {
            tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD)
          };
          stmt = this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
        } else if ((this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode && (!this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_evalMode))) {
          if (this.Ltigerpython_parser_parsing_Parser__f_extParserUtils.isCallableName__I__T__Z(stmt.pos__I(), name$5)) {
            const this$196 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$18 = stmt.pos__I();
            const code$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES;
            const array$37 = [name$5];
            const params$17 = new $c_sjsr_WrappedVarArgs(array$37);
            this$196.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$18, (-1), code$17, params$17)
          } else {
            const this$197 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$19 = stmt.pos__I();
            const code$18 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
            const params$18 = $m_sci_Nil$();
            this$197.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$19, (-1), code$18, params$18)
          }
        }
      } else if ((this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode && (!this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_evalMode))) {
        let rc5 = false;
        let x2$3 = null;
        const x1$5 = stmt;
        matchEnd6: {
          if ((x1$5 instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
            rc5 = true;
            x2$3 = x1$5;
            const pos$4$1 = x2$3.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos;
            const expr = x2$3.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
            if ((!$p_Ltigerpython_parser_parsing_Parser__hasSideEffect__Ltigerpython_parser_ast_AstNode$Expression__Z(this, expr))) {
              if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
                const x2$4 = expr;
                if ((x2$4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                  if ((!this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_errorHandler.hasErrorInRange__I__I__Z(x2$4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos, x2$4.endPos__I()))) {
                    const this$201 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const code$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN;
                    const array$38 = [x2$4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op];
                    const params$19 = new $c_sjsr_WrappedVarArgs(array$38);
                    this$201.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4$1, (-1), code$19, params$19);
                    break matchEnd6
                  } else {
                    break matchEnd6
                  }
                }
              };
              if ($is_Ltigerpython_parser_ast_AstNode$Span(expr)) {
                if ((!this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_errorHandler.hasErrorInRange__I__I__Z(expr.pos__I(), expr.endPos__I()))) {
                  const this$202 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const code$20 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
                  const params$20 = $m_sci_Nil$();
                  this$202.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4$1, (-1), code$20, params$20);
                  break matchEnd6
                } else {
                  break matchEnd6
                }
              };
              const this$203 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const code$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
              const params$21 = $m_sci_Nil$();
              this$203.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4$1, (-1), code$21, params$21);
              break matchEnd6
            }
          };
          if (rc5) {
            const pos$5$1 = x2$3.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos;
            const expr$2 = x2$3.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
            if ((expr$2 instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
              const x2$5 = expr$2;
              if ((!this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_errorHandler.hasErrorInRange__I__I__Z(x2$5.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos, x2$5.endPos__I()))) {
                const this$204 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                const code$22 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION;
                const params$22 = $m_sci_Nil$();
                this$204.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5$1, (-1), code$22, params$22);
                break matchEnd6
              } else {
                break matchEnd6
              }
            } else {
              break matchEnd6
            }
          }
        }
      };
      const elem$1 = stmt;
      stmts.addOne__O__scm_ArrayBuffer(elem$1)
    };
    const b = new $c_scm_ArrayBuffer$$anon$1();
    const this$206 = new $c_scm_ArrayBufferView(stmts.scm_ArrayBuffer__f_array, stmts.scm_ArrayBuffer__f_size0);
    const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$206);
    while (it.hasNext__Z()) {
      const elem$2 = it.next__O();
      const x$10$2 = elem$2;
      if (((x$10$2 !== null) !== false)) {
        b.addOne__O__scm_GrowableBuilder(elem$2)
      }
    };
    return b.scm_GrowableBuilder__f_elems.toArray__s_reflect_ClassTag__O(new $c_s_reflect_ClassTag$GenericClassTag($d_Ltigerpython_parser_ast_AstNode$Statement.getClassOf()))
  };
  parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    if (tokens.hasNext__Z()) {
      const x1 = this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType(tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSERT;
      if ((x === x1)) {
        return this.parseAssert__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BREAK;
        if ((x$3 === x1)) {
          return new $c_Ltigerpython_parser_ast_AstNode$Break(tokens.nextSimpleKeyword__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos)
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CONTINUE;
          if ((x$5 === x1)) {
            return new $c_Ltigerpython_parser_ast_AstNode$Continue(tokens.nextSimpleKeyword__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos)
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEL;
            if ((x$7 === x1)) {
              const pos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
              const exprList = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExprList__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Expression(tokens);
              if ((exprList !== null)) {
                const f = ((this$2) => ((expr$2) => {
                  const expr = expr$2;
                  if ($is_Ltigerpython_parser_ast_AstNode$ContextExpression(expr)) {
                    expr.expr_context_$eq__s_Enumeration$Value__V($m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_DEL)
                  }
                }))(this);
                const len = exprList.u.length;
                let i = 0;
                if ((exprList !== null)) {
                  while ((i < len)) {
                    const arg1 = exprList.u[i];
                    f(arg1);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_I(exprList, 1)) {
                  const x3 = exprList;
                  while ((i < len)) {
                    const arg1$1 = x3.u[i];
                    f(arg1$1);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_D(exprList, 1)) {
                  const x4 = exprList;
                  while ((i < len)) {
                    const arg1$2 = x4.u[i];
                    f(arg1$2);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_J(exprList, 1)) {
                  const x5 = exprList;
                  while ((i < len)) {
                    const t = x5.u[i];
                    const lo = t.RTLong__f_lo;
                    const hi = t.RTLong__f_hi;
                    f(new $c_RTLong(lo, hi));
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_F(exprList, 1)) {
                  const x6 = exprList;
                  while ((i < len)) {
                    const arg1$3 = x6.u[i];
                    f(arg1$3);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_C(exprList, 1)) {
                  const x7 = exprList;
                  while ((i < len)) {
                    const arg1$4 = x7.u[i];
                    f($bC(arg1$4));
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_B(exprList, 1)) {
                  const x8 = exprList;
                  while ((i < len)) {
                    const arg1$5 = x8.u[i];
                    f(arg1$5);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_S(exprList, 1)) {
                  const x9 = exprList;
                  while ((i < len)) {
                    const arg1$6 = x9.u[i];
                    f(arg1$6);
                    i = ((1 + i) | 0)
                  }
                } else if ($isArrayOf_Z(exprList, 1)) {
                  const x10 = exprList;
                  while ((i < len)) {
                    const arg1$7 = x10.u[i];
                    f(arg1$7);
                    i = ((1 + i) | 0)
                  }
                } else {
                  throw new $c_s_MatchError(exprList)
                }
              };
              return new $c_Ltigerpython_parser_ast_AstNode$Delete(pos, exprList)
            } else {
              const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXEC;
              if ((x$9 === x1)) {
                return this.parseExec__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
              } else {
                const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM;
                let $$x1;
                if ((x$11 === x1)) {
                  $$x1 = true
                } else {
                  const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT;
                  $$x1 = (x$13 === x1)
                };
                if ($$x1) {
                  return this.parseImport__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                } else {
                  const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GLOBAL;
                  if ((x$15 === x1)) {
                    const pos$2 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
                    return new $c_Ltigerpython_parser_ast_AstNode$Global(pos$2, this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseNameList__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Name(tokens))
                  } else {
                    const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NONLOCAL;
                    if ((x$17 === x1)) {
                      const pos$3 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
                      return new $c_Ltigerpython_parser_ast_AstNode$NonLocal(pos$3, this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseNameList__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Name(tokens))
                    } else {
                      const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PASS;
                      if ((x$19 === x1)) {
                        return new $c_Ltigerpython_parser_ast_AstNode$Pass(tokens.nextSimpleKeyword__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos)
                      } else {
                        const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT;
                        if ((x$21 === x1)) {
                          return (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_printStatement ? this.parsePrint__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) : (tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME), this.parseExprStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)))
                        } else {
                          const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RAISE;
                          if ((x$23 === x1)) {
                            return this.parseRaise__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                          } else {
                            const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RETURN;
                            if ((x$25 === x1)) {
                              return this.parseReturn__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
                            } else {
                              const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD;
                              if ((x$27 === x1)) {
                                const expr$3 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseYieldExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
                                return new $c_Ltigerpython_parser_ast_AstNode$ExprStatement(expr$3.pos__I(), expr$3)
                              } else {
                                return (this.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens) ? this.parseExprStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) : (this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$()), tokens.skipToken__V(), this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)))
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      return null
    }
  };
  parseBody__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(line, head, fieldName) {
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    while (true) {
      let $$x1;
      if (tokens.hasNext__Z()) {
        const x = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
        $$x1 = (!(x === x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        tokens.next__Ltigerpython_parser_lexer_Token()
      } else {
        break
      }
    };
    tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON);
    return this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, head, fieldName)
  };
  parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, head, fieldName) {
    if (tokens.hasNext__Z()) {
      let $$x1;
      if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_suite !== null)) {
        const xs = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
        $$x1 = (xs.u.length !== 0)
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const this$6 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
        const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
        const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
        if ($f_sc_SeqOps__contains__O__Z(tokenTypes, this$6)) {
          this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET, $m_sci_Nil$())
        } else {
          this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$())
        };
        this.Ltigerpython_parser_parsing_Parser__f_astStack.beginSuite__Ltigerpython_parser_ast_AstNode$Statement__T__V(head, fieldName);
        const $$x2 = $m_sc_ArrayOps$();
        const xs$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
        const result = this.parseSuite__sc_BufferedIterator__Ltigerpython_parser_ast_AstNode$Suite($$x2.iterator$extension__O__sc_Iterator(xs$1).buffered__sc_BufferedIterator());
        this.Ltigerpython_parser_parsing_Parser__f_astStack.endSuite__Ltigerpython_parser_ast_AstNode$Statement();
        return result
      } else {
        this.Ltigerpython_parser_parsing_Parser__f_astStack.beginSuite__Ltigerpython_parser_ast_AstNode$Statement__T__V(head, fieldName);
        const $$x3 = $m_Ltigerpython_parser_parsing_PreParser$();
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        while (tokens.hasNext__Z()) {
          const elem = tokens.next__Ltigerpython_parser_lexer_Token();
          const unboxedElem = ((elem === null) ? null : elem);
          jsElems.push(unboxedElem)
        };
        const result$1 = this.parseStatement__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement($$x3.LineFromTokenArray__ALtigerpython_parser_lexer_Token__jl_CharSequence__Ltigerpython_parser_errors_ErrorHandler__Ltigerpython_parser_parsing_PreParser$Line($makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems), this.Ltigerpython_parser_parsing_Parser__f_source, this.Ltigerpython_parser_parsing_Parser__f_parserState));
        this.Ltigerpython_parser_parsing_Parser__f_astStack.endSuite__Ltigerpython_parser_ast_AstNode$Statement();
        return result$1
      }
    } else if ((line.Ltigerpython_parser_parsing_PreParser$Line__f_suite === null)) {
      const this$11 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const pos = line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos;
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY;
      const params = $m_sci_Nil$();
      this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      return null
    } else {
      this.Ltigerpython_parser_parsing_Parser__f_astStack.beginSuite__Ltigerpython_parser_ast_AstNode$Statement__T__V(head, fieldName);
      const $$x4 = $m_sc_ArrayOps$();
      const xs$2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
      const result$2 = this.parseSuite__sc_BufferedIterator__Ltigerpython_parser_ast_AstNode$Suite($$x4.iterator$extension__O__sc_Iterator(xs$2).buffered__sc_BufferedIterator());
      this.Ltigerpython_parser_parsing_Parser__f_astStack.endSuite__Ltigerpython_parser_ast_AstNode$Statement();
      return result$2
    }
  };
  parseAnnotation__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines) {
    const x1 = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION;
    if ((x === x1)) {
      const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION];
      tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
      const decorator = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseDecorator__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      if ((!followLines.isEmpty__Z())) {
        const result = this.parseAnnotation__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(followLines.head__O(), followLines.tail__O());
        if ($is_Ltigerpython_parser_ast_AstNode$Decoratable(result)) {
          if ((($p_Ltigerpython_parser_parsing_Parser__getDecoratorName__Ltigerpython_parser_ast_AstNode$Expression__T(this, decorator) === result.getName__T()) && this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
            const this$7 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos = decorator.pos__I();
            const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH;
            const array$1 = [result.getName__T()];
            const params = new $c_sjsr_WrappedVarArgs(array$1);
            this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
          };
          const this$8 = result;
          $f_Ltigerpython_parser_ast_AstNode$Decoratable__addDecorator__Ltigerpython_parser_ast_AstNode$Expression__V(this$8, decorator)
        };
        return result
      } else {
        return null
      }
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
      if ((x$3 === x1)) {
        return this.parseClassDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
        if ((x$5 === x1)) {
          return this.parseFunctionDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line)
        } else {
          return null
        }
      }
    }
  };
  parseClassDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS);
    const name = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseDefName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens);
    const xs = $m_sci_Nil$();
    const len = xs.length__I();
    const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    let bases = array;
    const xs$1 = $m_sci_Nil$();
    const len$1 = xs$1.length__I();
    const array$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Keyword.getArrayOf(), [len$1]);
    const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$1 = 0;
    while (iterator$1.hasNext__Z()) {
      array$1.u[i$1] = iterator$1.next__O();
      i$1 = ((1 + i$1) | 0)
    };
    let keywords = array$1;
    const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
      const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3))) {
        const xs$2 = $m_sci_Nil$();
        $m_s_reflect_ManifestFactory$NothingManifest$();
        const len$2 = xs$2.length__I();
        const array$4 = $newArrayObject($d_O.getArrayOf(), [len$2]);
        const iterator$2 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
        let i$2 = 0;
        while (iterator$2.hasNext__Z()) {
          array$4.u[i$2] = iterator$2.next__O();
          i$2 = ((1 + i$2) | 0)
        }
      } else if ((this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
        let $$x1;
        if (tokens.hasName__T__Z("metaclass")) {
          const x = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
          const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
          $$x1 = (x === x$2)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE, $m_sci_Nil$());
          tokens.skipToken__V();
          tokens.skipToken__V()
        };
        bases = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestList__Ltigerpython_parser_lexer_TokenBuffer__Z__ALtigerpython_parser_ast_AstNode$Expression(tokens, true)
      } else {
        const arg = this.Ltigerpython_parser_parsing_Parser__f_argumentParser.parseArgList__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Arguments(tokens);
        bases = arg.Ltigerpython_parser_ast_AstNode$Arguments__f_values;
        keywords = arg.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords;
        if (((arg.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs !== null) || (arg.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs !== null))) {
          const this$14 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos = arg.Ltigerpython_parser_ast_AstNode$Arguments__f_pos;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED;
          const params = $m_sci_Nil$();
          this$14.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
        }
      };
      tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS);
      const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
      let $$x2;
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$5))) {
        const x$3 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
        const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
        $$x2 = (x$3 === x$4)
      } else {
        $$x2 = false
      };
      if ($$x2) {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET, $m_sci_Nil$());
        tokens.skipToken__V()
      }
    };
    tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON);
    const result = new $c_Ltigerpython_parser_ast_AstNode$ClassDef(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, name, bases, keywords, null);
    this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body");
    result.updateDocString__V();
    return result
  };
  parseFunctionDef__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC];
    const isAsync = tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
    tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF);
    const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    let $$x1;
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
      const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
      $$x1 = tokens.hasPeekType__I__sci_Seq__Z(1, new $c_sjsr_WrappedVarArgs(array$2))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$());
      tokens.skipToken__V()
    };
    let name = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseDefName__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Name(tokens);
    if ((name !== null)) {
      if ((this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_protectFunctions && $m_Ltigerpython_parser_scopes_BuiltinNames$().Ltigerpython_parser_scopes_BuiltinNames$__f_builtins.contains__O__Z(name.Ltigerpython_parser_ast_AstNode$Name__f_name))) {
        const this$13 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos = name.Ltigerpython_parser_ast_AstNode$Name__f_pos;
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
        const array$3 = [name.Ltigerpython_parser_ast_AstNode$Name__f_name];
        const params = new $c_sjsr_WrappedVarArgs(array$3);
        this$13.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
      };
      const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
      let $$x3;
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$4))) {
        const x = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
        $$x3 = (x === x$2)
      } else {
        $$x3 = false
      };
      let $$x2;
      if ($$x3) {
        $$x2 = true
      } else {
        const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
        $$x2 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$5))
      };
      if ($$x2) {
        const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
        if (((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$6))) && (this.lexer__Ltigerpython_parser_lexer_Lexer().getNameCount__T__I(name.Ltigerpython_parser_ast_AstNode$Name__f_name) > 1))) {
          const array$7 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
          if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$7))) {
            this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS, $m_sci_Nil$());
            tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS)
          }
        } else {
          const x1 = this.Ltigerpython_parser_parsing_Parser__f_extParserUtils.trySplitName__T__s_Option(name.Ltigerpython_parser_ast_AstNode$Name__f_name);
          matchEnd5: {
            if ((x1 instanceof $c_s_Some)) {
              const x2 = x1;
              const p3 = x2.s_Some__f_value;
              if ((p3 !== null)) {
                const fName = p3._1__O();
                const pName = p3._2__O();
                const pos$1 = name.Ltigerpython_parser_ast_AstNode$Name__f_pos;
                const this$26 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                const pos$2 = ((pos$1 + (fName.length | 0)) | 0);
                const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS;
                const params$1 = $m_sci_Nil$();
                this$26.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$1, params$1);
                name = new $c_Ltigerpython_parser_ast_AstNode$Name(pos$1, fName);
                tokens.insertToken__Ltigerpython_parser_lexer_Token__I__V($m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(((pos$1 + (fName.length | 0)) | 0), pName), 0);
                tokens.insertToken__Ltigerpython_parser_lexer_Token__I__V(new $c_Ltigerpython_parser_lexer_Token(((pos$1 + (fName.length | 0)) | 0), 0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS), 0);
                break matchEnd5
              }
            }
          }
        }
      } else {
        const array$8 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
        let $$x4;
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$8))) {
          const this$33 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
          const array$9 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
          const tokenTypes = new $c_sjsr_WrappedVarArgs(array$9);
          $$x4 = $f_sc_SeqOps__contains__O__Z(tokenTypes, this$33)
        } else {
          $$x4 = false
        };
        if ($$x4) {
          const $$x6 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const $$x5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET;
          const array$10 = ["("];
          $$x6.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x5, new $c_sjsr_WrappedVarArgs(array$10));
          tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS)
        } else {
          const array$11 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
          if ((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$11)))) {
            const this$40 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$3 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
            const params$2 = $m_sci_Nil$();
            this$40.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$2, params$2);
            return null
          }
        }
      }
    } else {
      let $$x7;
      if ((tokens.peekTypeCategory__I__I(0) === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD)) {
        const x$3 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
        const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
        $$x7 = (x$3 === x$4)
      } else {
        $$x7 = false
      };
      if ($$x7) {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME, $m_sci_Nil$());
        const token = tokens.next__Ltigerpython_parser_lexer_Token();
        name = new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.getStringValue__T())
      } else {
        const array$12 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
        if ((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$12)))) {
          const this$44 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos$4 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
          const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
          const params$3 = $m_sci_Nil$();
          this$44.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$3, params$3);
          return null
        }
      }
    };
    const array$13 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
    let params$4;
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$13))) {
      const p = this.Ltigerpython_parser_parsing_Parser__f_argumentParser.parseParamList__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Parameters(tokens, true);
      tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS);
      params$4 = p
    } else if (tokens.hasNext__Z()) {
      params$4 = this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED, $m_sci_Nil$())
    } else {
      const $$x9 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const $$x8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED;
      const array$14 = ["end-of-line"];
      params$4 = $$x9.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x8, new $c_sjsr_WrappedVarArgs(array$14))
    };
    const array$15 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ARROW];
    let returns;
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$15))) {
      returns = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    } else {
      const array$16 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOUBLE_ARROW];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$16))) {
        const this$60 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos$5 = tokens.prevPos__I();
        const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
        const array$17 = ["=>", "->"];
        const params$5 = new $c_sjsr_WrappedVarArgs(array$17);
        this$60.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$4, params$5);
        returns = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      } else {
        returns = null
      }
    };
    const array$18 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET];
    let $$x10;
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$18))) {
      const x$5 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
      const x$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      $$x10 = (x$5 === x$6)
    } else {
      $$x10 = false
    };
    if ($$x10) {
      this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET, $m_sci_Nil$());
      tokens.skipToken__V()
    } else {
      const array$19 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
      let $$x12;
      if (((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$19)) && (tokens.remaining__I() > 1)) && (!line.hasSuite__Z()))) {
        const this$67 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser;
        const token$1 = tokens.peek__I__Ltigerpython_parser_lexer_Token(1);
        $$x12 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z(token$1, this$67.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
      } else {
        $$x12 = false
      };
      let $$x11;
      if ($$x12) {
        const x$7 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
        const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RETURN;
        $$x11 = (!(x$7 === x$8))
      } else {
        $$x11 = false
      };
      if ($$x11) {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN, $m_sci_Nil$());
        tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RETURN)
      } else {
        const array$20 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
        if (((!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$20))) && tokens.hasColonAtEnd__Z())) {
          this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$());
          tokens.skipAll__V()
        } else {
          tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON)
        }
      }
    };
    const result = new $c_Ltigerpython_parser_ast_AstNode$FunctionDef(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, name, params$4, null, returns, isAsync);
    this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body");
    result.updateDocString__V();
    return result
  };
  parseIf__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    tokens.next__Ltigerpython_parser_lexer_Token();
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    let test;
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const this$4 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const pos = tokens.pos__I();
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
      const params = $m_sci_Nil$();
      this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      test = new $c_Ltigerpython_parser_ast_AstNode$EmptyExpression(tokens.pos__I())
    } else {
      test = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    };
    let $$x1;
    if (tokens.hasNext__Z()) {
      const x = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      $$x1 = (!(x === x$2))
    } else {
      $$x1 = false
    };
    if ((($$x1 && line.hasSuite__Z()) && tokens.hasColonAtEnd__Z())) {
      const this$5 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser;
      if ($m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_ParserState__Z(tokens, this$5.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)) {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA, $m_sci_Nil$())
      } else {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$())
      };
      tokens.skipAll__V()
    } else {
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE];
      let $$x2;
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
        const x$3 = tokens.prev__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
        $$x2 = (x$3 === x$4)
      } else {
        $$x2 = false
      };
      if ($$x2) {
        const this$12 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos$1 = tokens.startPos__I();
        const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
        const array$2 = ["C/Java"];
        const params$1 = new $c_sjsr_WrappedVarArgs(array$2);
        this$12.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1);
        tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON)
      } else {
        let $$x4;
        if ((!tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON))) {
          const x$5 = tokens.prev__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          $$x4 = (x$5 === x$6)
        } else {
          $$x4 = false
        };
        let $$x3;
        if ($$x4) {
          const this$13 = tokens.prev__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
          $$x3 = (this$13.toLowerCase() === "then")
        } else {
          $$x3 = false
        };
        if ($$x3) {
          const this$17 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos$2 = tokens.startPos__I();
          const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
          const array$3 = ["Pascal"];
          const params$2 = new $c_sjsr_WrappedVarArgs(array$3);
          this$17.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2)
        }
      }
    };
    const elsePos = ((!followLines.isEmpty__Z()) ? followLines.head__O().Ltigerpython_parser_parsing_PreParser$Line__f_startPos : line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos);
    const result = new $c_Ltigerpython_parser_ast_AstNode$If(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, elsePos, test, null, null);
    this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body");
    if ((!followLines.isEmpty__Z())) {
      const x$7 = followLines.head__O().headTokenType__Ltigerpython_parser_lexer_TokenType();
      const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF;
      result.Ltigerpython_parser_ast_AstNode$If__f_elseBody = ((x$7 === x$8) ? this.parseIf__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(followLines.head__O(), followLines.tail__O()) : this.parseElse__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement(followLines, result))
    };
    return result
  };
  parseWhile__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    tokens.next__Ltigerpython_parser_lexer_Token();
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    let test;
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const this$4 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const pos = tokens.pos__I();
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
      const params = $m_sci_Nil$();
      this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      test = new $c_Ltigerpython_parser_ast_AstNode$EmptyExpression(tokens.pos__I())
    } else {
      test = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseCmpTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    };
    let $$x1;
    if (tokens.hasNext__Z()) {
      const x = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      $$x1 = (!(x === x$2))
    } else {
      $$x1 = false
    };
    if ((($$x1 && line.hasSuite__Z()) && tokens.hasColonAtEnd__Z())) {
      const this$5 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser;
      if ($m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_ParserState__Z(tokens, this$5.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)) {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA, $m_sci_Nil$())
      } else {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$())
      };
      tokens.skipAll__V()
    } else {
      tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON)
    };
    if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
      if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
        if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_repeatStatement) {
          const this$6 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos$1 = tokens.startPos__I();
          const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE;
          const params$1 = $m_sci_Nil$();
          this$6.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
        } else {
          const this$7 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos$2 = tokens.startPos__I();
          const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
          const params$2 = $m_sci_Nil$();
          this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2)
        }
      }
    };
    const result = new $c_Ltigerpython_parser_ast_AstNode$While(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, test, null, null);
    this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body");
    this.parseElse__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement(followLines, result);
    return result
  };
  parseFor__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC];
    const is_async = tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
    tokens.next__Ltigerpython_parser_lexer_Token();
    const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN];
    let target;
    if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
      const this$7 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const pos = tokens.pos__I();
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
      const params = $m_sci_Nil$();
      this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      target = new $c_Ltigerpython_parser_ast_AstNode$Name(tokens.pos__I(), "")
    } else {
      const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
      if ((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2)) && tokens.hasTokenOfType__I__Ltigerpython_parser_lexer_TokenType__Z(1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON))) {
        const x1 = tokens.findNextClosingBracket__I__s_Option(1);
        if ((x1 instanceof $c_s_Some)) {
          const x2 = x1;
          const index = (x2.s_Some__f_value | 0);
          const x = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(((1 + index) | 0));
          const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE];
          const elements = new $c_sjsr_WrappedVarArgs(array$3);
          if ($f_sc_SeqOps__contains__O__Z(elements, x)) {
            const this$18 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
            const array$4 = ["C/Java"];
            const params$1 = new $c_sjsr_WrappedVarArgs(array$4);
            this$18.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1);
            return null
          }
        };
        target = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExprListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      } else if ((tokens.peekTypeCategory__I__I(0) === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD)) {
        const x$1 = tokens.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
        if ((!(x$1 === x$2))) {
          if (tokens.hasTokenOfType__I__Ltigerpython_parser_lexer_TokenType__Z(0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN)) {
            this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME, $m_sci_Nil$());
            return null
          };
          this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD, $m_sci_Nil$());
          return null
        };
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME, $m_sci_Nil$());
        const token = tokens.next__Ltigerpython_parser_lexer_Token();
        target = new $c_Ltigerpython_parser_ast_AstNode$Name(token.Ltigerpython_parser_lexer_Token__f_pos, token.getStringValue__T())
      } else {
        const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$5))) {
          target = null
        } else {
          target = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExprListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
        }
      }
    };
    if ((target === null)) {
      const this$22 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const pos$2 = tokens.pos__I();
      const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
      const params$2 = $m_sci_Nil$();
      this$22.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2)
    } else if ((!((target instanceof $c_Ltigerpython_parser_ast_AstNode$Name) || ((target instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple) || ((target instanceof $c_Ltigerpython_parser_ast_AstNode$List) || ((target instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute) || (target instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript))))))) {
      if (((target instanceof $c_Ltigerpython_parser_ast_AstNode$Value) || (target instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue))) {
        const this$23 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos$3 = target.pos__I();
        const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
        const params$3 = $m_sci_Nil$();
        this$23.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$3, params$3)
      } else {
        const this$24 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos$4 = target.pos__I();
        const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
        const params$4 = $m_sci_Nil$();
        this$24.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$4, params$4)
      }
    };
    const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN];
    let iter;
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$6))) {
      iter = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)
    } else {
      const array$7 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
      if ((tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$7)) && tokens.hasTokenWithName__I__T__Z(0, "to"))) {
        const this$34 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos$5 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
        const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
        const array$8 = ["Pascal"];
        const params$5 = new $c_sjsr_WrappedVarArgs(array$8);
        this$34.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$5, params$5);
        return null
      };
      const $$x2 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const $$x1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
      const array$9 = ["in"];
      $$x2.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x1, new $c_sjsr_WrappedVarArgs(array$9));
      if ((!this.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens))) {
        return null
      };
      iter = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)
    };
    if (((!tokens.hasNext__Z()) && ((target === null) || (iter === null)))) {
      return null
    };
    tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON);
    const result = new $c_Ltigerpython_parser_ast_AstNode$For(line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, target, iter, null, null, is_async);
    this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body");
    this.parseElse__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement(followLines, result);
    return result
  };
  parseRepeat__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    const startPos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      let $$x1;
      if ((tokens.remaining__I() === 1)) {
        const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
        $$x1 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))
      } else {
        $$x1 = false
      };
      if (($$x1 && line.hasSuite__Z())) {
        const this$10 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos = tokens.pos__I();
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
        const array$2 = [":", tokens.head__Ltigerpython_parser_lexer_Token()];
        const params = new $c_sjsr_WrappedVarArgs(array$2);
        this$10.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
        const count = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
        tokens.insertToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON);
        const $$x5 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
        const $$x4 = line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos;
        const $$x3 = $m_Ltigerpython_parser_ast_AstNode$Call$();
        const $$x2 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
        const array$3 = [count];
        const result = new $c_Ltigerpython_parser_ast_AstNode$For($$x5, $$x4, null, $$x3.inserted__I__T__sci_Seq__Ltigerpython_parser_ast_AstNode$Call($$x2, "range", new $c_sjsr_WrappedVarArgs(array$3)), null, null, false);
        this.parseBody__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(line, result, "body");
        return result
      };
      const result$2 = new $c_Ltigerpython_parser_ast_AstNode$While(startPos, line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, new $c_Ltigerpython_parser_ast_AstNode$BooleanValue((-1), true), null, null);
      const body = this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result$2, "body");
      if ((this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectInfiniteLoops && (!$p_Ltigerpython_parser_parsing_Parser__hasBreak__Ltigerpython_parser_ast_AstNode__Z__Z(this, body, false)))) {
        const this$14 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
        const pos$1 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
        const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
        const params$1 = $m_sci_Nil$();
        this$14.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
      };
      return result$2
    } else {
      const count$2 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON);
      const $$x9 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
      const $$x8 = line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos;
      const $$x7 = $m_Ltigerpython_parser_ast_AstNode$Call$();
      const $$x6 = line.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
      const array$4 = [count$2];
      const result$3 = new $c_Ltigerpython_parser_ast_AstNode$For($$x9, $$x8, null, $$x7.inserted__I__T__sci_Seq__Ltigerpython_parser_ast_AstNode$Call($$x6, "range", new $c_sjsr_WrappedVarArgs(array$4)), null, null, false);
      this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result$3, "body");
      return result$3
    }
  };
  parseTry__Ltigerpython_parser_parsing_PreParser$Line__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement(line, followLines) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    const startPos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
    const deadCode = this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode;
    this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode = false;
    const xs = $m_sci_Nil$();
    const len = xs.length__I();
    const array$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$ExceptHandler.getArrayOf(), [len]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array$1.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    const result = new $c_Ltigerpython_parser_ast_AstNode$Try(startPos, null, array$1, null, null);
    this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body");
    this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode = deadCode;
    const this$6 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const handlers = this$6.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    followLines.foreach__F1__V(new $c_sjsr_AnonFunction1(((this$7, result$1, handlers$1) => ((fLine$2) => {
      const fLine = fLine$2;
      const x1 = fLine.headTokenType__Ltigerpython_parser_lexer_TokenType();
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
      if ((x === x1)) {
        return this$7.parseBody__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(fLine, result$1, "else")
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXCEPT;
        if ((x$3 === x1)) {
          const elem = this$7.parseExcept__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$ExceptHandler(fLine);
          return handlers$1.addOne__O__scm_ArrayBuffer(elem)
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FINALLY;
          if ((x$5 === x1)) {
            return this$7.parseBody__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(fLine, result$1, "final")
          } else {
            return (void 0)
          }
        }
      }
    }))(this, result, handlers)));
    let $$x1;
    if ((handlers.scm_ArrayBuffer__f_size0 >= 0)) {
      const len$1 = handlers.scm_ArrayBuffer__f_size0;
      const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$ExceptHandler.getArrayOf(), [len$1]);
      handlers.copyToArray__O__I__I__I(destination, 0, handlers.scm_ArrayBuffer__f_size0);
      $$x1 = destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const this$11 = new $c_scm_ArrayBufferView(handlers.scm_ArrayBuffer__f_array, handlers.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$11);
      while (it.hasNext__Z()) {
        const elem$1 = it.next__O();
        const unboxedElem = ((elem$1 === null) ? null : elem$1);
        jsElems.push(unboxedElem)
      };
      $$x1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$ExceptHandler.getArrayOf(), jsElems)
    };
    result.Ltigerpython_parser_ast_AstNode$Try__f_handlers = $$x1;
    return result
  };
  parseExcept__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$ExceptHandler(line) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXCEPT);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    const startPos = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EXCEPT];
    tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
    const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
      const result = new $c_Ltigerpython_parser_ast_AstNode$ExceptHandler(startPos, null, null, null);
      this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body");
      return result
    } else {
      const test = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AS];
      let name;
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
        name = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      } else {
        name = null
      };
      const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
      tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3));
      const result$2 = new $c_Ltigerpython_parser_ast_AstNode$ExceptHandler(startPos, test, name, null);
      this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result$2, "body");
      return result$2
    }
  };
  parseWith__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement(line) {
    this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WITH);
    const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC];
    const isAsync = tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
    return this._parseWith__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Z__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, isAsync)
  };
  _parseWith__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Z__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, isAsync) {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WITH, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const test = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AS];
      let asExpr;
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
        asExpr = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      } else {
        asExpr = null
      };
      const result = new $c_Ltigerpython_parser_ast_AstNode$With(test.pos__I(), line.Ltigerpython_parser_parsing_PreParser$Line__f_endPos, test, asExpr, null, isAsync);
      const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
        this.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, result, "body")
      } else {
        result.Ltigerpython_parser_ast_AstNode$With__f_body = this._parseWith__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Z__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, isAsync)
      };
      return result
    } else {
      return null
    }
  };
  parseElse__sci_Seq__Ltigerpython_parser_ast_AstNode$Statement__Ltigerpython_parser_ast_AstNode$Statement(lines, head) {
    const nonLocalReturnKey6 = $ct_O__(new $c_O());
    try {
      this.Ltigerpython_parser_parsing_Parser__f_parserState.setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE);
      lines.foreach__F1__V(new $c_sjsr_AnonFunction1(((this$1, nonLocalReturnKey6$1, head$1) => ((line$2) => {
        const line = line$2;
        const x = line.headTokenType__Ltigerpython_parser_lexer_TokenType();
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELSE;
        if ((x === x$2)) {
          const tokens = line.tokenSource__Ltigerpython_parser_lexer_TokenBuffer();
          tokens.next__Ltigerpython_parser_lexer_Token();
          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON];
          if ((!tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array)))) {
            const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF];
            if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
              this$1.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF, $m_sci_Nil$());
              tokens.back__V();
              tokens.skipToken__V();
              tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELIF)
            } else if ((tokens.hasNext__Z() && (line.hasSuite__Z() && this$1.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)))) {
              this$1.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON, $m_sci_Nil$());
              tokens.skipAll__V()
            } else {
              this$1.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED, $m_sci_Nil$())
            }
          };
          throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey6$1, this$1.parseBody__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_PreParser$Line__Ltigerpython_parser_ast_AstNode$Statement__T__Ltigerpython_parser_ast_AstNode$Statement(tokens, line, head$1, "else"))
        }
      }))(this, nonLocalReturnKey6, head)));
      return null
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey6)) {
          return ex.value__O()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  parseAssert__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    const startPos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const test = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
    let msg;
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      msg = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
    } else {
      msg = null
    };
    return new $c_Ltigerpython_parser_ast_AstNode$Assert(startPos, test, msg)
  };
  parseExec__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    const startPos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    const expr = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN];
    if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      const globals = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
      let locals;
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
        locals = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
      } else {
        locals = null
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Exec(startPos, expr, globals, locals)
    } else {
      return new $c_Ltigerpython_parser_ast_AstNode$Exec(startPos, expr, null, null)
    }
  };
  parseImport__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    const startPos = tokens.pos__I();
    const x = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT;
    if ((x === x$2)) {
      const names = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseAsNames__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Alias(tokens);
      if ((names.u.length === 0)) {
        tokens.skipAll__V();
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$())
      } else {
        let $$x1;
        if (tokens.hasNext__Z()) {
          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON];
          $$x1 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array)))
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM];
          if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
            const this$12 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
            const array$2 = ["import", "from"];
            const params = new $c_sjsr_WrappedVarArgs(array$2);
            this$12.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code, params)
          } else {
            this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$())
          }
        }
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Import(startPos, names)
    } else {
      const modulePos = tokens.pos__I();
      const this$13 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const moduleParts = this$13.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
      let $$x2;
      if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$3))) {
        const array$4 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS];
        $$x2 = tokens.hasPeekType__I__sci_Seq__Z(1, new $c_sjsr_WrappedVarArgs(array$4))
      } else {
        $$x2 = false
      };
      if ($$x2) {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$());
        tokens.skipToken__V()
      } else {
        const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT];
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$5))) {
          this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED, $m_sci_Nil$())
        }
      };
      while (true) {
        const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS];
        if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$6))) {
          const x$3 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
          const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          if ((x$3 === x$4)) {
            let $$x3;
            if ((!$f_sc_SeqOps__isEmpty__Z(moduleParts))) {
              const x$5 = $f_sc_IndexedSeqOps__last__O(moduleParts);
              $$x3 = (!((x$5 !== null) && $dp_equals__O__Z(x$5, ".")))
            } else {
              $$x3 = false
            };
            if (($$x3 && $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(tokens.head__Ltigerpython_parser_lexer_Token(), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT))) {
              const $$x5 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const $$x4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
              const array$7 = [tokens.head__Ltigerpython_parser_lexer_Token(), "import"];
              $$x5.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x4, new $c_sjsr_WrappedVarArgs(array$7));
              tokens.replaceToken__Ltigerpython_parser_lexer_TokenType__V($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT)
            } else {
              const elem = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value;
              moduleParts.addOne__O__scm_ArrayBuffer(elem)
            }
          } else {
            const x$7 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS;
            if ((x$7 === x$8)) {
              moduleParts.addOne__O__scm_ArrayBuffer("...");
              tokens.next__Ltigerpython_parser_lexer_Token()
            } else {
              const x$9 = tokens.headType__Ltigerpython_parser_lexer_TokenType();
              const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT;
              if ((!(x$9 === x$10))) {
                const $$x7 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                const $$x6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
                const array$8 = ["."];
                $$x7.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $$x6, new $c_sjsr_WrappedVarArgs(array$8))
              };
              moduleParts.addOne__O__scm_ArrayBuffer(".");
              tokens.next__Ltigerpython_parser_lexer_Token()
            }
          }
        } else {
          break
        }
      };
      let moduleName = $f_sc_IterableOnceOps__mkString__T__T__T__T(moduleParts, "", "", "");
      tokens.requireType__Ltigerpython_parser_lexer_TokenType__Z($m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT);
      const this$32 = moduleName;
      let $$x8;
      if ((((((this$32.length | 0) >= 0) && (this$32.substring(0, ("_".length | 0)) === "_")) && $f_T__endsWith__T__Z(moduleName, "_")) && (moduleName !== "__future__"))) {
        const array$9 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME];
        $$x8 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$9))
      } else {
        $$x8 = false
      };
      if (($$x8 && ($m_Ltigerpython_parser_lexer_TokenType$().getStringDistance__T__T__I("__future__", moduleName) <= 2))) {
        const x1 = tokens.head__Ltigerpython_parser_lexer_Token().getStringValue__T();
        if (((x1 === "nested_scopes") || ((x1 === "generators") || ((x1 === "with_statement") || ((x1 === "division") || ((x1 === "absolute_import") || ((x1 === "print_function") || ((x1 === "unicode_literals") || ((x1 === "generator_stop") || (x1 === "barry_as_FLUFL")))))))))) {
          const this$40 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
          const array$10 = [moduleName, "__future__"];
          const params$1 = new $c_sjsr_WrappedVarArgs(array$10);
          this$40.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code$1, params$1);
          moduleName = "__future__"
        }
      };
      if ((moduleName === "__future__")) {
        const names$2 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseAsNames__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Alias(tokens);
        const this$41 = $m_scm_ArrayBuffer$();
        const elems$1 = $m_sci_Nil$();
        const result = this$41.from__sc_IterableOnce__scm_ArrayBuffer(elems$1);
        const f = ((this$43, result$1) => ((n$2) => {
          const n = n$2;
          if ((n.Ltigerpython_parser_ast_AstNode$Alias__f_asName !== null)) {
            const this$44 = this$43.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos = n.Ltigerpython_parser_ast_AstNode$Alias__f_pos;
            const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE;
            const params$2 = $m_sci_Nil$();
            this$44.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$2, params$2)
          };
          const elem$1 = n.Ltigerpython_parser_ast_AstNode$Alias__f_name.Ltigerpython_parser_ast_AstNode$Name__f_name;
          return result$1.addOne__O__scm_ArrayBuffer(elem$1)
        }))(this, result);
        const len = names$2.u.length;
        let i = 0;
        if ((names$2 !== null)) {
          while ((i < len)) {
            const arg1 = names$2.u[i];
            f(arg1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_I(names$2, 1)) {
          const x3 = names$2;
          while ((i < len)) {
            const arg1$1 = x3.u[i];
            f(arg1$1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_D(names$2, 1)) {
          const x4 = names$2;
          while ((i < len)) {
            const arg1$2 = x4.u[i];
            f(arg1$2);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_J(names$2, 1)) {
          const x5 = names$2;
          while ((i < len)) {
            const t = x5.u[i];
            const lo = t.RTLong__f_lo;
            const hi = t.RTLong__f_hi;
            f(new $c_RTLong(lo, hi));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_F(names$2, 1)) {
          const x6 = names$2;
          while ((i < len)) {
            const arg1$3 = x6.u[i];
            f(arg1$3);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_C(names$2, 1)) {
          const x7 = names$2;
          while ((i < len)) {
            const arg1$4 = x7.u[i];
            f($bC(arg1$4));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_B(names$2, 1)) {
          const x8 = names$2;
          while ((i < len)) {
            const arg1$5 = x8.u[i];
            f(arg1$5);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_S(names$2, 1)) {
          const x9 = names$2;
          while ((i < len)) {
            const arg1$6 = x9.u[i];
            f(arg1$6);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_Z(names$2, 1)) {
          const x10 = names$2;
          while ((i < len)) {
            const arg1$7 = x10.u[i];
            f(arg1$7);
            i = ((1 + i) | 0)
          }
        } else {
          throw new $c_s_MatchError(names$2)
        };
        if ((!this.Ltigerpython_parser_parsing_Parser__f_allow_future_import)) {
          const this$46 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST;
          const params$3 = $m_sci_Nil$();
          this$46.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code$3, params$3)
        } else {
          const this$47 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
          const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$47);
          while (it.hasNext__Z()) {
            const arg1$8 = it.next__O();
            const future_feature = arg1$8;
            if ((!((future_feature === "nested_scopes") || ((future_feature === "generators") || (future_feature === "with_statement"))))) {
              if ((future_feature === "division")) {
                this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_newDivision = true
              } else if ((future_feature !== "absolute_import")) {
                if ((future_feature === "print_function")) {
                  this.Ltigerpython_parser_parsing_Parser__f_future_print_import = true;
                  this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_printStatement = false
                } else if ((future_feature !== "unicode_literals")) {
                  if ((future_feature !== "generator_stop")) {
                    /*<skip>*/
                  }
                }
              }
            }
          }
        };
        let $$x9;
        if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
          const len$1 = result.scm_ArrayBuffer__f_size0;
          const destination = $newArrayObject($d_T.getArrayOf(), [len$1]);
          result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
          $$x9 = destination
        } else {
          let capacity = 0;
          let size = 0;
          let jsElems = null;
          capacity = 0;
          size = 0;
          jsElems = [];
          const this$51 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
          const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$51);
          while (it$1.hasNext__Z()) {
            const elem$2 = it$1.next__O();
            const unboxedElem = ((elem$2 === null) ? null : elem$2);
            jsElems.push(unboxedElem)
          };
          $$x9 = $makeNativeArrayWrapper($d_T.getArrayOf(), jsElems)
        };
        return new $c_Ltigerpython_parser_ast_AstNode$ImportFuture(startPos, $$x9)
      } else {
        const module = new $c_Ltigerpython_parser_ast_AstNode$Name(modulePos, moduleName);
        if (tokens.hasNext__Z()) {
          const array$11 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR];
          if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$11))) {
            return new $c_Ltigerpython_parser_ast_AstNode$ImportStar(startPos, module)
          } else {
            return new $c_Ltigerpython_parser_ast_AstNode$ImportFrom(startPos, module, this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseAsNames__Ltigerpython_parser_lexer_TokenBuffer__ALtigerpython_parser_ast_AstNode$Alias(tokens))
          }
        } else {
          const this$55 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos$1 = tokens.endPos__I();
          const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT;
          const params$4 = $m_sci_Nil$();
          this$55.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$4, params$4);
          return new $c_Ltigerpython_parser_ast_AstNode$ImportStar(startPos, module)
        }
      }
    }
  };
  parsePrint__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    tokens.next__Ltigerpython_parser_lexer_Token();
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT];
    const hasDest = tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array));
    let $$x1;
    if ((!hasDest)) {
      const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS];
      $$x1 = tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))
    } else {
      $$x1 = false
    };
    if (($$x1 && tokens.hasTokenOfType__I__Ltigerpython_parser_lexer_TokenType__Z(1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN))) {
      const this$7 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
      const pos = tokens.prevPos__I();
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT;
      const params = $m_sci_Nil$();
      this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      tokens.back__V();
      tokens.replaceToken__Ltigerpython_parser_lexer_Token__V($m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos, "print"));
      return this.parseSmallStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens)
    };
    if (tokens.hasNext__Z()) {
      const tests = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestList__Ltigerpython_parser_lexer_TokenBuffer__Z__ALtigerpython_parser_ast_AstNode$Expression(tokens, true);
      const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
      let $$x2;
      if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
        $$x2 = true
      } else {
        const x = tokens.prev__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
        $$x2 = (x === x$2)
      };
      const newline = (!$$x2);
      return (hasDest ? ((tests.u.length === 0) ? (this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED, $m_sci_Nil$()), new $c_Ltigerpython_parser_ast_AstNode$Print(tokens.startPos__I(), null, tests, newline)) : new $c_Ltigerpython_parser_ast_AstNode$Print(tokens.startPos__I(), $m_sc_ArrayOps$().head$extension__O__O(tests), $m_sc_ArrayOps$().tail$extension__O__O(tests), newline)) : new $c_Ltigerpython_parser_ast_AstNode$Print(tokens.startPos__I(), null, tests, newline))
    } else {
      if (hasDest) {
        this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED, $m_sci_Nil$())
      };
      const $$x3 = tokens.startPos__I();
      const xs = $m_sci_Nil$();
      const len = xs.length__I();
      const array$3 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i = 0;
      while (iterator.hasNext__Z()) {
        array$3.u[i] = iterator.next__O();
        i = ((1 + i) | 0)
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Print($$x3, null, array$3, true)
    }
  };
  parseRaise__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    if ((this.Ltigerpython_parser_parsing_Parser__f_pythonVersion < 3)) {
      let exType = null;
      let inst = null;
      let tBack = null;
      const startPos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      if (this.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
        exType = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
        const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
        if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
          inst = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
          const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA];
          if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
            tBack = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
          }
        }
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Raise2(startPos, exType, inst, tBack)
    } else {
      let ex = null;
      let cause = null;
      const startPos$2 = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
      if (this.Ltigerpython_parser_parsing_Parser__f_expressionParser.firstOfTest__Ltigerpython_parser_lexer_TokenBuffer__Z(tokens)) {
        ex = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens);
        const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM];
        if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$2))) {
          cause = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTest__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
        }
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Raise3(startPos$2, ex, cause)
    }
  };
  parseReturn__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    const startPos = tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos;
    let $$x1;
    if (tokens.hasNext__Z()) {
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON];
      $$x1 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array)))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const value = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true);
      if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
        matchEnd10: {
          if ((value instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
            const x2 = value;
            const pos = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos;
            const p3 = x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
            const x = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_AND;
            if ((((x === null) ? (p3 === null) : x.equals__O__Z(p3)) && ((x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left instanceof $c_Ltigerpython_parser_ast_AstNode$Name) && (x2.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right instanceof $c_Ltigerpython_parser_ast_AstNode$Name)))) {
              const this$4 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND;
              const params = $m_sci_Nil$();
              this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
              break matchEnd10
            }
          }
        }
      };
      return new $c_Ltigerpython_parser_ast_AstNode$Return(startPos, value)
    } else {
      return new $c_Ltigerpython_parser_ast_AstNode$Return(startPos, null)
    }
  };
  parseExprStatement__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Statement(tokens) {
    const expr = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, false);
    if ((expr === null)) {
      return null
    };
    const startPos = expr.pos__I();
    if (tokens.hasNext__Z()) {
      const x1 = tokens.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
      if ((x === x1)) {
        const this$1 = $m_scm_ArrayBuffer$();
        const elems = $m_sci_Nil$();
        const targets = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
        let source = expr;
        while (true) {
          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN];
          if (tokens.matchType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
            const elem = source;
            targets.addOne__O__scm_ArrayBuffer(elem);
            if ((!tokens.hasNext__Z())) {
              const this$5 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const pos = tokens.pos__I();
              const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE;
              const params = $m_sci_Nil$();
              this$5.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
              source = new $c_Ltigerpython_parser_ast_AstNode$EmptyExpression(tokens.endPos__I())
            } else {
              const array$1 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD];
              if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$1))) {
                source = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseYieldExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
              } else {
                source = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)
              }
            }
          } else {
            break
          }
        };
        const this$9 = new $c_scm_ArrayBufferView(targets.scm_ArrayBuffer__f_array, targets.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$9);
        while (it.hasNext__Z()) {
          const arg1 = it.next__O();
          const target = arg1;
          if ($is_Ltigerpython_parser_ast_AstNode$ContextExpression(target)) {
            target.expr_context_$eq__s_Enumeration$Value__V($m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_STORE)
          } else if (((target instanceof $c_Ltigerpython_parser_ast_AstNode$Value) || ((target instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue) || (target instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)))) {
            const this$13 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$1 = target.pos__I();
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
            const array$2 = [target];
            const params$1 = new $c_sjsr_WrappedVarArgs(array$2);
            this$13.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
          }
        };
        if ((targets.scm_ArrayBuffer__f_size0 === 1)) {
          const this$14 = new $c_scm_ArrayBufferView(targets.scm_ArrayBuffer__f_array, targets.scm_ArrayBuffer__f_size0);
          const x1$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$14).next__O();
          matchEnd11: {
            if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
              const x2 = x1$2;
              if ((x2.length__I() === 1)) {
                if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
                  const $$x1 = $m_sc_ArrayOps$();
                  const xs = x2.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
                  targets.update__I__O__V(0, $$x1.head$extension__O__O(xs));
                  const this$19 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                  const pos$2 = x2.endPos__I();
                  const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                  const array$3 = [","];
                  const params$2 = new $c_sjsr_WrappedVarArgs(array$3);
                  this$19.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2);
                  break matchEnd11
                } else {
                  break matchEnd11
                }
              }
            };
            if (((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Name) || ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple) || ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Starred) || ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute) || ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript) || (x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$List))))))) {
              break matchEnd11
            };
            if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
              if ((source instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                const this$20 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
                const params$3 = $m_sci_Nil$();
                this$20.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code$3, params$3);
                break matchEnd11
              } else {
                const this$21 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL;
                const params$4 = $m_sci_Nil$();
                this$21.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code$4, params$4);
                break matchEnd11
              }
            };
            if ((source instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
              const this$22 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const code$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
              const params$5 = $m_sci_Nil$();
              this$22.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code$5, params$5)
            } else {
              const this$26 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
              const code$6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
              const array$4 = [x1$2];
              const params$6 = new $c_sjsr_WrappedVarArgs(array$4);
              this$26.reportError__I__I__s_Enumeration$Value__sci_Seq__N(startPos, (-1), code$6, params$6)
            }
          }
        };
        let $$x3;
        if (tokens.hasNext__Z()) {
          const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON];
          $$x3 = (!tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$5)))
        } else {
          $$x3 = false
        };
        let $$x2;
        if ($$x3) {
          const this$30 = this.Ltigerpython_parser_parsing_Parser__f_expressionParser;
          $$x2 = $m_Ltigerpython_parser_parsing_ExpressionParser$().firstOfExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_parsing_ParserState__Z(tokens, this$30.Ltigerpython_parser_parsing_ExpressionParser__f_parserState)
        } else {
          $$x2 = false
        };
        if ($$x2) {
          this.Ltigerpython_parser_parsing_Parser__f_parserState.reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA, $m_sci_Nil$());
          this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
        };
        let $$x4;
        if ((targets.scm_ArrayBuffer__f_size0 > 1)) {
          let res = false;
          const this$31 = new $c_scm_ArrayBufferView(targets.scm_ArrayBuffer__f_array, targets.scm_ArrayBuffer__f_size0);
          const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$31);
          while (((!res) && it$1.hasNext__Z())) {
            const arg1$1 = it$1.next__O();
            const x$14 = arg1$1;
            res = (x$14 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)
          };
          $$x4 = res
        } else {
          $$x4 = false
        };
        if ($$x4) {
          const this$32 = new $c_scm_ArrayBufferView(targets.scm_ArrayBuffer__f_array, targets.scm_ArrayBuffer__f_size0);
          const it$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$32);
          while (it$2.hasNext__Z()) {
            const arg1$2 = it$2.next__O();
            const target$3 = arg1$2;
            matchEnd4: {
              if ((target$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
                const x2$1 = target$3;
                if ((x2$1.length__I() > 1)) {
                  const xs$1 = x2$1.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
                  let idx;
                  _return$1: {
                    let i = 0;
                    while ((i < xs$1.u.length)) {
                      const arg1$3 = xs$1.u[i];
                      const x$15 = arg1$3;
                      if ((!x$15.isValidAssignTarget__Z())) {
                        idx = i;
                        break _return$1
                      };
                      i = ((1 + i) | 0)
                    };
                    idx = (-1)
                  };
                  let $$x5;
                  if ((idx === 0)) {
                    const $$x6 = $m_sc_ArrayOps$();
                    const xs$2 = x2$1.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
                    $$x5 = $$x6.last$extension__O__O(xs$2).isValidAssignTarget__Z()
                  } else {
                    $$x5 = false
                  };
                  if ($$x5) {
                    const this$36 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const pos$3 = x2$1.commaPos__I();
                    const code$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_SEMICOLON_INSTEAD_OF_COMMA;
                    const params$7 = $m_sci_Nil$();
                    this$36.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$7, params$7);
                    break matchEnd4
                  } else if ((idx >= 0)) {
                    const this$40 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
                    const pos$4 = x2$1.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u[idx].pos__I();
                    const code$8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                    const array$6 = [x2$1.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u[idx]];
                    const params$8 = new $c_sjsr_WrappedVarArgs(array$6);
                    this$40.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$8, params$8);
                    break matchEnd4
                  } else {
                    break matchEnd4
                  }
                }
              }
            }
          }
        };
        let $$x7;
        if ((targets.scm_ArrayBuffer__f_size0 >= 0)) {
          const len = targets.scm_ArrayBuffer__f_size0;
          const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
          targets.copyToArray__O__I__I__I(destination, 0, targets.scm_ArrayBuffer__f_size0);
          $$x7 = destination
        } else {
          let capacity = 0;
          let size = 0;
          let jsElems = null;
          capacity = 0;
          size = 0;
          jsElems = [];
          const this$44 = new $c_scm_ArrayBufferView(targets.scm_ArrayBuffer__f_array, targets.scm_ArrayBuffer__f_size0);
          const it$3 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$44);
          while (it$3.hasNext__Z()) {
            const elem$1 = it$3.next__O();
            const unboxedElem = ((elem$1 === null) ? null : elem$1);
            jsElems.push(unboxedElem)
          };
          $$x7 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
        };
        return new $c_Ltigerpython_parser_ast_AstNode$Assignment(startPos, $$x7, source)
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INC;
        let $$x8;
        if ((x$3 === x1)) {
          $$x8 = true
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEC;
          if ((x$5 === x1)) {
            $$x8 = true
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MUL_ASSIGN;
            if ((x$7 === x1)) {
              $$x8 = true
            } else {
              const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV_ASSIGN;
              if ((x$9 === x1)) {
                $$x8 = true
              } else {
                const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT_DIV_ASSIGN;
                if ((x$11 === x1)) {
                  $$x8 = true
                } else {
                  const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MOD_ASSIGN;
                  if ((x$13 === x1)) {
                    $$x8 = true
                  } else {
                    const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_AND_ASSIGN;
                    if ((x$16 === x1)) {
                      $$x8 = true
                    } else {
                      const x$18 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_OR_ASSIGN;
                      if ((x$18 === x1)) {
                        $$x8 = true
                      } else {
                        const x$20 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR_ASSIGN;
                        if ((x$20 === x1)) {
                          $$x8 = true
                        } else {
                          const x$22 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_POWER_ASSIGN;
                          if ((x$22 === x1)) {
                            $$x8 = true
                          } else {
                            const x$24 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT_ASSIGN;
                            if ((x$24 === x1)) {
                              $$x8 = true
                            } else {
                              const x$26 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT_ASSIGN;
                              if ((x$26 === x1)) {
                                $$x8 = true
                              } else {
                                const x$28 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MAT_MUL_ASSIGN;
                                $$x8 = (x$28 === x1)
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        if ($$x8) {
          if ((!((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Name) || ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute) || (expr instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript))))) {
            const this$45 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$5 = expr.pos__I();
            const code$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET;
            const params$9 = $m_sci_Nil$();
            this$45.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$9, params$9)
          };
          if ($is_Ltigerpython_parser_ast_AstNode$ContextExpression(expr)) {
            expr.expr_context_$eq__s_Enumeration$Value__V($m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_AUG_STORE)
          };
          const op = $m_Ltigerpython_parser_ast_AugAssignOp$().fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokens.next__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType);
          const array$7 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_YIELD];
          let value;
          if (tokens.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array$7))) {
            value = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseYieldExpr__Ltigerpython_parser_lexer_TokenBuffer__Ltigerpython_parser_ast_AstNode$Expression(tokens)
          } else {
            value = this.Ltigerpython_parser_parsing_Parser__f_expressionParser.parseTestListAsTuple__Ltigerpython_parser_lexer_TokenBuffer__Z__Ltigerpython_parser_ast_AstNode$Expression(tokens, true)
          };
          return new $c_Ltigerpython_parser_ast_AstNode$AugAssign(startPos, expr, op, value)
        } else {
          return new $c_Ltigerpython_parser_ast_AstNode$ExprStatement(startPos, expr)
        }
      }
    } else if (this.Ltigerpython_parser_parsing_Parser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode) {
      if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
        const x2$3 = expr;
        if ((x2$3.isSimpleEqual__Z() && x2$3.Ltigerpython_parser_ast_AstNode$Compare__f_left.isSingleName__Z())) {
          const this$49 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
          const pos$6 = x2$3.Ltigerpython_parser_ast_AstNode$Compare__f_pos;
          const code$10 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED;
          const params$10 = $m_sci_Nil$();
          this$49.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$6, (-1), code$10, params$10);
          return new $c_Ltigerpython_parser_ast_AstNode$Assignment(x2$3.Ltigerpython_parser_ast_AstNode$Compare__f_pos, $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [x2$3.Ltigerpython_parser_ast_AstNode$Compare__f_left]), x2$3.right__Ltigerpython_parser_ast_AstNode$Expression())
        }
      };
      if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
        const x3 = expr;
        if ((x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u.length >= 2)) {
          const $$x9 = $m_sc_ArrayOps$();
          const xs$3 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
          const x1$6 = $$x9.head$extension__O__O(xs$3);
          if ((x1$6 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
            const this$51 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$7 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_pos;
            const code$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
            const params$11 = $m_sci_Nil$();
            this$51.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$7, (-1), code$11, params$11)
          } else {
            const this$52 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$8 = x3.commaPos__I();
            const code$12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_SEMICOLON_INSTEAD_OF_COMMA;
            const params$12 = $m_sci_Nil$();
            this$52.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$8, (-1), code$12, params$12)
          };
          return new $c_Ltigerpython_parser_ast_AstNode$ExprStatement(startPos, expr)
        } else {
          const xs$4 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
          if ((xs$4.u.length !== 0)) {
            const this$58 = this.Ltigerpython_parser_parsing_Parser__f_parserState;
            const pos$9 = x3.endPos__I();
            const code$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
            const array$8 = [","];
            const params$13 = new $c_sjsr_WrappedVarArgs(array$8);
            this$58.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$9, (-1), code$13, params$13);
            const $$x10 = $m_sc_ArrayOps$();
            const xs$5 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
            return new $c_Ltigerpython_parser_ast_AstNode$ExprStatement(startPos, $$x10.head$extension__O__O(xs$5))
          } else {
            return new $c_Ltigerpython_parser_ast_AstNode$ExprStatement(startPos, expr)
          }
        }
      };
      return new $c_Ltigerpython_parser_ast_AstNode$ExprStatement(startPos, expr)
    } else {
      return new $c_Ltigerpython_parser_ast_AstNode$ExprStatement(startPos, expr)
    }
  };
}
const $d_Ltigerpython_parser_parsing_Parser = new $TypeData().initClass({
  Ltigerpython_parser_parsing_Parser: 0
}, false, "tigerpython.parser.parsing.Parser", {
  Ltigerpython_parser_parsing_Parser: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_Parser.prototype.$classData = $d_Ltigerpython_parser_parsing_Parser;
class $c_Ltigerpython_parser_parsing_Parser$ extends $c_O {
}
const $d_Ltigerpython_parser_parsing_Parser$ = new $TypeData().initClass({
  Ltigerpython_parser_parsing_Parser$: 0
}, false, "tigerpython.parser.parsing.Parser$", {
  Ltigerpython_parser_parsing_Parser$: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_Parser$.prototype.$classData = $d_Ltigerpython_parser_parsing_Parser$;
let $n_Ltigerpython_parser_parsing_Parser$ = (void 0);
function $m_Ltigerpython_parser_parsing_Parser$() {
  if ((!$n_Ltigerpython_parser_parsing_Parser$)) {
    $n_Ltigerpython_parser_parsing_Parser$ = new $c_Ltigerpython_parser_parsing_Parser$()
  };
  return $n_Ltigerpython_parser_parsing_Parser$
}
class $c_Ltigerpython_parser_parsing_PreParser$ extends $c_O {
  LineFromTokenArray__ALtigerpython_parser_lexer_Token__jl_CharSequence__Ltigerpython_parser_errors_ErrorHandler__Ltigerpython_parser_parsing_PreParser$Line(tokens, textSource, errorHandler) {
    return ((tokens.u.length !== 0) ? new $c_Ltigerpython_parser_parsing_PreParser$Line($m_sc_ArrayOps$().head$extension__O__O(tokens).Ltigerpython_parser_lexer_Token__f_pos, $m_sc_ArrayOps$().last$extension__O__O(tokens).Ltigerpython_parser_lexer_Token__f_endPos, (-1), tokens, null, textSource, errorHandler) : null)
  };
}
const $d_Ltigerpython_parser_parsing_PreParser$ = new $TypeData().initClass({
  Ltigerpython_parser_parsing_PreParser$: 0
}, false, "tigerpython.parser.parsing.PreParser$", {
  Ltigerpython_parser_parsing_PreParser$: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_PreParser$.prototype.$classData = $d_Ltigerpython_parser_parsing_PreParser$;
let $n_Ltigerpython_parser_parsing_PreParser$ = (void 0);
function $m_Ltigerpython_parser_parsing_PreParser$() {
  if ((!$n_Ltigerpython_parser_parsing_PreParser$)) {
    $n_Ltigerpython_parser_parsing_PreParser$ = new $c_Ltigerpython_parser_parsing_PreParser$()
  };
  return $n_Ltigerpython_parser_parsing_PreParser$
}
class $c_Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue extends $c_O {
  constructor(name) {
    super();
    this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_name = null;
    this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType = 0;
    this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_name = name;
    this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType = 0
  };
  setToFunction__V() {
    this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType = (2 | this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType)
  };
  setToGenerator__V() {
    this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType = (4 | this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType)
  };
  setToProcedure__V() {
    this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType = (1 | this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType)
  };
  isNonUniform__Z() {
    return (this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType === 3)
  };
  isGeneratorWithReturnValue__Z() {
    return (this.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_returnType === 6)
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue)))
}
const $d_Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue: 0
}, false, "tigerpython.parser.parsing.ReturnValueChecker$ReturnValue", {
  Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue.prototype.$classData = $d_Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue;
const $p_Ltigerpython_parser_scopes_AstWalker__getElementType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType = (function($thiz, expr) {
  if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$SequenceExpression)) {
    const x2 = expr;
    const xs = x2.elements__ALtigerpython_parser_ast_AstNode$Expression();
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = x2.elements__ALtigerpython_parser_ast_AstNode$Expression();
      const expr$1 = $$x1.head$extension__O__O(xs$1);
      const result = $thiz.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr$1);
      const xs$2 = x2.elements__ALtigerpython_parser_ast_AstNode$Expression();
      let $$x2;
      _return: {
        let i = 0;
        while ((i < xs$2.u.length)) {
          const arg1 = xs$2.u[i];
          const x = arg1;
          const x$2 = $thiz.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(x);
          if ((!((x$2 === null) ? (result === null) : x$2.equals__O__Z(result)))) {
            $$x2 = false;
            break _return
          };
          i = ((1 + i) | 0)
        };
        $$x2 = true
      };
      if ($$x2) {
        return result
      } else {
        return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
      }
    }
  };
  const tp = $thiz.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr);
  let $$x3;
  if ((tp !== null)) {
    const x$4 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
    $$x3 = (!((tp === null) ? (x$4 === null) : tp.equals__O__Z(x$4)))
  } else {
    $$x3 = false
  };
  if ($$x3) {
    return tp.getItemType__Ltigerpython_parser_types_DataType()
  } else {
    return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
  }
});
const $p_Ltigerpython_parser_scopes_AstWalker__getAttributeBase__Ltigerpython_parser_ast_AstNode$Expression__s_Option = (function($thiz, node) {
  if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
    const x2 = node;
    const base = x2.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
    const attr = x2.Ltigerpython_parser_ast_AstNode$Attribute__f_attr;
    const x1$2 = $p_Ltigerpython_parser_scopes_AstWalker__getAttributeBase__Ltigerpython_parser_ast_AstNode$Expression__s_Option($thiz, base);
    if ((x1$2 instanceof $c_s_Some)) {
      const x2$2 = x1$2;
      const b = x2$2.s_Some__f_value;
      return b.findField__T__s_Option(attr.Ltigerpython_parser_ast_AstNode$Name__f_name)
    } else {
      const x = $m_s_None$();
      if ((x === x1$2)) {
        return $m_s_None$()
      } else {
        throw new $c_s_MatchError(x1$2)
      }
    }
  } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
    const x5 = node;
    const name = x5.Ltigerpython_parser_ast_AstNode$Name__f_name;
    return $thiz.findName__T__s_Option(name)
  } else {
    return $m_s_None$()
  }
});
const $p_Ltigerpython_parser_scopes_AstWalker__getStringValue__Ltigerpython_parser_ast_AstNode$Expression__T = (function($thiz, node) {
  if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)) {
    const x2 = node;
    return x2.Ltigerpython_parser_ast_AstNode$StringValue__f_value
  };
  if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
    const x3 = node;
    if ((x3.getAttributeName__T() === "__doc__")) {
      const x1$2 = $p_Ltigerpython_parser_scopes_AstWalker__getAttributeBase__Ltigerpython_parser_ast_AstNode$Expression__s_Option($thiz, x3.Ltigerpython_parser_ast_AstNode$Attribute__f_base);
      if ((x1$2 instanceof $c_s_Some)) {
        const x2$2 = x1$2;
        const b = x2$2.s_Some__f_value;
        return b.docString__T()
      } else {
        return null
      }
    }
  };
  if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
    const x4 = node;
    const x1$3 = x4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
    const x = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_ADD;
    if (((x === null) ? (x1$3 === null) : x.equals__O__Z(x1$3))) {
      const s1 = $p_Ltigerpython_parser_scopes_AstWalker__getStringValue__Ltigerpython_parser_ast_AstNode$Expression__T($thiz, x4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left);
      const s2 = $p_Ltigerpython_parser_scopes_AstWalker__getStringValue__Ltigerpython_parser_ast_AstNode$Expression__T($thiz, x4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right);
      if (((s1 !== null) && (s2 !== null))) {
        return (("" + s1) + s2)
      }
    } else {
      const x$3 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_MUL;
      if (((x$3 === null) ? (x1$3 === null) : x$3.equals__O__Z(x1$3))) {
        const s1$2 = $p_Ltigerpython_parser_scopes_AstWalker__getStringValue__Ltigerpython_parser_ast_AstNode$Expression__T($thiz, x4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left);
        if ((s1$2 !== null)) {
          const x1$4 = x4.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
          if ((x1$4 instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
            const x2$3 = x1$4;
            const p4 = x2$3.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
            const x$5 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER;
            if (((x$5 === null) ? (p4 === null) : x$5.equals__O__Z(p4))) {
              const $$x1 = $m_sc_StringOps$();
              const x$1 = x2$3.Ltigerpython_parser_ast_AstNode$Value__f_value;
              const this$4 = $m_jl_Integer$();
              return $$x1.$times$extension__T__I__T(s1$2, this$4.parseInt__T__I__I(x$1, 10))
            }
          }
        }
      }
    };
    return null
  };
  return null
});
const $p_Ltigerpython_parser_scopes_AstWalker___walkFor__Ltigerpython_parser_ast_AstNode$For__sci_Map__V = (function($thiz, forStmt, params) {
  const forScope = new $c_Ltigerpython_parser_scopes_ForLoopScope(forStmt.Ltigerpython_parser_ast_AstNode$For__f_pos, forStmt.Ltigerpython_parser_ast_AstNode$For__f_endPos, params);
  $thiz.Ltigerpython_parser_scopes_AstWalker__f_scope.addScope__Ltigerpython_parser_scopes_Scope__Ltigerpython_parser_scopes_Scope(forScope);
  const walker = new $c_Ltigerpython_parser_scopes_AstWalker(forScope);
  walker.walkNode__Ltigerpython_parser_ast_AstNode__V(forStmt.Ltigerpython_parser_ast_AstNode$For__f_body);
  $thiz.walkNode__Ltigerpython_parser_ast_AstNode__V(forStmt.Ltigerpython_parser_ast_AstNode$For__f_elseBody)
});
const $p_Ltigerpython_parser_scopes_AstWalker___walkWith__Ltigerpython_parser_ast_AstNode$With__sci_Map__V = (function($thiz, withStmt, params) {
  const withScope = new $c_Ltigerpython_parser_scopes_ForLoopScope(withStmt.Ltigerpython_parser_ast_AstNode$With__f_pos, withStmt.Ltigerpython_parser_ast_AstNode$With__f_endPos, params);
  $thiz.Ltigerpython_parser_scopes_AstWalker__f_scope.addScope__Ltigerpython_parser_scopes_Scope__Ltigerpython_parser_scopes_Scope(withScope);
  const walker = new $c_Ltigerpython_parser_scopes_AstWalker(withScope);
  walker.walkNode__Ltigerpython_parser_ast_AstNode__V(withStmt.Ltigerpython_parser_ast_AstNode$With__f_body)
});
const $p_Ltigerpython_parser_scopes_AstWalker___walkIf__Ltigerpython_parser_ast_AstNode$If__sci_Map__V = (function($thiz, ifStmt, params) {
  const ifScope = new $c_Ltigerpython_parser_scopes_ForLoopScope(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_pos, ifStmt.Ltigerpython_parser_ast_AstNode$If__f_elsePos, params);
  $thiz.Ltigerpython_parser_scopes_AstWalker__f_scope.addScope__Ltigerpython_parser_scopes_Scope__Ltigerpython_parser_scopes_Scope(ifScope);
  const walker = new $c_Ltigerpython_parser_scopes_AstWalker(ifScope);
  walker.walkNode__Ltigerpython_parser_ast_AstNode__V(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_body)
});
const $p_Ltigerpython_parser_scopes_AstWalker__hasReturn__Ltigerpython_parser_ast_AstNode$Statement__Z = (function($thiz, stmt) {
  while (true) {
    const x1 = stmt;
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Return)) {
      return true
    } else if (((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Raise2) || (x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Raise3))) {
      return true
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x5 = x1;
      if ($p_Ltigerpython_parser_scopes_AstWalker__hasReturn__Ltigerpython_parser_ast_AstNode$Statement__Z($thiz, x5.Ltigerpython_parser_ast_AstNode$If__f_body)) {
        stmt = x5.Ltigerpython_parser_ast_AstNode$If__f_elseBody
      } else {
        return false
      }
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x6 = x1;
      if ((x6.Ltigerpython_parser_ast_AstNode$Try__f_finalBody !== null)) {
        stmt = x6.Ltigerpython_parser_ast_AstNode$Try__f_finalBody
      } else if ((x6.Ltigerpython_parser_ast_AstNode$Try__f_elseBody !== null)) {
        stmt = x6.Ltigerpython_parser_ast_AstNode$Try__f_elseBody
      } else {
        stmt = x6.Ltigerpython_parser_ast_AstNode$Try__f_body
      }
    } else if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x7 = x1;
      const xs = x7.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
      if ((xs.u.length !== 0)) {
        const $$x1 = $m_sc_ArrayOps$();
        const xs$1 = x7.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
        stmt = $$x1.last$extension__O__O(xs$1)
      } else {
        return false
      }
    } else {
      return false
    }
  }
});
class $c_Ltigerpython_parser_scopes_AstWalker extends $c_O {
  constructor(scope) {
    super();
    this.Ltigerpython_parser_scopes_AstWalker__f_scope = null;
    this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker = null;
    this.Ltigerpython_parser_scopes_AstWalker__f_scope = scope;
    this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker = new $c_Ltigerpython_parser_scopes_AstWalker$$anon$1(this)
  };
  defineName__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType__V(dest, dataType) {
    if ((dest instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x2 = dest;
      const target = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
      this.Ltigerpython_parser_scopes_AstWalker__f_scope.define__T__Ltigerpython_parser_types_DataType__V(target, dataType)
    } else if ((dest instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
      const x4 = dest;
      const base = x4.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
      const attr = x4.Ltigerpython_parser_ast_AstNode$Attribute__f_attr;
      const x1$2 = $p_Ltigerpython_parser_scopes_AstWalker__getAttributeBase__Ltigerpython_parser_ast_AstNode$Expression__s_Option(this, base);
      if ((x1$2 instanceof $c_s_Some)) {
        const x2$2 = x1$2;
        const b = x2$2.s_Some__f_value;
        b.setField__T__Ltigerpython_parser_types_DataType__V(attr.Ltigerpython_parser_ast_AstNode$Name__f_name, dataType)
      } else {
        const x = $m_s_None$();
        if ((!(x === x1$2))) {
          throw new $c_s_MatchError(x1$2)
        }
      }
    }
  };
  findName__T__s_Option(name) {
    if ((this.Ltigerpython_parser_scopes_AstWalker__f_scope !== null)) {
      return this.Ltigerpython_parser_scopes_AstWalker__f_scope.findLocal__T__s_Option(name)
    } else {
      const this$2 = $m_Ltigerpython_parser_scopes_BuiltinNames$();
      const this$4 = this$2.Ltigerpython_parser_scopes_BuiltinNames$__f_builtins;
      $m_s_$less$colon$less$();
      return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$4).get__O__s_Option(name)
    }
  };
  walkNode__Ltigerpython_parser_ast_AstNode__V(node) {
    if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment)) {
      const x2 = node;
      this.walkAssignment__Ltigerpython_parser_ast_AstNode$Assignment__V(x2)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef)) {
      const x3 = node;
      this.walkClass__Ltigerpython_parser_ast_AstNode$ClassDef__V(x3)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
      const x4 = node;
      const expr = x4.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
      this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$For)) {
      const x5 = node;
      this.walkFor__Ltigerpython_parser_ast_AstNode$For__V(x5)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
      const x6 = node;
      this.walkFunction__Ltigerpython_parser_ast_AstNode$FunctionDef__V(x6)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Global)) {
      const x7 = node;
      this.walkGlobal__Ltigerpython_parser_ast_AstNode$Global__V(x7)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x8 = node;
      this.walkIf__Ltigerpython_parser_ast_AstNode$If__V(x8)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Import)) {
      const x9 = node;
      this.walkImport__Ltigerpython_parser_ast_AstNode$Import__V(x9)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFrom)) {
      const x10 = node;
      this.walkImportFrom__Ltigerpython_parser_ast_AstNode$ImportFrom__V(x10)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$ImportStar)) {
      const x11 = node;
      this.walkImportAll__Ltigerpython_parser_ast_AstNode$ImportStar__V(x11)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Return)) {
      const x12 = node;
      const x1$2 = x12.Ltigerpython_parser_ast_AstNode$Return__f_value;
      let dt;
      matchEnd5: {
        if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
          const x2$2 = x1$2;
          if ((x2$2.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u.length <= 3)) {
            const itemTypes = $newArrayObject($d_Ltigerpython_parser_types_DataType.getArrayOf(), [x2$2.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u.length]);
            const this$2 = $m_sc_ArrayOps$().indices$extension__O__sci_Range(itemTypes);
            if ((!this$2.sci_Range__f_isEmpty)) {
              let i = this$2.sci_Range__f_start;
              while (true) {
                const v1 = i;
                const expr$1 = x2$2.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u[v1];
                itemTypes.u[v1] = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr$1);
                if ((i === this$2.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
                  break
                };
                i = ((i + this$2.sci_Range__f_step) | 0)
              }
            };
            let $$x1;
            _return$1: {
              let i$1 = 0;
              while ((i$1 < itemTypes.u.length)) {
                const arg1 = itemTypes.u[i$1];
                const x$1 = arg1;
                const x$2 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
                if ((!((x$1 === null) ? (x$2 === null) : x$1.equals__O__Z(x$2)))) {
                  $$x1 = false;
                  break _return$1
                };
                i$1 = ((1 + i$1) | 0)
              };
              $$x1 = true
            };
            if ((!$$x1)) {
              dt = $m_Ltigerpython_parser_types_TupleType$().apply__ALtigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(itemTypes);
              break matchEnd5
            } else {
              dt = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE;
              break matchEnd5
            }
          }
        };
        if ((x1$2 === null)) {
          dt = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE;
          break matchEnd5
        };
        dt = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(x1$2)
      };
      this.Ltigerpython_parser_scopes_AstWalker__f_scope.returnType_$eq__Ltigerpython_parser_types_DataType__V(dt)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x13 = node;
      this.walkSuite__Ltigerpython_parser_ast_AstNode$Suite__V(x13)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x14 = node;
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x14.Ltigerpython_parser_ast_AstNode$Try__f_body);
      const xs = x14.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
      const f = ((this$3$1) => ((handler$2) => {
        const handler = handler$2;
        this$3$1.walkNode__Ltigerpython_parser_ast_AstNode__V(handler.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body)
      }))(this);
      const len = xs.u.length;
      let i$2 = 0;
      if ((xs !== null)) {
        while ((i$2 < len)) {
          const arg1$1 = xs.u[i$2];
          f(arg1$1);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3$1 = xs;
        while ((i$2 < len)) {
          const arg1$2 = x3$1.u[i$2];
          f(arg1$2);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4$1 = xs;
        while ((i$2 < len)) {
          const arg1$3 = x4$1.u[i$2];
          f(arg1$3);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5$1 = xs;
        while ((i$2 < len)) {
          const t = x5$1.u[i$2];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6$1 = xs;
        while ((i$2 < len)) {
          const arg1$4 = x6$1.u[i$2];
          f(arg1$4);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7$1 = xs;
        while ((i$2 < len)) {
          const arg1$5 = x7$1.u[i$2];
          f($bC(arg1$5));
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8$1 = xs;
        while ((i$2 < len)) {
          const arg1$6 = x8$1.u[i$2];
          f(arg1$6);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9$1 = xs;
        while ((i$2 < len)) {
          const arg1$7 = x9$1.u[i$2];
          f(arg1$7);
          i$2 = ((1 + i$2) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10$1 = xs;
        while ((i$2 < len)) {
          const arg1$8 = x10$1.u[i$2];
          f(arg1$8);
          i$2 = ((1 + i$2) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      };
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x14.Ltigerpython_parser_ast_AstNode$Try__f_elseBody);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(x14.Ltigerpython_parser_ast_AstNode$Try__f_finalBody)
    } else if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$With)) {
      const x15 = node;
      if ((x15.Ltigerpython_parser_ast_AstNode$With__f_opt_vars !== null)) {
        this.walkWith__Ltigerpython_parser_ast_AstNode$With__V(x15)
      }
    } else if ($is_Ltigerpython_parser_ast_AstNode$Body(node)) {
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(node.body__Ltigerpython_parser_ast_AstNode$Statement());
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(node.elseBody__Ltigerpython_parser_ast_AstNode$Statement())
    }
  };
  walkAssignment__Ltigerpython_parser_ast_AstNode$Assignment__V(assignment) {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      if ((!(assignment.Ltigerpython_parser_ast_AstNode$Assignment__f_value instanceof $c_Ltigerpython_parser_ast_AstNode$EmptyExpression))) {
        const xs = assignment.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
        const f$2 = ((this$2, assignment$1, nonLocalReturnKey1$1) => ((target$2) => {
          const target = target$2;
          if ((target instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
            const expr = assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
            this$2.defineName__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType__V(target, this$2.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr))
          } else if ((target instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
            const x3 = target;
            const x1$2 = assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
            matchEnd5: {
              if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
                const x2 = x1$2;
                if ((x2.length__I() === x3.length__I())) {
                  const $$x1 = $m_sc_ArrayOps$();
                  const xs$1 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
                  const this$4 = $$x1.indices$extension__O__sci_Range(xs$1);
                  if ((!this$4.sci_Range__f_isEmpty)) {
                    let i = this$4.sci_Range__f_start;
                    while (true) {
                      const v1 = i;
                      const $$x2 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u[v1];
                      const expr$1 = x2.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u[v1];
                      this$2.defineName__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType__V($$x2, this$2.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr$1));
                      if ((i === this$4.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
                        break
                      };
                      i = ((i + this$4.sci_Range__f_step) | 0)
                    }
                  };
                  break matchEnd5
                }
              };
              if ((x1$2 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
                const x3$2 = x1$2;
                const x1$3 = this$2.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(x3$2);
                matchEnd4: {
                  if ((x1$3 instanceof $c_Ltigerpython_parser_types_TupleType)) {
                    const x2$2 = x1$3;
                    if ((x2$2.length__I() === x3.length__I())) {
                      const $$x3 = $m_sc_ArrayOps$();
                      const xs$2 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
                      const this$6 = $$x3.indices$extension__O__sci_Range(xs$2);
                      if ((!this$6.sci_Range__f_isEmpty)) {
                        let i$1 = this$6.sci_Range__f_start;
                        while (true) {
                          const v1$1 = i$1;
                          this$2.defineName__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType__V(x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u[v1$1], x2$2.Ltigerpython_parser_types_TupleType__f_itemTypes.u[v1$1]);
                          if ((i$1 === this$6.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
                            break
                          };
                          i$1 = ((i$1 + this$6.sci_Range__f_step) | 0)
                        }
                      };
                      break matchEnd4
                    }
                  };
                  const xs$3 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
                  const f = ((this$3$1) => ((t$2) => {
                    const t = t$2;
                    this$3$1.defineName__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType__V(t, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
                  }))(this$2);
                  const len = xs$3.u.length;
                  let i$2 = 0;
                  if ((xs$3 !== null)) {
                    while ((i$2 < len)) {
                      const arg1 = xs$3.u[i$2];
                      f(arg1);
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_I(xs$3, 1)) {
                    const x3$1 = xs$3;
                    while ((i$2 < len)) {
                      const arg1$1 = x3$1.u[i$2];
                      f(arg1$1);
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_D(xs$3, 1)) {
                    const x4 = xs$3;
                    while ((i$2 < len)) {
                      const arg1$2 = x4.u[i$2];
                      f(arg1$2);
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_J(xs$3, 1)) {
                    const x5 = xs$3;
                    while ((i$2 < len)) {
                      const t$1 = x5.u[i$2];
                      const lo = t$1.RTLong__f_lo;
                      const hi = t$1.RTLong__f_hi;
                      f(new $c_RTLong(lo, hi));
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_F(xs$3, 1)) {
                    const x6 = xs$3;
                    while ((i$2 < len)) {
                      const arg1$3 = x6.u[i$2];
                      f(arg1$3);
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_C(xs$3, 1)) {
                    const x7 = xs$3;
                    while ((i$2 < len)) {
                      const arg1$4 = x7.u[i$2];
                      f($bC(arg1$4));
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_B(xs$3, 1)) {
                    const x8 = xs$3;
                    while ((i$2 < len)) {
                      const arg1$5 = x8.u[i$2];
                      f(arg1$5);
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_S(xs$3, 1)) {
                    const x9 = xs$3;
                    while ((i$2 < len)) {
                      const arg1$6 = x9.u[i$2];
                      f(arg1$6);
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else if ($isArrayOf_Z(xs$3, 1)) {
                    const x10 = xs$3;
                    while ((i$2 < len)) {
                      const arg1$7 = x10.u[i$2];
                      f(arg1$7);
                      i$2 = ((1 + i$2) | 0)
                    }
                  } else {
                    throw new $c_s_MatchError(xs$3)
                  }
                };
                break matchEnd5
              };
              const xs$4 = x3.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
              const f$1 = ((this$4$1) => ((t$3$2) => {
                const t$3 = t$3$2;
                this$4$1.defineName__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType__V(t$3, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
              }))(this$2);
              const len$1 = xs$4.u.length;
              let i$3 = 0;
              if ((xs$4 !== null)) {
                while ((i$3 < len$1)) {
                  const arg1$8 = xs$4.u[i$3];
                  f$1(arg1$8);
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_I(xs$4, 1)) {
                const x3$3 = xs$4;
                while ((i$3 < len$1)) {
                  const arg1$9 = x3$3.u[i$3];
                  f$1(arg1$9);
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_D(xs$4, 1)) {
                const x4$1 = xs$4;
                while ((i$3 < len$1)) {
                  const arg1$10 = x4$1.u[i$3];
                  f$1(arg1$10);
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_J(xs$4, 1)) {
                const x5$1 = xs$4;
                while ((i$3 < len$1)) {
                  const t$4 = x5$1.u[i$3];
                  const lo$1 = t$4.RTLong__f_lo;
                  const hi$1 = t$4.RTLong__f_hi;
                  f$1(new $c_RTLong(lo$1, hi$1));
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_F(xs$4, 1)) {
                const x6$1 = xs$4;
                while ((i$3 < len$1)) {
                  const arg1$11 = x6$1.u[i$3];
                  f$1(arg1$11);
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_C(xs$4, 1)) {
                const x7$1 = xs$4;
                while ((i$3 < len$1)) {
                  const arg1$12 = x7$1.u[i$3];
                  f$1($bC(arg1$12));
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_B(xs$4, 1)) {
                const x8$1 = xs$4;
                while ((i$3 < len$1)) {
                  const arg1$13 = x8$1.u[i$3];
                  f$1(arg1$13);
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_S(xs$4, 1)) {
                const x9$1 = xs$4;
                while ((i$3 < len$1)) {
                  const arg1$14 = x9$1.u[i$3];
                  f$1(arg1$14);
                  i$3 = ((1 + i$3) | 0)
                }
              } else if ($isArrayOf_Z(xs$4, 1)) {
                const x10$1 = xs$4;
                while ((i$3 < len$1)) {
                  const arg1$15 = x10$1.u[i$3];
                  f$1(arg1$15);
                  i$3 = ((1 + i$3) | 0)
                }
              } else {
                throw new $c_s_MatchError(xs$4)
              }
            }
          } else if ((target instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
            const x4$2 = target;
            if ((x4$2.getAttributeName__T() === "__doc__")) {
              let rc9 = false;
              let x2$3 = null;
              const x1$4 = $p_Ltigerpython_parser_scopes_AstWalker__getAttributeBase__Ltigerpython_parser_ast_AstNode$Expression__s_Option(this$2, x4$2.Ltigerpython_parser_ast_AstNode$Attribute__f_base);
              if ((x1$4 instanceof $c_s_Some)) {
                rc9 = true;
                x2$3 = x1$4;
                const b = x2$3.s_Some__f_value;
                if ((b instanceof $c_Ltigerpython_parser_types_PythonFunction)) {
                  const x5$2 = b;
                  const s = $p_Ltigerpython_parser_scopes_AstWalker__getStringValue__Ltigerpython_parser_ast_AstNode$Expression__T(this$2, assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_value);
                  x5$2.Ltigerpython_parser_types_DataType__f__docString = s;
                  throw new $c_sr_NonLocalReturnControl$mcV$sp(nonLocalReturnKey1$1, (void 0))
                }
              };
              if (rc9) {
                const b$2 = x2$3.s_Some__f_value;
                if ((b$2 instanceof $c_Ltigerpython_parser_types_SelfInstance)) {
                  const x6$2 = b$2;
                  x6$2.docString_$eq__T__V($p_Ltigerpython_parser_scopes_AstWalker__getStringValue__Ltigerpython_parser_ast_AstNode$Expression__T(this$2, assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_value));
                  throw new $c_sr_NonLocalReturnControl$mcV$sp(nonLocalReturnKey1$1, (void 0))
                }
              };
              if (rc9) {
                const b$3 = x2$3.s_Some__f_value;
                if ((b$3 instanceof $c_Ltigerpython_parser_types_PythonClass)) {
                  const x7$2 = b$3;
                  const s$1 = $p_Ltigerpython_parser_scopes_AstWalker__getStringValue__Ltigerpython_parser_ast_AstNode$Expression__T(this$2, assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_value);
                  x7$2.Ltigerpython_parser_types_DataType__f__docString = s$1;
                  throw new $c_sr_NonLocalReturnControl$mcV$sp(nonLocalReturnKey1$1, (void 0))
                }
              }
            };
            const expr$2 = assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
            this$2.defineName__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType__V(x4$2, this$2.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr$2))
          }
        }))(this, assignment, nonLocalReturnKey1);
        const len$2 = xs.u.length;
        let i$4 = 0;
        if ((xs !== null)) {
          while ((i$4 < len$2)) {
            const arg1$16 = xs.u[i$4];
            f$2(arg1$16);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_I(xs, 1)) {
          const x3$4 = xs;
          while ((i$4 < len$2)) {
            const arg1$17 = x3$4.u[i$4];
            f$2(arg1$17);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_D(xs, 1)) {
          const x4$3 = xs;
          while ((i$4 < len$2)) {
            const arg1$18 = x4$3.u[i$4];
            f$2(arg1$18);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_J(xs, 1)) {
          const x5$3 = xs;
          while ((i$4 < len$2)) {
            const t$5 = x5$3.u[i$4];
            const lo$2 = t$5.RTLong__f_lo;
            const hi$2 = t$5.RTLong__f_hi;
            f$2(new $c_RTLong(lo$2, hi$2));
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_F(xs, 1)) {
          const x6$3 = xs;
          while ((i$4 < len$2)) {
            const arg1$19 = x6$3.u[i$4];
            f$2(arg1$19);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_C(xs, 1)) {
          const x7$3 = xs;
          while ((i$4 < len$2)) {
            const arg1$20 = x7$3.u[i$4];
            f$2($bC(arg1$20));
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_B(xs, 1)) {
          const x8$2 = xs;
          while ((i$4 < len$2)) {
            const arg1$21 = x8$2.u[i$4];
            f$2(arg1$21);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_S(xs, 1)) {
          const x9$2 = xs;
          while ((i$4 < len$2)) {
            const arg1$22 = x9$2.u[i$4];
            f$2(arg1$22);
            i$4 = ((1 + i$4) | 0)
          }
        } else if ($isArrayOf_Z(xs, 1)) {
          const x10$2 = xs;
          while ((i$4 < len$2)) {
            const arg1$23 = x10$2.u[i$4];
            f$2(arg1$23);
            i$4 = ((1 + i$4) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs)
        }
      }
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          ex.value$mcV$sp__V()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  walkClass__Ltigerpython_parser_ast_AstNode$ClassDef__V(cls) {
    const xs = cls.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases;
    const f = ((this$2) => ((b$2) => {
      const b = b$2;
      return this$2.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(b)
    }))(this);
    const len = xs.u.length;
    const ys = $newArrayObject($d_Ltigerpython_parser_types_DataType.getArrayOf(), [len]);
    if ((len > 0)) {
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const $$x1 = i;
          const arg1 = xs.u[i];
          ys.u[$$x1] = f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i < len)) {
          const $$x2 = i;
          const arg1$1 = x3.u[i];
          ys.u[$$x2] = f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const $$x3 = i;
          const arg1$2 = x4.u[i];
          ys.u[$$x3] = f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const $$x4 = i;
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          ys.u[$$x4] = f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const $$x5 = i;
          const arg1$3 = x6.u[i];
          ys.u[$$x5] = f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const $$x6 = i;
          const arg1$4 = x7.u[i];
          ys.u[$$x6] = f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const $$x7 = i;
          const arg1$5 = x8.u[i];
          ys.u[$$x7] = f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const $$x8 = i;
          const arg1$6 = x9.u[i];
          ys.u[$$x8] = f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const $$x9 = i;
          const arg1$7 = x10.u[i];
          ys.u[$$x9] = f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      }
    };
    let capacity = 0;
    let size = 0;
    let jsElems = null;
    capacity = 0;
    size = 0;
    jsElems = [];
    let i$1 = 0;
    while ((i$1 < ys.u.length)) {
      const x = ys.u[i$1];
      const x$2 = x;
      if ((x$2 instanceof $c_Ltigerpython_parser_types_ClassType)) {
        const unboxedElem = ((x === null) ? null : x);
        jsElems.push(unboxedElem)
      };
      i$1 = ((1 + i$1) | 0)
    };
    const xs$1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_types_DataType.getArrayOf(), jsElems);
    const len$1 = xs$1.u.length;
    const ys$1 = $newArrayObject($d_Ltigerpython_parser_types_ClassType.getArrayOf(), [len$1]);
    if ((len$1 > 0)) {
      let i$2 = 0;
      while ((i$2 < len$1)) {
        const $$x10 = i$2;
        const arg1$8 = xs$1.u[i$2];
        const x$3 = arg1$8;
        ys$1.u[$$x10] = x$3;
        i$2 = ((1 + i$2) | 0)
      }
    };
    const result = new $c_Ltigerpython_parser_types_PythonClass(cls.Ltigerpython_parser_ast_AstNode$ClassDef__f_name.Ltigerpython_parser_ast_AstNode$Name__f_name, ys$1);
    const s = cls.Ltigerpython_parser_ast_AstNode$ClassDef__f_docString;
    result.Ltigerpython_parser_types_DataType__f__docString = s;
    const x1 = this.Ltigerpython_parser_scopes_AstWalker__f_scope;
    if ((x1 instanceof $c_Ltigerpython_parser_scopes_ClassScope)) {
      const x2 = x1;
      x2.Ltigerpython_parser_scopes_ClassScope__f_pyClass.setField__T__Ltigerpython_parser_types_DataType__V(result.Ltigerpython_parser_types_PythonClass__f_name, result)
    } else if ((x1 instanceof $c_Ltigerpython_parser_scopes_ModuleScope)) {
      const x3$1 = x1;
      x3$1.Ltigerpython_parser_scopes_ModuleScope__f_module.setField__T__Ltigerpython_parser_types_DataType__V(result.Ltigerpython_parser_types_PythonClass__f_name, result)
    };
    const classScope = new $c_Ltigerpython_parser_scopes_ClassScope(cls.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos, cls.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos, result);
    this.Ltigerpython_parser_scopes_AstWalker__f_scope.addScope__Ltigerpython_parser_scopes_Scope__Ltigerpython_parser_scopes_Scope(classScope);
    result.Ltigerpython_parser_types_PythonClass__f_source = classScope.getCurrentPath__T();
    result.Ltigerpython_parser_types_PythonClass__f_sourcePos = cls.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos;
    const walker = new $c_Ltigerpython_parser_scopes_AstWalker(classScope);
    walker.walkNode__Ltigerpython_parser_ast_AstNode__V(cls.Ltigerpython_parser_ast_AstNode$ClassDef__f_body)
  };
  walkFunction__Ltigerpython_parser_ast_AstNode$FunctionDef__V(function$1) {
    const params = this.getParameters__Ltigerpython_parser_ast_AstNode$Parameters__ALtigerpython_parser_types_Parameter(function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params);
    if ((params.u.length !== 0)) {
      const x1 = this.Ltigerpython_parser_scopes_AstWalker__f_scope;
      matchEnd4: {
        if ((x1 instanceof $c_Ltigerpython_parser_scopes_ClassScope)) {
          const x2 = x1;
          const array = ["staticmethod"];
          const decoratorNames = new $c_sjsr_WrappedVarArgs(array);
          if ((!$f_Ltigerpython_parser_ast_AstNode$Decoratable__hasDecorator__sci_Seq__Z(function$1, decoratorNames))) {
            const array$1 = ["classmethod"];
            const decoratorNames$1 = new $c_sjsr_WrappedVarArgs(array$1);
            if ($f_Ltigerpython_parser_ast_AstNode$Decoratable__hasDecorator__sci_Seq__Z(function$1, decoratorNames$1)) {
              params.u[0].Ltigerpython_parser_types_Parameter__f_dataType = new $c_Ltigerpython_parser_types_SelfClass(x2.Ltigerpython_parser_scopes_ClassScope__f_pyClass)
            } else {
              params.u[0].Ltigerpython_parser_types_Parameter__f_dataType = new $c_Ltigerpython_parser_types_SelfInstance(x2.Ltigerpython_parser_scopes_ClassScope__f_pyClass)
            };
            let $$x1;
            if ((params.u.length > 1)) {
              const x = params.u[1].Ltigerpython_parser_types_Parameter__f_dataType;
              const x$2 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
              $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
            } else {
              $$x1 = false
            };
            if ($$x1) {
              params.u[1].Ltigerpython_parser_types_Parameter__f_dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE
            };
            let $$x2;
            if ((params.u.length > 2)) {
              const x$3 = params.u[2].Ltigerpython_parser_types_Parameter__f_dataType;
              const x$4 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
              $$x2 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
            } else {
              $$x2 = false
            };
            if ($$x2) {
              params.u[2].Ltigerpython_parser_types_Parameter__f_dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO2_TYPE;
              break matchEnd4
            } else {
              break matchEnd4
            }
          }
        };
        let $$x3;
        if ((params.u.length > 0)) {
          const x$5 = params.u[0].Ltigerpython_parser_types_Parameter__f_dataType;
          const x$6 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
          $$x3 = ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
        } else {
          $$x3 = false
        };
        if ($$x3) {
          params.u[0].Ltigerpython_parser_types_Parameter__f_dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE
        };
        let $$x4;
        if ((params.u.length > 1)) {
          const x$7 = params.u[1].Ltigerpython_parser_types_Parameter__f_dataType;
          const x$8 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
          $$x4 = ((x$7 === null) ? (x$8 === null) : x$7.equals__O__Z(x$8))
        } else {
          $$x4 = false
        };
        if ($$x4) {
          params.u[1].Ltigerpython_parser_types_Parameter__f_dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO2_TYPE
        }
      }
    };
    const $$x5 = function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name.Ltigerpython_parser_ast_AstNode$Name__f_name;
    const x$1 = function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount;
    const that = params.u.length;
    const result = new $c_Ltigerpython_parser_types_PythonFunction($$x5, params, ((x$1 < that) ? x$1 : that), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE);
    const s = function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_docString;
    result.Ltigerpython_parser_types_DataType__f__docString = s;
    const x1$2 = this.Ltigerpython_parser_scopes_AstWalker__f_scope;
    if ((x1$2 instanceof $c_Ltigerpython_parser_scopes_ClassScope)) {
      const x2$2 = x1$2;
      const array$2 = ["classmethod", "staticmethod"];
      const decoratorNames$2 = new $c_sjsr_WrappedVarArgs(array$2);
      if ($f_Ltigerpython_parser_ast_AstNode$Decoratable__hasDecorator__sci_Seq__Z(function$1, decoratorNames$2)) {
        x2$2.Ltigerpython_parser_scopes_ClassScope__f_pyClass.setField__T__Ltigerpython_parser_types_DataType__V(result.Ltigerpython_parser_types_PythonFunction__f_name, result)
      };
      x2$2.Ltigerpython_parser_scopes_ClassScope__f_pyClass.setInstanceField__T__Ltigerpython_parser_types_DataType__V(result.Ltigerpython_parser_types_PythonFunction__f_name, result)
    } else if ((x1$2 instanceof $c_Ltigerpython_parser_scopes_ModuleScope)) {
      const x3 = x1$2;
      x3.Ltigerpython_parser_scopes_ModuleScope__f_module.setField__T__Ltigerpython_parser_types_DataType__V(result.Ltigerpython_parser_types_PythonFunction__f_name, result)
    };
    const functionScope = new $c_Ltigerpython_parser_scopes_FunctionScope(function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos, function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos, result);
    this.Ltigerpython_parser_scopes_AstWalker__f_scope.addScope__Ltigerpython_parser_scopes_Scope__Ltigerpython_parser_scopes_Scope(functionScope);
    result.Ltigerpython_parser_types_PythonFunction__f_source = functionScope.getCurrentPath__T();
    result.Ltigerpython_parser_types_PythonFunction__f_sourcePos = function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos;
    const walker = new $c_Ltigerpython_parser_scopes_AstWalker(functionScope);
    walker.walkNode__Ltigerpython_parser_ast_AstNode__V(function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body);
    if ((!$p_Ltigerpython_parser_scopes_AstWalker__hasReturn__Ltigerpython_parser_ast_AstNode$Statement__Z(this, function$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body))) {
      functionScope.returnType_$eq__Ltigerpython_parser_types_DataType__V($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE)
    };
    result.Ltigerpython_parser_types_PythonFunction__f_returnType = functionScope.Ltigerpython_parser_scopes_FunctionScope__f__returnType
  };
  walkFor__Ltigerpython_parser_ast_AstNode$For__V(forStmt) {
    const x1 = forStmt.Ltigerpython_parser_ast_AstNode$For__f_target;
    matchEnd6: {
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const x2 = x1;
        const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
        const this$6 = $m_s_Predef$().s_Predef$__f_Map;
        const expr = forStmt.Ltigerpython_parser_ast_AstNode$For__f_iter;
        const y = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr).getItemType__Ltigerpython_parser_types_DataType();
        const array = [$ct_T2__O__O__(new $c_T2(), name, y)];
        const elems = new $c_sjsr_WrappedVarArgs(array);
        $p_Ltigerpython_parser_scopes_AstWalker___walkFor__Ltigerpython_parser_ast_AstNode$For__sci_Map__V(this, forStmt, this$6.from__sc_IterableOnce__sci_Map(elems));
        break matchEnd6
      };
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
        const x4 = x1;
        const xs = x4.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
        let $$x1;
        _return: {
          let i = 0;
          while ((i < xs.u.length)) {
            const arg1 = xs.u[i];
            const x$4 = arg1;
            if ((!(x$4 instanceof $c_Ltigerpython_parser_ast_AstNode$Name))) {
              $$x1 = false;
              break _return
            };
            i = ((1 + i) | 0)
          };
          $$x1 = true
        };
        if ($$x1) {
          const params = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
          const xs$1 = x4.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
          const f = ((this$2$1, params$1) => ((elem$2) => {
            const elem = elem$2;
            const key = elem.Ltigerpython_parser_ast_AstNode$Name__f_name;
            const value = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
            $p_scm_HashMap__put0__O__O__Z__s_Some(params$1, key, value, false)
          }))(this, params);
          const len = xs$1.u.length;
          let i$1 = 0;
          if ((xs$1 !== null)) {
            while ((i$1 < len)) {
              const arg1$1 = xs$1.u[i$1];
              f(arg1$1);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_I(xs$1, 1)) {
            const x3 = xs$1;
            while ((i$1 < len)) {
              const arg1$2 = x3.u[i$1];
              f(arg1$2);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_D(xs$1, 1)) {
            const x4$1 = xs$1;
            while ((i$1 < len)) {
              const arg1$3 = x4$1.u[i$1];
              f(arg1$3);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_J(xs$1, 1)) {
            const x5 = xs$1;
            while ((i$1 < len)) {
              const t = x5.u[i$1];
              const lo = t.RTLong__f_lo;
              const hi = t.RTLong__f_hi;
              f(new $c_RTLong(lo, hi));
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_F(xs$1, 1)) {
            const x6 = xs$1;
            while ((i$1 < len)) {
              const arg1$4 = x6.u[i$1];
              f(arg1$4);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_C(xs$1, 1)) {
            const x7 = xs$1;
            while ((i$1 < len)) {
              const arg1$5 = x7.u[i$1];
              f($bC(arg1$5));
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_B(xs$1, 1)) {
            const x8 = xs$1;
            while ((i$1 < len)) {
              const arg1$6 = x8.u[i$1];
              f(arg1$6);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_S(xs$1, 1)) {
            const x9 = xs$1;
            while ((i$1 < len)) {
              const arg1$7 = x9.u[i$1];
              f(arg1$7);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_Z(xs$1, 1)) {
            const x10 = xs$1;
            while ((i$1 < len)) {
              const arg1$8 = x10.u[i$1];
              f(arg1$8);
              i$1 = ((1 + i$1) | 0)
            }
          } else {
            throw new $c_s_MatchError(xs$1)
          };
          $p_Ltigerpython_parser_scopes_AstWalker___walkFor__Ltigerpython_parser_ast_AstNode$For__sci_Map__V(this, forStmt, ($m_s_$less$colon$less$(), $m_sci_Map$().from__sc_IterableOnce__sci_Map(params)));
          break matchEnd6
        }
      };
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(forStmt.Ltigerpython_parser_ast_AstNode$For__f_body);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(forStmt.Ltigerpython_parser_ast_AstNode$For__f_elseBody)
    }
  };
  walkWith__Ltigerpython_parser_ast_AstNode$With__V(withStmt) {
    const x1 = withStmt.Ltigerpython_parser_ast_AstNode$With__f_opt_vars;
    matchEnd6: {
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const x2 = x1;
        const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
        const expr = withStmt.Ltigerpython_parser_ast_AstNode$With__f_context;
        const ctx = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr);
        const context = (ctx.isCallable__Z() ? $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(ctx.getReturnType__Ltigerpython_parser_types_DataType()) : ctx);
        const x1$2 = context.findField__T__s_Option("__enter__");
        matchEnd4: {
          if ((x1$2 instanceof $c_s_Some)) {
            const x2$2 = x1$2;
            const enter = x2$2.s_Some__f_value;
            if (enter.isCallable__Z()) {
              const this$6 = $m_s_Predef$().s_Predef$__f_Map;
              const y = $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(enter.getReturnType__Ltigerpython_parser_types_DataType());
              const array = [$ct_T2__O__O__(new $c_T2(), name, y)];
              const elems = new $c_sjsr_WrappedVarArgs(array);
              $p_Ltigerpython_parser_scopes_AstWalker___walkWith__Ltigerpython_parser_ast_AstNode$With__sci_Map__V(this, withStmt, this$6.from__sc_IterableOnce__sci_Map(elems));
              break matchEnd4
            }
          };
          const this$12 = $m_s_Predef$().s_Predef$__f_Map;
          const array$1 = [$ct_T2__O__O__(new $c_T2(), name, context)];
          const elems$1 = new $c_sjsr_WrappedVarArgs(array$1);
          $p_Ltigerpython_parser_scopes_AstWalker___walkWith__Ltigerpython_parser_ast_AstNode$With__sci_Map__V(this, withStmt, this$12.from__sc_IterableOnce__sci_Map(elems$1))
        };
        break matchEnd6
      };
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
        const x4 = x1;
        const xs = x4.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
        let $$x1;
        _return: {
          let i = 0;
          while ((i < xs.u.length)) {
            const arg1 = xs.u[i];
            const x$5 = arg1;
            if ((!(x$5 instanceof $c_Ltigerpython_parser_ast_AstNode$Name))) {
              $$x1 = false;
              break _return
            };
            i = ((1 + i) | 0)
          };
          $$x1 = true
        };
        if ($$x1) {
          const params = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
          const xs$1 = x4.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
          const f = ((this$2$1, params$1) => ((elem$2) => {
            const elem = elem$2;
            const key = elem.Ltigerpython_parser_ast_AstNode$Name__f_name;
            const value = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
            $p_scm_HashMap__put0__O__O__Z__s_Some(params$1, key, value, false)
          }))(this, params);
          const len = xs$1.u.length;
          let i$1 = 0;
          if ((xs$1 !== null)) {
            while ((i$1 < len)) {
              const arg1$1 = xs$1.u[i$1];
              f(arg1$1);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_I(xs$1, 1)) {
            const x3 = xs$1;
            while ((i$1 < len)) {
              const arg1$2 = x3.u[i$1];
              f(arg1$2);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_D(xs$1, 1)) {
            const x4$1 = xs$1;
            while ((i$1 < len)) {
              const arg1$3 = x4$1.u[i$1];
              f(arg1$3);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_J(xs$1, 1)) {
            const x5 = xs$1;
            while ((i$1 < len)) {
              const t = x5.u[i$1];
              const lo = t.RTLong__f_lo;
              const hi = t.RTLong__f_hi;
              f(new $c_RTLong(lo, hi));
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_F(xs$1, 1)) {
            const x6 = xs$1;
            while ((i$1 < len)) {
              const arg1$4 = x6.u[i$1];
              f(arg1$4);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_C(xs$1, 1)) {
            const x7 = xs$1;
            while ((i$1 < len)) {
              const arg1$5 = x7.u[i$1];
              f($bC(arg1$5));
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_B(xs$1, 1)) {
            const x8 = xs$1;
            while ((i$1 < len)) {
              const arg1$6 = x8.u[i$1];
              f(arg1$6);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_S(xs$1, 1)) {
            const x9 = xs$1;
            while ((i$1 < len)) {
              const arg1$7 = x9.u[i$1];
              f(arg1$7);
              i$1 = ((1 + i$1) | 0)
            }
          } else if ($isArrayOf_Z(xs$1, 1)) {
            const x10 = xs$1;
            while ((i$1 < len)) {
              const arg1$8 = x10.u[i$1];
              f(arg1$8);
              i$1 = ((1 + i$1) | 0)
            }
          } else {
            throw new $c_s_MatchError(xs$1)
          };
          $p_Ltigerpython_parser_scopes_AstWalker___walkWith__Ltigerpython_parser_ast_AstNode$With__sci_Map__V(this, withStmt, ($m_s_$less$colon$less$(), $m_sci_Map$().from__sc_IterableOnce__sci_Map(params)));
          break matchEnd6
        }
      };
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(withStmt.Ltigerpython_parser_ast_AstNode$With__f_body)
    }
  };
  walkIf__Ltigerpython_parser_ast_AstNode$If__V(ifStmt) {
    _return: {
      let rc6 = false;
      let x3 = null;
      const x1 = ifStmt.Ltigerpython_parser_ast_AstNode$If__f_test;
      matchEnd7: {
        if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
          const x2 = x1;
          if (((x2.getFunctionName__T() === "isinstance") && (x2.Ltigerpython_parser_ast_AstNode$Call__f_args.u.length === 2))) {
            const n = x2.getFirstArgAsName__T();
            const expr = x2.Ltigerpython_parser_ast_AstNode$Call__f_args.u[1];
            const x1$2 = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr);
            if ((x1$2 instanceof $c_Ltigerpython_parser_types_ClassType)) {
              const x2$2 = x1$2;
              if ((n !== null)) {
                const this$6 = $m_s_Predef$().s_Predef$__f_Map;
                const y = $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(x2$2);
                const array = [$ct_T2__O__O__(new $c_T2(), n, y)];
                const elems = new $c_sjsr_WrappedVarArgs(array);
                $p_Ltigerpython_parser_scopes_AstWalker___walkIf__Ltigerpython_parser_ast_AstNode$If__sci_Map__V(this, ifStmt, this$6.from__sc_IterableOnce__sci_Map(elems));
                this.walkNode__Ltigerpython_parser_ast_AstNode__V(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_elseBody);
                break _return
              }
            };
            break matchEnd7
          }
        };
        if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
          rc6 = true;
          x3 = x1;
          if ((x3.isSimpleEqual__Z() || x3.isRefEqualTest__Z())) {
            const x1$3 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_left;
            matchEnd4$3: {
              if ((x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
                const x2$3 = x1$3;
                if ((x2$3.getFunctionName__T() === "type")) {
                  const n$2 = x2$3.getFirstArgAsName__T();
                  const expr$1 = x3.right__Ltigerpython_parser_ast_AstNode$Expression();
                  const x1$4 = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr$1);
                  if ((x1$4 instanceof $c_Ltigerpython_parser_types_ClassType)) {
                    const x2$4 = x1$4;
                    if ((n$2 !== null)) {
                      const this$12 = $m_s_Predef$().s_Predef$__f_Map;
                      const y$1 = $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(x2$4);
                      const array$1 = [$ct_T2__O__O__(new $c_T2(), n$2, y$1)];
                      const elems$1 = new $c_sjsr_WrappedVarArgs(array$1);
                      $p_Ltigerpython_parser_scopes_AstWalker___walkIf__Ltigerpython_parser_ast_AstNode$If__sci_Map__V(this, ifStmt, this$12.from__sc_IterableOnce__sci_Map(elems$1));
                      this.walkNode__Ltigerpython_parser_ast_AstNode__V(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_elseBody);
                      break _return
                    }
                  };
                  break matchEnd4$3
                }
              }
            };
            break matchEnd7
          }
        };
        if ((rc6 && x3.isInclusionTest__Z())) {
          const x1$5 = x3.Ltigerpython_parser_ast_AstNode$Compare__f_left;
          matchEnd5: {
            if ((x1$5 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
              const x2$5 = x1$5;
              if ((x2$5.getFunctionName__T() === "type")) {
                const n$3 = x2$5.getFirstArgAsName__T();
                const x1$6 = x3.right__Ltigerpython_parser_ast_AstNode$Expression();
                matchEnd4$5: {
                  if ((x1$6 instanceof $c_Ltigerpython_parser_ast_AstNode$SequenceExpression)) {
                    const x2$6 = x1$6;
                    const xs = x2$6.elements__ALtigerpython_parser_ast_AstNode$Expression();
                    if ((xs.u.length !== 0)) {
                      const $$x1 = $m_sc_ArrayOps$();
                      const xs$1 = x2$6.elements__ALtigerpython_parser_ast_AstNode$Expression();
                      const expr$2 = $$x1.head$extension__O__O(xs$1);
                      const elem = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr$2);
                      const result = new $c_sr_ObjectRef(elem);
                      const $$x2 = $m_sc_ArrayOps$();
                      const xs$2 = x2$6.elements__ALtigerpython_parser_ast_AstNode$Expression();
                      const xs$3 = $$x2.tail$extension__O__O(xs$2);
                      const f = ((this$19, result$1) => ((elem$2) => {
                        const elem$1 = elem$2;
                        result$1.sr_ObjectRef__f_elem = $m_Ltigerpython_parser_types_DataType$().getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(result$1.sr_ObjectRef__f_elem, this$19.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(elem$1))
                      }))(this, result);
                      const len = xs$3.u.length;
                      let i = 0;
                      if ((xs$3 !== null)) {
                        while ((i < len)) {
                          const arg1 = xs$3.u[i];
                          f(arg1);
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_I(xs$3, 1)) {
                        const x3$1 = xs$3;
                        while ((i < len)) {
                          const arg1$1 = x3$1.u[i];
                          f(arg1$1);
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_D(xs$3, 1)) {
                        const x4 = xs$3;
                        while ((i < len)) {
                          const arg1$2 = x4.u[i];
                          f(arg1$2);
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_J(xs$3, 1)) {
                        const x5 = xs$3;
                        while ((i < len)) {
                          const t = x5.u[i];
                          const lo = t.RTLong__f_lo;
                          const hi = t.RTLong__f_hi;
                          f(new $c_RTLong(lo, hi));
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_F(xs$3, 1)) {
                        const x6 = xs$3;
                        while ((i < len)) {
                          const arg1$3 = x6.u[i];
                          f(arg1$3);
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_C(xs$3, 1)) {
                        const x7 = xs$3;
                        while ((i < len)) {
                          const arg1$4 = x7.u[i];
                          f($bC(arg1$4));
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_B(xs$3, 1)) {
                        const x8 = xs$3;
                        while ((i < len)) {
                          const arg1$5 = x8.u[i];
                          f(arg1$5);
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_S(xs$3, 1)) {
                        const x9 = xs$3;
                        while ((i < len)) {
                          const arg1$6 = x9.u[i];
                          f(arg1$6);
                          i = ((1 + i) | 0)
                        }
                      } else if ($isArrayOf_Z(xs$3, 1)) {
                        const x10 = xs$3;
                        while ((i < len)) {
                          const arg1$7 = x10.u[i];
                          f(arg1$7);
                          i = ((1 + i) | 0)
                        }
                      } else {
                        throw new $c_s_MatchError(xs$3)
                      };
                      const x1$7 = result.sr_ObjectRef__f_elem;
                      if ((x1$7 instanceof $c_Ltigerpython_parser_types_ClassType)) {
                        const x2$7 = x1$7;
                        if ((n$3 !== null)) {
                          const this$26 = $m_s_Predef$().s_Predef$__f_Map;
                          const y$2 = $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(x2$7);
                          const array$2 = [$ct_T2__O__O__(new $c_T2(), n$3, y$2)];
                          const elems$2 = new $c_sjsr_WrappedVarArgs(array$2);
                          $p_Ltigerpython_parser_scopes_AstWalker___walkIf__Ltigerpython_parser_ast_AstNode$If__sci_Map__V(this, ifStmt, this$26.from__sc_IterableOnce__sci_Map(elems$2));
                          this.walkNode__Ltigerpython_parser_ast_AstNode__V(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_elseBody);
                          break _return
                        }
                      };
                      break matchEnd4$5
                    }
                  }
                };
                break matchEnd5
              }
            };
            if ((x1$5 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
              const x3$2 = x1$5;
              const this$32 = $m_s_Predef$().s_Predef$__f_Map;
              const self = x3$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
              const y$3 = $p_Ltigerpython_parser_scopes_AstWalker__getElementType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(this, x3.right__Ltigerpython_parser_ast_AstNode$Expression());
              const array$3 = [$ct_T2__O__O__(new $c_T2(), self, y$3)];
              const elems$3 = new $c_sjsr_WrappedVarArgs(array$3);
              $p_Ltigerpython_parser_scopes_AstWalker___walkIf__Ltigerpython_parser_ast_AstNode$If__sci_Map__V(this, ifStmt, this$32.from__sc_IterableOnce__sci_Map(elems$3));
              this.walkNode__Ltigerpython_parser_ast_AstNode__V(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_elseBody);
              break _return
            }
          };
          break matchEnd7
        }
      };
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_body);
      this.walkNode__Ltigerpython_parser_ast_AstNode__V(ifStmt.Ltigerpython_parser_ast_AstNode$If__f_elseBody)
    }
  };
  walkGlobal__Ltigerpython_parser_ast_AstNode$Global__V(global) {
    const x1 = this.Ltigerpython_parser_scopes_AstWalker__f_scope;
    if ((x1 instanceof $c_Ltigerpython_parser_scopes_FunctionScope)) {
      const x2 = x1;
      const xs = global.Ltigerpython_parser_ast_AstNode$Global__f_names;
      const f = ((this$2, x2$1) => ((name$2) => {
        const name = name$2;
        const name$1 = name.Ltigerpython_parser_ast_AstNode$Name__f_name;
        const this$3 = x2$1.Ltigerpython_parser_scopes_FunctionScope__f_globals;
        this$3.addOne__O__scm_Growable(name$1)
      }))(this, x2);
      const len = xs.u.length;
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const arg1 = xs.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i < len)) {
          const arg1$1 = x3.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      }
    } else if ((x1 instanceof $c_Ltigerpython_parser_scopes_ForLoopScope)) {
      const x3$1 = x1;
      const xs$1 = global.Ltigerpython_parser_ast_AstNode$Global__f_names;
      const f$1 = ((this$2$1, x3$2) => ((name$3$2) => {
        const name$3 = name$3$2;
        x3$2.addGlobal__T__V(name$3.Ltigerpython_parser_ast_AstNode$Name__f_name)
      }))(this, x3$1);
      const len$1 = xs$1.u.length;
      let i$1 = 0;
      if ((xs$1 !== null)) {
        while ((i$1 < len$1)) {
          const arg1$8 = xs$1.u[i$1];
          f$1(arg1$8);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_I(xs$1, 1)) {
        const x3$3 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$9 = x3$3.u[i$1];
          f$1(arg1$9);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_D(xs$1, 1)) {
        const x4$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$10 = x4$1.u[i$1];
          f$1(arg1$10);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_J(xs$1, 1)) {
        const x5$1 = xs$1;
        while ((i$1 < len$1)) {
          const t$1 = x5$1.u[i$1];
          const lo$1 = t$1.RTLong__f_lo;
          const hi$1 = t$1.RTLong__f_hi;
          f$1(new $c_RTLong(lo$1, hi$1));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_F(xs$1, 1)) {
        const x6$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$11 = x6$1.u[i$1];
          f$1(arg1$11);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_C(xs$1, 1)) {
        const x7$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$12 = x7$1.u[i$1];
          f$1($bC(arg1$12));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_B(xs$1, 1)) {
        const x8$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$13 = x8$1.u[i$1];
          f$1(arg1$13);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_S(xs$1, 1)) {
        const x9$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$14 = x9$1.u[i$1];
          f$1(arg1$14);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_Z(xs$1, 1)) {
        const x10$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$15 = x10$1.u[i$1];
          f$1(arg1$15);
          i$1 = ((1 + i$1) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$1)
      }
    }
  };
  walkImport__Ltigerpython_parser_ast_AstNode$Import__V(importStmt) {
    const xs = importStmt.Ltigerpython_parser_ast_AstNode$Import__f_names;
    const f = ((this$2) => ((alias$2) => {
      const alias = alias$2;
      const x = alias.Ltigerpython_parser_ast_AstNode$Alias__f_name.Ltigerpython_parser_ast_AstNode$Name__f_name;
      const len = (x.length | 0);
      const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), len);
      let i = 0;
      while ((i < len)) {
        const index = i;
        const x$1 = (65535 & (x.charCodeAt(index) | 0));
        if ((x$1 !== 63)) {
          const str = String.fromCharCode(x$1);
          sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
        };
        i = ((1 + i) | 0)
      };
      const name = ((len === sb.length__I()) ? x : sb.jl_StringBuilder__f_java$lang$StringBuilder$$content);
      return $ct_T2__O__O__(new $c_T2(), alias, name)
    }))(this);
    const len$1 = xs.u.length;
    const ys = $newArrayObject($d_T2.getArrayOf(), [len$1]);
    if ((len$1 > 0)) {
      let i$1 = 0;
      if ((xs !== null)) {
        while ((i$1 < len$1)) {
          const $$x1 = i$1;
          const arg1 = xs.u[i$1];
          ys.u[$$x1] = f(arg1);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i$1 < len$1)) {
          const $$x2 = i$1;
          const arg1$1 = x3.u[i$1];
          ys.u[$$x2] = f(arg1$1);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i$1 < len$1)) {
          const $$x3 = i$1;
          const arg1$2 = x4.u[i$1];
          ys.u[$$x3] = f(arg1$2);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i$1 < len$1)) {
          const $$x4 = i$1;
          const t = x5.u[i$1];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          ys.u[$$x4] = f(new $c_RTLong(lo, hi));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i$1 < len$1)) {
          const $$x5 = i$1;
          const arg1$3 = x6.u[i$1];
          ys.u[$$x5] = f(arg1$3);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i$1 < len$1)) {
          const $$x6 = i$1;
          const arg1$4 = x7.u[i$1];
          ys.u[$$x6] = f($bC(arg1$4));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i$1 < len$1)) {
          const $$x7 = i$1;
          const arg1$5 = x8.u[i$1];
          ys.u[$$x7] = f(arg1$5);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i$1 < len$1)) {
          const $$x8 = i$1;
          const arg1$6 = x9.u[i$1];
          ys.u[$$x8] = f(arg1$6);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i$1 < len$1)) {
          const $$x9 = i$1;
          const arg1$7 = x10.u[i$1];
          ys.u[$$x9] = f(arg1$7);
          i$1 = ((1 + i$1) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      }
    };
    const len$2 = ys.u.length;
    let i$2 = 0;
    while ((i$2 < len$2)) {
      const arg1$8 = ys.u[i$2];
      const x$8 = arg1$8;
      if ((x$8 !== null)) {
        const alias$1 = x$8._1__O();
        const name$1 = x$8._2__O();
        const x1$2 = this.Ltigerpython_parser_scopes_AstWalker__f_scope.importModule__T__T__s_Option(name$1, null);
        if ((x1$2 instanceof $c_s_Some)) {
          const $$x10 = this.Ltigerpython_parser_scopes_AstWalker__f_scope;
          let x1;
          _return: {
            const len$3 = (name$1.length | 0);
            let i$3 = 0;
            while ((i$3 < len$3)) {
              const index$1 = i$3;
              const arg1$9 = (65535 & (name$1.charCodeAt(index$1) | 0));
              if ((arg1$9 === 46)) {
                x1 = i$3;
                break _return
              };
              i$3 = ((1 + i$3) | 0)
            };
            x1 = (-1)
          };
          const impModule = $$x10.importModule__T__T__s_Option(((x1 === (-1)) ? name$1 : name$1.substring(0, x1)), null).get__O();
          if ((alias$1.Ltigerpython_parser_ast_AstNode$Alias__f_asName !== null)) {
            this.Ltigerpython_parser_scopes_AstWalker__f_scope.define__T__Ltigerpython_parser_types_DataType__V(alias$1.Ltigerpython_parser_ast_AstNode$Alias__f_asName.Ltigerpython_parser_ast_AstNode$Name__f_name, impModule)
          } else {
            this.Ltigerpython_parser_scopes_AstWalker__f_scope.define__Ltigerpython_parser_types_DataType__V(impModule)
          }
        } else {
          const x$2 = $m_s_None$();
          if ((!(x$2 === x1$2))) {
            throw new $c_s_MatchError(x1$2)
          }
        }
      } else {
        throw new $c_s_MatchError(x$8)
      };
      i$2 = ((1 + i$2) | 0)
    }
  };
  walkImportFrom__Ltigerpython_parser_ast_AstNode$ImportFrom__V(importStmt) {
    const x = importStmt.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module.Ltigerpython_parser_ast_AstNode$Name__f_name;
    const len = (x.length | 0);
    const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), len);
    let i = 0;
    while ((i < len)) {
      const index = i;
      const x$1 = (65535 & (x.charCodeAt(index) | 0));
      if ((x$1 !== 63)) {
        const str = String.fromCharCode(x$1);
        sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
      };
      i = ((1 + i) | 0)
    };
    const module = ((len === sb.length__I()) ? x : sb.jl_StringBuilder__f_java$lang$StringBuilder$$content);
    const xs = importStmt.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names;
    const f = ((this$2$1, module$1) => ((alias$2) => {
      const alias = alias$2;
      const x1 = this$2$1.Ltigerpython_parser_scopes_AstWalker__f_scope.importModule__T__T__s_Option(module$1, alias.Ltigerpython_parser_ast_AstNode$Alias__f_name.Ltigerpython_parser_ast_AstNode$Name__f_name);
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const impModule = x2.s_Some__f_value;
        if ((alias.Ltigerpython_parser_ast_AstNode$Alias__f_asName !== null)) {
          this$2$1.Ltigerpython_parser_scopes_AstWalker__f_scope.define__T__Ltigerpython_parser_types_DataType__V(alias.Ltigerpython_parser_ast_AstNode$Alias__f_asName.Ltigerpython_parser_ast_AstNode$Name__f_name, impModule)
        } else {
          this$2$1.Ltigerpython_parser_scopes_AstWalker__f_scope.define__Ltigerpython_parser_types_DataType__V(impModule)
        }
      } else {
        const x$2 = $m_s_None$();
        if ((!(x$2 === x1))) {
          throw new $c_s_MatchError(x1)
        }
      }
    }))(this, module);
    const len$1 = xs.u.length;
    let i$1 = 0;
    if ((xs !== null)) {
      while ((i$1 < len$1)) {
        const arg1 = xs.u[i$1];
        f(arg1);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i$1 < len$1)) {
        const arg1$1 = x3.u[i$1];
        f(arg1$1);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i$1 < len$1)) {
        const arg1$2 = x4.u[i$1];
        f(arg1$2);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i$1 < len$1)) {
        const t = x5.u[i$1];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i$1 < len$1)) {
        const arg1$3 = x6.u[i$1];
        f(arg1$3);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i$1 < len$1)) {
        const arg1$4 = x7.u[i$1];
        f($bC(arg1$4));
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i$1 < len$1)) {
        const arg1$5 = x8.u[i$1];
        f(arg1$5);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i$1 < len$1)) {
        const arg1$6 = x9.u[i$1];
        f(arg1$6);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i$1 < len$1)) {
        const arg1$7 = x10.u[i$1];
        f(arg1$7);
        i$1 = ((1 + i$1) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    }
  };
  walkImportAll__Ltigerpython_parser_ast_AstNode$ImportStar__V(importStmt) {
    const $$x1 = this.Ltigerpython_parser_scopes_AstWalker__f_scope;
    const x = importStmt.Ltigerpython_parser_ast_AstNode$ImportStar__f_module.Ltigerpython_parser_ast_AstNode$Name__f_name;
    const len = (x.length | 0);
    const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), len);
    let i = 0;
    while ((i < len)) {
      const index = i;
      const x$1 = (65535 & (x.charCodeAt(index) | 0));
      if ((x$1 !== 63)) {
        const str = String.fromCharCode(x$1);
        sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
      };
      i = ((1 + i) | 0)
    };
    const x1 = $$x1.importModule__T__T__s_Option(((len === sb.length__I()) ? x : sb.jl_StringBuilder__f_java$lang$StringBuilder$$content), null);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const impModule = x2.s_Some__f_value;
      this.Ltigerpython_parser_scopes_AstWalker__f_scope.loadFrom__Ltigerpython_parser_types_DataType__V(impModule)
    } else {
      const x$2 = $m_s_None$();
      if ((!(x$2 === x1))) {
        throw new $c_s_MatchError(x1)
      }
    }
  };
  walkSuite__Ltigerpython_parser_ast_AstNode$Suite__V(suite) {
    const xs = suite.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
    const f = ((this$2) => ((stmt$2) => {
      const stmt = stmt$2;
      this$2.walkNode__Ltigerpython_parser_ast_AstNode__V(stmt)
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    }
  };
  getParameters__Ltigerpython_parser_ast_AstNode$Parameters__ALtigerpython_parser_types_Parameter(params) {
    if ((((params !== null) && (params.Ltigerpython_parser_ast_AstNode$Parameters__f_args !== null)) && (params.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults !== null))) {
      const delta = ((params.Ltigerpython_parser_ast_AstNode$Parameters__f_args.u.length - params.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults.u.length) | 0);
      const this$1 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const $$x1 = $m_sc_ArrayOps$();
      const xs = params.Ltigerpython_parser_ast_AstNode$Parameters__f_args;
      const this$3 = $$x1.indices$extension__O__sci_Range(xs);
      if ((!this$3.sci_Range__f_isEmpty)) {
        let i = this$3.sci_Range__f_start;
        while (true) {
          const arg1 = i;
          const x1 = params.Ltigerpython_parser_ast_AstNode$Parameters__f_args.u[arg1];
          if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$NameParameter)) {
            const x2 = x1;
            const name = x2.Ltigerpython_parser_ast_AstNode$NameParameter__f_name;
            const annotation = x2.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation;
            let dataType;
            if ((annotation !== null)) {
              dataType = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(annotation)
            } else if ((arg1 >= delta)) {
              const expr = params.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults.u[((arg1 - delta) | 0)];
              const x1$2 = this.Ltigerpython_parser_scopes_AstWalker__f_typeWalker.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr);
              const x = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE;
              if ((x === x1$2)) {
                dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
              } else {
                dataType = x1$2
              }
            } else {
              dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
            };
            const elem = new $c_Ltigerpython_parser_types_Parameter(name, dataType);
            result.addOne__O__scm_ArrayBuffer(elem)
          };
          if ((i === this$3.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
            break
          };
          i = ((i + this$3.sci_Range__f_step) | 0)
        }
      };
      if ((params.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs !== null)) {
        const elem$1 = new $c_Ltigerpython_parser_types_Parameter(params.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs.Ltigerpython_parser_ast_AstNode$NameParameter__f_name, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE);
        result.addOne__O__scm_ArrayBuffer(elem$1)
      };
      if ((params.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs !== null)) {
        const elem$2 = new $c_Ltigerpython_parser_types_Parameter(params.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs.Ltigerpython_parser_ast_AstNode$NameParameter__f_name, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE);
        result.addOne__O__scm_ArrayBuffer(elem$2)
      };
      if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
        const len = result.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_types_Parameter.getArrayOf(), [len]);
        result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
        return destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$7 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$7);
        while (it.hasNext__Z()) {
          const elem$3 = it.next__O();
          const unboxedElem = ((elem$3 === null) ? null : elem$3);
          jsElems.push(unboxedElem)
        };
        return $makeNativeArrayWrapper($d_Ltigerpython_parser_types_Parameter.getArrayOf(), jsElems)
      }
    } else {
      const xs$1 = $m_sci_Nil$();
      const len$1 = xs$1.length__I();
      const array = $newArrayObject($d_Ltigerpython_parser_types_Parameter.getArrayOf(), [len$1]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i$1 = 0;
      while (iterator.hasNext__Z()) {
        array.u[i$1] = iterator.next__O();
        i$1 = ((1 + i$1) | 0)
      };
      return array
    }
  };
}
const $d_Ltigerpython_parser_scopes_AstWalker = new $TypeData().initClass({
  Ltigerpython_parser_scopes_AstWalker: 0
}, false, "tigerpython.parser.scopes.AstWalker", {
  Ltigerpython_parser_scopes_AstWalker: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_AstWalker.prototype.$classData = $d_Ltigerpython_parser_scopes_AstWalker;
class $c_Ltigerpython_parser_scopes_BuiltinModules$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_math = null;
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_os = null;
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_sys = null;
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_sys_vars = null;
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_time = null;
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_time_vars = null;
    $n_Ltigerpython_parser_scopes_BuiltinModules$ = this;
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_math = $makeNativeArrayWrapper($d_T.getArrayOf(), ["[float]ceil(x)\nReturn the ceiling of *x* as a float, the smallest integer value greater than or equal to *x*.", "[<echo>]copysign(x, y)\nReturn *x* with the sign of *y*.", "[<echo>]fabs(x)\nReturn the absolute value of *x*.", "[int]factorial(x)\nReturn *x* factorial. Raises :exc:`ValueError` if *x* is not integral or is negative.", "[float]floor(x)\nReturn the floor of *x* as a float, the largest integer value less than or equal to *x*.", "fmod(x, y)\nReturn ``fmod(x, y)``, as defined by the platform C library.", "[tuple]frexp(x)\nReturn the mantissa and exponent of *x* as the pair ``(m, e)``.  *m* is a float and *e* is an integer such that ``x == m * 2**e`` exactly.", "[float]fsum(iterable)\nReturn an accurate floating point sum of values in the iterable. Avoids loss of precision by tracking multiple intermediate partial sums.", "[bool]isinf(x)\nCheck if the float *x* is positive or negative infinity.", "[bool]isnan(x)\nCheck if the float *x* is a NaN (not a number).", "ldexp(x, i)\nReturn ``x * (2**i)``.  This is essentially the inverse of function `frexp`.", "[tuple]modf(x)\nReturn the fractional and integer parts of *x*. Both results carry the sign of *x* and are floats.", "[int]trunc(x)\nReturn the `Real` value *x* truncated to an `Integral` (usually a long integer).", "[float]exp(x)\nReturn ``e**x``.", "[float]expm1(x)\nReturn ``e**x - 1``. For small floats *x*, the subtraction in ``exp(x) - 1`` can result in a significant loss of precision; the :func:`expm1` function provides a way to compute this quantity to full precision.", "[float]log(x, base)\nWith one argument, return the natural logarithm of *x* (to base *e*).\nWith two arguments, return the logarithm of *x* to the given *base*,\ncalculated as ``log(x)/log(base)``.", "[float]log1p(x)\nReturn the natural logarithm of *1+x* (base *e*). The result is calculated in a way which is accurate for *x* near zero.", "[float]log10(x)\nReturn the base-10 logarithm of *x*.  This is usually more accurate than ``log(x, 10)``.", "pow(x, y)\nReturn ``x`` raised to the power ``y``.", "[float]sqrt(x)\nReturn the square root of *x*.", "[float]acos(x)\nReturn the arc cosine of *x*, in radians.", "[float]asin(x)\n Return the arc sine of *x*, in radians.", "[float]atan(x)\n Return the arc tangent of *x*, in radians.", "[float]atan2(y, x)\n Return ``atan(y / x)``, in radians. The result is between ``-pi`` and ``pi``.", "[float]cos(x)\n Return the cosine of *x* radians.", "[float]hypot(x, y)\n Return the Euclidean norm, ``sqrt(x*x + y*y)``.", "[float]sin(x)\n Return the sine of *x* radians.", "[float]tan(x)\n Return the tangent of *x* radians.", "degrees(x)\n Convert angle *x* from radians to degrees.", "radians(x)\n Convert angle *x* from degrees to radians.", "[float]acosh(x)\n Return the inverse hyperbolic cosine of *x*.", "[float]asinh(x)\n Return the inverse hyperbolic sine of *x*.", "[float]atanh(x)\n Return the inverse hyperbolic tangent of *x*.", "[float]cosh(x)\n Return the hyperbolic cosine of *x*.", "[float]sinh(x)\n Return the hyperbolic sine of *x*.", "[float]tanh(x)\n Return the hyperbolic tangent of *x*.", "erf(x)\n Return the error function at *x*.", "erfc(x)\n Return the complementary error function at *x*.", "gamma(x)\n Return the Gamma function at *x*.", "lgamma(x)\n Return the natural logarithm of the absolute value of the Gamma function at *x*."]);
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_os = $makeNativeArrayWrapper($d_T.getArrayOf(), ["chdir(path)\n Change the current working directory to path.", "fchdir(fd)\n Change the current working directory to the directory represented by the file descriptor fd.", "[str]getcwd()\n Return a string representing the current working directory.", "[integer]getpid()\n Return the current process id.", "getenv(varname)\n Return the value of the environment variable varname if it exists.", "putenv(varname, value)\n Set the environment variable named varname to the string value.", "[list]listdir(path)\n Return a list containing the names of the entries in the directory given by path.", "mkdir(path)\n Create a directory named path.", "remove(path)\n Remove (delete) the file path.", "rename(src, dst)\n Rename the file or directory src to dst.", "rmdir(path)\n Remove (delete) the directory path."]);
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_sys = $makeNativeArrayWrapper($d_T.getArrayOf(), ["call_tracing(func, args)\nCall ``func(*args)``, while tracing is enabled.  The tracing state is saved, and restored afterwards. This is intended to be called from a debugger from a checkpoint, to recursively debug some other code.", "_clear_type_cache()\nClear the internal type cache.", "_current_frames()\nReturn a dictionary mapping each thread's identifier to the topmost stack frame currently active in that thread at the time the function is called.", "displayhook(value)\nIf *value* is not ``None``, this function prints it to ``sys.stdout``, and saves it in ``__builtin__._``.", "excepthook(type, value, traceback)\nThis function prints out a given traceback and exception to ``sys.stderr``.", "exc_info()\nThis function returns a tuple of three values that give information about the exception that is currently being handled.", "exc_clear()\nThis function clears all information relating to the current or last exception that occurred in the current thread.", "exit()\nExit from Python.", "getcheckinterval()\nReturn the interpreter's \"check interval\".", "getdefaultencoding()\n Return the name of the current default string encoding used by the Unicode implementation.", "getdlopenflags()\n Return the current value of the flags that are used for `dlopen` calls.", "getfilesystemencoding()\n Return the name of the encoding used to convert Unicode filenames into system file names, or ``None`` if the system default encoding is used.", "[int]getrefcount(object)\n Return the reference count of the *object*.", "[int]getrecursionlimit()\n Return the current value of the recursion limit, the maximum depth of the Python interpreter stack.", "[int]getsizeof(object[, default])\n Return the size of an object in bytes.", "_getframe([depth])\n Return a frame object from the call stack.", "getprofile()\nGet the profiler function as set by :func:`setprofile`.", "gettrace()\nGet the trace function as set by :func:`settrace`.", "[tuple]getwindowsversion()\nReturn a named tuple describing the Windows version currently running.", "setcheckinterval(interval)\n Set the interpreter's \"check interval\".", "setdefaultencoding(name)\n Set the current default string encoding used by the Unicode implementation.", "setdlopenflags(n)\n Set the flags used by the interpreter for :c:func:`dlopen` calls, such as when the interpreter loads extension modules.", "setprofile(profilefunc)\nSet the system's profile function, which allows you to implement a Python source code profiler in Python.", "setrecursionlimit(limit)\n Set the maximum depth of the Python interpreter stack to *limit*.", "settrace(tracefunc)\nSet the system's trace function, which allows you to implement a Python source code debugger in Python.", "settscdump(on_flag)\n Activate dumping of VM measurements using the Pentium timestamp counter, if *on_flag* is true."]);
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_sys_vars = $makeNativeArrayWrapper($d_T.getArrayOf(), ["argv", "byteorder", "builtin_module_names", "copyright", "dllhandle", "dont_write_bytecode", "__displayhook__", "__displayhook__", "exc_type", "exc_value", "exc_traceback", "exec_prefix", "executable", "exitfunc", "flags", "float_info", "float_repr_style", "hexversion", "long_info", "last_type", "last_value", "last_traceback", "maxint", "maxsize", "maxunicode", "meta_path", "modules", "path", "path_hooks", "path_importer_cache", "platform", "prefix", "ps1", "ps2", "py3kwarning", "stdin", "stdout", "stderr", "__stdin__", "__stdout__", "__stderr__", "subversion", "tracebacklimit", "version", "api_version", "version_info", "warnoptions", "winver"]);
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_time = $makeNativeArrayWrapper($d_T.getArrayOf(), ["[str]asctime(t)\n Convert a tuple or struct_time representing a time as returned by gmtime() or localtime() to a 24-character string of the following form: 'Sun Jun 20 23:21:05 1993'. If t is not provided, the current time as returned by localtime() is used. Locale information is not used by asctime().", "[float]clock()\n Return the current processor time as a floating point number expressed in seconds.", "[str]ctime(secs)\n Convert a time expressed in seconds since the epoch to a string representing local time.", "gmtime(secs)\n Convert a time expressed in seconds since the epoch to a struct_time in UTC in which the dst flag is always zero.", "localtime(secs)\n Like gmtime() but converts to local time. If secs is not provided or None, the current time as returned by time() is used.", "[float]mktime(t)\n This is the inverse function of localtime(). Its argument is the struct_time or full 9-tuple which expresses the time in local time, not UTC. It returns a floating point number, for compatibility with time().", "sleep(secs)\n Suspend execution of the current thread for the given number of seconds. The argument may be a floating point number to indicate a more precise sleep time.", "[str]strftime(format, t)\n Convert a tuple or struct_time representing a time as returned by gmtime() or localtime() to a string as specified by the format argument.", "strptime(string)\n Parse a string representing a time according to a format. The return value is a struct_time as returned by gmtime() or localtime().", "[float]time()\n Return the time in seconds since the epoch as a floating point number."]);
    this.Ltigerpython_parser_scopes_BuiltinModules$__f_time_vars = $makeNativeArrayWrapper($d_T.getArrayOf(), ["altzone", "daylight", "timezone", "tzname"])
  };
}
const $d_Ltigerpython_parser_scopes_BuiltinModules$ = new $TypeData().initClass({
  Ltigerpython_parser_scopes_BuiltinModules$: 0
}, false, "tigerpython.parser.scopes.BuiltinModules$", {
  Ltigerpython_parser_scopes_BuiltinModules$: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_BuiltinModules$.prototype.$classData = $d_Ltigerpython_parser_scopes_BuiltinModules$;
let $n_Ltigerpython_parser_scopes_BuiltinModules$ = (void 0);
function $m_Ltigerpython_parser_scopes_BuiltinModules$() {
  if ((!$n_Ltigerpython_parser_scopes_BuiltinModules$)) {
    $n_Ltigerpython_parser_scopes_BuiltinModules$ = new $c_Ltigerpython_parser_scopes_BuiltinModules$()
  };
  return $n_Ltigerpython_parser_scopes_BuiltinModules$
}
class $c_Ltigerpython_parser_scopes_BuiltinNames$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_scopes_BuiltinNames$__f_builtins = null;
    $n_Ltigerpython_parser_scopes_BuiltinNames$ = this;
    this.Ltigerpython_parser_scopes_BuiltinNames$__f_builtins = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    const this$1 = this.Ltigerpython_parser_scopes_BuiltinNames$__f_builtins;
    const xs = $m_Ltigerpython_parser_types_ExceptionTypes$().Ltigerpython_parser_types_ExceptionTypes$__f_errors;
    this$1.addAll__sc_IterableOnce__scm_HashMap(xs);
    const $$x31 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("abs", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Return the absolute value of a number.");
    const $$x30 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("all", $makeNativeArrayWrapper($d_T.getArrayOf(), ["iter"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN, "Return True if all elements of the iterable are true (or if the iterable is empty).");
    const $$x29 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("any", $makeNativeArrayWrapper($d_T.getArrayOf(), ["iterable"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN, "Return True if any element of the iterable is true.");
    const $$x28 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("bin", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "Convert an integer number to a binary string.");
    const $$x27 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("callable", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN, "Return True if the object argument appears callable, False if not.");
    const $$x26 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("chr", $makeNativeArrayWrapper($d_T.getArrayOf(), ["i"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "Return a string of one character whose ASCII code is the integer i. For example, chr(97) returns the string 'a'.");
    const $$x25 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("classmethod", $makeNativeArrayWrapper($d_T.getArrayOf(), ["function"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return a class method for function.");
    const $$x24 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("cmp", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x", "y"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER, "Compare the two objects x and y and return an integer according to the outcome.");
    const $$x23 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("compile", $makeNativeArrayWrapper($d_T.getArrayOf(), ["source", "filename", "mode"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Compile the source into a code or AST object.");
    const $$x22 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("delattr", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object", "name"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE, "This is a relative of setattr(). The arguments are an object and a string. The string must be the name of one of the object\u2019s attributes. The function deletes the named attribute, provided the object allows it.");
    const $$x21 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$1 = $m_sci_Nil$();
    const len = xs$1.length__I();
    const array = $newArrayObject($d_T.getArrayOf(), [len]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    const $$x20 = $$x21.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("dir", array, $m_Ltigerpython_parser_types_ListType$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_ListType($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING), "Without arguments, return the list of names in the current local scope. With an argument, attempt to return a list of valid attributes for that object.");
    const $$x19 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("divmod", $makeNativeArrayWrapper($d_T.getArrayOf(), ["a", "b"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE, "Take two (non complex) numbers as arguments and return a pair of numbers consisting of their quotient and remainder when using long division.");
    const $$x18 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("enumerate", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sequence"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return an enumerate object. sequence must be a sequence, an iterator, or some other object which supports iteration.");
    const $$x17 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("eval", $makeNativeArrayWrapper($d_T.getArrayOf(), ["expression"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "The arguments are a Unicode or Latin-1 encoded string and optional globals and locals.");
    const $$x16 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("execfile", $makeNativeArrayWrapper($d_T.getArrayOf(), ["filename"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "This function is similar to the exec statement, but parses a file instead of a string. It is different from the import statement in that it does not use the module administration - it reads the file unconditionally and does not create a new module.");
    const $$x15 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("filter", $makeNativeArrayWrapper($d_T.getArrayOf(), ["function", "iterable"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST, "Construct a list from those elements of iterable for which function returns true.");
    const $$x14 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("format", $makeNativeArrayWrapper($d_T.getArrayOf(), ["value"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "Convert a value to a \"formatted\" representation, as controlled by format_spec.");
    const $$x13 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("getattr", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object", "name"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return the value of the named attribute of object. name must be a string. If the string is the name of one of the object\u2019s attributes, the result is the value of that attribute.");
    const $$x12 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$2 = $m_sci_Nil$();
    const len$1 = xs$2.length__I();
    const array$1 = $newArrayObject($d_T.getArrayOf(), [len$1]);
    const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$1 = 0;
    while (iterator$1.hasNext__Z()) {
      array$1.u[i$1] = iterator$1.next__O();
      i$1 = ((1 + i$1) | 0)
    };
    const $$x11 = $$x12.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("globals", array$1, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_DICT, "Return a dictionary representing the current global symbol table.");
    const $$x10 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("hasattr", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object", "name"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN, "The arguments are an object and a string. The result is True if the string is the name of one of the object's attributes, False if not.");
    const $$x9 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("hash", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER, "Return the hash value of the object (if it has one). Hash values are integers.");
    const $$x8 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("hex", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "Convert an integer number (of any size) to a lowercase hexadecimal string prefixed with \"0x\".");
    const $$x7 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("id", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER, "Return the \"identity\" of an object. This is an integer (or long integer) which is guaranteed to be unique and constant for this object during its lifetime.");
    const $$x6 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("input", $makeNativeArrayWrapper($d_T.getArrayOf(), ["prompt"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "The function asks the user to input a text or numeric value and returns it as \"str\", \"int\" or \"float\".");
    const $$x5 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isinstance", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object", "classinfo"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN, "Return true if the object argument is an instance of the classinfo argument, or of a (direct, indirect or virtual) subclass thereof.");
    const $$x4 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("issubclass", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object", "classinfo"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN, "Return true if class is a subclass (direct, indirect or virtual) of classinfo.");
    const $$x3 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("iter", $makeNativeArrayWrapper($d_T.getArrayOf(), ["o"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return an iterator object.");
    const $$x2 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("len", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER, "Return the length (the number of items) of an object.");
    const $$x1 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$3 = $m_sci_Nil$();
    const len$2 = xs$3.length__I();
    const array$2 = $newArrayObject($d_T.getArrayOf(), [len$2]);
    const iterator$2 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$2 = 0;
    while (iterator$2.hasNext__Z()) {
      array$2.u[i$2] = iterator$2.next__O();
      i$2 = ((1 + i$2) | 0)
    };
    const array$3 = [$$x31, $$x30, $$x29, $$x28, $$x27, $$x26, $$x25, $$x24, $$x23, $$x22, $$x20, $$x19, $$x18, $$x17, $$x16, $$x15, $$x14, $$x13, $$x11, $$x10, $$x9, $$x8, $$x7, $$x6, $$x5, $$x4, $$x3, $$x2, $$x1.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("locals", array$2, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_DICT, "Update and return a dictionary representing the current local symbol table."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("map", $makeNativeArrayWrapper($d_T.getArrayOf(), ["function", "iterable"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST, "Apply function to every item of iterable and return a list of the results."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("max", $makeNativeArrayWrapper($d_T.getArrayOf(), ["..."]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Return the largest item in an iterable or the largest of two or more arguments."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("min", $makeNativeArrayWrapper($d_T.getArrayOf(), ["..."]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Return the smallest item in an iterable or the smallest of two or more arguments."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("next", $makeNativeArrayWrapper($d_T.getArrayOf(), ["iterator"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Retrieve the next item from the iterator by calling its next() method."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("oct", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "Convert an integer number (of any size) to an octal string."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("open", $makeNativeArrayWrapper($d_T.getArrayOf(), ["name", "mode"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FILE, "Open a file, returning an object of the file type"), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("ord", $makeNativeArrayWrapper($d_T.getArrayOf(), ["c"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER, "Given a string of length one, return an integer representing the Unicode code point of the character when the argument is a unicode object, or the value of the byte when the argument is an 8-bit string."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("property", $makeNativeArrayWrapper($d_T.getArrayOf(), ["fget, fset"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_RETURN_TYPE, "Return a property attribute."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("pow", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x", "y"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return x to the power y; if z is present, return x to the power y, modulo z (computed more efficiently than pow(x, y) % z). The two-argument form pow(x, y) is equivalent to using the power operator: x**y."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("range", $makeNativeArrayWrapper($d_T.getArrayOf(), ["stop:int"]), $m_Ltigerpython_parser_types_ListType$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_ListType($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER), "This is a versatile function to create lists containing arithmetic progressions."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("raw_input", $makeNativeArrayWrapper($d_T.getArrayOf(), ["prompt"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "The function reads a line from input, converts it to a string (stripping a trailing newline), and returns that."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("reduce", $makeNativeArrayWrapper($d_T.getArrayOf(), ["function", "iterable"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST, "Apply function of two arguments cumulatively to the items of iterable, from left to right, so as to reduce the iterable to a single value. For example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates ((((1+2)+3)+4)+5)."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("reload", $makeNativeArrayWrapper($d_T.getArrayOf(), ["module"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Reload a previously imported module."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("repr", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "Return a string containing a printable representation of an object."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("reversed", $makeNativeArrayWrapper($d_T.getArrayOf(), ["seq"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Return a reverse iterator."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("round", $makeNativeArrayWrapper($d_T.getArrayOf(), ["number", "ndigits"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return the floating point value number rounded to ndigits digits after the decimal point. If ndigits is omitted, it defaults to zero."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("setattr", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object", "name", "value"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE, "This is the counterpart of getattr(). The arguments are an object, a string and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("sorted", $makeNativeArrayWrapper($d_T.getArrayOf(), ["iterable"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Return a new sorted list from the items in iterable."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("staticmethod", $makeNativeArrayWrapper($d_T.getArrayOf(), ["function"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Return a static method for function."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("sum", $makeNativeArrayWrapper($d_T.getArrayOf(), ["iterable"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Sums the items of an iterable from left to right and returns the total."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("super", $makeNativeArrayWrapper($d_T.getArrayOf(), ["type", "instance"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_SUPER_TYPE, "Return a proxy object that delegates method calls to a parent or sibling class of type."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("unichr", $makeNativeArrayWrapper($d_T.getArrayOf(), ["i"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING, "Return the Unicode string of one character whose Unicode code is the integer i."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("vars", $makeNativeArrayWrapper($d_T.getArrayOf(), ["object"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return the __dict__ attribute for a module, class, instance, or any other object with a __dict__ attribute."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("xrange", $makeNativeArrayWrapper($d_T.getArrayOf(), ["stop"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "This function is very similar to range(), but returns an xrange object instead of a list."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("zip", $makeNativeArrayWrapper($d_T.getArrayOf(), ["..."]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST, "This function returns a list of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables."), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LONG_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_SET_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TYPE_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_UNICODE_TYPE];
    this.add__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$3));
    const array$4 = [$m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("inputInt", $makeNativeArrayWrapper($d_T.getArrayOf(), ["prompt"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "The function asks the user to input an integer value and returns it."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("inputFloat", $makeNativeArrayWrapper($d_T.getArrayOf(), ["prompt"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "The function asks the user to input a numeric value and returns it."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("inputString", $makeNativeArrayWrapper($d_T.getArrayOf(), ["prompt"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "The function asks the user to input a text value and returns it."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("msgDlg", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Displays the given value(s) in a small dialog window."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("head", $makeNativeArrayWrapper($d_T.getArrayOf(), ["s"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_ITEM_TYPE, "Return the first element of a list or sequence."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("tail", $makeNativeArrayWrapper($d_T.getArrayOf(), ["s"]), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE, "Return the list or sequence without its first element.")];
    this.add__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$4))
  };
  add__sci_Seq__V(names) {
    names.foreach__F1__V(new $c_sjsr_AnonFunction1(((this$1) => ((name$2) => {
      const name = name$2;
      const this$2 = $m_Ltigerpython_parser_scopes_BuiltinNames$().Ltigerpython_parser_scopes_BuiltinNames$__f_builtins;
      const key = name.name__T();
      $p_scm_HashMap__put0__O__O__Z__s_Some(this$2, key, name, false)
    }))(this)))
  };
  hasFunction__T__Z(name) {
    const x1 = this.Ltigerpython_parser_scopes_BuiltinNames$__f_builtins.get__O__s_Option(name);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      if ((x2.s_Some__f_value instanceof $c_Ltigerpython_parser_types_BuiltinFunction)) {
        return true
      }
    };
    return false
  };
}
const $d_Ltigerpython_parser_scopes_BuiltinNames$ = new $TypeData().initClass({
  Ltigerpython_parser_scopes_BuiltinNames$: 0
}, false, "tigerpython.parser.scopes.BuiltinNames$", {
  Ltigerpython_parser_scopes_BuiltinNames$: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_BuiltinNames$.prototype.$classData = $d_Ltigerpython_parser_scopes_BuiltinNames$;
let $n_Ltigerpython_parser_scopes_BuiltinNames$ = (void 0);
function $m_Ltigerpython_parser_scopes_BuiltinNames$() {
  if ((!$n_Ltigerpython_parser_scopes_BuiltinNames$)) {
    $n_Ltigerpython_parser_scopes_BuiltinNames$ = new $c_Ltigerpython_parser_scopes_BuiltinNames$()
  };
  return $n_Ltigerpython_parser_scopes_BuiltinNames$
}
class $c_Ltigerpython_parser_scopes_ExtNameInfo extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_scopes_ExtNameInfo__f_names = null;
    this.Ltigerpython_parser_scopes_ExtNameInfo__f_names = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$())
  };
}
const $d_Ltigerpython_parser_scopes_ExtNameInfo = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ExtNameInfo: 0
}, false, "tigerpython.parser.scopes.ExtNameInfo", {
  Ltigerpython_parser_scopes_ExtNameInfo: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ExtNameInfo.prototype.$classData = $d_Ltigerpython_parser_scopes_ExtNameInfo;
class $c_Ltigerpython_parser_scopes_ModuleLoader extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_scopes_ModuleLoader__f_sourceReaders = null;
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    this.Ltigerpython_parser_scopes_ModuleLoader__f_sourceReaders = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems)
  };
  loadModule__T__Ltigerpython_parser_types_DataType(name) {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      const this$1 = this.Ltigerpython_parser_scopes_ModuleLoader__f_sourceReaders;
      const this$2 = new $c_scm_ArrayBufferView(this$1.scm_ArrayBuffer__f_array, this$1.scm_ArrayBuffer__f_size0);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2);
      while (it.hasNext__Z()) {
        const arg1 = it.next__O();
        const reader = arg1;
        const x1 = reader.getPythonModulePath__T__s_Option(name);
        if ((x1 instanceof $c_s_Some)) {
          const x2 = x1;
          const path = x2.s_Some__f_value;
          throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1, $m_Ltigerpython_parser_types_FutureModule$().apply__T__Ltigerpython_parser_scopes_SourceReader__Ltigerpython_parser_types_FutureModule(path, reader))
        }
      };
      return null
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          return ex.value__O()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  findModule__T__Ltigerpython_parser_types_DataType(name) {
    const x1 = $m_Ltigerpython_parser_scopes_ModuleLoader$().modules__scm_Map().get__O__s_Option(name);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const module = x2.s_Some__f_value;
      return module
    } else {
      const x = $m_s_None$();
      if ((x === x1)) {
        const newModule = this.loadModule__T__Ltigerpython_parser_types_DataType(name);
        if ((newModule !== null)) {
          const this$1 = $m_Ltigerpython_parser_scopes_ModuleLoader$().modules__scm_Map();
          $p_scm_HashMap__put0__O__O__Z__s_Some(this$1, name, newModule, false);
          return newModule
        } else {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
        }
      } else {
        throw new $c_s_MatchError(x1)
      }
    }
  };
  findName__T__s_Option(name) {
    if ($m_sc_StringOps$().contains$extension__T__C__Z(name, 46)) {
      const idx = $f_T__indexOf__I__I(name, 46);
      const base = this.findModule__T__Ltigerpython_parser_types_DataType($m_sc_StringOps$().take$extension__T__I__T(name, idx));
      return ((base !== null) ? base.findField__T__s_Option($m_sc_StringOps$().drop$extension__T__I__T(name, ((1 + idx) | 0))) : $m_s_None$())
    } else {
      return new $c_s_Some(this.findModule__T__Ltigerpython_parser_types_DataType(name))
    }
  };
  importName__T__Ltigerpython_parser_types_DataType(name) {
    if ($m_sc_StringOps$().contains$extension__T__C__Z(name, 46)) {
      const x1 = this.findName__T__s_Option(name);
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const dt = x2.s_Some__f_value;
        return dt
      } else {
        const x = $m_s_None$();
        if ((x === x1)) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
        } else {
          throw new $c_s_MatchError(x1)
        }
      }
    } else {
      return this.findModule__T__Ltigerpython_parser_types_DataType(name)
    }
  };
  importNameFrom__T__T__Ltigerpython_parser_types_DataType(source, name) {
    const x1 = this.findName__T__s_Option(source);
    let this$1;
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const dt = x2.s_Some__f_value;
      this$1 = dt.findField__T__s_Option(name)
    } else {
      const x = $m_s_None$();
      if ((!(x === x1))) {
        throw new $c_s_MatchError(x1)
      };
      this$1 = this.findName__T__s_Option(((source + ".") + name))
    };
    return (this$1.isEmpty__Z() ? $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE : this$1.get__O())
  };
}
const $d_Ltigerpython_parser_scopes_ModuleLoader = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ModuleLoader: 0
}, false, "tigerpython.parser.scopes.ModuleLoader", {
  Ltigerpython_parser_scopes_ModuleLoader: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ModuleLoader.prototype.$classData = $d_Ltigerpython_parser_scopes_ModuleLoader;
const $p_Ltigerpython_parser_scopes_ModuleLoader$__mathModule$lzycompute__Ltigerpython_parser_types_Module = (function($thiz) {
  if (((((1 & $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_mathModule = new $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$1();
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0 = (((1 | $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_mathModule
});
const $p_Ltigerpython_parser_scopes_ModuleLoader$__osModule$lzycompute__Ltigerpython_parser_types_Module = (function($thiz) {
  if (((((2 & $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_osModule = new $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$2();
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0 = (((2 | $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_osModule
});
const $p_Ltigerpython_parser_scopes_ModuleLoader$__sysModule$lzycompute__Ltigerpython_parser_types_Module = (function($thiz) {
  if (((((4 & $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_sysModule = new $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$3();
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0 = (((4 | $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_sysModule
});
const $p_Ltigerpython_parser_scopes_ModuleLoader$__timeModule$lzycompute__Ltigerpython_parser_types_Module = (function($thiz) {
  if (((((8 & $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_timeModule = new $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$4();
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0 = (((8 | $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_timeModule
});
const $p_Ltigerpython_parser_scopes_ModuleLoader$__modules$lzycompute__scm_Map = (function($thiz) {
  if (((((16 & $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0)) {
    const $$x4 = $m_scm_Map$();
    const y = $thiz.mathModule__Ltigerpython_parser_types_Module();
    const $$x3 = $ct_T2__O__O__(new $c_T2(), "math", y);
    const y$1 = $thiz.osModule__Ltigerpython_parser_types_Module();
    const $$x2 = $ct_T2__O__O__(new $c_T2(), "os", y$1);
    const y$2 = $thiz.sysModule__Ltigerpython_parser_types_Module();
    const $$x1 = $ct_T2__O__O__(new $c_T2(), "sys", y$2);
    const y$3 = $thiz.timeModule__Ltigerpython_parser_types_Module();
    const array = [$$x3, $$x2, $$x1, $ct_T2__O__O__(new $c_T2(), "time", y$3)];
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_modules = $$x4.apply__sci_Seq__O(new $c_sjsr_WrappedVarArgs(array));
    $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0 = (((16 | $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.Ltigerpython_parser_scopes_ModuleLoader$__f_modules
});
class $c_Ltigerpython_parser_scopes_ModuleLoader$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_mathModule = null;
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_osModule = null;
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_sysModule = null;
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_timeModule = null;
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_modules = null;
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_defaultModuleLoader = null;
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0 = 0;
    $n_Ltigerpython_parser_scopes_ModuleLoader$ = this;
    this.Ltigerpython_parser_scopes_ModuleLoader$__f_defaultModuleLoader = new $c_Ltigerpython_parser_scopes_ModuleLoader()
  };
  mathModule__Ltigerpython_parser_types_Module() {
    return (((((1 & this.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_scopes_ModuleLoader$__mathModule$lzycompute__Ltigerpython_parser_types_Module(this) : this.Ltigerpython_parser_scopes_ModuleLoader$__f_mathModule)
  };
  osModule__Ltigerpython_parser_types_Module() {
    return (((((2 & this.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_scopes_ModuleLoader$__osModule$lzycompute__Ltigerpython_parser_types_Module(this) : this.Ltigerpython_parser_scopes_ModuleLoader$__f_osModule)
  };
  sysModule__Ltigerpython_parser_types_Module() {
    return (((((4 & this.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_scopes_ModuleLoader$__sysModule$lzycompute__Ltigerpython_parser_types_Module(this) : this.Ltigerpython_parser_scopes_ModuleLoader$__f_sysModule)
  };
  timeModule__Ltigerpython_parser_types_Module() {
    return (((((8 & this.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_scopes_ModuleLoader$__timeModule$lzycompute__Ltigerpython_parser_types_Module(this) : this.Ltigerpython_parser_scopes_ModuleLoader$__f_timeModule)
  };
  modules__scm_Map() {
    return (((((16 & this.Ltigerpython_parser_scopes_ModuleLoader$__f_bitmap$0) << 24) >> 24) === 0) ? $p_Ltigerpython_parser_scopes_ModuleLoader$__modules$lzycompute__scm_Map(this) : this.Ltigerpython_parser_scopes_ModuleLoader$__f_modules)
  };
}
const $d_Ltigerpython_parser_scopes_ModuleLoader$ = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ModuleLoader$: 0
}, false, "tigerpython.parser.scopes.ModuleLoader$", {
  Ltigerpython_parser_scopes_ModuleLoader$: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ModuleLoader$.prototype.$classData = $d_Ltigerpython_parser_scopes_ModuleLoader$;
let $n_Ltigerpython_parser_scopes_ModuleLoader$ = (void 0);
function $m_Ltigerpython_parser_scopes_ModuleLoader$() {
  if ((!$n_Ltigerpython_parser_scopes_ModuleLoader$)) {
    $n_Ltigerpython_parser_scopes_ModuleLoader$ = new $c_Ltigerpython_parser_scopes_ModuleLoader$()
  };
  return $n_Ltigerpython_parser_scopes_ModuleLoader$
}
const $ct_Ltigerpython_parser_scopes_Scope__ = (function($thiz) {
  const this$1 = $m_scm_ArrayBuffer$();
  const elems = $m_sci_Nil$();
  $thiz.Ltigerpython_parser_scopes_Scope__f_subScopes = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
  return $thiz
});
class $c_Ltigerpython_parser_scopes_Scope extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_scopes_Scope__f_parent = null;
    this.Ltigerpython_parser_scopes_Scope__f_subScopes = null
  };
  addScope__Ltigerpython_parser_scopes_Scope__Ltigerpython_parser_scopes_Scope(scope) {
    if ((scope !== null)) {
      const this$1 = this.Ltigerpython_parser_scopes_Scope__f_subScopes;
      this$1.addOne__O__scm_ArrayBuffer(scope);
      scope.Ltigerpython_parser_scopes_Scope__f_parent = this;
      return scope
    } else {
      return null
    }
  };
  findScope__I__s_Option(position) {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      if (((this.endPos__I() === (-1)) || ((this.startPos__I() <= position) && (position <= this.endPos__I())))) {
        const this$1 = this.Ltigerpython_parser_scopes_Scope__f_subScopes;
        const this$2 = new $c_scm_ArrayBufferView(this$1.scm_ArrayBuffer__f_array, this$1.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2);
        while (it.hasNext__Z()) {
          const arg1 = it.next__O();
          const scope = arg1;
          const result = scope.findScope__I__s_Option(position);
          if ((!result.isEmpty__Z())) {
            throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1, result)
          }
        };
        return new $c_s_Some(this)
      } else {
        return $m_s_None$()
      }
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          return ex.value__O()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  getCurrentPath__T() {
    return ((this.Ltigerpython_parser_scopes_Scope__f_parent !== null) ? this.Ltigerpython_parser_scopes_Scope__f_parent.getCurrentPath__T() : "")
  };
  getModule__Ltigerpython_parser_scopes_ModuleScope() {
    return ((this.Ltigerpython_parser_scopes_Scope__f_parent !== null) ? this.Ltigerpython_parser_scopes_Scope__f_parent.getModule__Ltigerpython_parser_scopes_ModuleScope() : null)
  };
  define__Ltigerpython_parser_types_DataType__V(dataType) {
    if ((dataType !== null)) {
      this.define__T__Ltigerpython_parser_types_DataType__V(dataType.name__T(), dataType)
    }
  };
  findLocal__T__s_Option(name) {
    const x1 = this.getLocals__sci_Map().get__O__s_Option(name);
    const x = $m_s_None$();
    if ((x === x1)) {
      if ((this.Ltigerpython_parser_scopes_Scope__f_parent !== null)) {
        return this.Ltigerpython_parser_scopes_Scope__f_parent.findLocal__T__s_Option(name)
      } else {
        const this$2 = $m_Ltigerpython_parser_scopes_BuiltinNames$();
        const this$4 = this$2.Ltigerpython_parser_scopes_BuiltinNames$__f_builtins;
        $m_s_$less$colon$less$();
        return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$4).get__O__s_Option(name)
      }
    } else {
      return x1
    }
  };
  findName__T__s_Option(name) {
    if ($m_sc_StringOps$().contains$extension__T__C__Z(name, 46)) {
      const idx = $f_T__lastIndexOf__I__I(name, 46);
      const x1 = this.findName__T__s_Option($m_sc_StringOps$().take$extension__T__I__T(name, idx));
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const dt = x2.s_Some__f_value;
        return dt.findField__T__s_Option($m_sc_StringOps$().drop$extension__T__I__T(name, ((1 + idx) | 0)))
      } else {
        const x = $m_s_None$();
        if ((x === x1)) {
          return $m_s_None$()
        } else {
          throw new $c_s_MatchError(x1)
        }
      }
    } else {
      return this.findLocal__T__s_Option(name)
    }
  };
  loadFrom__Ltigerpython_parser_types_DataType__V(source) {
    const this$2 = source.getFields__sci_Map();
    const p = new $c_sjsr_AnonFunction1(((this$1) => ((check$ifrefutable$1$2) => {
      const check$ifrefutable$1 = check$ifrefutable$1$2;
      return (check$ifrefutable$1 !== null)
    }))(this));
    const this$4 = new $c_sc_MapOps$WithFilter(this$2, p);
    const f = new $c_sjsr_AnonFunction1(((this$2$1) => ((x$2$2) => {
      const x$2 = x$2$2;
      if ((x$2 !== null)) {
        const name = x$2._1__O();
        const field = x$2._2__O();
        if ((!(((name.length | 0) >= 0) && (name.substring(0, ("_".length | 0)) === "_")))) {
          this$2$1.define__T__Ltigerpython_parser_types_DataType__V(name, field)
        }
      } else {
        throw new $c_s_MatchError(x$2)
      }
    }))(this));
    this$4.filtered__sc_Iterable().foreach__F1__V(f)
  };
  returnType_$eq__Ltigerpython_parser_types_DataType__V(retType) {
    if ((this.Ltigerpython_parser_scopes_Scope__f_parent !== null)) {
      this.Ltigerpython_parser_scopes_Scope__f_parent.returnType_$eq__Ltigerpython_parser_types_DataType__V(retType)
    }
  };
  importModule__T__T__s_Option(moduleName, importName) {
    return ((this.Ltigerpython_parser_scopes_Scope__f_parent !== null) ? this.Ltigerpython_parser_scopes_Scope__f_parent.importModule__T__T__s_Option(moduleName, importName) : (((importName === null) || (importName === "")) ? new $c_s_Some($m_Ltigerpython_parser_scopes_ModuleLoader$().Ltigerpython_parser_scopes_ModuleLoader$__f_defaultModuleLoader.importName__T__Ltigerpython_parser_types_DataType(moduleName)) : new $c_s_Some($m_Ltigerpython_parser_scopes_ModuleLoader$().Ltigerpython_parser_scopes_ModuleLoader$__f_defaultModuleLoader.importNameFrom__T__T__Ltigerpython_parser_types_DataType(moduleName, importName))))
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const array = [$objectGetClass(this).getSimpleName__T(), this.startPos__I(), this.endPos__I()];
    const head = $$x1.format$extension__T__sci_Seq__T("%s(%d, %d)", new $c_sjsr_WrappedVarArgs(array));
    const this$5 = this.Ltigerpython_parser_scopes_Scope__f_subScopes;
    const b = new $c_scm_ArrayBuffer$$anon$1();
    const this$7 = new $c_scm_ArrayBufferView(this$5.scm_ArrayBuffer__f_array, this$5.scm_ArrayBuffer__f_size0);
    const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$7);
    while (it.hasNext__Z()) {
      const arg1 = it.next__O();
      const scope = arg1;
      const this$8 = scope.toString__T();
      const elem = this$8.split("\n").join("\n  ");
      b.addOne__O__scm_GrowableBuilder(elem)
    };
    const scopes = b.scm_GrowableBuilder__f_elems;
    let top;
    if ((!$f_sc_SeqOps__isEmpty__Z(scopes))) {
      const $$x2 = $m_sc_StringOps$();
      const array$1 = [head, $f_sc_IterableOnceOps__mkString__T__T__T__T(scopes, "", "\n  ", "")];
      top = $$x2.format$extension__T__sci_Seq__T("%s\n  %s", new $c_sjsr_WrappedVarArgs(array$1))
    } else {
      top = head
    };
    const this$14 = this.getLocals__sci_Map();
    const p = new $c_sjsr_AnonFunction1(((this$2$1) => ((check$ifrefutable$2$2) => {
      const check$ifrefutable$2 = check$ifrefutable$2$2;
      return (check$ifrefutable$2 !== null)
    }))(this));
    const localNames = new $c_sc_MapOps$WithFilter(this$14, p).map__F1__O(new $c_sjsr_AnonFunction1(((this$3$1) => ((x$3$2) => {
      const x$3 = x$3$2;
      if ((x$3 !== null)) {
        const name = x$3._1__O();
        const dataType = x$3._2__O();
        const $$x3 = $m_sc_StringOps$();
        const array$2 = [name, dataType.toString__T()];
        return $$x3.format$extension__T__sci_Seq__T("%s = %s", new $c_sjsr_WrappedVarArgs(array$2))
      } else {
        throw new $c_s_MatchError(x$3)
      }
    }))(this)));
    if ((!localNames.isEmpty__Z())) {
      const $$x4 = $m_sc_StringOps$();
      const array$3 = [top, $f_sc_IterableOnceOps__mkString__T__T__T__T(localNames, "", "\n  ", "")];
      return $$x4.format$extension__T__sci_Seq__T("%s\n  %s", new $c_sjsr_WrappedVarArgs(array$3))
    } else {
      return top
    }
  };
}
function $isArrayOf_Ltigerpython_parser_scopes_Scope(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_scopes_Scope)))
}
class $c_Ltigerpython_parser_scopes_Scope$ extends $c_O {
  fromAst__T__Ltigerpython_parser_ast_AstNode__Ltigerpython_parser_scopes_ModuleLoader__Ltigerpython_parser_scopes_ModuleScope(moduleName, ast, moduleLoader) {
    const module = $ct_Ltigerpython_parser_types_Module__T__(new $c_Ltigerpython_parser_types_Module(), moduleName);
    const moduleScope = new $c_Ltigerpython_parser_scopes_ModuleScope((-1), module, moduleLoader);
    if ((ast !== null)) {
      const walker = new $c_Ltigerpython_parser_scopes_AstWalker(moduleScope);
      walker.walkNode__Ltigerpython_parser_ast_AstNode__V(ast)
    };
    return moduleScope
  };
}
const $d_Ltigerpython_parser_scopes_Scope$ = new $TypeData().initClass({
  Ltigerpython_parser_scopes_Scope$: 0
}, false, "tigerpython.parser.scopes.Scope$", {
  Ltigerpython_parser_scopes_Scope$: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_Scope$.prototype.$classData = $d_Ltigerpython_parser_scopes_Scope$;
let $n_Ltigerpython_parser_scopes_Scope$ = (void 0);
function $m_Ltigerpython_parser_scopes_Scope$() {
  if ((!$n_Ltigerpython_parser_scopes_Scope$)) {
    $n_Ltigerpython_parser_scopes_Scope$ = new $c_Ltigerpython_parser_scopes_Scope$()
  };
  return $n_Ltigerpython_parser_scopes_Scope$
}
function $is_Ltigerpython_parser_scopes_SourceReader(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ltigerpython_parser_scopes_SourceReader)))
}
function $isArrayOf_Ltigerpython_parser_scopes_SourceReader(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_scopes_SourceReader)))
}
class $c_Ltigerpython_parser_types_BuiltinFunction$ extends $c_O {
  apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction(name, params, returnType, docString) {
    const result = new $c_Ltigerpython_parser_types_BuiltinFunction(name, params, returnType);
    result.Ltigerpython_parser_types_DataType__f__docString = docString;
    return result
  };
  fromString__T__Ltigerpython_parser_types_BuiltinFunction(s) {
    if (((s !== null) && ((s.length | 0) > 0))) {
      let x1$2___1;
      let x1$2___2;
      if (((65535 & (s.charCodeAt(0) | 0)) === 91)) {
        const $$x1 = $m_Ltigerpython_parser_types_BuiltinTypes$();
        const x = $m_sc_StringOps$().drop$extension__T__I__T(s, 1);
        let x1;
        _return: {
          const len = (x.length | 0);
          let i = 0;
          while ((i < len)) {
            const index = i;
            const arg1 = (65535 & (x.charCodeAt(index) | 0));
            if ((arg1 === 93)) {
              x1 = i;
              break _return
            };
            i = ((1 + i) | 0)
          };
          x1 = (-1)
        };
        const _1 = $$x1.fromString__T__Ltigerpython_parser_types_DataType(((x1 === (-1)) ? x : x.substring(0, x1)));
        const $$x2 = $m_sc_StringOps$();
        let x1$1;
        _return$1: {
          const len$1 = (s.length | 0);
          let i$1 = 0;
          while ((i$1 < len$1)) {
            const index$1 = i$1;
            const arg1$1 = (65535 & (s.charCodeAt(index$1) | 0));
            if ((arg1$1 === 93)) {
              x1$1 = i$1;
              break _return$1
            };
            i$1 = ((1 + i$1) | 0)
          };
          x1$1 = (-1)
        };
        const x$1 = ((x1$1 === (-1)) ? "" : s.substring(x1$1));
        const _2 = $$x2.drop$extension__T__I__T(x$1, 1);
        const $$x3___1 = _1;
        const $$x3___2 = _2;
        x1$2___1 = $$x3___1;
        x1$2___2 = $$x3___2
      } else {
        const _1$1 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
        const $$x4___1 = _1$1;
        const $$x4___2 = s;
        x1$2___1 = $$x4___1;
        x1$2___2 = $$x4___2
      };
      const retType = x1$2___1;
      const source = x1$2___2;
      let x1$3;
      _return$2: {
        const len$2 = (source.length | 0);
        let i$2 = 0;
        while ((i$2 < len$2)) {
          const index$2 = i$2;
          const arg1$2 = (65535 & (source.charCodeAt(index$2) | 0));
          if ((arg1$2 === 40)) {
            x1$3 = i$2;
            break _return$2
          };
          i$2 = ((1 + i$2) | 0)
        };
        x1$3 = (-1)
      };
      const name = ((x1$3 === (-1)) ? source : source.substring(0, x1$3));
      const $$x5 = $m_sc_StringOps$();
      const x$2 = $m_sc_StringOps$().drop$extension__T__I__T(source, ((1 + (name.length | 0)) | 0));
      let x1$4;
      _return$3: {
        const len$3 = (x$2.length | 0);
        let i$3 = 0;
        while ((i$3 < len$3)) {
          const index$3 = i$3;
          const arg1$3 = (65535 & (x$2.charCodeAt(index$3) | 0));
          if ((arg1$3 === 41)) {
            x1$4 = i$3;
            break _return$3
          };
          i$3 = ((1 + i$3) | 0)
        };
        x1$4 = (-1)
      };
      const x$3 = ((x1$4 === (-1)) ? x$2 : x$2.substring(0, x1$4));
      const len$4 = (x$3.length | 0);
      const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), len$4);
      let i$4 = 0;
      while ((i$4 < len$4)) {
        const index$4 = i$4;
        const x$4 = (65535 & (x$3.charCodeAt(index$4) | 0));
        if ((x$4 !== 32)) {
          const str = String.fromCharCode(x$4);
          sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
        };
        i$4 = ((1 + i$4) | 0)
      };
      const x$5 = ((len$4 === sb.length__I()) ? x$3 : sb.jl_StringBuilder__f_java$lang$StringBuilder$$content);
      const params = $$x5.split$extension__T__C__AT(x$5, 44);
      let x1$5;
      _return$4: {
        const len$5 = (source.length | 0);
        let i$5 = 0;
        while ((i$5 < len$5)) {
          const index$5 = i$5;
          const arg1$4 = (65535 & (source.charCodeAt(index$5) | 0));
          if ((arg1$4 === 41)) {
            x1$5 = i$5;
            break _return$4
          };
          i$5 = ((1 + i$5) | 0)
        };
        x1$5 = (-1)
      };
      const x$6 = ((x1$5 === (-1)) ? "" : source.substring(x1$5));
      let x1$6;
      _return$5: {
        const len$6 = (x$6.length | 0);
        let i$6 = 0;
        while ((i$6 < len$6)) {
          const index$6 = i$6;
          const arg1$5 = (65535 & (x$6.charCodeAt(index$6) | 0));
          const this$32 = $m_jl_Character$();
          if (this$32.isLetterOrDigit__I__Z(arg1$5)) {
            x1$6 = i$6;
            break _return$5
          };
          i$6 = ((1 + i$6) | 0)
        };
        x1$6 = (-1)
      };
      const docString = ((x1$6 === (-1)) ? "" : x$6.substring(x1$6));
      return this.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction(name, params, retType, docString)
    } else {
      return null
    }
  };
}
const $d_Ltigerpython_parser_types_BuiltinFunction$ = new $TypeData().initClass({
  Ltigerpython_parser_types_BuiltinFunction$: 0
}, false, "tigerpython.parser.types.BuiltinFunction$", {
  Ltigerpython_parser_types_BuiltinFunction$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_BuiltinFunction$.prototype.$classData = $d_Ltigerpython_parser_types_BuiltinFunction$;
let $n_Ltigerpython_parser_types_BuiltinFunction$ = (void 0);
function $m_Ltigerpython_parser_types_BuiltinFunction$() {
  if ((!$n_Ltigerpython_parser_types_BuiltinFunction$)) {
    $n_Ltigerpython_parser_types_BuiltinFunction$ = new $c_Ltigerpython_parser_types_BuiltinFunction$()
  };
  return $n_Ltigerpython_parser_types_BuiltinFunction$
}
class $c_Ltigerpython_parser_types_BuiltinTypes$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_BuiltinTypes$__f_builtins = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO2_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_ITEM_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_RETURN_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SUPER_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_UNKNOWN_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_NUMERIC_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_TYPE_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LONG_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SET_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BUFFER_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_XRANGE_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_UNICODE_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FILE_TYPE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BUFFER = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_DICT = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FILE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LONG = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SET = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING = null;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE = null;
    $n_Ltigerpython_parser_types_BuiltinTypes$ = this;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_builtins = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE = new $c_Ltigerpython_parser_types_AbstractType("<any>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE = new $c_Ltigerpython_parser_types_AbstractType("<echo>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO2_TYPE = new $c_Ltigerpython_parser_types_AbstractType("<echo2>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_ITEM_TYPE = new $c_Ltigerpython_parser_types_AbstractType("<echo-item>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_RETURN_TYPE = new $c_Ltigerpython_parser_types_AbstractType("<echo-return>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SUPER_TYPE = new $c_Ltigerpython_parser_types_AbstractType("<super>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_UNKNOWN_TYPE = new $c_Ltigerpython_parser_types_AbstractType("<unknown>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("NoneType");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_NUMERIC_TYPE = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("<numeric>");
    this.Ltigerpython_parser_types_BuiltinTypes$__f_TYPE_TYPE = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("type");
    const baseType = this.Ltigerpython_parser_types_BuiltinTypes$__f_NUMERIC_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "bool", baseType, baseType.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const baseType$1 = this.Ltigerpython_parser_types_BuiltinTypes$__f_NUMERIC_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "complex", baseType$1, baseType$1.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const baseType$2 = this.Ltigerpython_parser_types_BuiltinTypes$__f_NUMERIC_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "int", baseType$2, baseType$2.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const $$x2 = this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE;
    const $$x1 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs = $m_sci_Nil$();
    const len = xs.length__I();
    const array = $newArrayObject($d_T.getArrayOf(), [len]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    const array$1 = [$$x1.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("bit_length", array, this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "Return the number of bits necessary to represent an integer in binary, excluding the sign and leading zeros.")];
    $$x2.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$1));
    const baseType$3 = this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LONG_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "long", baseType$3, baseType$3.Ltigerpython_parser_types_PrimitiveType__f_fields);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE = new $c_Ltigerpython_parser_types_BuiltinTypes$$anon$1();
    const $$x3 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    const array$2 = [$m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("index", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "index of the first occurrence of x in the sequence"), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("count", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "total number of occurrences of x in the sequence")];
    $$x3.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$2));
    const $$x6 = $m_Ltigerpython_parser_types_PrimitiveType$();
    const $$x5 = $m_sci_Seq$();
    const $$x4 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$1 = $m_sci_Nil$();
    const len$1 = xs$1.length__I();
    const array$3 = $newArrayObject($d_T.getArrayOf(), [len$1]);
    const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$1 = 0;
    while (iterator$1.hasNext__Z()) {
      array$3.u[i$1] = iterator$1.next__O();
      i$1 = ((1 + i$1) | 0)
    };
    const array$4 = [$$x4.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("next", array$3, this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return the next item from the container. If there are no further items, raise the StopIteration exception.")];
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE = $$x6.apply__T__sci_Seq__Ltigerpython_parser_types_PrimitiveType("iterator", $$x5.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array$4)));
    const baseType$4 = this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "generator", baseType$4, baseType$4.Ltigerpython_parser_types_PrimitiveType__f_fields);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("<set>");
    const $$x15 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE;
    const $$x14 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isdisjoint", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return True if the set has no elements in common with other.");
    const $$x13 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("issubset", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Test whether every element in the set is in other.");
    const $$x12 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("issuperset", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Test whether every element in other is in the set.");
    const $$x11 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("union", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE, "Return a new set with elements from the set and all others.");
    const $$x10 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("intersection", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE, "Return a new set with elements common to the set and all others.");
    const $$x9 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("difference", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE, "Return a new set with elements in the set that are not in the others.");
    const $$x8 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("symmetric_difference", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE, "Return a new set with elements in either the set or other but not both.");
    const $$x7 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$2 = $m_sci_Nil$();
    const len$2 = xs$2.length__I();
    const array$5 = $newArrayObject($d_T.getArrayOf(), [len$2]);
    const iterator$2 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$2 = 0;
    while (iterator$2.hasNext__Z()) {
      array$5.u[i$2] = iterator$2.next__O();
      i$2 = ((1 + i$2) | 0)
    };
    const array$6 = [$$x14, $$x13, $$x12, $$x11, $$x10, $$x9, $$x8, $$x7.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("copy", array$5, this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE, "Return a new set with a shallow copy of the set.")];
    $$x15.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$6));
    const $$x28 = $m_Ltigerpython_parser_types_PrimitiveType$();
    const $$x27 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE;
    const $$x26 = $m_sci_Seq$();
    const $$x25 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("update", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Update the set, adding elements from all others.");
    const $$x24 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("intersection_update", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Update the set, keeping only elements found in it and all others.");
    const $$x23 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("difference_update", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Update the set, removing elements found in others.");
    const $$x22 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("symmetric_difference_update", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Update the set, keeping only elements found in either set, but not in both.");
    const $$x21 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("add", $makeNativeArrayWrapper($d_T.getArrayOf(), ["elem"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Add element elem to the set.");
    const $$x20 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("remove", $makeNativeArrayWrapper($d_T.getArrayOf(), ["elem"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Remove element elem from the set. Raises KeyError if elem is not contained in the set.");
    const $$x19 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("discard", $makeNativeArrayWrapper($d_T.getArrayOf(), ["elem"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Remove element elem from the set if it is present.");
    const $$x18 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$3 = $m_sci_Nil$();
    const len$3 = xs$3.length__I();
    const array$7 = $newArrayObject($d_T.getArrayOf(), [len$3]);
    const iterator$3 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$3 = 0;
    while (iterator$3.hasNext__Z()) {
      array$7.u[i$3] = iterator$3.next__O();
      i$3 = ((1 + i$3) | 0)
    };
    const $$x17 = $$x18.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("pop", array$7, this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Remove and return an arbitrary element from the set. Raises KeyError if the set is empty.");
    const $$x16 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$4 = $m_sci_Nil$();
    const len$4 = xs$4.length__I();
    const array$8 = $newArrayObject($d_T.getArrayOf(), [len$4]);
    const iterator$4 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$4 = 0;
    while (iterator$4.hasNext__Z()) {
      array$8.u[i$4] = iterator$4.next__O();
      i$4 = ((1 + i$4) | 0)
    };
    const array$9 = [$$x25, $$x24, $$x23, $$x22, $$x21, $$x20, $$x19, $$x17, $$x16.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("clear", array$8, this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Remove all elements from the set.")];
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SET_TYPE = $$x28.apply__T__Ltigerpython_parser_types_PrimitiveType__sci_Seq__Ltigerpython_parser_types_PrimitiveType("set", $$x27, $$x26.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array$9)));
    const baseType$5 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SETLIKE_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "frozenset", baseType$5, baseType$5.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const baseType$6 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "<mutable-seq>", baseType$6, baseType$6.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const $$x39 = this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ;
    const $$x38 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("append", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ, null);
    const $$x37 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("extend", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ, null);
    const $$x36 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$5 = $m_sci_Nil$();
    const len$5 = xs$5.length__I();
    const array$10 = $newArrayObject($d_T.getArrayOf(), [len$5]);
    const iterator$5 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$5 = 0;
    while (iterator$5.hasNext__Z()) {
      array$10.u[i$5] = iterator$5.next__O();
      i$5 = ((1 + i$5) | 0)
    };
    const $$x35 = $$x36.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("insert", array$10, this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ, null);
    const $$x34 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$6 = $m_sci_Nil$();
    const len$6 = xs$6.length__I();
    const array$11 = $newArrayObject($d_T.getArrayOf(), [len$6]);
    const iterator$6 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$6 = 0;
    while (iterator$6.hasNext__Z()) {
      array$11.u[i$6] = iterator$6.next__O();
      i$6 = ((1 + i$6) | 0)
    };
    const $$x33 = $$x34.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("pop", array$11, this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ, null);
    const $$x32 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("remove", $makeNativeArrayWrapper($d_T.getArrayOf(), ["x"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ, null);
    const $$x31 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$7 = $m_sci_Nil$();
    const len$7 = xs$7.length__I();
    const array$12 = $newArrayObject($d_T.getArrayOf(), [len$7]);
    const iterator$7 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$7 = 0;
    while (iterator$7.hasNext__Z()) {
      array$12.u[i$7] = iterator$7.next__O();
      i$7 = ((1 + i$7) | 0)
    };
    const $$x30 = $$x31.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("reverse", array$12, this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ, "reverses the items of the sequence in place");
    const $$x29 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$8 = $m_sci_Nil$();
    const len$8 = xs$8.length__I();
    const array$13 = $newArrayObject($d_T.getArrayOf(), [len$8]);
    const iterator$8 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$8 = 0;
    while (iterator$8.hasNext__Z()) {
      array$13.u[i$8] = iterator$8.next__O();
      i$8 = ((1 + i$8) | 0)
    };
    const array$14 = [$$x38, $$x37, $$x35, $$x33, $$x32, $$x30, $$x29.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("sort", array$13, this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ, "sort the items of the sequence in place")];
    $$x39.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$14));
    const baseType$7 = this.Ltigerpython_parser_types_BuiltinTypes$__f_MUTABLE_SEQ;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "list", baseType$7, baseType$7.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const $$x43 = this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE;
    const $$x42 = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("first");
    const $$x41 = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("head");
    const $$x40 = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("last");
    const baseType$8 = this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE;
    const array$15 = [$$x42, $$x41, $$x40, $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "tail", baseType$8, baseType$8.Ltigerpython_parser_types_PrimitiveType__f_fields)];
    $$x43.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$15));
    const baseType$9 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "tuple", baseType$9, baseType$9.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const baseType$10 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "bytearray", baseType$10, baseType$10.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const baseType$11 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BUFFER_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "buffer", baseType$11, baseType$11.Ltigerpython_parser_types_PrimitiveType__f_fields);
    const baseType$12 = this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    this.Ltigerpython_parser_types_BuiltinTypes$__f_XRANGE_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "xrange", baseType$12, baseType$12.Ltigerpython_parser_types_PrimitiveType__f_fields);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_UNICODE_TYPE = new $c_Ltigerpython_parser_types_BuiltinTypes$$anon$2();
    this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE = new $c_Ltigerpython_parser_types_BuiltinTypes$$anon$3();
    const $$x98 = this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
    const $$x97 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$9 = $m_sci_Nil$();
    const len$9 = xs$9.length__I();
    const array$16 = $newArrayObject($d_T.getArrayOf(), [len$9]);
    const iterator$9 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$9 = 0;
    while (iterator$9.hasNext__Z()) {
      array$16.u[i$9] = iterator$9.next__O();
      i$9 = ((1 + i$9) | 0)
    };
    const $$x96 = $$x97.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("capitalize", array$16, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with its first character capitalized and the rest lowercased.");
    const $$x95 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("center", $makeNativeArrayWrapper($d_T.getArrayOf(), ["width"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return centered in a string of length width. Padding is done using the specified fillchar (default is a space).");
    const $$x94 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$10 = $m_sci_Nil$();
    const len$10 = xs$10.length__I();
    const array$17 = $newArrayObject($d_T.getArrayOf(), [len$10]);
    const iterator$10 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$10 = 0;
    while (iterator$10.hasNext__Z()) {
      array$17.u[i$10] = iterator$10.next__O();
      i$10 = ((1 + i$10) | 0)
    };
    const $$x93 = $$x94.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("decode", array$17, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Decodes the string using the codec registered for encoding. encoding defaults to the default string encoding.");
    const $$x92 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$11 = $m_sci_Nil$();
    const len$11 = xs$11.length__I();
    const array$18 = $newArrayObject($d_T.getArrayOf(), [len$11]);
    const iterator$11 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$11 = 0;
    while (iterator$11.hasNext__Z()) {
      array$18.u[i$11] = iterator$11.next__O();
      i$11 = ((1 + i$11) | 0)
    };
    const $$x91 = $$x92.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("encode", array$18, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return an encoded version of the string. Default encoding is the current default string encoding.");
    const $$x90 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("endswith", $makeNativeArrayWrapper($d_T.getArrayOf(), ["suffix"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return True if the string ends with the specified suffix, otherwise return False. suffix can also be a tuple of suffixes to look for.");
    const $$x89 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$12 = $m_sci_Nil$();
    const len$12 = xs$12.length__I();
    const array$19 = $newArrayObject($d_T.getArrayOf(), [len$12]);
    const iterator$12 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$12 = 0;
    while (iterator$12.hasNext__Z()) {
      array$19.u[i$12] = iterator$12.next__O();
      i$12 = ((1 + i$12) | 0)
    };
    const $$x88 = $$x89.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("expandtabs", array$19, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string where all tab characters are replaced by one or more spaces, depending on the current column and the given tab size.");
    const $$x87 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("find", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sub"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return the lowest index in the string where substring sub is found.");
    const $$x86 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("format", $makeNativeArrayWrapper($d_T.getArrayOf(), ["..."]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Perform a string formatting operation.");
    const $$x85 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$13 = $m_sci_Nil$();
    const len$13 = xs$13.length__I();
    const array$20 = $newArrayObject($d_T.getArrayOf(), [len$13]);
    const iterator$13 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$13 = 0;
    while (iterator$13.hasNext__Z()) {
      array$20.u[i$13] = iterator$13.next__O();
      i$13 = ((1 + i$13) | 0)
    };
    const $$x84 = $$x85.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isalnum", array$20, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return true if all characters in the string are alphanumeric and there is at least one character, false otherwise.");
    const $$x83 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$14 = $m_sci_Nil$();
    const len$14 = xs$14.length__I();
    const array$21 = $newArrayObject($d_T.getArrayOf(), [len$14]);
    const iterator$14 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$14 = 0;
    while (iterator$14.hasNext__Z()) {
      array$21.u[i$14] = iterator$14.next__O();
      i$14 = ((1 + i$14) | 0)
    };
    const $$x82 = $$x83.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isalpha", array$21, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return true if all characters in the string are alphabetic and there is at least one character, false otherwise.");
    const $$x81 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$15 = $m_sci_Nil$();
    const len$15 = xs$15.length__I();
    const array$22 = $newArrayObject($d_T.getArrayOf(), [len$15]);
    const iterator$15 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$15 = 0;
    while (iterator$15.hasNext__Z()) {
      array$22.u[i$15] = iterator$15.next__O();
      i$15 = ((1 + i$15) | 0)
    };
    const $$x80 = $$x81.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isdigit", array$22, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return true if all characters in the string are digits and there is at least one character, false otherwise.");
    const $$x79 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$16 = $m_sci_Nil$();
    const len$16 = xs$16.length__I();
    const array$23 = $newArrayObject($d_T.getArrayOf(), [len$16]);
    const iterator$16 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$16 = 0;
    while (iterator$16.hasNext__Z()) {
      array$23.u[i$16] = iterator$16.next__O();
      i$16 = ((1 + i$16) | 0)
    };
    const $$x78 = $$x79.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("islower", array$23, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return true if all cased characters in the string are lowercase and there is at least one cased character, false otherwise.");
    const $$x77 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$17 = $m_sci_Nil$();
    const len$17 = xs$17.length__I();
    const array$24 = $newArrayObject($d_T.getArrayOf(), [len$17]);
    const iterator$17 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$17 = 0;
    while (iterator$17.hasNext__Z()) {
      array$24.u[i$17] = iterator$17.next__O();
      i$17 = ((1 + i$17) | 0)
    };
    const $$x76 = $$x77.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isspace", array$24, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return true if there are only whitespace characters in the string and there is at least one character, false otherwise.");
    const $$x75 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$18 = $m_sci_Nil$();
    const len$18 = xs$18.length__I();
    const array$25 = $newArrayObject($d_T.getArrayOf(), [len$18]);
    const iterator$18 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$18 = 0;
    while (iterator$18.hasNext__Z()) {
      array$25.u[i$18] = iterator$18.next__O();
      i$18 = ((1 + i$18) | 0)
    };
    const $$x74 = $$x75.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("istitle", array$25, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return true if the string is a titlecased string and there is at least one character, for example uppercase characters may only follow uncased characters and lowercase characters only cased ones. Return false otherwise.");
    const $$x73 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$19 = $m_sci_Nil$();
    const len$19 = xs$19.length__I();
    const array$26 = $newArrayObject($d_T.getArrayOf(), [len$19]);
    const iterator$19 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$19 = 0;
    while (iterator$19.hasNext__Z()) {
      array$26.u[i$19] = iterator$19.next__O();
      i$19 = ((1 + i$19) | 0)
    };
    const $$x72 = $$x73.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isupper", array$26, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return true if all cased characters in the string are uppercase and there is at least one cased character, false otherwise.");
    const $$x71 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$20 = $m_sci_Nil$();
    const len$20 = xs$20.length__I();
    const array$27 = $newArrayObject($d_T.getArrayOf(), [len$20]);
    const iterator$20 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$20 = 0;
    while (iterator$20.hasNext__Z()) {
      array$27.u[i$20] = iterator$20.next__O();
      i$20 = ((1 + i$20) | 0)
    };
    const $$x70 = $$x71.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("join", array$27, this.Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE, "Return a string which is the concatenation of the strings in the iterable iterable. The separator between elements is the string providing this method.");
    const $$x69 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("ljust", $makeNativeArrayWrapper($d_T.getArrayOf(), ["width"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return the string left justified in a string of length width.");
    const $$x68 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$21 = $m_sci_Nil$();
    const len$21 = xs$21.length__I();
    const array$28 = $newArrayObject($d_T.getArrayOf(), [len$21]);
    const iterator$21 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$21 = 0;
    while (iterator$21.hasNext__Z()) {
      array$28.u[i$21] = iterator$21.next__O();
      i$21 = ((1 + i$21) | 0)
    };
    const $$x67 = $$x68.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("lower", array$28, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with all the cased characters converted to lowercase.");
    const $$x66 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$22 = $m_sci_Nil$();
    const len$22 = xs$22.length__I();
    const array$29 = $newArrayObject($d_T.getArrayOf(), [len$22]);
    const iterator$22 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$22 = 0;
    while (iterator$22.hasNext__Z()) {
      array$29.u[i$22] = iterator$22.next__O();
      i$22 = ((1 + i$22) | 0)
    };
    const $$x65 = $$x66.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("lstrip", array$29, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with leading characters removed.");
    const $$x64 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("partition", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sep"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE, "Split the string at the first occurrence of sep, and return a 3-tuple containing the part before the separator, the separator itself, and the part after the separator.");
    const $$x63 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("replace", $makeNativeArrayWrapper($d_T.getArrayOf(), ["old", "new"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with all occurrences of substring old replaced by new.");
    const $$x62 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("rfind", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sub"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "Return the highest index in the string where substring sub is found.");
    const $$x61 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("rindex", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sub"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "Like rfind() but raises ValueError when the substring sub is not found.");
    const $$x60 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("rjust", $makeNativeArrayWrapper($d_T.getArrayOf(), ["width"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return the string right justified in a string of length width.");
    const $$x59 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("rpartition", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sep"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE, "Split the string at the last occurrence of sep, and return a 3-tuple containing the part before the separator, the separator itself, and the part after the separator.");
    const $$x58 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("rsplit", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sep"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, "Return a list of the words in the string, using sep as the delimiter string.");
    const $$x57 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$23 = $m_sci_Nil$();
    const len$23 = xs$23.length__I();
    const array$30 = $newArrayObject($d_T.getArrayOf(), [len$23]);
    const iterator$23 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$23 = 0;
    while (iterator$23.hasNext__Z()) {
      array$30.u[i$23] = iterator$23.next__O();
      i$23 = ((1 + i$23) | 0)
    };
    const $$x56 = $$x57.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("rstrip", array$30, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with trailing characters removed.");
    const $$x55 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("split", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sep"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, "Return a list of the words in the string, using sep as the delimiter string.");
    const $$x54 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$24 = $m_sci_Nil$();
    const len$24 = xs$24.length__I();
    const array$31 = $newArrayObject($d_T.getArrayOf(), [len$24]);
    const iterator$24 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$24 = 0;
    while (iterator$24.hasNext__Z()) {
      array$31.u[i$24] = iterator$24.next__O();
      i$24 = ((1 + i$24) | 0)
    };
    const $$x53 = $$x54.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("splitlines", array$31, this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, "Return a list of the lines in the string, breaking at line boundaries.");
    const $$x52 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("startswith", $makeNativeArrayWrapper($d_T.getArrayOf(), ["prefix"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return True if string starts with the prefix, otherwise return False. prefix can also be a tuple of prefixes to look for.");
    const $$x51 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$25 = $m_sci_Nil$();
    const len$25 = xs$25.length__I();
    const array$32 = $newArrayObject($d_T.getArrayOf(), [len$25]);
    const iterator$25 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$25 = 0;
    while (iterator$25.hasNext__Z()) {
      array$32.u[i$25] = iterator$25.next__O();
      i$25 = ((1 + i$25) | 0)
    };
    const $$x50 = $$x51.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("strip", array$32, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with the leading and trailing characters removed.");
    const $$x49 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$26 = $m_sci_Nil$();
    const len$26 = xs$26.length__I();
    const array$33 = $newArrayObject($d_T.getArrayOf(), [len$26]);
    const iterator$26 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$26 = 0;
    while (iterator$26.hasNext__Z()) {
      array$33.u[i$26] = iterator$26.next__O();
      i$26 = ((1 + i$26) | 0)
    };
    const $$x48 = $$x49.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("swapcase", array$33, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with uppercase characters converted to lowercase and vice versa.");
    const $$x47 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$27 = $m_sci_Nil$();
    const len$27 = xs$27.length__I();
    const array$34 = $newArrayObject($d_T.getArrayOf(), [len$27]);
    const iterator$27 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$27 = 0;
    while (iterator$27.hasNext__Z()) {
      array$34.u[i$27] = iterator$27.next__O();
      i$27 = ((1 + i$27) | 0)
    };
    const $$x46 = $$x47.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("title", array$34, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a titlecased version of the string where words start with an uppercase character and the remaining characters are lowercase.");
    const $$x45 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("translate", $makeNativeArrayWrapper($d_T.getArrayOf(), ["table"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string where all characters occurring in the optional argument deletechars are removed, and the remaining characters have been mapped through the given translation table, which must be a string of length 256.");
    const $$x44 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$28 = $m_sci_Nil$();
    const len$28 = xs$28.length__I();
    const array$35 = $newArrayObject($d_T.getArrayOf(), [len$28]);
    const iterator$28 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$28 = 0;
    while (iterator$28.hasNext__Z()) {
      array$35.u[i$28] = iterator$28.next__O();
      i$28 = ((1 + i$28) | 0)
    };
    const array$36 = [$$x96, $$x95, $$x93, $$x91, $$x90, $$x88, $$x87, $$x86, $$x84, $$x82, $$x80, $$x78, $$x76, $$x74, $$x72, $$x70, $$x69, $$x67, $$x65, $$x64, $$x63, $$x62, $$x61, $$x60, $$x59, $$x58, $$x56, $$x55, $$x53, $$x52, $$x50, $$x48, $$x46, $$x45, $$x44.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("upper", array$35, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a copy of the string with all the cased characters converted to uppercase."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("zfill", $makeNativeArrayWrapper($d_T.getArrayOf(), ["width"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return the numeric string left filled with zeros in a string of length width.")];
    $$x98.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$36));
    const $$x106 = $m_Ltigerpython_parser_types_PrimitiveType$();
    const $$x105 = this.Ltigerpython_parser_types_BuiltinTypes$__f_NUMERIC_TYPE;
    const $$x104 = $m_sci_Seq$();
    const $$x103 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$29 = $m_sci_Nil$();
    const len$29 = xs$29.length__I();
    const array$37 = $newArrayObject($d_T.getArrayOf(), [len$29]);
    const iterator$29 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$29 = 0;
    while (iterator$29.hasNext__Z()) {
      array$37.u[i$29] = iterator$29.next__O();
      i$29 = ((1 + i$29) | 0)
    };
    const $$x102 = $$x103.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("as_integer_ratio", array$37, this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE, "Return a pair of integers whose ratio is exactly equal to the original float and with a positive denominator.");
    const $$x101 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$30 = $m_sci_Nil$();
    const len$30 = xs$30.length__I();
    const array$38 = $newArrayObject($d_T.getArrayOf(), [len$30]);
    const iterator$30 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$30 = 0;
    while (iterator$30.hasNext__Z()) {
      array$38.u[i$30] = iterator$30.next__O();
      i$30 = ((1 + i$30) | 0)
    };
    const $$x100 = $$x101.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("is_integer", array$38, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return True if the float instance is finite with integral value, and False otherwise.");
    const $$x99 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$31 = $m_sci_Nil$();
    const len$31 = xs$31.length__I();
    const array$39 = $newArrayObject($d_T.getArrayOf(), [len$31]);
    const iterator$31 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$31 = 0;
    while (iterator$31.hasNext__Z()) {
      array$39.u[i$31] = iterator$31.next__O();
      i$31 = ((1 + i$31) | 0)
    };
    const array$40 = [$$x102, $$x100, $$x99.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("hex", array$39, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Return a representation of a floating-point number as a hexadecimal string.")];
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE = $$x106.apply__T__Ltigerpython_parser_types_PrimitiveType__sci_Seq__Ltigerpython_parser_types_PrimitiveType("float", $$x105, $$x104.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array$40)));
    this.Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE = $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType("dict");
    const $$x134 = this.Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE;
    const $$x133 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$32 = $m_sci_Nil$();
    const len$32 = xs$32.length__I();
    const array$41 = $newArrayObject($d_T.getArrayOf(), [len$32]);
    const iterator$32 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$32 = 0;
    while (iterator$32.hasNext__Z()) {
      array$41.u[i$32] = iterator$32.next__O();
      i$32 = ((1 + i$32) | 0)
    };
    const $$x132 = $$x133.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("clear", array$41, this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Remove all items from the dictionary.");
    const $$x131 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$33 = $m_sci_Nil$();
    const len$33 = xs$33.length__I();
    const array$42 = $newArrayObject($d_T.getArrayOf(), [len$33]);
    const iterator$33 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$33 = 0;
    while (iterator$33.hasNext__Z()) {
      array$42.u[i$33] = iterator$33.next__O();
      i$33 = ((1 + i$33) | 0)
    };
    const $$x130 = $$x131.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("copy", array$42, this.Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE, "Return a shallow copy of the dictionary.");
    const $$x129 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("get", $makeNativeArrayWrapper($d_T.getArrayOf(), ["key", "default"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return the value for key if key is in the dictionary, else default. If default is not given, it defaults to None, so that this method never raises a KeyError.");
    const $$x128 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$34 = $m_sci_Nil$();
    const len$34 = xs$34.length__I();
    const array$43 = $newArrayObject($d_T.getArrayOf(), [len$34]);
    const iterator$34 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$34 = 0;
    while (iterator$34.hasNext__Z()) {
      array$43.u[i$34] = iterator$34.next__O();
      i$34 = ((1 + i$34) | 0)
    };
    const $$x127 = $$x128.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("items", array$43, this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, "Return a copy of the dictionary\u2019s list of (key, value) pairs.");
    const $$x126 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$35 = $m_sci_Nil$();
    const len$35 = xs$35.length__I();
    const array$44 = $newArrayObject($d_T.getArrayOf(), [len$35]);
    const iterator$35 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$35 = 0;
    while (iterator$35.hasNext__Z()) {
      array$44.u[i$35] = iterator$35.next__O();
      i$35 = ((1 + i$35) | 0)
    };
    const $$x125 = $$x126.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("iteritems", array$44, this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE, "Return an iterator over the dictionary\u2019s (key, value) pairs.");
    const $$x124 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$36 = $m_sci_Nil$();
    const len$36 = xs$36.length__I();
    const array$45 = $newArrayObject($d_T.getArrayOf(), [len$36]);
    const iterator$36 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$36 = 0;
    while (iterator$36.hasNext__Z()) {
      array$45.u[i$36] = iterator$36.next__O();
      i$36 = ((1 + i$36) | 0)
    };
    const $$x123 = $$x124.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("iterkeys", array$45, this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE, "Return an iterator over the dictionary\u2019s keys.");
    const $$x122 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$37 = $m_sci_Nil$();
    const len$37 = xs$37.length__I();
    const array$46 = $newArrayObject($d_T.getArrayOf(), [len$37]);
    const iterator$37 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$37 = 0;
    while (iterator$37.hasNext__Z()) {
      array$46.u[i$37] = iterator$37.next__O();
      i$37 = ((1 + i$37) | 0)
    };
    const $$x121 = $$x122.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("itervalues", array$46, this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE, "Return an iterator over the dictionary\u2019s values.");
    const $$x120 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$38 = $m_sci_Nil$();
    const len$38 = xs$38.length__I();
    const array$47 = $newArrayObject($d_T.getArrayOf(), [len$38]);
    const iterator$38 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$38 = 0;
    while (iterator$38.hasNext__Z()) {
      array$47.u[i$38] = iterator$38.next__O();
      i$38 = ((1 + i$38) | 0)
    };
    const $$x119 = $$x120.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("keys", array$47, this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, "Return a copy of the dictionary\u2019s list of keys.");
    const $$x118 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("pop", $makeNativeArrayWrapper($d_T.getArrayOf(), ["key", "default"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "If key is in the dictionary, remove it and return its value, else return default. If default is not given and key is not in the dictionary, a KeyError is raised.");
    const $$x117 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$39 = $m_sci_Nil$();
    const len$39 = xs$39.length__I();
    const array$48 = $newArrayObject($d_T.getArrayOf(), [len$39]);
    const iterator$39 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$39 = 0;
    while (iterator$39.hasNext__Z()) {
      array$48.u[i$39] = iterator$39.next__O();
      i$39 = ((1 + i$39) | 0)
    };
    const $$x116 = $$x117.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("popitem", array$48, this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Remove and return an arbitrary (key, value) pair from the dictionary.");
    const $$x115 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("setdefault", $makeNativeArrayWrapper($d_T.getArrayOf(), ["key", "default"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "If key is in the dictionary, return its value. If not, insert key with a value of default and return default. default defaults to None.");
    const $$x114 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("update", $makeNativeArrayWrapper($d_T.getArrayOf(), ["other"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Update the dictionary with the key/value pairs from other, overwriting existing keys. Return None.");
    const $$x113 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$40 = $m_sci_Nil$();
    const len$40 = xs$40.length__I();
    const array$49 = $newArrayObject($d_T.getArrayOf(), [len$40]);
    const iterator$40 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$40 = 0;
    while (iterator$40.hasNext__Z()) {
      array$49.u[i$40] = iterator$40.next__O();
      i$40 = ((1 + i$40) | 0)
    };
    const $$x112 = $$x113.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("values", array$49, this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, "Return a copy of the dictionary\u2019s list of values.");
    const $$x111 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$41 = $m_sci_Nil$();
    const len$41 = xs$41.length__I();
    const array$50 = $newArrayObject($d_T.getArrayOf(), [len$41]);
    const iterator$41 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$41 = 0;
    while (iterator$41.hasNext__Z()) {
      array$50.u[i$41] = iterator$41.next__O();
      i$41 = ((1 + i$41) | 0)
    };
    const $$x110 = $$x111.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("viewitems", array$50, this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return a new view of the dictionary\u2019s items ((key, value) pairs).");
    const $$x109 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$42 = $m_sci_Nil$();
    const len$42 = xs$42.length__I();
    const array$51 = $newArrayObject($d_T.getArrayOf(), [len$42]);
    const iterator$42 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$42 = 0;
    while (iterator$42.hasNext__Z()) {
      array$51.u[i$42] = iterator$42.next__O();
      i$42 = ((1 + i$42) | 0)
    };
    const $$x108 = $$x109.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("viewkeys", array$51, this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return a new view of the dictionary\u2019s keys.");
    const $$x107 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$43 = $m_sci_Nil$();
    const len$43 = xs$43.length__I();
    const array$52 = $newArrayObject($d_T.getArrayOf(), [len$43]);
    const iterator$43 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$43 = 0;
    while (iterator$43.hasNext__Z()) {
      array$52.u[i$43] = iterator$43.next__O();
      i$43 = ((1 + i$43) | 0)
    };
    const array$53 = [$$x132, $$x130, $$x129, $$x127, $$x125, $$x123, $$x121, $$x119, $$x118, $$x116, $$x115, $$x114, $$x112, $$x110, $$x108, $$x107.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("viewvalues", array$52, this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Return a new view of the dictionary\u2019s values.")];
    $$x134.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$53));
    const this$143 = $m_s_Predef$().s_Predef$__f_Map;
    const y = this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE;
    const $$x137 = $ct_T2__O__O__(new $c_T2(), "closed", y);
    const y$1 = this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
    const $$x136 = $ct_T2__O__O__(new $c_T2(), "encoding", y$1);
    const y$2 = this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
    const $$x135 = $ct_T2__O__O__(new $c_T2(), "mode", y$2);
    const y$3 = this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
    const array$54 = [$$x137, $$x136, $$x135, $ct_T2__O__O__(new $c_T2(), "name", y$3)];
    const elems = new $c_sjsr_WrappedVarArgs(array$54);
    const fields = this$143.from__sc_IterableOnce__sci_Map(elems);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FILE_TYPE = $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), "file", null, fields);
    const $$x155 = this.Ltigerpython_parser_types_BuiltinTypes$__f_FILE_TYPE;
    const $$x154 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$44 = $m_sci_Nil$();
    const len$44 = xs$44.length__I();
    const array$55 = $newArrayObject($d_T.getArrayOf(), [len$44]);
    const iterator$44 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$44 = 0;
    while (iterator$44.hasNext__Z()) {
      array$55.u[i$44] = iterator$44.next__O();
      i$44 = ((1 + i$44) | 0)
    };
    const $$x153 = $$x154.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("close", array$55, this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Close the file. A closed file cannot be read or written any more.");
    const $$x152 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$45 = $m_sci_Nil$();
    const len$45 = xs$45.length__I();
    const array$56 = $newArrayObject($d_T.getArrayOf(), [len$45]);
    const iterator$45 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$45 = 0;
    while (iterator$45.hasNext__Z()) {
      array$56.u[i$45] = iterator$45.next__O();
      i$45 = ((1 + i$45) | 0)
    };
    const $$x151 = $$x152.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("flush", array$56, this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Flush the internal buffer.");
    const $$x150 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$46 = $m_sci_Nil$();
    const len$46 = xs$46.length__I();
    const array$57 = $newArrayObject($d_T.getArrayOf(), [len$46]);
    const iterator$46 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$46 = 0;
    while (iterator$46.hasNext__Z()) {
      array$57.u[i$46] = iterator$46.next__O();
      i$46 = ((1 + i$46) | 0)
    };
    const $$x149 = $$x150.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("fileno", array$57, this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "Return the integer \"file descriptor\" that is used by the underlying implementation to request I/O operations from the operating system.");
    const $$x148 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$47 = $m_sci_Nil$();
    const len$47 = xs$47.length__I();
    const array$58 = $newArrayObject($d_T.getArrayOf(), [len$47]);
    const iterator$47 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$47 = 0;
    while (iterator$47.hasNext__Z()) {
      array$58.u[i$47] = iterator$47.next__O();
      i$47 = ((1 + i$47) | 0)
    };
    const $$x147 = $$x148.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("isatty", array$58, this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE, "Return True if the file is connected to a tty(-like) device, else False.");
    const $$x146 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$48 = $m_sci_Nil$();
    const len$48 = xs$48.length__I();
    const array$59 = $newArrayObject($d_T.getArrayOf(), [len$48]);
    const iterator$48 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$48 = 0;
    while (iterator$48.hasNext__Z()) {
      array$59.u[i$48] = iterator$48.next__O();
      i$48 = ((1 + i$48) | 0)
    };
    const $$x145 = $$x146.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("next", array$59, this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "This method returns the next input line.");
    const $$x144 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("read", $makeNativeArrayWrapper($d_T.getArrayOf(), ["size"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE, "Read at most size bytes from the file (less if the read hits EOF before obtaining size bytes). If the size argument is negative or omitted, read all data until EOF is reached.");
    const $$x143 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$49 = $m_sci_Nil$();
    const len$49 = xs$49.length__I();
    const array$60 = $newArrayObject($d_T.getArrayOf(), [len$49]);
    const iterator$49 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$49 = 0;
    while (iterator$49.hasNext__Z()) {
      array$60.u[i$49] = iterator$49.next__O();
      i$49 = ((1 + i$49) | 0)
    };
    const $$x142 = $$x143.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("readline", array$60, this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE, "Read one entire line from the file. A trailing newline character is kept in the string (but may be absent when a file ends with an incomplete line).");
    const $$x141 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$50 = $m_sci_Nil$();
    const len$50 = xs$50.length__I();
    const array$61 = $newArrayObject($d_T.getArrayOf(), [len$50]);
    const iterator$50 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$50 = 0;
    while (iterator$50.hasNext__Z()) {
      array$61.u[i$50] = iterator$50.next__O();
      i$50 = ((1 + i$50) | 0)
    };
    const $$x140 = $$x141.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("readlines", array$61, this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, "Read until EOF using readline() and return a list containing the lines thus read.");
    const $$x139 = $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("seek", $makeNativeArrayWrapper($d_T.getArrayOf(), ["offset"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Set the file's current position. See also: 'tell'.");
    const $$x138 = $m_Ltigerpython_parser_types_BuiltinFunction$();
    const xs$51 = $m_sci_Nil$();
    const len$51 = xs$51.length__I();
    const array$62 = $newArrayObject($d_T.getArrayOf(), [len$51]);
    const iterator$51 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$51 = 0;
    while (iterator$51.hasNext__Z()) {
      array$62.u[i$51] = iterator$51.next__O();
      i$51 = ((1 + i$51) | 0)
    };
    const array$63 = [$$x153, $$x151, $$x149, $$x147, $$x145, $$x144, $$x142, $$x140, $$x139, $$x138.apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("tell", array$62, this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE, "Return the file's current position. See also: 'seek'."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("truncate", $makeNativeArrayWrapper($d_T.getArrayOf(), ["size"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Truncate the file\u2019s size. If the optional size argument is present, the file is truncated to (at most) that size. The size defaults to the current position."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("write", $makeNativeArrayWrapper($d_T.getArrayOf(), ["str"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Write a string to the file."), $m_Ltigerpython_parser_types_BuiltinFunction$().apply__T__AT__Ltigerpython_parser_types_DataType__T__Ltigerpython_parser_types_BuiltinFunction("writelines", $makeNativeArrayWrapper($d_T.getArrayOf(), ["sequence"]), this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE, "Write a sequence of strings to the file.")];
    $$x155.addFields__sci_Seq__V(new $c_sjsr_WrappedVarArgs(array$63));
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BUFFER = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_BUFFER_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_DICT = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FILE = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_FILE_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_LONG = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_LONG_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_SET = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_SET_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE);
    this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE = new $c_Ltigerpython_parser_types_Instance(this.Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE)
  };
  fromString__T__Ltigerpython_parser_types_DataType(s) {
    const this$2 = this.Ltigerpython_parser_types_BuiltinTypes$__f_builtins;
    const f = ((this$1, s$1) => (() => $m_Ltigerpython_parser_types_ExceptionTypes$().byName__T__Ltigerpython_parser_types_PrimitiveType(s$1)))(this, s);
    const x = $objectGetClass(this$2);
    let $$x1;
    if ((!(x === $d_scm_HashMap.getClassOf()))) {
      const x1 = this$2.get__O__s_Option(s);
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const v = x2.s_Some__f_value;
        $$x1 = v
      } else {
        const x$1 = $m_s_None$();
        if ((!(x$1 === x1))) {
          throw new $c_s_MatchError(x1)
        };
        $$x1 = f()
      }
    } else {
      const originalHash = $m_sr_Statics$().anyHash__O__I(s);
      const hash = (originalHash ^ ((originalHash >>> 16) | 0));
      const x1$1 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[(hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0))];
      const nd = ((x1$1 === null) ? null : x1$1.findNode__O__I__scm_HashMap$Node(s, hash));
      $$x1 = ((nd === null) ? f() : nd.scm_HashMap$Node__f__value)
    };
    return $$x1
  };
}
const $d_Ltigerpython_parser_types_BuiltinTypes$ = new $TypeData().initClass({
  Ltigerpython_parser_types_BuiltinTypes$: 0
}, false, "tigerpython.parser.types.BuiltinTypes$", {
  Ltigerpython_parser_types_BuiltinTypes$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_BuiltinTypes$.prototype.$classData = $d_Ltigerpython_parser_types_BuiltinTypes$;
let $n_Ltigerpython_parser_types_BuiltinTypes$ = (void 0);
function $m_Ltigerpython_parser_types_BuiltinTypes$() {
  if ((!$n_Ltigerpython_parser_types_BuiltinTypes$)) {
    $n_Ltigerpython_parser_types_BuiltinTypes$ = new $c_Ltigerpython_parser_types_BuiltinTypes$()
  };
  return $n_Ltigerpython_parser_types_BuiltinTypes$
}
class $c_Ltigerpython_parser_types_DataType extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_DataType__f__docString = null
  };
  docString__T() {
    return this.Ltigerpython_parser_types_DataType__f__docString
  };
  findField__T__s_Option(name) {
    if ($m_sc_StringOps$().contains$extension__T__C__Z(name, 46)) {
      let x1;
      _return: {
        const len = (name.length | 0);
        let i = 0;
        while ((i < len)) {
          const index = i;
          const arg1 = (65535 & (name.charCodeAt(index) | 0));
          if ((arg1 === 46)) {
            x1 = i;
            break _return
          };
          i = ((1 + i) | 0)
        };
        x1 = (-1)
      };
      const prefix = ((x1 === (-1)) ? name : name.substring(0, x1));
      const result = this.getFields__sci_Map().get__O__s_Option(prefix);
      return ((!result.isEmpty__Z()) ? result.get__O().findField__T__s_Option($m_sc_StringOps$().drop$extension__T__I__T(name, ((1 + (prefix.length | 0)) | 0))) : $m_s_None$())
    } else {
      return this.getFields__sci_Map().get__O__s_Option(name)
    }
  };
  getFullName__T() {
    return this.name__T()
  };
  getItemType__Ltigerpython_parser_types_DataType() {
    return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
  };
  getReturnType__Ltigerpython_parser_types_DataType() {
    return this
  };
  isCallable__Z() {
    return false
  };
  isOf__Ltigerpython_parser_types_DataType__Z(dataType) {
    return this.equals__O__Z(dataType)
  };
  toString__T() {
    return this.name__T()
  };
}
function $isArrayOf_Ltigerpython_parser_types_DataType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_DataType)))
}
const $d_Ltigerpython_parser_types_DataType = new $TypeData().initClass({
  Ltigerpython_parser_types_DataType: 0
}, false, "tigerpython.parser.types.DataType", {
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_DataType.prototype.$classData = $d_Ltigerpython_parser_types_DataType;
class $c_Ltigerpython_parser_types_DataType$ extends $c_O {
  getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(type1, type2) {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      if ((!((type1 === null) ? (type2 === null) : type1.equals__O__Z(type2)))) {
        const x$3 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER;
        let $$x2;
        if ((x$3 === type1)) {
          const x$5 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
          $$x2 = (x$5 === type2)
        } else {
          $$x2 = false
        };
        let $$x1;
        if ($$x2) {
          $$x1 = true
        } else {
          const x$7 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
          if ((x$7 === type1)) {
            const x$9 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER;
            $$x1 = (x$9 === type2)
          } else {
            $$x1 = false
          }
        };
        if ($$x1) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT
        };
        const x$11 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX;
        let $$x4;
        if ((x$11 === type1)) {
          const x$13 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
          $$x4 = (x$13 === type2)
        } else {
          $$x4 = false
        };
        let $$x3;
        if ($$x4) {
          $$x3 = true
        } else {
          const x$15 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX;
          let $$x5;
          if ((x$15 === type1)) {
            const x$17 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER;
            $$x5 = (x$17 === type2)
          } else {
            $$x5 = false
          };
          if ($$x5) {
            $$x3 = true
          } else {
            const x$19 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
            let $$x6;
            if ((x$19 === type1)) {
              const x$21 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX;
              $$x6 = (x$21 === type2)
            } else {
              $$x6 = false
            };
            if ($$x6) {
              $$x3 = true
            } else {
              const x$23 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER;
              if ((x$23 === type1)) {
                const x$25 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX;
                $$x3 = (x$25 === type2)
              } else {
                $$x3 = false
              }
            }
          }
        };
        if ($$x3) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX
        };
        if ((type1 instanceof $c_Ltigerpython_parser_types_ListType)) {
          const x50 = type1;
          if ((type2 instanceof $c_Ltigerpython_parser_types_ListType)) {
            const x51 = type2;
            const dt = this.getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(x50.Ltigerpython_parser_types_ListType__f_itemType, x51.Ltigerpython_parser_types_ListType__f_itemType);
            const x$28 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
            if ((!((dt === null) ? (x$28 === null) : dt.equals__O__Z(x$28)))) {
              return $m_Ltigerpython_parser_types_ListType$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_ListType(dt)
            } else {
              return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST
            }
          }
        };
        let $$x8;
        if ((type1 instanceof $c_Ltigerpython_parser_types_ListType)) {
          const x$29 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST;
          $$x8 = (x$29 === type2)
        } else {
          $$x8 = false
        };
        let $$x7;
        if ($$x8) {
          $$x7 = true
        } else {
          const x$31 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST;
          if ((x$31 === type1)) {
            $$x7 = (type2 instanceof $c_Ltigerpython_parser_types_ListType)
          } else {
            $$x7 = false
          }
        };
        if ($$x7) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST
        };
        if ((type1 instanceof $c_Ltigerpython_parser_types_TupleType)) {
          const x56 = type1;
          if ((type2 instanceof $c_Ltigerpython_parser_types_TupleType)) {
            const x57 = type2;
            if ((x56.length__I() === x57.length__I())) {
              const result = $newArrayObject($d_Ltigerpython_parser_types_DataType.getArrayOf(), [x56.length__I()]);
              const this$2 = $m_sc_ArrayOps$().indices$extension__O__sci_Range(result);
              if ((!this$2.sci_Range__f_isEmpty)) {
                let i = this$2.sci_Range__f_start;
                while (true) {
                  const v1 = i;
                  const dt$1 = $m_Ltigerpython_parser_types_DataType$().getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(x56.Ltigerpython_parser_types_TupleType__f_itemTypes.u[v1], x57.Ltigerpython_parser_types_TupleType__f_itemTypes.u[v1]);
                  const x$2 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
                  if ((!((dt$1 === null) ? (x$2 === null) : dt$1.equals__O__Z(x$2)))) {
                    result.u[v1] = dt$1
                  } else {
                    throw $ct_sr_NonLocalReturnControl__O__O__(new $c_sr_NonLocalReturnControl(), nonLocalReturnKey1, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE)
                  };
                  if ((i === this$2.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
                    break
                  };
                  i = ((i + this$2.sci_Range__f_step) | 0)
                }
              };
              return $m_Ltigerpython_parser_types_TupleType$().apply__ALtigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(result)
            }
          }
        };
        let $$x10;
        if ((type1 instanceof $c_Ltigerpython_parser_types_TupleType)) {
          const x$33 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE;
          $$x10 = (x$33 === type2)
        } else {
          $$x10 = false
        };
        let $$x9;
        if ($$x10) {
          $$x9 = true
        } else {
          const x$35 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE;
          if ((x$35 === type1)) {
            $$x9 = (type2 instanceof $c_Ltigerpython_parser_types_TupleType)
          } else {
            $$x9 = false
          }
        };
        if ($$x9) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE
        };
        const x$37 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE;
        let $$x12;
        if ((x$37 === type1)) {
          const x$39 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE;
          $$x12 = (x$39 === type2)
        } else {
          $$x12 = false
        };
        let $$x11;
        if ($$x12) {
          $$x11 = true
        } else {
          const x$41 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE;
          let $$x13;
          if ((x$41 === type1)) {
            const x$43 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE;
            $$x13 = (x$43 === type2)
          } else {
            $$x13 = false
          };
          if ($$x13) {
            $$x11 = true
          } else {
            const x$45 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE;
            let $$x14;
            if ((x$45 === type1)) {
              const x$47 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
              $$x14 = (x$47 === type2)
            } else {
              $$x14 = false
            };
            if ($$x14) {
              $$x11 = true
            } else {
              const x$49 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
              let $$x15;
              if ((x$49 === type1)) {
                const x$51 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE;
                $$x15 = (x$51 === type2)
              } else {
                $$x15 = false
              };
              if ($$x15) {
                $$x11 = true
              } else {
                const x$53 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
                let $$x16;
                if ((x$53 === type1)) {
                  const x$55 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE;
                  $$x16 = (x$55 === type2)
                } else {
                  $$x16 = false
                };
                if ($$x16) {
                  $$x11 = true
                } else {
                  const x$57 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE;
                  if ((x$57 === type1)) {
                    const x$59 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
                    $$x11 = (x$59 === type2)
                  } else {
                    $$x11 = false
                  }
                }
              }
            }
          }
        };
        if ($$x11) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE
        };
        const x$61 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
        let $$x18;
        if ((x$61 === type1)) {
          const x$63 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_UNICODE_TYPE;
          $$x18 = (x$63 === type2)
        } else {
          $$x18 = false
        };
        let $$x17;
        if ($$x18) {
          $$x17 = true
        } else {
          const x$65 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_UNICODE_TYPE;
          if ((x$65 === type1)) {
            const x$67 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
            $$x17 = (x$67 === type2)
          } else {
            $$x17 = false
          }
        };
        if ($$x17) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE
        };
        return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
      } else {
        return ((type1 !== null) ? type1 : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
      }
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          return ex.value__O()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  fromValueType__s_Enumeration$Value__Ltigerpython_parser_types_DataType(valueType) {
    const x = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_COMPLEX;
    if (((x === null) ? (valueType === null) : x.equals__O__Z(valueType))) {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX
    } else {
      const x$3 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_FLOAT;
      if (((x$3 === null) ? (valueType === null) : x$3.equals__O__Z(valueType))) {
        return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT
      } else {
        const x$5 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER;
        if (((x$5 === null) ? (valueType === null) : x$5.equals__O__Z(valueType))) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER
        } else {
          const x$7 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_NONE;
          if (((x$7 === null) ? (valueType === null) : x$7.equals__O__Z(valueType))) {
            return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE
          } else {
            return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_types_DataType$ = new $TypeData().initClass({
  Ltigerpython_parser_types_DataType$: 0
}, false, "tigerpython.parser.types.DataType$", {
  Ltigerpython_parser_types_DataType$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_DataType$.prototype.$classData = $d_Ltigerpython_parser_types_DataType$;
let $n_Ltigerpython_parser_types_DataType$ = (void 0);
function $m_Ltigerpython_parser_types_DataType$() {
  if ((!$n_Ltigerpython_parser_types_DataType$)) {
    $n_Ltigerpython_parser_types_DataType$ = new $c_Ltigerpython_parser_types_DataType$()
  };
  return $n_Ltigerpython_parser_types_DataType$
}
const $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType = (function($thiz, name, base) {
  const result = ((base !== null) ? $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), name, base, base.Ltigerpython_parser_types_PrimitiveType__f_fields) : $m_Ltigerpython_parser_types_PrimitiveType$().apply__T__Ltigerpython_parser_types_PrimitiveType(name));
  const this$2 = $thiz.Ltigerpython_parser_types_ExceptionTypes$__f_errors;
  $p_scm_HashMap__put0__O__O__Z__s_Some(this$2, name, result, false);
  return result
});
class $c_Ltigerpython_parser_types_ExceptionTypes$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_ExceptionTypes$__f_errors = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_BASE_EXCEPTION = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYSTEM_EXIT = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_KEYBOARD_INTERRUPT = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_GENERATOR_EXIT = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_STOP_ITERATION = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_BUFFER_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ARITHMETIC_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_FLOATING_POINT_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_OVERFLOW_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ZERO_DIVISION_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ASSERTION_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ATTRIBUTE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ENVIRONMENT_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_IO_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_OS_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_WINDOWS_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_VMS_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_EOF_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_IMPORT_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_LOOKUP_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_INDEX_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_KEY_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_MEMORY_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_NAME_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNBOUND_LOCAL_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_REFERENCE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_RUNTIME_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_NOT_IMPLEMENTED_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYNTAX_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_INDENTATION_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_TAB_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYSTEM_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_TYPE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_VALUE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_DECODE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_ENCODE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_TRANSLATE_ERROR = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_DEPRECATION_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_PENDING_DEPRECATION_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_RUNTIME_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYNTAX_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_USER_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_FUTURE_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_IMPORT_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_WARNING = null;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_BYTES_WARNING = null;
    $n_Ltigerpython_parser_types_ExceptionTypes$ = this;
    this.Ltigerpython_parser_types_ExceptionTypes$__f_errors = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    this.Ltigerpython_parser_types_ExceptionTypes$__f_BASE_EXCEPTION = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "BaseException", null);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYSTEM_EXIT = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "SystemExit", this.Ltigerpython_parser_types_ExceptionTypes$__f_BASE_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_KEYBOARD_INTERRUPT = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "KeyboardInterrupt", this.Ltigerpython_parser_types_ExceptionTypes$__f_BASE_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_GENERATOR_EXIT = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "GeneratorExit", this.Ltigerpython_parser_types_ExceptionTypes$__f_BASE_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "Exception", this.Ltigerpython_parser_types_ExceptionTypes$__f_BASE_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_STOP_ITERATION = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "StopIteration", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "StandardError", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_BUFFER_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "BufferError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ARITHMETIC_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "ArithmeticError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_FLOATING_POINT_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "FloatingPointError", this.Ltigerpython_parser_types_ExceptionTypes$__f_ARITHMETIC_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_OVERFLOW_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "OverflowError", this.Ltigerpython_parser_types_ExceptionTypes$__f_ARITHMETIC_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ZERO_DIVISION_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "ZeroDivisionError", this.Ltigerpython_parser_types_ExceptionTypes$__f_ARITHMETIC_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ASSERTION_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "AssertionError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ATTRIBUTE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "AttributeError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_ENVIRONMENT_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "EnvironmentError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_IO_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "IOError", this.Ltigerpython_parser_types_ExceptionTypes$__f_ENVIRONMENT_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_OS_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "OSError", this.Ltigerpython_parser_types_ExceptionTypes$__f_ENVIRONMENT_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_WINDOWS_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "WindowsError", this.Ltigerpython_parser_types_ExceptionTypes$__f_OS_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_VMS_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "VMSError", this.Ltigerpython_parser_types_ExceptionTypes$__f_OS_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_EOF_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "EOFError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_IMPORT_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "ImportError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_LOOKUP_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "LookupError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_INDEX_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "IndexError", this.Ltigerpython_parser_types_ExceptionTypes$__f_LOOKUP_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_KEY_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "KeyError", this.Ltigerpython_parser_types_ExceptionTypes$__f_LOOKUP_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_MEMORY_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "MemoryError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_NAME_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "NameError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNBOUND_LOCAL_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "UnboundLocalError", this.Ltigerpython_parser_types_ExceptionTypes$__f_NAME_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_REFERENCE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "ReferenceError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_RUNTIME_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "RuntimeError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_NOT_IMPLEMENTED_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "NotImplementedError", this.Ltigerpython_parser_types_ExceptionTypes$__f_RUNTIME_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYNTAX_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "SyntaxError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_INDENTATION_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "IndentationError", this.Ltigerpython_parser_types_ExceptionTypes$__f_SYNTAX_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_TAB_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "TabError", this.Ltigerpython_parser_types_ExceptionTypes$__f_INDENTATION_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYSTEM_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "SystemError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_TYPE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "TypeError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_VALUE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "ValueError", this.Ltigerpython_parser_types_ExceptionTypes$__f_STANDARD_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "UnicodeError", this.Ltigerpython_parser_types_ExceptionTypes$__f_VALUE_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_DECODE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "UnicodeDecodeError", this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_ENCODE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "UnicodeEncodeError", this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_TRANSLATE_ERROR = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "UnicodeTranslateError", this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_ERROR);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "Warning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_DEPRECATION_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "DeprecationWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_PENDING_DEPRECATION_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "PendingDeprecationWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_RUNTIME_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "RuntimeWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_SYNTAX_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "SyntaxWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_USER_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "UserWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_FUTURE_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "FutureWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_IMPORT_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "ImportWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_UNICODE_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "UnicodeWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION);
    this.Ltigerpython_parser_types_ExceptionTypes$__f_BYTES_WARNING = $p_Ltigerpython_parser_types_ExceptionTypes$__ErrorType__T__Ltigerpython_parser_types_PrimitiveType__Ltigerpython_parser_types_PrimitiveType(this, "BytesWarning", this.Ltigerpython_parser_types_ExceptionTypes$__f_EXCEPTION)
  };
  byName__T__Ltigerpython_parser_types_PrimitiveType(name) {
    const this$2 = this.Ltigerpython_parser_types_ExceptionTypes$__f_errors;
    const f = ((this$1) => (() => null))(this);
    const x = $objectGetClass(this$2);
    let $$x1;
    if ((!(x === $d_scm_HashMap.getClassOf()))) {
      const x1 = this$2.get__O__s_Option(name);
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const v = x2.s_Some__f_value;
        $$x1 = v
      } else {
        const x$1 = $m_s_None$();
        if ((!(x$1 === x1))) {
          throw new $c_s_MatchError(x1)
        };
        $$x1 = f()
      }
    } else {
      const originalHash = $m_sr_Statics$().anyHash__O__I(name);
      const hash = (originalHash ^ ((originalHash >>> 16) | 0));
      const x1$1 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[(hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0))];
      const nd = ((x1$1 === null) ? null : x1$1.findNode__O__I__scm_HashMap$Node(name, hash));
      $$x1 = ((nd === null) ? f() : nd.scm_HashMap$Node__f__value)
    };
    return $$x1
  };
}
const $d_Ltigerpython_parser_types_ExceptionTypes$ = new $TypeData().initClass({
  Ltigerpython_parser_types_ExceptionTypes$: 0
}, false, "tigerpython.parser.types.ExceptionTypes$", {
  Ltigerpython_parser_types_ExceptionTypes$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_ExceptionTypes$.prototype.$classData = $d_Ltigerpython_parser_types_ExceptionTypes$;
let $n_Ltigerpython_parser_types_ExceptionTypes$ = (void 0);
function $m_Ltigerpython_parser_types_ExceptionTypes$() {
  if ((!$n_Ltigerpython_parser_types_ExceptionTypes$)) {
    $n_Ltigerpython_parser_types_ExceptionTypes$ = new $c_Ltigerpython_parser_types_ExceptionTypes$()
  };
  return $n_Ltigerpython_parser_types_ExceptionTypes$
}
const $p_Ltigerpython_parser_types_FutureModule$__extractName__T__T = (function($thiz, path) {
  const _path = ($f_T__endsWith__T__Z(path, "/__init__.py") ? $m_sc_StringOps$().dropRight$extension__T__I__T(path, 12) : $m_sc_StringOps$().dropRight$extension__T__I__T(path, 3));
  const idx = $f_T__lastIndexOf__I__I(_path, 47);
  return ((idx >= 0) ? $m_sc_StringOps$().drop$extension__T__I__T(_path, ((1 + idx) | 0)) : _path)
});
class $c_Ltigerpython_parser_types_FutureModule$ extends $c_O {
  apply__T__Ltigerpython_parser_scopes_SourceReader__Ltigerpython_parser_types_FutureModule(path, sourceReader) {
    return ($f_T__endsWith__T__Z(path, ".py") ? new $c_Ltigerpython_parser_types_FutureModule($p_Ltigerpython_parser_types_FutureModule$__extractName__T__T(this, path), sourceReader, path) : null)
  };
}
const $d_Ltigerpython_parser_types_FutureModule$ = new $TypeData().initClass({
  Ltigerpython_parser_types_FutureModule$: 0
}, false, "tigerpython.parser.types.FutureModule$", {
  Ltigerpython_parser_types_FutureModule$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_FutureModule$.prototype.$classData = $d_Ltigerpython_parser_types_FutureModule$;
let $n_Ltigerpython_parser_types_FutureModule$ = (void 0);
function $m_Ltigerpython_parser_types_FutureModule$() {
  if ((!$n_Ltigerpython_parser_types_FutureModule$)) {
    $n_Ltigerpython_parser_types_FutureModule$ = new $c_Ltigerpython_parser_types_FutureModule$()
  };
  return $n_Ltigerpython_parser_types_FutureModule$
}
class $c_Ltigerpython_parser_types_Instance$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_Instance$__f_instances = null;
    $n_Ltigerpython_parser_types_Instance$ = this;
    const $$x17 = $m_scm_Map$();
    const self = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN_TYPE;
    const y = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN;
    const $$x16 = $ct_T2__O__O__(new $c_T2(), self, y);
    const self$1 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BUFFER_TYPE;
    const y$1 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BUFFER;
    const $$x15 = $ct_T2__O__O__(new $c_T2(), self$1, y$1);
    const self$2 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY_TYPE;
    const y$2 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BYTEARRAY;
    const $$x14 = $ct_T2__O__O__(new $c_T2(), self$2, y$2);
    const self$3 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX_TYPE;
    const y$3 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX;
    const $$x13 = $ct_T2__O__O__(new $c_T2(), self$3, y$3);
    const self$4 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_DICT_TYPE;
    const y$4 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_DICT;
    const $$x12 = $ct_T2__O__O__(new $c_T2(), self$4, y$4);
    const self$5 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FILE_TYPE;
    const y$5 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FILE;
    const $$x11 = $ct_T2__O__O__(new $c_T2(), self$5, y$5);
    const self$6 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE;
    const y$6 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
    const $$x10 = $ct_T2__O__O__(new $c_T2(), self$6, y$6);
    const self$7 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET_TYPE;
    const y$7 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FROZENSET;
    const $$x9 = $ct_T2__O__O__(new $c_T2(), self$7, y$7);
    const self$8 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR_TYPE;
    const y$8 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR;
    const $$x8 = $ct_T2__O__O__(new $c_T2(), self$8, y$8);
    const self$9 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE;
    const y$9 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER;
    const $$x7 = $ct_T2__O__O__(new $c_T2(), self$9, y$9);
    const self$10 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR_TYPE;
    const y$10 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ITERATOR;
    const $$x6 = $ct_T2__O__O__(new $c_T2(), self$10, y$10);
    const self$11 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE;
    const y$11 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST;
    const $$x5 = $ct_T2__O__O__(new $c_T2(), self$11, y$11);
    const self$12 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LONG_TYPE;
    const y$12 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LONG;
    const $$x4 = $ct_T2__O__O__(new $c_T2(), self$12, y$12);
    const self$13 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE;
    const y$13 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE;
    const $$x3 = $ct_T2__O__O__(new $c_T2(), self$13, y$13);
    const self$14 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_SET_TYPE;
    const y$14 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_SET;
    const $$x2 = $ct_T2__O__O__(new $c_T2(), self$14, y$14);
    const self$15 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING_TYPE;
    const y$15 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING;
    const $$x1 = $ct_T2__O__O__(new $c_T2(), self$15, y$15);
    const self$16 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE;
    const y$16 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE;
    const array = [$$x16, $$x15, $$x14, $$x13, $$x12, $$x11, $$x10, $$x9, $$x8, $$x7, $$x6, $$x5, $$x4, $$x3, $$x2, $$x1, $ct_T2__O__O__(new $c_T2(), self$16, y$16)];
    this.Ltigerpython_parser_types_Instance$__f_instances = $$x17.apply__sci_Seq__O(new $c_sjsr_WrappedVarArgs(array))
  };
  apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(baseType) {
    if ((baseType instanceof $c_Ltigerpython_parser_types_TupleType)) {
      const x2 = baseType;
      return x2
    } else if ((baseType instanceof $c_Ltigerpython_parser_types_ListType)) {
      const x3 = baseType;
      return x3
    } else if ((baseType instanceof $c_Ltigerpython_parser_types_ClassType)) {
      const x4 = baseType;
      const this$2 = this.Ltigerpython_parser_types_Instance$__f_instances;
      const f = ((this$1, x4$1) => (() => new $c_Ltigerpython_parser_types_Instance(x4$1)))(this, x4);
      const x = $objectGetClass(this$2);
      let $$x1;
      if ((!(x === $d_scm_HashMap.getClassOf()))) {
        const x1 = this$2.get__O__s_Option(x4);
        if ((x1 instanceof $c_s_Some)) {
          const x2$1 = x1;
          const v = x2$1.s_Some__f_value;
          $$x1 = v
        } else {
          const x$1 = $m_s_None$();
          if ((!(x$1 === x1))) {
            throw new $c_s_MatchError(x1)
          };
          const d = f();
          $p_scm_HashMap__put0__O__O__Z__s_Some(this$2, x4, d, false);
          $$x1 = d
        }
      } else {
        const originalHash = $m_sr_Statics$().anyHash__O__I(x4);
        const hash = (originalHash ^ ((originalHash >>> 16) | 0));
        const idx = (hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
        const x1$1 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx];
        const nd = ((x1$1 === null) ? null : x1$1.findNode__O__I__scm_HashMap$Node(x4, hash));
        if ((nd !== null)) {
          $$x1 = nd.scm_HashMap$Node__f__value
        } else {
          const table0 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table;
          const default$1 = f();
          if ((((1 + this$2.scm_HashMap__f_contentSize) | 0) >= this$2.scm_HashMap__f_threshold)) {
            $p_scm_HashMap__growTable__I__V(this$2, (this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length << 1))
          };
          const newIdx = ((table0 === this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table) ? idx : (hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0)));
          $p_scm_HashMap__put0__O__O__Z__I__I__s_Some(this$2, x4, default$1, false, hash, newIdx);
          $$x1 = default$1
        }
      };
      return $$x1
    } else if ((baseType instanceof $c_Ltigerpython_parser_types_Instance)) {
      const x5 = baseType;
      return x5
    } else {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
    }
  };
}
const $d_Ltigerpython_parser_types_Instance$ = new $TypeData().initClass({
  Ltigerpython_parser_types_Instance$: 0
}, false, "tigerpython.parser.types.Instance$", {
  Ltigerpython_parser_types_Instance$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_Instance$.prototype.$classData = $d_Ltigerpython_parser_types_Instance$;
let $n_Ltigerpython_parser_types_Instance$ = (void 0);
function $m_Ltigerpython_parser_types_Instance$() {
  if ((!$n_Ltigerpython_parser_types_Instance$)) {
    $n_Ltigerpython_parser_types_Instance$ = new $c_Ltigerpython_parser_types_Instance$()
  };
  return $n_Ltigerpython_parser_types_Instance$
}
class $c_Ltigerpython_parser_types_ListType$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_ListType$__f_listTypes = null;
    $n_Ltigerpython_parser_types_ListType$ = this;
    this.Ltigerpython_parser_types_ListType$__f_listTypes = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$())
  };
  apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_ListType(itemType) {
    const this$2 = this.Ltigerpython_parser_types_ListType$__f_listTypes;
    const f = ((this$1, itemType$1) => (() => new $c_Ltigerpython_parser_types_ListType(itemType$1)))(this, itemType);
    const x = $objectGetClass(this$2);
    let $$x1;
    if ((!(x === $d_scm_HashMap.getClassOf()))) {
      const x1 = this$2.get__O__s_Option(itemType);
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const v = x2.s_Some__f_value;
        $$x1 = v
      } else {
        const x$1 = $m_s_None$();
        if ((!(x$1 === x1))) {
          throw new $c_s_MatchError(x1)
        };
        const d = f();
        $p_scm_HashMap__put0__O__O__Z__s_Some(this$2, itemType, d, false);
        $$x1 = d
      }
    } else {
      const originalHash = $m_sr_Statics$().anyHash__O__I(itemType);
      const hash = (originalHash ^ ((originalHash >>> 16) | 0));
      const idx = (hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
      const x1$1 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx];
      const nd = ((x1$1 === null) ? null : x1$1.findNode__O__I__scm_HashMap$Node(itemType, hash));
      if ((nd !== null)) {
        $$x1 = nd.scm_HashMap$Node__f__value
      } else {
        const table0 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table;
        const default$1 = f();
        if ((((1 + this$2.scm_HashMap__f_contentSize) | 0) >= this$2.scm_HashMap__f_threshold)) {
          $p_scm_HashMap__growTable__I__V(this$2, (this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length << 1))
        };
        const newIdx = ((table0 === this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table) ? idx : (hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0)));
        $p_scm_HashMap__put0__O__O__Z__I__I__s_Some(this$2, itemType, default$1, false, hash, newIdx);
        $$x1 = default$1
      }
    };
    return $$x1
  };
}
const $d_Ltigerpython_parser_types_ListType$ = new $TypeData().initClass({
  Ltigerpython_parser_types_ListType$: 0
}, false, "tigerpython.parser.types.ListType$", {
  Ltigerpython_parser_types_ListType$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_ListType$.prototype.$classData = $d_Ltigerpython_parser_types_ListType$;
let $n_Ltigerpython_parser_types_ListType$ = (void 0);
function $m_Ltigerpython_parser_types_ListType$() {
  if ((!$n_Ltigerpython_parser_types_ListType$)) {
    $n_Ltigerpython_parser_types_ListType$ = new $c_Ltigerpython_parser_types_ListType$()
  };
  return $n_Ltigerpython_parser_types_ListType$
}
class $c_Ltigerpython_parser_types_NameMap extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_NameMap__f_map = null;
    this.Ltigerpython_parser_types_NameMap__f_map = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$())
  };
  update__T__Ltigerpython_parser_types_DataType__V(key, value) {
    const x1 = this.Ltigerpython_parser_types_NameMap__f_map.get__O__s_Option(key);
    matchEnd4: {
      if ((x1 instanceof $c_s_Some)) {
        const x2 = x1;
        const oldValue = x2.s_Some__f_value;
        if ((!((oldValue === null) ? (value === null) : oldValue.equals__O__Z(value)))) {
          const this$1 = this.Ltigerpython_parser_types_NameMap__f_map;
          const value$1 = $m_Ltigerpython_parser_types_DataType$().getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(value, oldValue);
          $p_scm_HashMap__put0__O__O__Z__s_Some(this$1, key, value$1, false);
          break matchEnd4
        }
      };
      const this$2 = this.Ltigerpython_parser_types_NameMap__f_map;
      $p_scm_HashMap__put0__O__O__Z__s_Some(this$2, key, value, false)
    }
  };
  $plus$plus$eq__sci_Map__Ltigerpython_parser_types_NameMap(xs) {
    const this$1 = this.Ltigerpython_parser_types_NameMap__f_map;
    this$1.addAll__sc_IterableOnce__scm_HashMap(xs);
    return this
  };
}
const $d_Ltigerpython_parser_types_NameMap = new $TypeData().initClass({
  Ltigerpython_parser_types_NameMap: 0
}, false, "tigerpython.parser.types.NameMap", {
  Ltigerpython_parser_types_NameMap: 1,
  O: 1
});
$c_Ltigerpython_parser_types_NameMap.prototype.$classData = $d_Ltigerpython_parser_types_NameMap;
class $c_Ltigerpython_parser_types_PrimitiveType$ extends $c_O {
  apply__T__Ltigerpython_parser_types_PrimitiveType(name) {
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    return $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), name, null, this$1.from__sc_IterableOnce__sci_Map(elems))
  };
  apply__T__sci_Seq__Ltigerpython_parser_types_PrimitiveType(name, fields) {
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    const this$5 = this$1.from__sc_IterableOnce__sci_Map(elems);
    const xs = fields.map__F1__O(new $c_sjsr_AnonFunction1(((this$2) => ((item$2) => {
      const item = item$2;
      const self = item.name__T();
      return $ct_T2__O__O__(new $c_T2(), self, item)
    }))(this)));
    return $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), name, null, this$5.concat__sc_IterableOnce__sc_IterableOps(xs))
  };
  apply__T__Ltigerpython_parser_types_PrimitiveType__sci_Seq__Ltigerpython_parser_types_PrimitiveType(name, baseType, fields) {
    const this$4 = baseType.Ltigerpython_parser_types_PrimitiveType__f_fields;
    const xs = fields.map__F1__O(new $c_sjsr_AnonFunction1(((this$1) => ((item$2) => {
      const item = item$2;
      const self = item.name__T();
      return $ct_T2__O__O__(new $c_T2(), self, item)
    }))(this)));
    return $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(new $c_Ltigerpython_parser_types_PrimitiveType(), name, baseType, this$4.concat__sc_IterableOnce__sc_IterableOps(xs))
  };
}
const $d_Ltigerpython_parser_types_PrimitiveType$ = new $TypeData().initClass({
  Ltigerpython_parser_types_PrimitiveType$: 0
}, false, "tigerpython.parser.types.PrimitiveType$", {
  Ltigerpython_parser_types_PrimitiveType$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_PrimitiveType$.prototype.$classData = $d_Ltigerpython_parser_types_PrimitiveType$;
let $n_Ltigerpython_parser_types_PrimitiveType$ = (void 0);
function $m_Ltigerpython_parser_types_PrimitiveType$() {
  if ((!$n_Ltigerpython_parser_types_PrimitiveType$)) {
    $n_Ltigerpython_parser_types_PrimitiveType$ = new $c_Ltigerpython_parser_types_PrimitiveType$()
  };
  return $n_Ltigerpython_parser_types_PrimitiveType$
}
class $c_Ltigerpython_parser_types_TupleType$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_TupleType$__f_tuples1 = null;
    this.Ltigerpython_parser_types_TupleType$__f_tuples2 = null;
    $n_Ltigerpython_parser_types_TupleType$ = this;
    this.Ltigerpython_parser_types_TupleType$__f_tuples1 = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    this.Ltigerpython_parser_types_TupleType$__f_tuples2 = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$())
  };
  apply__ALtigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(itemTypes) {
    const x1 = itemTypes.u.length;
    switch (x1) {
      case 0: {
        return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE;
        break
      }
      case 1: {
        const this$2 = this.Ltigerpython_parser_types_TupleType$__f_tuples1;
        const key = itemTypes.u[0];
        const f = ((this$1, itemTypes$1) => (() => new $c_Ltigerpython_parser_types_TupleType(itemTypes$1)))(this, itemTypes);
        const x = $objectGetClass(this$2);
        let $$x1;
        if ((!(x === $d_scm_HashMap.getClassOf()))) {
          const x1$1 = this$2.get__O__s_Option(key);
          if ((x1$1 instanceof $c_s_Some)) {
            const x2 = x1$1;
            const v = x2.s_Some__f_value;
            $$x1 = v
          } else {
            const x$1 = $m_s_None$();
            if ((!(x$1 === x1$1))) {
              throw new $c_s_MatchError(x1$1)
            };
            const d = f();
            $p_scm_HashMap__put0__O__O__Z__s_Some(this$2, key, d, false);
            $$x1 = d
          }
        } else {
          const originalHash = $m_sr_Statics$().anyHash__O__I(key);
          const hash = (originalHash ^ ((originalHash >>> 16) | 0));
          const idx = (hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
          const x1$2 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx];
          const nd = ((x1$2 === null) ? null : x1$2.findNode__O__I__scm_HashMap$Node(key, hash));
          if ((nd !== null)) {
            $$x1 = nd.scm_HashMap$Node__f__value
          } else {
            const table0 = this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table;
            const default$1 = f();
            if ((((1 + this$2.scm_HashMap__f_contentSize) | 0) >= this$2.scm_HashMap__f_threshold)) {
              $p_scm_HashMap__growTable__I__V(this$2, (this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length << 1))
            };
            const newIdx = ((table0 === this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table) ? idx : (hash & (((-1) + this$2.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0)));
            $p_scm_HashMap__put0__O__O__Z__I__I__s_Some(this$2, key, default$1, false, hash, newIdx);
            $$x1 = default$1
          }
        };
        return $$x1;
        break
      }
      case 2: {
        const this$3 = this.Ltigerpython_parser_types_TupleType$__f_tuples2;
        const key$1 = $ct_T2__O__O__(new $c_T2(), itemTypes.u[0], itemTypes.u[1]);
        const f$1 = ((this$2$1, itemTypes$2) => (() => new $c_Ltigerpython_parser_types_TupleType(itemTypes$2)))(this, itemTypes);
        const x$2 = $objectGetClass(this$3);
        let $$x2;
        if ((!(x$2 === $d_scm_HashMap.getClassOf()))) {
          const x1$3 = this$3.get__O__s_Option(key$1);
          if ((x1$3 instanceof $c_s_Some)) {
            const x2$1 = x1$3;
            const v$1 = x2$1.s_Some__f_value;
            $$x2 = v$1
          } else {
            const x$3 = $m_s_None$();
            if ((!(x$3 === x1$3))) {
              throw new $c_s_MatchError(x1$3)
            };
            const d$1 = f$1();
            $p_scm_HashMap__put0__O__O__Z__s_Some(this$3, key$1, d$1, false);
            $$x2 = d$1
          }
        } else {
          const originalHash$1 = $m_sr_Statics$().anyHash__O__I(key$1);
          const hash$1 = (originalHash$1 ^ ((originalHash$1 >>> 16) | 0));
          const idx$1 = (hash$1 & (((-1) + this$3.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
          const x1$4 = this$3.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx$1];
          const nd$1 = ((x1$4 === null) ? null : x1$4.findNode__O__I__scm_HashMap$Node(key$1, hash$1));
          if ((nd$1 !== null)) {
            $$x2 = nd$1.scm_HashMap$Node__f__value
          } else {
            const table0$1 = this$3.scm_HashMap__f_scala$collection$mutable$HashMap$$table;
            const default$2 = f$1();
            if ((((1 + this$3.scm_HashMap__f_contentSize) | 0) >= this$3.scm_HashMap__f_threshold)) {
              $p_scm_HashMap__growTable__I__V(this$3, (this$3.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length << 1))
            };
            const newIdx$1 = ((table0$1 === this$3.scm_HashMap__f_scala$collection$mutable$HashMap$$table) ? idx$1 : (hash$1 & (((-1) + this$3.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0)));
            $p_scm_HashMap__put0__O__O__Z__I__I__s_Some(this$3, key$1, default$2, false, hash$1, newIdx$1);
            $$x2 = default$2
          }
        };
        return $$x2;
        break
      }
      default: {
        return new $c_Ltigerpython_parser_types_TupleType(itemTypes)
      }
    }
  };
}
const $d_Ltigerpython_parser_types_TupleType$ = new $TypeData().initClass({
  Ltigerpython_parser_types_TupleType$: 0
}, false, "tigerpython.parser.types.TupleType$", {
  Ltigerpython_parser_types_TupleType$: 1,
  O: 1
});
$c_Ltigerpython_parser_types_TupleType$.prototype.$classData = $d_Ltigerpython_parser_types_TupleType$;
let $n_Ltigerpython_parser_types_TupleType$ = (void 0);
function $m_Ltigerpython_parser_types_TupleType$() {
  if ((!$n_Ltigerpython_parser_types_TupleType$)) {
    $n_Ltigerpython_parser_types_TupleType$ = new $c_Ltigerpython_parser_types_TupleType$()
  };
  return $n_Ltigerpython_parser_types_TupleType$
}
const $ct_Ltigerpython_parser_types_TypeAstWalker__ = (function($thiz) {
  const elems = $m_sci_Nil$();
  const this$2 = new $c_scm_Stack(16);
  $thiz.Ltigerpython_parser_types_TypeAstWalker__f_paramStack = this$2.addAll__sc_IterableOnce__scm_ArrayDeque(elems);
  return $thiz
});
class $c_Ltigerpython_parser_types_TypeAstWalker extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_types_TypeAstWalker__f_paramStack = null
  };
  findName__T__s_Option(name) {
    const this$1 = this.Ltigerpython_parser_types_TypeAstWalker__f_paramStack;
    let x1;
    _return: {
      const this$2 = new $c_sc_IndexedSeqView$Id(this$1);
      const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2);
      while (it.hasNext__Z()) {
        const a = it.next__O();
        const x$1 = a;
        if ((x$1.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_name === name)) {
          x1 = new $c_s_Some(a);
          break _return
        }
      };
      x1 = $m_s_None$()
    };
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const param = x2.s_Some__f_value;
      return new $c_s_Some(param.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_dataType)
    } else {
      return $m_s_None$()
    }
  };
  getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(expr) {
    if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)) {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue)) {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
      const x5 = expr;
      return this.getTypeOfAttr__Ltigerpython_parser_ast_AstNode$Attribute__Ltigerpython_parser_types_DataType(x5)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Await)) {
      const x6 = expr;
      return this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(x6.Ltigerpython_parser_ast_AstNode$Await__f_expr)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
      const x7 = expr;
      return this.getTypeOfBinaryOp__Ltigerpython_parser_ast_AstNode$BinaryOp__Ltigerpython_parser_types_DataType(x7)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const x8 = expr;
      return this.getTypeOfCall__Ltigerpython_parser_ast_AstNode$Call__Ltigerpython_parser_types_DataType(x8)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$IfExpr)) {
      const x9 = expr;
      return $m_Ltigerpython_parser_types_DataType$().getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(x9.Ltigerpython_parser_ast_AstNode$IfExpr__f_body), this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(x9.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody))
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Lambda)) {
      const x10 = expr;
      return this.getTypeOfLambda__Ltigerpython_parser_ast_AstNode$Lambda__Ltigerpython_parser_types_DataType(x10)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$List)) {
      const x11 = expr;
      return this.getTypeOfList__Ltigerpython_parser_ast_AstNode$List__Ltigerpython_parser_types_DataType(x11)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$ListComp)) {
      const x12 = expr;
      return this.getTypeOfListComp__Ltigerpython_parser_ast_AstNode$ListComp__Ltigerpython_parser_types_DataType(x12)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x13 = expr;
      const dataType = this.findName__T__s_Option(x13.Ltigerpython_parser_ast_AstNode$Name__f_name);
      return ((!dataType.isEmpty__Z()) ? dataType.get__O() : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript)) {
      const x14 = expr;
      return this.getTypeOfSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Ltigerpython_parser_types_DataType(x14)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
      const x15 = expr;
      return this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(x15.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr)
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
      const x16 = expr;
      return $m_Ltigerpython_parser_types_DataType$().fromValueType__s_Enumeration$Value__Ltigerpython_parser_types_DataType(x16.Ltigerpython_parser_ast_AstNode$Value__f_valueType)
    } else {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
    }
  };
  getTypeOfAttr__Ltigerpython_parser_ast_AstNode$Attribute__Ltigerpython_parser_types_DataType(attr) {
    const x1 = this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(attr.Ltigerpython_parser_ast_AstNode$Attribute__f_base).findField__T__s_Option(attr.Ltigerpython_parser_ast_AstNode$Attribute__f_attr.Ltigerpython_parser_ast_AstNode$Name__f_name);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const result = x2.s_Some__f_value;
      return ((result !== null) ? result : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
    } else {
      const x = $m_s_None$();
      if ((x === x1)) {
        return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
      } else {
        throw new $c_s_MatchError(x1)
      }
    }
  };
  getTypeOfBinaryOp__Ltigerpython_parser_ast_AstNode$BinaryOp__Ltigerpython_parser_types_DataType(binOp) {
    const left = this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(binOp.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left);
    const right = this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(binOp.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right);
    const x1 = binOp.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
    const x = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_EQ;
    let $$x1;
    if (((x === null) ? (x1 === null) : x.equals__O__Z(x1))) {
      $$x1 = true
    } else {
      const x$3 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ;
      if (((x$3 === null) ? (x1 === null) : x$3.equals__O__Z(x1))) {
        $$x1 = true
      } else {
        const x$5 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_GT;
        if (((x$5 === null) ? (x1 === null) : x$5.equals__O__Z(x1))) {
          $$x1 = true
        } else {
          const x$7 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_IN;
          if (((x$7 === null) ? (x1 === null) : x$7.equals__O__Z(x1))) {
            $$x1 = true
          } else {
            const x$9 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_IS;
            if (((x$9 === null) ? (x1 === null) : x$9.equals__O__Z(x1))) {
              $$x1 = true
            } else {
              const x$11 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_IS_NOT;
              if (((x$11 === null) ? (x1 === null) : x$11.equals__O__Z(x1))) {
                $$x1 = true
              } else {
                const x$13 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ;
                if (((x$13 === null) ? (x1 === null) : x$13.equals__O__Z(x1))) {
                  $$x1 = true
                } else {
                  const x$15 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_LT;
                  if (((x$15 === null) ? (x1 === null) : x$15.equals__O__Z(x1))) {
                    $$x1 = true
                  } else {
                    const x$17 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ;
                    if (((x$17 === null) ? (x1 === null) : x$17.equals__O__Z(x1))) {
                      $$x1 = true
                    } else {
                      const x$19 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_NOT_IN;
                      $$x1 = ((x$19 === null) ? (x1 === null) : x$19.equals__O__Z(x1))
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    if ($$x1) {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN
    } else {
      const x$21 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_MUL;
      if (((x$21 === null) ? (x1 === null) : x$21.equals__O__Z(x1))) {
        if (left.isOf__Ltigerpython_parser_types_DataType__Z($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE)) {
          return right
        } else if (right.isOf__Ltigerpython_parser_types_DataType__Z($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE)) {
          return left
        } else if ((left.isOf__Ltigerpython_parser_types_DataType__Z($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE) && right.isOf__Ltigerpython_parser_types_DataType__Z($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE))) {
          return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT
        } else {
          const array = [$m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX_TYPE];
          const dataTypes = new $c_sjsr_WrappedVarArgs(array);
          let $$x2;
          if ($f_sc_SeqOps__contains__O__Z(dataTypes, left)) {
            const array$1 = [$m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX_TYPE];
            const dataTypes$1 = new $c_sjsr_WrappedVarArgs(array$1);
            $$x2 = $f_sc_SeqOps__contains__O__Z(dataTypes$1, right)
          } else {
            $$x2 = false
          };
          if ($$x2) {
            return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_COMPLEX
          } else {
            return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
          }
        }
      } else {
        const x$23 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_POW;
        if (((x$23 === null) ? (x1 === null) : x$23.equals__O__Z(x1))) {
          return (right.isOf__Ltigerpython_parser_types_DataType__Z($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER_TYPE) ? left : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
        } else {
          const x$25 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_IDIV;
          if (((x$25 === null) ? (x1 === null) : x$25.equals__O__Z(x1))) {
            return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER
          } else {
            const x$27 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_MOD;
            if (((x$27 === null) ? (x1 === null) : x$27.equals__O__Z(x1))) {
              return left
            } else {
              return $m_Ltigerpython_parser_types_DataType$().getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(left, right)
            }
          }
        }
      }
    }
  };
  getTypeOfCall__Ltigerpython_parser_ast_AstNode$Call__Ltigerpython_parser_types_DataType(call) {
    const x1 = this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(call.Ltigerpython_parser_ast_AstNode$Call__f_function);
    if ((x1 instanceof $c_Ltigerpython_parser_types_FunctionType)) {
      const x2 = x1;
      const x1$2 = x2.getReturnType__Ltigerpython_parser_types_DataType();
      const x = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_TYPE;
      if (((x === null) ? (x1$2 === null) : x.equals__O__Z(x1$2))) {
        return ((call.Ltigerpython_parser_ast_AstNode$Call__f_args.u.length > 0) ? this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(call.Ltigerpython_parser_ast_AstNode$Call__f_args.u[0]) : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
      } else {
        const x$3 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO2_TYPE;
        if (((x$3 === null) ? (x1$2 === null) : x$3.equals__O__Z(x1$2))) {
          return ((call.Ltigerpython_parser_ast_AstNode$Call__f_args.u.length > 1) ? this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(call.Ltigerpython_parser_ast_AstNode$Call__f_args.u[1]) : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
        } else {
          const x$5 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_ITEM_TYPE;
          if (((x$5 === null) ? (x1$2 === null) : x$5.equals__O__Z(x1$2))) {
            return ((call.Ltigerpython_parser_ast_AstNode$Call__f_args.u.length > 0) ? this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(call.Ltigerpython_parser_ast_AstNode$Call__f_args.u[0]).getItemType__Ltigerpython_parser_types_DataType() : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
          } else {
            const x$7 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ECHO_RETURN_TYPE;
            if (((x$7 === null) ? (x1$2 === null) : x$7.equals__O__Z(x1$2))) {
              if ((call.Ltigerpython_parser_ast_AstNode$Call__f_args.u.length > 0)) {
                const result = this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(call.Ltigerpython_parser_ast_AstNode$Call__f_args.u[0]);
                return (result.isCallable__Z() ? $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(result.getReturnType__Ltigerpython_parser_types_DataType()) : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE)
              } else {
                return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
              }
            } else {
              return $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(x1$2)
            }
          }
        }
      }
    } else if ((x1 instanceof $c_Ltigerpython_parser_types_ClassType)) {
      const x3 = x1;
      return $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(x3)
    } else {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
    }
  };
  getTypeOfLambda__Ltigerpython_parser_ast_AstNode$Lambda__Ltigerpython_parser_types_DataType(lambda) {
    if ((lambda !== null)) {
      const this$1 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const params = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      if ((lambda.Ltigerpython_parser_ast_AstNode$Lambda__f_args !== null)) {
        const xs = lambda.Ltigerpython_parser_ast_AstNode$Lambda__f_args.Ltigerpython_parser_ast_AstNode$Parameters__f_args;
        const f = ((this$3, params$1) => ((p$2) => {
          const p = p$2;
          if ((p instanceof $c_Ltigerpython_parser_ast_AstNode$NameParameter)) {
            const x2 = p;
            const elem = new $c_Ltigerpython_parser_types_Parameter(x2.Ltigerpython_parser_ast_AstNode$NameParameter__f_name, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE);
            return params$1.addOne__O__scm_ArrayBuffer(elem)
          } else {
            return (void 0)
          }
        }))(this, params);
        const len = xs.u.length;
        let i = 0;
        if ((xs !== null)) {
          while ((i < len)) {
            const arg1 = xs.u[i];
            f(arg1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_I(xs, 1)) {
          const x3 = xs;
          while ((i < len)) {
            const arg1$1 = x3.u[i];
            f(arg1$1);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_D(xs, 1)) {
          const x4 = xs;
          while ((i < len)) {
            const arg1$2 = x4.u[i];
            f(arg1$2);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_J(xs, 1)) {
          const x5 = xs;
          while ((i < len)) {
            const t = x5.u[i];
            const lo = t.RTLong__f_lo;
            const hi = t.RTLong__f_hi;
            f(new $c_RTLong(lo, hi));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_F(xs, 1)) {
          const x6 = xs;
          while ((i < len)) {
            const arg1$3 = x6.u[i];
            f(arg1$3);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_C(xs, 1)) {
          const x7 = xs;
          while ((i < len)) {
            const arg1$4 = x7.u[i];
            f($bC(arg1$4));
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_B(xs, 1)) {
          const x8 = xs;
          while ((i < len)) {
            const arg1$5 = x8.u[i];
            f(arg1$5);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_S(xs, 1)) {
          const x9 = xs;
          while ((i < len)) {
            const arg1$6 = x9.u[i];
            f(arg1$6);
            i = ((1 + i) | 0)
          }
        } else if ($isArrayOf_Z(xs, 1)) {
          const x10 = xs;
          while ((i < len)) {
            const arg1$7 = x10.u[i];
            f(arg1$7);
            i = ((1 + i) | 0)
          }
        } else {
          throw new $c_s_MatchError(xs)
        }
      };
      let $$x1;
      if ((params.scm_ArrayBuffer__f_size0 >= 0)) {
        const len$1 = params.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_types_Parameter.getArrayOf(), [len$1]);
        params.copyToArray__O__I__I__I(destination, 0, params.scm_ArrayBuffer__f_size0);
        $$x1 = destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$8 = new $c_scm_ArrayBufferView(params.scm_ArrayBuffer__f_array, params.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$8);
        while (it.hasNext__Z()) {
          const elem$1 = it.next__O();
          const unboxedElem = ((elem$1 === null) ? null : elem$1);
          jsElems.push(unboxedElem)
        };
        $$x1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_types_Parameter.getArrayOf(), jsElems)
      };
      return new $c_Ltigerpython_parser_types_LambdaFunction($$x1, this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(lambda.Ltigerpython_parser_ast_AstNode$Lambda__f_body))
    } else {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
    }
  };
  getTypeOfList__Ltigerpython_parser_ast_AstNode$List__Ltigerpython_parser_types_DataType(list) {
    const xs = list.Ltigerpython_parser_ast_AstNode$List__f_elements;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = list.Ltigerpython_parser_ast_AstNode$List__f_elements;
      const elem = this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType($$x1.head$extension__O__O(xs$1));
      const result = new $c_sr_ObjectRef(elem);
      const xs$2 = list.Ltigerpython_parser_ast_AstNode$List__f_elements;
      const f = ((this$6, result$1) => ((element$2) => {
        const element = element$2;
        result$1.sr_ObjectRef__f_elem = $m_Ltigerpython_parser_types_DataType$().getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(result$1.sr_ObjectRef__f_elem, this$6.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(element))
      }))(this, result);
      const len = xs$2.u.length;
      let i = 0;
      if ((xs$2 !== null)) {
        while ((i < len)) {
          const arg1 = xs$2.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs$2, 1)) {
        const x3 = xs$2;
        while ((i < len)) {
          const arg1$1 = x3.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs$2, 1)) {
        const x4 = xs$2;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs$2, 1)) {
        const x5 = xs$2;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs$2, 1)) {
        const x6 = xs$2;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs$2, 1)) {
        const x7 = xs$2;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs$2, 1)) {
        const x8 = xs$2;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs$2, 1)) {
        const x9 = xs$2;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs$2, 1)) {
        const x10 = xs$2;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$2)
      };
      let $$x2;
      if ((result.sr_ObjectRef__f_elem !== null)) {
        const x = result.sr_ObjectRef__f_elem;
        const x$2 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
        $$x2 = (!((x === null) ? (x$2 === null) : x.equals__O__Z(x$2)))
      } else {
        $$x2 = false
      };
      if ($$x2) {
        return $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType($m_Ltigerpython_parser_types_ListType$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_ListType(result.sr_ObjectRef__f_elem))
      } else {
        return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST
      }
    } else {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST
    }
  };
  getTypeOfListComp__Ltigerpython_parser_ast_AstNode$ListComp__Ltigerpython_parser_types_DataType(listComp) {
    if ((listComp.Ltigerpython_parser_ast_AstNode$ListComp__f_generators.u.length === 1)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs = listComp.Ltigerpython_parser_ast_AstNode$ListComp__f_generators;
      const x1 = $$x1.head$extension__O__O(xs).Ltigerpython_parser_ast_AstNode$Comprehension__f_target;
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const x2 = x1;
        const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
        try {
          const this$3 = this.Ltigerpython_parser_types_TypeAstWalker__f_paramStack;
          const $$x2 = $m_sc_ArrayOps$();
          const xs$1 = listComp.Ltigerpython_parser_ast_AstNode$ListComp__f_generators;
          const elem = new $c_Ltigerpython_parser_types_TypeAstWalker$Parameter(name, this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType($$x2.head$extension__O__O(xs$1).Ltigerpython_parser_ast_AstNode$Comprehension__f_iter).getItemType__Ltigerpython_parser_types_DataType());
          this$3.prepend__O__scm_ArrayDeque(elem);
          return this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(listComp.Ltigerpython_parser_ast_AstNode$ListComp__f_elements)
        } finally {
          const this$4 = this.Ltigerpython_parser_types_TypeAstWalker__f_paramStack;
          this$4.removeHead__Z__O(false)
        }
      } else {
        return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST
      }
    } else {
      return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST
    }
  };
  getTypeOfSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Ltigerpython_parser_types_DataType(subscript) {
    const x1 = subscript.Ltigerpython_parser_ast_AstNode$Subscript__f_slice;
    return ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Index) ? this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(subscript.Ltigerpython_parser_ast_AstNode$Subscript__f_base).getItemType__Ltigerpython_parser_types_DataType() : ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$SliceRange) ? this.getType__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_types_DataType(subscript.Ltigerpython_parser_ast_AstNode$Subscript__f_base) : $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE))
  };
}
function $is_Ljava_io_Closeable(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ljava_io_Closeable)))
}
function $isArrayOf_Ljava_io_Closeable(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ljava_io_Closeable)))
}
const $p_jl_Character$__getTypeGE256__I__I = (function($thiz, codePoint) {
  const a = $p_jl_Character$__charTypeIndices__AI($thiz);
  const idx = ((1 + $m_ju_Arrays$().binarySearch__AI__I__I(a, codePoint)) | 0);
  return $p_jl_Character$__charTypes__AI($thiz).u[((idx < 0) ? ((-idx) | 0) : idx)]
});
const $p_jl_Character$__isLowerCaseGE256__I__Z = (function($thiz, c) {
  return ((((((((((((((((((c >= 688) && (c <= 696)) || ((c >= 704) && (c <= 705))) || ((c >= 736) && (c <= 740))) || (c === 837)) || (c === 890)) || ((c >= 7468) && (c <= 7530))) || (c === 7544)) || ((c >= 7579) && (c <= 7615))) || (c === 8305)) || (c === 8319)) || ((c >= 8336) && (c <= 8348))) || ((c >= 8560) && (c <= 8575))) || ((c >= 9424) && (c <= 9449))) || ((c >= 11388) && (c <= 11389))) || (c === 42864)) || ((c >= 43000) && (c <= 43001))) || ($p_jl_Character$__getTypeGE256__I__I($thiz, c) === 2))
});
const $p_jl_Character$__java$lang$Character$$charTypesFirst256$lzycompute__AI = (function($thiz) {
  if (((((1 & $thiz.jl_Character$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.jl_Character$__f_java$lang$Character$$charTypesFirst256 = $makeNativeArrayWrapper($d_I.getArrayOf(), [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 12, 24, 24, 24, 26, 24, 24, 24, 21, 22, 24, 25, 24, 20, 24, 24, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 24, 24, 25, 25, 25, 24, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 21, 24, 22, 27, 23, 27, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 21, 25, 22, 25, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 12, 24, 26, 26, 26, 26, 28, 24, 27, 28, 5, 29, 25, 16, 28, 27, 28, 25, 11, 11, 27, 2, 24, 24, 27, 11, 5, 30, 11, 11, 11, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 25, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 25, 2, 2, 2, 2, 2, 2, 2, 2]);
    $thiz.jl_Character$__f_bitmap$0 = (((1 | $thiz.jl_Character$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.jl_Character$__f_java$lang$Character$$charTypesFirst256
});
const $p_jl_Character$__charTypeIndices$lzycompute__AI = (function($thiz) {
  if (((((2 & $thiz.jl_Character$__f_bitmap$0) << 24) >> 24) === 0)) {
    const deltas = $makeNativeArrayWrapper($d_I.getArrayOf(), [257, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 2, 1, 1, 1, 2, 1, 3, 2, 4, 1, 2, 1, 3, 3, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 3, 1, 1, 1, 2, 2, 1, 1, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 2, 1, 2, 2, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 69, 1, 27, 18, 4, 12, 14, 5, 7, 1, 1, 1, 17, 112, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 5, 2, 1, 1, 3, 1, 1, 1, 2, 1, 17, 1, 9, 35, 1, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 2, 2, 51, 48, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 38, 2, 1, 6, 1, 39, 1, 1, 1, 4, 1, 1, 45, 1, 1, 1, 2, 1, 2, 1, 1, 8, 27, 5, 3, 2, 11, 5, 1, 3, 2, 1, 2, 2, 11, 1, 2, 2, 32, 1, 10, 21, 10, 4, 2, 1, 99, 1, 1, 7, 1, 1, 6, 2, 2, 1, 4, 2, 10, 3, 2, 1, 14, 1, 1, 1, 1, 30, 27, 2, 89, 11, 1, 14, 10, 33, 9, 2, 1, 3, 1, 5, 22, 4, 1, 9, 1, 3, 1, 5, 2, 15, 1, 25, 3, 2, 1, 65, 1, 1, 11, 55, 27, 1, 3, 1, 54, 1, 1, 1, 1, 3, 8, 4, 1, 2, 1, 7, 10, 2, 2, 10, 1, 1, 6, 1, 7, 1, 1, 2, 1, 8, 2, 2, 2, 22, 1, 7, 1, 1, 3, 4, 2, 1, 1, 3, 4, 2, 2, 2, 2, 1, 1, 8, 1, 4, 2, 1, 3, 2, 2, 10, 2, 2, 6, 1, 1, 5, 2, 1, 1, 6, 4, 2, 2, 22, 1, 7, 1, 2, 1, 2, 1, 2, 2, 1, 1, 3, 2, 4, 2, 2, 3, 3, 1, 7, 4, 1, 1, 7, 10, 2, 3, 1, 11, 2, 1, 1, 9, 1, 3, 1, 22, 1, 7, 1, 2, 1, 5, 2, 1, 1, 3, 5, 1, 2, 1, 1, 2, 1, 2, 1, 15, 2, 2, 2, 10, 1, 1, 15, 1, 2, 1, 8, 2, 2, 2, 22, 1, 7, 1, 2, 1, 5, 2, 1, 1, 1, 1, 1, 4, 2, 2, 2, 2, 1, 8, 1, 1, 4, 2, 1, 3, 2, 2, 10, 1, 1, 6, 10, 1, 1, 1, 6, 3, 3, 1, 4, 3, 2, 1, 1, 1, 2, 3, 2, 3, 3, 3, 12, 4, 2, 1, 2, 3, 3, 1, 3, 1, 2, 1, 6, 1, 14, 10, 3, 6, 1, 1, 6, 3, 1, 8, 1, 3, 1, 23, 1, 10, 1, 5, 3, 1, 3, 4, 1, 3, 1, 4, 7, 2, 1, 2, 6, 2, 2, 2, 10, 8, 7, 1, 2, 2, 1, 8, 1, 3, 1, 23, 1, 10, 1, 5, 2, 1, 1, 1, 1, 5, 1, 1, 2, 1, 2, 2, 7, 2, 7, 1, 1, 2, 2, 2, 10, 1, 2, 15, 2, 1, 8, 1, 3, 1, 41, 2, 1, 3, 4, 1, 3, 1, 3, 1, 1, 8, 1, 8, 2, 2, 2, 10, 6, 3, 1, 6, 2, 2, 1, 18, 3, 24, 1, 9, 1, 1, 2, 7, 3, 1, 4, 3, 3, 1, 1, 1, 8, 18, 2, 1, 12, 48, 1, 2, 7, 4, 1, 6, 1, 8, 1, 10, 2, 37, 2, 1, 1, 2, 2, 1, 1, 2, 1, 6, 4, 1, 7, 1, 3, 1, 1, 1, 1, 2, 2, 1, 4, 1, 2, 6, 1, 2, 1, 2, 5, 1, 1, 1, 6, 2, 10, 2, 4, 32, 1, 3, 15, 1, 1, 3, 2, 6, 10, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 8, 1, 36, 4, 14, 1, 5, 1, 2, 5, 11, 1, 36, 1, 8, 1, 6, 1, 2, 5, 4, 2, 37, 43, 2, 4, 1, 6, 1, 2, 2, 2, 1, 10, 6, 6, 2, 2, 4, 3, 1, 3, 2, 7, 3, 4, 13, 1, 2, 2, 6, 1, 1, 1, 10, 3, 1, 2, 38, 1, 1, 5, 1, 2, 43, 1, 1, 332, 1, 4, 2, 7, 1, 1, 1, 4, 2, 41, 1, 4, 2, 33, 1, 4, 2, 7, 1, 1, 1, 4, 2, 15, 1, 57, 1, 4, 2, 67, 2, 3, 9, 20, 3, 16, 10, 6, 85, 11, 1, 620, 2, 17, 1, 26, 1, 1, 3, 75, 3, 3, 15, 13, 1, 4, 3, 11, 18, 3, 2, 9, 18, 2, 12, 13, 1, 3, 1, 2, 12, 52, 2, 1, 7, 8, 1, 2, 11, 3, 1, 3, 1, 1, 1, 2, 10, 6, 10, 6, 6, 1, 4, 3, 1, 1, 10, 6, 35, 1, 52, 8, 41, 1, 1, 5, 70, 10, 29, 3, 3, 4, 2, 3, 4, 2, 1, 6, 3, 4, 1, 3, 2, 10, 30, 2, 5, 11, 44, 4, 17, 7, 2, 6, 10, 1, 3, 34, 23, 2, 3, 2, 2, 53, 1, 1, 1, 7, 1, 1, 1, 1, 2, 8, 6, 10, 2, 1, 10, 6, 10, 6, 7, 1, 6, 82, 4, 1, 47, 1, 1, 5, 1, 1, 5, 1, 2, 7, 4, 10, 7, 10, 9, 9, 3, 2, 1, 30, 1, 4, 2, 2, 1, 1, 2, 2, 10, 44, 1, 1, 2, 3, 1, 1, 3, 2, 8, 4, 36, 8, 8, 2, 2, 3, 5, 10, 3, 3, 10, 30, 6, 2, 64, 8, 8, 3, 1, 13, 1, 7, 4, 1, 4, 2, 1, 2, 9, 44, 63, 13, 1, 34, 37, 39, 21, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 8, 6, 2, 6, 2, 8, 8, 8, 8, 6, 2, 6, 2, 8, 1, 1, 1, 1, 1, 1, 1, 1, 8, 8, 14, 2, 8, 8, 8, 8, 8, 8, 5, 1, 2, 4, 1, 1, 1, 3, 3, 1, 2, 4, 1, 3, 4, 2, 2, 4, 1, 3, 8, 5, 3, 2, 3, 1, 2, 4, 1, 2, 1, 11, 5, 6, 2, 1, 1, 1, 2, 1, 1, 1, 8, 1, 1, 5, 1, 9, 1, 1, 4, 2, 3, 1, 1, 1, 11, 1, 1, 1, 10, 1, 5, 5, 6, 1, 1, 2, 6, 3, 1, 1, 1, 10, 3, 1, 1, 1, 13, 3, 32, 16, 13, 4, 1, 3, 12, 15, 2, 1, 4, 1, 2, 1, 3, 2, 3, 1, 1, 1, 2, 1, 5, 6, 1, 1, 1, 1, 1, 1, 4, 1, 1, 4, 1, 4, 1, 2, 2, 2, 5, 1, 4, 1, 1, 2, 1, 1, 16, 35, 1, 1, 4, 1, 6, 5, 5, 2, 4, 1, 2, 1, 2, 1, 7, 1, 31, 2, 2, 1, 1, 1, 31, 268, 8, 4, 20, 2, 7, 1, 1, 81, 1, 30, 25, 40, 6, 18, 12, 39, 25, 11, 21, 60, 78, 22, 183, 1, 9, 1, 54, 8, 111, 1, 144, 1, 103, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 30, 44, 5, 1, 1, 31, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16, 256, 131, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 63, 1, 1, 1, 1, 32, 1, 1, 258, 48, 21, 2, 6, 3, 10, 166, 47, 1, 47, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 4, 1, 1, 2, 1, 6, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 3, 1, 1, 5, 4, 1, 2, 38, 1, 1, 5, 1, 2, 56, 7, 1, 1, 14, 1, 23, 9, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 32, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 9, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 10, 2, 68, 26, 1, 89, 12, 214, 26, 12, 4, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 9, 4, 2, 1, 5, 2, 3, 1, 1, 1, 2, 1, 86, 2, 2, 2, 2, 1, 1, 90, 1, 3, 1, 5, 41, 3, 94, 1, 2, 4, 10, 27, 5, 36, 12, 16, 31, 1, 10, 30, 8, 1, 15, 32, 10, 39, 15, 320, 6582, 10, 64, 20941, 51, 21, 1, 1143, 3, 55, 9, 40, 6, 2, 268, 1, 3, 16, 10, 2, 20, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 1, 70, 10, 2, 6, 8, 23, 9, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 77, 2, 1, 7, 1, 3, 1, 4, 1, 23, 2, 2, 1, 4, 4, 6, 2, 1, 1, 6, 52, 4, 8, 2, 50, 16, 1, 9, 2, 10, 6, 18, 6, 3, 1, 4, 10, 28, 8, 2, 23, 11, 2, 11, 1, 29, 3, 3, 1, 47, 1, 2, 4, 2, 1, 4, 13, 1, 1, 10, 4, 2, 32, 41, 6, 2, 2, 2, 2, 9, 3, 1, 8, 1, 1, 2, 10, 2, 4, 16, 1, 6, 3, 1, 1, 4, 48, 1, 1, 3, 2, 2, 5, 2, 1, 1, 1, 24, 2, 1, 2, 11, 1, 2, 2, 2, 1, 2, 1, 1, 10, 6, 2, 6, 2, 6, 9, 7, 1, 7, 145, 35, 2, 1, 2, 1, 2, 1, 1, 1, 2, 10, 6, 11172, 12, 23, 4, 49, 4, 2048, 6400, 366, 2, 106, 38, 7, 12, 5, 5, 1, 1, 10, 1, 13, 1, 5, 1, 1, 1, 2, 1, 2, 1, 108, 16, 17, 363, 1, 1, 16, 64, 2, 54, 40, 12, 1, 1, 2, 16, 7, 1, 1, 1, 6, 7, 9, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 4, 3, 3, 1, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 3, 1, 1, 1, 2, 4, 5, 1, 135, 2, 1, 1, 3, 1, 3, 1, 1, 1, 1, 1, 1, 2, 10, 2, 3, 2, 26, 1, 1, 1, 1, 1, 1, 26, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 10, 1, 45, 2, 31, 3, 6, 2, 6, 2, 6, 2, 3, 3, 2, 1, 1, 1, 2, 1, 1, 4, 2, 10, 3, 2, 2, 12, 1, 26, 1, 19, 1, 2, 1, 15, 2, 14, 34, 123, 5, 3, 4, 45, 3, 9, 53, 4, 17, 1, 5, 12, 52, 45, 1, 130, 29, 3, 49, 47, 31, 1, 4, 12, 17, 1, 8, 1, 53, 30, 1, 1, 36, 4, 8, 1, 5, 42, 40, 40, 78, 2, 10, 854, 6, 2, 1, 1, 44, 1, 2, 3, 1, 2, 23, 1, 1, 8, 160, 22, 6, 3, 1, 26, 5, 1, 64, 56, 6, 2, 64, 1, 3, 1, 2, 5, 4, 4, 1, 3, 1, 27, 4, 3, 4, 1, 8, 8, 9, 7, 29, 2, 1, 128, 54, 3, 7, 22, 2, 8, 19, 5, 8, 128, 73, 535, 31, 385, 1, 1, 1, 53, 15, 7, 4, 20, 10, 16, 2, 1, 45, 3, 4, 2, 2, 2, 1, 4, 14, 25, 7, 10, 6, 3, 36, 5, 1, 8, 1, 10, 4, 60, 2, 1, 48, 3, 9, 2, 4, 4, 7, 10, 1190, 43, 1, 1, 1, 2, 6, 1, 1, 8, 10, 2358, 879, 145, 99, 13, 4, 2956, 1071, 13265, 569, 1223, 69, 11, 1, 46, 16, 4, 13, 16480, 2, 8190, 246, 10, 39, 2, 60, 2, 3, 3, 6, 8, 8, 2, 7, 30, 4, 48, 34, 66, 3, 1, 186, 87, 9, 18, 142, 26, 26, 26, 7, 1, 18, 26, 26, 1, 1, 2, 2, 1, 2, 2, 2, 4, 1, 8, 4, 1, 1, 1, 7, 1, 11, 26, 26, 2, 1, 4, 2, 8, 1, 7, 1, 26, 2, 1, 4, 1, 5, 1, 1, 3, 7, 1, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 28, 2, 25, 1, 25, 1, 6, 25, 1, 25, 1, 6, 25, 1, 25, 1, 6, 25, 1, 25, 1, 6, 25, 1, 25, 1, 6, 1, 1, 2, 50, 5632, 4, 1, 27, 1, 2, 1, 1, 2, 1, 1, 10, 1, 4, 1, 1, 1, 1, 6, 1, 4, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 4, 1, 7, 1, 4, 1, 4, 1, 1, 1, 10, 1, 17, 5, 3, 1, 5, 1, 17, 52, 2, 270, 44, 4, 100, 12, 15, 2, 14, 2, 15, 1, 15, 32, 11, 5, 31, 1, 60, 4, 43, 75, 29, 13, 43, 5, 9, 7, 2, 174, 33, 15, 6, 1, 70, 3, 20, 12, 37, 1, 5, 21, 17, 15, 63, 1, 1, 1, 182, 1, 4, 3, 62, 2, 4, 12, 24, 147, 70, 4, 11, 48, 70, 58, 116, 2188, 42711, 41, 4149, 11, 222, 16354, 542, 722403, 1, 30, 96, 128, 240, 65040, 65534, 2, 65534]);
    $thiz.jl_Character$__f_charTypeIndices = $p_jl_Character$__uncompressDeltas__AI__AI($thiz, deltas);
    $thiz.jl_Character$__f_bitmap$0 = (((2 | $thiz.jl_Character$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.jl_Character$__f_charTypeIndices
});
const $p_jl_Character$__charTypeIndices__AI = (function($thiz) {
  return (((((2 & $thiz.jl_Character$__f_bitmap$0) << 24) >> 24) === 0) ? $p_jl_Character$__charTypeIndices$lzycompute__AI($thiz) : $thiz.jl_Character$__f_charTypeIndices)
});
const $p_jl_Character$__charTypes$lzycompute__AI = (function($thiz) {
  if (((((4 & $thiz.jl_Character$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.jl_Character$__f_charTypes = $makeNativeArrayWrapper($d_I.getArrayOf(), [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 5, 1, 2, 5, 1, 3, 2, 1, 3, 2, 1, 3, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 5, 2, 4, 27, 4, 27, 4, 27, 4, 27, 4, 27, 6, 1, 2, 1, 2, 4, 27, 1, 2, 0, 4, 2, 24, 0, 27, 1, 24, 1, 0, 1, 0, 1, 2, 1, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 25, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 28, 6, 7, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 0, 4, 24, 0, 2, 0, 24, 20, 0, 26, 0, 6, 20, 6, 24, 6, 24, 6, 24, 6, 0, 5, 0, 5, 24, 0, 16, 0, 25, 24, 26, 24, 28, 6, 24, 0, 24, 5, 4, 5, 6, 9, 24, 5, 6, 5, 24, 5, 6, 16, 28, 6, 4, 6, 28, 6, 5, 9, 5, 28, 5, 24, 0, 16, 5, 6, 5, 6, 0, 5, 6, 5, 0, 9, 5, 6, 4, 28, 24, 4, 0, 5, 6, 4, 6, 4, 6, 4, 6, 0, 24, 0, 5, 6, 0, 24, 0, 5, 0, 5, 0, 6, 0, 6, 8, 5, 6, 8, 6, 5, 8, 6, 8, 6, 8, 5, 6, 5, 6, 24, 9, 24, 4, 5, 0, 5, 0, 6, 8, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 5, 8, 6, 0, 8, 0, 8, 6, 5, 0, 8, 0, 5, 0, 5, 6, 0, 9, 5, 26, 11, 28, 26, 0, 6, 8, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 0, 8, 6, 0, 6, 0, 6, 0, 6, 0, 5, 0, 5, 0, 9, 6, 5, 6, 0, 6, 8, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 5, 8, 6, 0, 6, 8, 0, 8, 6, 0, 5, 0, 5, 6, 0, 9, 24, 26, 0, 6, 8, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 5, 8, 6, 8, 6, 0, 8, 0, 8, 6, 0, 6, 8, 0, 5, 0, 5, 6, 0, 9, 28, 5, 11, 0, 6, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 8, 6, 8, 0, 8, 0, 8, 6, 0, 5, 0, 8, 0, 9, 11, 28, 26, 28, 0, 8, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 6, 8, 0, 6, 0, 6, 0, 6, 0, 5, 0, 5, 6, 0, 9, 0, 11, 28, 0, 8, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 5, 8, 6, 8, 0, 6, 8, 0, 8, 6, 0, 8, 0, 5, 0, 5, 6, 0, 9, 0, 5, 0, 8, 0, 5, 0, 5, 0, 5, 0, 5, 8, 6, 0, 8, 0, 8, 6, 5, 0, 8, 0, 5, 6, 0, 9, 11, 0, 28, 5, 0, 8, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 0, 8, 6, 0, 6, 0, 8, 0, 8, 24, 0, 5, 6, 5, 6, 0, 26, 5, 4, 6, 24, 9, 24, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 6, 5, 6, 0, 6, 5, 0, 5, 0, 4, 0, 6, 0, 9, 0, 5, 0, 5, 28, 24, 28, 24, 28, 6, 28, 9, 11, 28, 6, 28, 6, 28, 6, 21, 22, 21, 22, 8, 5, 0, 5, 0, 6, 8, 6, 24, 6, 5, 6, 0, 6, 0, 28, 6, 28, 0, 28, 24, 28, 24, 0, 5, 8, 6, 8, 6, 8, 6, 8, 6, 5, 9, 24, 5, 8, 6, 5, 6, 5, 8, 5, 8, 5, 6, 5, 6, 8, 6, 8, 6, 5, 8, 9, 8, 6, 28, 1, 0, 1, 0, 1, 0, 5, 24, 4, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 24, 11, 0, 5, 28, 0, 5, 0, 20, 5, 24, 5, 12, 5, 21, 22, 0, 5, 24, 10, 0, 5, 0, 5, 6, 0, 5, 6, 24, 0, 5, 6, 0, 5, 0, 5, 0, 6, 0, 5, 6, 8, 6, 8, 6, 8, 6, 24, 4, 24, 26, 5, 6, 0, 9, 0, 11, 0, 24, 20, 24, 6, 12, 0, 9, 0, 5, 4, 5, 0, 5, 6, 5, 0, 5, 0, 5, 0, 6, 8, 6, 8, 0, 8, 6, 8, 6, 0, 28, 0, 24, 9, 5, 0, 5, 0, 5, 0, 8, 5, 8, 0, 9, 11, 0, 28, 5, 6, 8, 0, 24, 5, 8, 6, 8, 6, 0, 6, 8, 6, 8, 6, 8, 6, 0, 6, 9, 0, 9, 0, 24, 4, 24, 0, 6, 8, 5, 6, 8, 6, 8, 6, 8, 6, 8, 5, 0, 9, 24, 28, 6, 28, 0, 6, 8, 5, 8, 6, 8, 6, 8, 6, 8, 5, 9, 5, 6, 8, 6, 8, 6, 8, 6, 8, 0, 24, 5, 8, 6, 8, 6, 0, 24, 9, 0, 5, 9, 5, 4, 24, 0, 24, 0, 6, 24, 6, 8, 6, 5, 6, 5, 8, 6, 5, 0, 2, 4, 2, 4, 2, 4, 6, 0, 6, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 0, 2, 1, 2, 1, 2, 0, 1, 0, 2, 0, 1, 0, 1, 0, 1, 0, 1, 2, 1, 2, 0, 2, 3, 2, 3, 2, 3, 2, 0, 2, 1, 3, 27, 2, 27, 2, 0, 2, 1, 3, 27, 2, 0, 2, 1, 0, 27, 2, 1, 27, 0, 2, 0, 2, 1, 3, 27, 0, 12, 16, 20, 24, 29, 30, 21, 29, 30, 21, 29, 24, 13, 14, 16, 12, 24, 29, 30, 24, 23, 24, 25, 21, 22, 24, 25, 24, 23, 24, 12, 16, 0, 16, 11, 4, 0, 11, 25, 21, 22, 4, 11, 25, 21, 22, 0, 4, 0, 26, 0, 6, 7, 6, 7, 6, 0, 28, 1, 28, 1, 28, 2, 1, 2, 1, 2, 28, 1, 28, 25, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 2, 1, 2, 5, 2, 28, 2, 1, 25, 1, 2, 28, 25, 28, 2, 28, 11, 10, 1, 2, 10, 11, 0, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 25, 28, 21, 22, 28, 25, 28, 25, 28, 25, 28, 0, 28, 0, 28, 0, 11, 28, 11, 28, 25, 28, 25, 28, 25, 28, 25, 28, 0, 28, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 11, 28, 25, 21, 22, 25, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 25, 28, 25, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 25, 21, 22, 21, 22, 25, 21, 22, 25, 28, 25, 28, 25, 0, 28, 0, 1, 0, 2, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 28, 1, 2, 1, 2, 6, 1, 2, 0, 24, 11, 24, 2, 0, 2, 0, 2, 0, 5, 0, 4, 24, 0, 6, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 6, 24, 29, 30, 29, 30, 24, 29, 30, 24, 29, 30, 24, 20, 24, 20, 24, 29, 30, 24, 29, 30, 21, 22, 21, 22, 21, 22, 21, 22, 24, 4, 24, 20, 0, 28, 0, 28, 0, 28, 0, 28, 0, 12, 24, 28, 4, 5, 10, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 28, 21, 22, 21, 22, 21, 22, 21, 22, 20, 21, 22, 28, 10, 6, 8, 20, 4, 28, 10, 4, 5, 24, 28, 0, 5, 0, 6, 27, 4, 5, 20, 5, 24, 4, 5, 0, 5, 0, 5, 0, 28, 11, 28, 5, 0, 28, 0, 5, 28, 0, 11, 28, 11, 28, 11, 28, 11, 28, 11, 28, 5, 0, 28, 5, 0, 5, 4, 5, 0, 28, 0, 5, 4, 24, 5, 4, 24, 5, 9, 5, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 5, 6, 7, 24, 6, 24, 4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 6, 5, 10, 6, 24, 0, 27, 4, 27, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4, 27, 1, 2, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0, 4, 2, 5, 6, 5, 6, 5, 6, 5, 8, 6, 8, 28, 0, 11, 28, 26, 28, 0, 5, 24, 0, 8, 5, 8, 6, 0, 24, 9, 0, 6, 5, 24, 5, 0, 9, 5, 6, 24, 5, 6, 8, 0, 24, 5, 0, 6, 8, 5, 6, 8, 6, 8, 6, 8, 24, 0, 4, 9, 0, 24, 0, 5, 6, 8, 6, 8, 6, 0, 5, 6, 5, 6, 8, 0, 9, 0, 24, 5, 4, 5, 28, 5, 8, 0, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 0, 5, 4, 24, 5, 8, 6, 8, 24, 5, 4, 8, 6, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 8, 6, 8, 6, 8, 24, 8, 6, 0, 9, 0, 5, 0, 5, 0, 5, 0, 19, 18, 5, 0, 5, 0, 2, 0, 2, 0, 5, 6, 5, 25, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 27, 0, 5, 21, 22, 0, 5, 0, 5, 0, 5, 26, 28, 0, 6, 24, 21, 22, 24, 0, 6, 0, 24, 20, 23, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 21, 22, 24, 21, 22, 24, 23, 24, 0, 24, 20, 21, 22, 21, 22, 21, 22, 24, 25, 20, 25, 0, 24, 26, 24, 0, 5, 0, 5, 0, 16, 0, 24, 26, 24, 21, 22, 24, 25, 24, 20, 24, 9, 24, 25, 24, 1, 21, 24, 22, 27, 23, 27, 2, 21, 25, 22, 25, 21, 22, 24, 21, 22, 24, 5, 4, 5, 4, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 26, 25, 27, 28, 26, 0, 28, 25, 28, 0, 16, 28, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 24, 0, 11, 0, 28, 10, 11, 28, 11, 0, 28, 0, 28, 6, 0, 5, 0, 5, 0, 5, 0, 11, 0, 5, 10, 5, 10, 0, 5, 0, 24, 5, 0, 5, 24, 10, 0, 1, 2, 5, 0, 9, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 24, 11, 0, 5, 11, 0, 24, 5, 0, 24, 0, 5, 0, 5, 0, 5, 6, 0, 6, 0, 6, 5, 0, 5, 0, 5, 0, 6, 0, 6, 11, 0, 24, 0, 5, 11, 24, 0, 5, 0, 24, 5, 0, 11, 5, 0, 11, 0, 5, 0, 11, 0, 8, 6, 8, 5, 6, 24, 0, 11, 9, 0, 6, 8, 5, 8, 6, 8, 6, 24, 16, 24, 0, 5, 0, 9, 0, 6, 5, 6, 8, 6, 0, 9, 24, 0, 6, 8, 5, 8, 6, 8, 5, 24, 0, 9, 0, 5, 6, 8, 6, 8, 6, 8, 6, 0, 9, 0, 5, 0, 10, 0, 24, 0, 5, 0, 5, 0, 5, 0, 5, 8, 0, 6, 4, 0, 5, 0, 28, 0, 28, 0, 28, 8, 6, 28, 8, 16, 6, 28, 6, 28, 6, 28, 0, 28, 6, 28, 0, 28, 0, 11, 0, 1, 2, 1, 2, 0, 2, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 25, 2, 25, 2, 1, 25, 2, 25, 2, 1, 25, 2, 25, 2, 1, 25, 2, 25, 2, 1, 25, 2, 25, 2, 1, 2, 0, 9, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 25, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 11, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 28, 0, 5, 0, 5, 0, 5, 0, 5, 0, 16, 0, 16, 0, 6, 0, 18, 0, 18, 0]);
    $thiz.jl_Character$__f_bitmap$0 = (((4 | $thiz.jl_Character$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.jl_Character$__f_charTypes
});
const $p_jl_Character$__charTypes__AI = (function($thiz) {
  return (((((4 & $thiz.jl_Character$__f_bitmap$0) << 24) >> 24) === 0) ? $p_jl_Character$__charTypes$lzycompute__AI($thiz) : $thiz.jl_Character$__f_charTypes)
});
const $p_jl_Character$__uncompressDeltas__AI__AI = (function($thiz, deltas) {
  let acc = deltas.u[0];
  let i = 1;
  const len = deltas.u.length;
  while ((i !== len)) {
    acc = ((acc + deltas.u[i]) | 0);
    deltas.u[i] = acc;
    i = ((1 + i) | 0)
  };
  return deltas
});
const $p_jl_Character$__nonASCIIZeroDigitCodePoints$lzycompute__AI = (function($thiz) {
  if (((((16 & $thiz.jl_Character$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.jl_Character$__f_nonASCIIZeroDigitCodePoints = $makeNativeArrayWrapper($d_I.getArrayOf(), [1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43600, 44016, 65296, 66720, 69734, 69872, 69942, 70096, 71360, 120782, 120792, 120802, 120812, 120822]);
    $thiz.jl_Character$__f_bitmap$0 = (((16 | $thiz.jl_Character$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.jl_Character$__f_nonASCIIZeroDigitCodePoints
});
const $p_jl_Character$__nonASCIIZeroDigitCodePoints__AI = (function($thiz) {
  return (((((16 & $thiz.jl_Character$__f_bitmap$0) << 24) >> 24) === 0) ? $p_jl_Character$__nonASCIIZeroDigitCodePoints$lzycompute__AI($thiz) : $thiz.jl_Character$__f_nonASCIIZeroDigitCodePoints)
});
class $c_jl_Character$ extends $c_O {
  constructor() {
    super();
    this.jl_Character$__f_java$lang$Character$$charTypesFirst256 = null;
    this.jl_Character$__f_charTypeIndices = null;
    this.jl_Character$__f_charTypes = null;
    this.jl_Character$__f_isMirroredIndices = null;
    this.jl_Character$__f_nonASCIIZeroDigitCodePoints = null;
    this.jl_Character$__f_bitmap$0 = 0
  };
  getType__I__I(codePoint) {
    return ((codePoint < 0) ? 0 : ((codePoint < 256) ? this.java$lang$Character$$charTypesFirst256__AI().u[codePoint] : $p_jl_Character$__getTypeGE256__I__I(this, codePoint)))
  };
  digitWithValidRadix__I__I__I(codePoint, radix) {
    let value;
    if ((codePoint < 256)) {
      value = (((codePoint >= 48) && (codePoint <= 57)) ? (((-48) + codePoint) | 0) : (((codePoint >= 65) && (codePoint <= 90)) ? (((-55) + codePoint) | 0) : (((codePoint >= 97) && (codePoint <= 122)) ? (((-87) + codePoint) | 0) : (-1))))
    } else if (((codePoint >= 65313) && (codePoint <= 65338))) {
      value = (((-65303) + codePoint) | 0)
    } else if (((codePoint >= 65345) && (codePoint <= 65370))) {
      value = (((-65335) + codePoint) | 0)
    } else {
      const a = $p_jl_Character$__nonASCIIZeroDigitCodePoints__AI(this);
      const p = $m_ju_Arrays$().binarySearch__AI__I__I(a, codePoint);
      const zeroCodePointIndex = ((p < 0) ? (((-2) - p) | 0) : p);
      if ((zeroCodePointIndex < 0)) {
        value = (-1)
      } else {
        const v = ((codePoint - $p_jl_Character$__nonASCIIZeroDigitCodePoints__AI(this).u[zeroCodePointIndex]) | 0);
        value = ((v > 9) ? (-1) : v)
      }
    };
    return ((value < radix) ? value : (-1))
  };
  isLowerCase__I__Z(c) {
    return ((c < 256) ? (((c === 170) || (c === 186)) || (this.java$lang$Character$$charTypesFirst256__AI().u[c] === 2)) : $p_jl_Character$__isLowerCaseGE256__I__Z(this, c))
  };
  isDigit__I__Z(cp) {
    if ((cp < 256)) {
      return ((cp >= 48) && (cp <= 57))
    } else {
      const tpe = $p_jl_Character$__getTypeGE256__I__I(this, cp);
      return (tpe === 9)
    }
  };
  isLetter__I__Z(cp) {
    const tpe = this.getType__I__I(cp);
    return (((((tpe === 1) || (tpe === 2)) || (tpe === 3)) || (tpe === 4)) || (tpe === 5))
  };
  isLetterOrDigit__I__Z(cp) {
    const tpe = this.getType__I__I(cp);
    return ((tpe === 9) || (((((tpe === 1) || (tpe === 2)) || (tpe === 3)) || (tpe === 4)) || (tpe === 5)))
  };
  toUpperCase__C__C(c) {
    const this$2 = String.fromCharCode(c);
    const this$3 = this$2.toUpperCase();
    return (65535 & (this$3.charCodeAt(0) | 0))
  };
  toLowerCase__C__C(c) {
    const this$2 = String.fromCharCode(c);
    const this$3 = this$2.toLowerCase();
    return (65535 & (this$3.charCodeAt(0) | 0))
  };
  java$lang$Character$$charTypesFirst256__AI() {
    return (((((1 & this.jl_Character$__f_bitmap$0) << 24) >> 24) === 0) ? $p_jl_Character$__java$lang$Character$$charTypesFirst256$lzycompute__AI(this) : this.jl_Character$__f_java$lang$Character$$charTypesFirst256)
  };
}
const $d_jl_Character$ = new $TypeData().initClass({
  jl_Character$: 0
}, false, "java.lang.Character$", {
  jl_Character$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_Character$.prototype.$classData = $d_jl_Character$;
let $n_jl_Character$ = (void 0);
function $m_jl_Character$() {
  if ((!$n_jl_Character$)) {
    $n_jl_Character$ = new $c_jl_Character$()
  };
  return $n_jl_Character$
}
const $p_jl_Double$__doubleStrPat$lzycompute__O = (function($thiz) {
  if (((((1 & $thiz.jl_Double$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.jl_Double$__f_doubleStrPat = new RegExp("^[\\x00-\\x20]*([+-]?(?:NaN|Infinity|(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?)[fFdD]?)[\\x00-\\x20]*$");
    $thiz.jl_Double$__f_bitmap$0 = (((1 | $thiz.jl_Double$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.jl_Double$__f_doubleStrPat
});
const $p_jl_Double$__doubleStrPat__O = (function($thiz) {
  return (((((1 & $thiz.jl_Double$__f_bitmap$0) << 24) >> 24) === 0) ? $p_jl_Double$__doubleStrPat$lzycompute__O($thiz) : $thiz.jl_Double$__f_doubleStrPat)
});
const $p_jl_Double$__doubleStrHexPat$lzycompute__O = (function($thiz) {
  if (((((2 & $thiz.jl_Double$__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.jl_Double$__f_doubleStrHexPat = new RegExp("^[\\x00-\\x20]*([+-]?)0[xX]([0-9A-Fa-f]*)\\.?([0-9A-Fa-f]*)[pP]([+-]?\\d+)[fFdD]?[\\x00-\\x20]*$");
    $thiz.jl_Double$__f_bitmap$0 = (((2 | $thiz.jl_Double$__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.jl_Double$__f_doubleStrHexPat
});
const $p_jl_Double$__doubleStrHexPat__O = (function($thiz) {
  return (((((2 & $thiz.jl_Double$__f_bitmap$0) << 24) >> 24) === 0) ? $p_jl_Double$__doubleStrHexPat$lzycompute__O($thiz) : $thiz.jl_Double$__f_doubleStrHexPat)
});
const $p_jl_Double$__fail$1__T__E = (function($thiz, s$1) {
  throw new $c_jl_NumberFormatException((("For input string: \"" + s$1) + "\""))
});
const $p_jl_Double$__parseHexDoubleImpl$1__O__T__D = (function($thiz, match2, s$1) {
  const signStr = match2[1];
  const integralPartStr = match2[2];
  const fractionalPartStr = match2[3];
  const binaryExpStr = match2[4];
  if (((integralPartStr === "") && (fractionalPartStr === ""))) {
    $p_jl_Double$__fail$1__T__E($thiz, s$1)
  };
  const mantissaStr0 = (("" + integralPartStr) + fractionalPartStr);
  const correction1 = ((-((fractionalPartStr.length | 0) << 2)) | 0);
  let i = 0;
  while (true) {
    let $$x1;
    if ((i !== (mantissaStr0.length | 0))) {
      const index = i;
      $$x1 = ((65535 & (mantissaStr0.charCodeAt(index) | 0)) === 48)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      i = ((1 + i) | 0)
    } else {
      break
    }
  };
  const beginIndex = i;
  const mantissaStr = mantissaStr0.substring(beginIndex);
  if ((mantissaStr === "")) {
    if ((signStr === "-")) {
      return (-0)
    } else {
      return 0.0
    }
  };
  const needsCorrection2 = ((mantissaStr.length | 0) > 15);
  const truncatedMantissaStr = (needsCorrection2 ? mantissaStr.substring(0, 15) : mantissaStr);
  const correction2 = (needsCorrection2 ? ((((-15) + (mantissaStr.length | 0)) | 0) << 2) : 0);
  const fullCorrection = ((correction1 + correction2) | 0);
  const mantissa = (+parseInt(truncatedMantissaStr, 16));
  const binaryExpDouble = (+parseInt(binaryExpStr, 10));
  const binaryExp = $doubleToInt(binaryExpDouble);
  const binExpAndCorrection = ((binaryExp + fullCorrection) | 0);
  const binExpAndCorrection_div_3 = ((binExpAndCorrection / 3) | 0);
  const b = binExpAndCorrection_div_3;
  const correctingPow = (+Math.pow(2.0, b));
  const b$1 = ((binExpAndCorrection - (binExpAndCorrection_div_3 << 1)) | 0);
  const correctingPow3 = (+Math.pow(2.0, b$1));
  const r = (((mantissa * correctingPow) * correctingPow) * correctingPow3);
  return ((signStr === "-") ? (-r) : r)
});
class $c_jl_Double$ extends $c_O {
  constructor() {
    super();
    this.jl_Double$__f_doubleStrPat = null;
    this.jl_Double$__f_doubleStrHexPat = null;
    this.jl_Double$__f_bitmap$0 = 0
  };
  parseDouble__T__D(s) {
    const match1 = $p_jl_Double$__doubleStrPat__O(this).exec(s);
    if ((match1 !== null)) {
      return (+parseFloat(match1[1]))
    } else {
      const match2 = $p_jl_Double$__doubleStrHexPat__O(this).exec(s);
      return ((match2 !== null) ? $p_jl_Double$__parseHexDoubleImpl$1__O__T__D(this, match2, s) : $p_jl_Double$__fail$1__T__E(this, s))
    }
  };
}
const $d_jl_Double$ = new $TypeData().initClass({
  jl_Double$: 0
}, false, "java.lang.Double$", {
  jl_Double$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_Double$.prototype.$classData = $d_jl_Double$;
let $n_jl_Double$ = (void 0);
function $m_jl_Double$() {
  if ((!$n_jl_Double$)) {
    $n_jl_Double$ = new $c_jl_Double$()
  };
  return $n_jl_Double$
}
const $p_jl_Integer$__fail$1__T__E = (function($thiz, s$1) {
  throw new $c_jl_NumberFormatException((("For input string: \"" + s$1) + "\""))
});
class $c_jl_Integer$ extends $c_O {
  parseInt__T__I__I(s, radix) {
    const len = ((s === null) ? 0 : (s.length | 0));
    if ((((len === 0) || (radix < 2)) || (radix > 36))) {
      $p_jl_Integer$__fail$1__T__E(this, s)
    };
    const firstChar = (65535 & (s.charCodeAt(0) | 0));
    const negative = (firstChar === 45);
    const maxAbsValue = (negative ? 2.147483648E9 : 2.147483647E9);
    let i = ((negative || (firstChar === 43)) ? 1 : 0);
    if ((i >= (s.length | 0))) {
      $p_jl_Integer$__fail$1__T__E(this, s)
    };
    let result = 0.0;
    while ((i !== len)) {
      const $$x1 = $m_jl_Character$();
      const index = i;
      const digit = $$x1.digitWithValidRadix__I__I__I((65535 & (s.charCodeAt(index) | 0)), radix);
      result = ((result * radix) + digit);
      if (((digit === (-1)) || (result > maxAbsValue))) {
        $p_jl_Integer$__fail$1__T__E(this, s)
      };
      i = ((1 + i) | 0)
    };
    if (negative) {
      const n = (-result);
      return ((n | 0) | 0)
    } else {
      const n$1 = result;
      return ((n$1 | 0) | 0)
    }
  };
  bitCount__I__I(i) {
    const t1 = ((i - (1431655765 & (i >> 1))) | 0);
    const t2 = (((858993459 & t1) + (858993459 & (t1 >> 2))) | 0);
    return ($imul(16843009, (252645135 & ((t2 + (t2 >> 4)) | 0))) >> 24)
  };
}
const $d_jl_Integer$ = new $TypeData().initClass({
  jl_Integer$: 0
}, false, "java.lang.Integer$", {
  jl_Integer$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_Integer$.prototype.$classData = $d_jl_Integer$;
let $n_jl_Integer$ = (void 0);
function $m_jl_Integer$() {
  if ((!$n_jl_Integer$)) {
    $n_jl_Integer$ = new $c_jl_Integer$()
  };
  return $n_jl_Integer$
}
class $c_jl_Long$ extends $c_O {
  constructor() {
    super();
    this.jl_Long$__f_StringRadixInfos = null;
    this.jl_Long$__f_bitmap$0 = false
  };
  java$lang$Long$$toHexString__I__I__T(lo, hi) {
    if ((hi !== 0)) {
      const $$x1 = (+(hi >>> 0)).toString(16);
      const s = (+(lo >>> 0)).toString(16);
      const beginIndex = (s.length | 0);
      return ($$x1 + (("" + "00000000".substring(beginIndex)) + s))
    } else {
      return (+(lo >>> 0)).toString(16)
    }
  };
  java$lang$Long$$toOctalString__I__I__T(lo, hi) {
    const lp = (1073741823 & lo);
    const mp = (1073741823 & ((((lo >>> 30) | 0) + (hi << 2)) | 0));
    const hp = ((hi >>> 28) | 0);
    if ((hp !== 0)) {
      const $$x2 = (+(hp >>> 0)).toString(8);
      const s = (+(mp >>> 0)).toString(8);
      const beginIndex = (s.length | 0);
      const $$x1 = "0000000000".substring(beginIndex);
      const s$1 = (+(lp >>> 0)).toString(8);
      const beginIndex$1 = (s$1.length | 0);
      return (($$x2 + (("" + $$x1) + s)) + (("" + "0000000000".substring(beginIndex$1)) + s$1))
    } else if ((mp !== 0)) {
      const $$x3 = (+(mp >>> 0)).toString(8);
      const s$2 = (+(lp >>> 0)).toString(8);
      const beginIndex$2 = (s$2.length | 0);
      return ($$x3 + (("" + "0000000000".substring(beginIndex$2)) + s$2))
    } else {
      return (+(lp >>> 0)).toString(8)
    }
  };
}
const $d_jl_Long$ = new $TypeData().initClass({
  jl_Long$: 0
}, false, "java.lang.Long$", {
  jl_Long$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_Long$.prototype.$classData = $d_jl_Long$;
let $n_jl_Long$ = (void 0);
function $m_jl_Long$() {
  if ((!$n_jl_Long$)) {
    $n_jl_Long$ = new $c_jl_Long$()
  };
  return $n_jl_Long$
}
class $c_jl_Number extends $c_O {
}
function $is_jl_Number(obj) {
  return ((obj instanceof $c_jl_Number) || ((typeof obj) === "number"))
}
function $isArrayOf_jl_Number(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Number)))
}
class $c_jl_String$ extends $c_O {
  constructor() {
    super();
    this.jl_String$__f_CASE_INSENSITIVE_ORDER = null;
    this.jl_String$__f_bitmap$0 = false
  };
  new__AC__I__I__T(value, offset, count) {
    const end = ((offset + count) | 0);
    if ((((offset < 0) || (end < offset)) || (end > value.u.length))) {
      throw $ct_jl_StringIndexOutOfBoundsException__(new $c_jl_StringIndexOutOfBoundsException())
    };
    let result = "";
    let i = offset;
    while ((i !== end)) {
      const $$x1 = result;
      const this$1 = value.u[i];
      result = (("" + $$x1) + String.fromCharCode(this$1));
      i = ((1 + i) | 0)
    };
    return result
  };
  format__T__AO__T(format, args) {
    const frm = $ct_ju_Formatter__(new $c_ju_Formatter());
    const res = frm.format__T__AO__ju_Formatter(format, args).toString__T();
    frm.close__V();
    return res
  };
  java$lang$_String$$fromCodePoint__I__T(codePoint) {
    if ((((-65536) & codePoint) === 0)) {
      return String.fromCharCode(codePoint)
    } else if (((codePoint < 0) || (codePoint > 1114111))) {
      throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
    } else {
      const offsetCp = (((-65536) + codePoint) | 0);
      return String.fromCharCode((55296 | (offsetCp >> 10)), (56320 | (1023 & offsetCp)))
    }
  };
}
const $d_jl_String$ = new $TypeData().initClass({
  jl_String$: 0
}, false, "java.lang.String$", {
  jl_String$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_String$.prototype.$classData = $d_jl_String$;
let $n_jl_String$ = (void 0);
function $m_jl_String$() {
  if ((!$n_jl_String$)) {
    $n_jl_String$ = new $c_jl_String$()
  };
  return $n_jl_String$
}
const $ct_jl_Throwable__T__jl_Throwable__Z__Z__ = (function($thiz, s, e, enableSuppression, writableStackTrace) {
  $thiz.jl_Throwable__f_s = s;
  $thiz.jl_Throwable__f_e = e;
  $thiz.jl_Throwable__f_enableSuppression = enableSuppression;
  $thiz.jl_Throwable__f_writableStackTrace = writableStackTrace;
  if (writableStackTrace) {
    $thiz.fillInStackTrace__jl_Throwable()
  };
  return $thiz
});
class $c_jl_Throwable extends Error {
  constructor() {
    super();
    this.jl_Throwable__f_s = null;
    this.jl_Throwable__f_e = null;
    this.jl_Throwable__f_enableSuppression = false;
    this.jl_Throwable__f_writableStackTrace = false;
    this.jl_Throwable__f_stackTraceStateInternal = null;
    this.jl_Throwable__f_stackTrace = null;
    this.jl_Throwable__f_suppressed = null
  };
  getMessage__T() {
    return this.jl_Throwable__f_s
  };
  fillInStackTrace__jl_Throwable() {
    const identifyingString = Object.prototype.toString.call(this);
    if ((identifyingString === "[object Error]")) {
      this.jl_Throwable__f_stackTraceStateInternal = this
    } else if ((Error.captureStackTrace === (void 0))) {
      const e = new Error();
      this.jl_Throwable__f_stackTraceStateInternal = e
    } else {
      Error.captureStackTrace(this);
      this.jl_Throwable__f_stackTraceStateInternal = this
    };
    return this
  };
  toString__T() {
    const className = $objectClassName(this);
    const message = this.getMessage__T();
    return ((message === null) ? className : ((className + ": ") + message))
  };
  $js$exported$meth$toString__O() {
    return this.toString__T()
  };
  $js$exported$prop$name__O() {
    return $objectClassName(this)
  };
  $js$exported$prop$message__O() {
    const m = this.getMessage__T();
    return ((m === null) ? "" : m)
  };
  hashCode__I() {
    return $c_O.prototype.hashCode__I.call(this)
  };
  equals__O__Z(that) {
    return $c_O.prototype.equals__O__Z.call(this, that)
  };
  get "message"() {
    return this.$js$exported$prop$message__O()
  };
  get "name"() {
    return this.$js$exported$prop$name__O()
  };
  "toString"() {
    return this.$js$exported$meth$toString__O()
  };
}
function $isArrayOf_jl_Throwable(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Throwable)))
}
const $p_ju_regex_Matcher__ensureLastMatch__sjs_js_RegExp$ExecResult = (function($thiz) {
  if (($thiz.ju_regex_Matcher__f_lastMatch === null)) {
    throw $ct_jl_IllegalStateException__T__(new $c_jl_IllegalStateException(), "No match available")
  };
  return $thiz.ju_regex_Matcher__f_lastMatch
});
class $c_ju_regex_Matcher extends $c_O {
  constructor(pattern0, input0, regionStart0, regionEnd0) {
    super();
    this.ju_regex_Matcher__f_pattern0 = null;
    this.ju_regex_Matcher__f_input0 = null;
    this.ju_regex_Matcher__f_regionStart0 = 0;
    this.ju_regex_Matcher__f_regionEnd0 = 0;
    this.ju_regex_Matcher__f_regexp = null;
    this.ju_regex_Matcher__f_inputstr = null;
    this.ju_regex_Matcher__f_lastMatch = null;
    this.ju_regex_Matcher__f_lastMatchIsValid = false;
    this.ju_regex_Matcher__f_canStillFind = false;
    this.ju_regex_Matcher__f_appendPos = 0;
    this.ju_regex_Matcher__f_startOfGroupCache = null;
    this.ju_regex_Matcher__f_pattern0 = pattern0;
    this.ju_regex_Matcher__f_input0 = input0;
    this.ju_regex_Matcher__f_regionStart0 = regionStart0;
    this.ju_regex_Matcher__f_regionEnd0 = regionEnd0;
    this.ju_regex_Matcher__f_regexp = this.ju_regex_Matcher__f_pattern0.newJSRegExp__sjs_js_RegExp();
    this.ju_regex_Matcher__f_inputstr = $dp_toString__T($dp_subSequence__I__I__jl_CharSequence(this.ju_regex_Matcher__f_input0, this.ju_regex_Matcher__f_regionStart0, this.ju_regex_Matcher__f_regionEnd0));
    this.ju_regex_Matcher__f_lastMatch = null;
    this.ju_regex_Matcher__f_lastMatchIsValid = false;
    this.ju_regex_Matcher__f_canStillFind = true;
    this.ju_regex_Matcher__f_appendPos = 0
  };
  find__Z() {
    if (this.ju_regex_Matcher__f_canStillFind) {
      this.ju_regex_Matcher__f_lastMatchIsValid = true;
      this.ju_regex_Matcher__f_lastMatch = this.ju_regex_Matcher__f_regexp.exec(this.ju_regex_Matcher__f_inputstr);
      if ((this.ju_regex_Matcher__f_lastMatch !== null)) {
        const value = this.ju_regex_Matcher__f_lastMatch[0];
        if ((value === (void 0))) {
          throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "undefined.get")
        };
        const this$5 = value;
        if ((this$5 === "")) {
          const ev$1 = this.ju_regex_Matcher__f_regexp;
          ev$1.lastIndex = ((1 + (ev$1.lastIndex | 0)) | 0)
        }
      } else {
        this.ju_regex_Matcher__f_canStillFind = false
      };
      this.ju_regex_Matcher__f_startOfGroupCache = null;
      return (this.ju_regex_Matcher__f_lastMatch !== null)
    } else {
      return false
    }
  };
  start__I() {
    return ($p_ju_regex_Matcher__ensureLastMatch__sjs_js_RegExp$ExecResult(this).index | 0)
  };
  end__I() {
    const $$x1 = this.start__I();
    const this$1 = this.group__T();
    return (($$x1 + (this$1.length | 0)) | 0)
  };
  group__T() {
    const value = $p_ju_regex_Matcher__ensureLastMatch__sjs_js_RegExp$ExecResult(this)[0];
    if ((value === (void 0))) {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "undefined.get")
    };
    return value
  };
}
const $d_ju_regex_Matcher = new $TypeData().initClass({
  ju_regex_Matcher: 0
}, false, "java.util.regex.Matcher", {
  ju_regex_Matcher: 1,
  O: 1,
  ju_regex_MatchResult: 1
});
$c_ju_regex_Matcher.prototype.$classData = $d_ju_regex_Matcher;
const $p_ju_regex_Pattern__jsPattern__T = (function($thiz) {
  return $thiz.ju_regex_Pattern__f_jsRegExp.source
});
const $p_ju_regex_Pattern__jsFlags__T = (function($thiz) {
  return ((((!(!$thiz.ju_regex_Pattern__f_jsRegExp.global)) ? "g" : "") + ((!(!$thiz.ju_regex_Pattern__f_jsRegExp.ignoreCase)) ? "i" : "")) + ((!(!$thiz.ju_regex_Pattern__f_jsRegExp.multiline)) ? "m" : ""))
});
class $c_ju_regex_Pattern extends $c_O {
  constructor(jsRegExp, _pattern, _flags) {
    super();
    this.ju_regex_Pattern__f_groupCount = 0;
    this.ju_regex_Pattern__f_groupStartMapper = null;
    this.ju_regex_Pattern__f_jsRegExp = null;
    this.ju_regex_Pattern__f__pattern = null;
    this.ju_regex_Pattern__f__flags = 0;
    this.ju_regex_Pattern__f_bitmap$0 = 0;
    this.ju_regex_Pattern__f_jsRegExp = jsRegExp;
    this.ju_regex_Pattern__f__pattern = _pattern;
    this.ju_regex_Pattern__f__flags = _flags
  };
  toString__T() {
    return this.ju_regex_Pattern__f__pattern
  };
  newJSRegExp__sjs_js_RegExp() {
    const r = new RegExp(this.ju_regex_Pattern__f_jsRegExp);
    return ((!Object.is(r, this.ju_regex_Pattern__f_jsRegExp)) ? r : new RegExp($p_ju_regex_Pattern__jsPattern__T(this), $p_ju_regex_Pattern__jsFlags__T(this)))
  };
  split__jl_CharSequence__I__AT(input, limit) {
    const inputStr = $dp_toString__T(input);
    if ((inputStr === "")) {
      return $makeNativeArrayWrapper($d_T.getArrayOf(), [""])
    } else {
      const lim = ((limit > 0) ? limit : 2147483647);
      const matcher = new $c_ju_regex_Matcher(this, inputStr, 0, (inputStr.length | 0));
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      let prevEnd = 0;
      let size$1 = 0;
      while (((size$1 < (((-1) + lim) | 0)) && matcher.find__Z())) {
        if ((matcher.end__I() !== 0)) {
          const beginIndex = prevEnd;
          const endIndex = matcher.start__I();
          const elem = inputStr.substring(beginIndex, endIndex);
          const unboxedElem = ((elem === null) ? null : elem);
          jsElems.push(unboxedElem);
          size$1 = ((1 + size$1) | 0)
        };
        prevEnd = matcher.end__I()
      };
      const beginIndex$1 = prevEnd;
      const elem$1 = inputStr.substring(beginIndex$1);
      const unboxedElem$1 = ((elem$1 === null) ? null : elem$1);
      jsElems.push(unboxedElem$1);
      const result = $makeNativeArrayWrapper($d_T.getArrayOf(), jsElems);
      if ((limit !== 0)) {
        return result
      } else {
        let actualLength = result.u.length;
        while (((actualLength !== 0) && (result.u[(((-1) + actualLength) | 0)] === ""))) {
          actualLength = (((-1) + actualLength) | 0)
        };
        if ((actualLength === result.u.length)) {
          return result
        } else {
          const actualResult = $newArrayObject($d_T.getArrayOf(), [actualLength]);
          const length = actualLength;
          $systemArraycopy(result, 0, actualResult, 0, length);
          return actualResult
        }
      }
    }
  };
}
const $d_ju_regex_Pattern = new $TypeData().initClass({
  ju_regex_Pattern: 0
}, false, "java.util.regex.Pattern", {
  ju_regex_Pattern: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_regex_Pattern.prototype.$classData = $d_ju_regex_Pattern;
class $c_ju_regex_Pattern$ extends $c_O {
  constructor() {
    super();
    this.ju_regex_Pattern$__f_java$util$regex$Pattern$$splitHackPat = null;
    this.ju_regex_Pattern$__f_java$util$regex$Pattern$$flagHackPat = null;
    $n_ju_regex_Pattern$ = this;
    this.ju_regex_Pattern$__f_java$util$regex$Pattern$$splitHackPat = new RegExp("^\\\\Q(.|\\n|\\r)\\\\E$");
    this.ju_regex_Pattern$__f_java$util$regex$Pattern$$flagHackPat = new RegExp("^\\(\\?([idmsuxU]*)(?:-([idmsuxU]*))?\\)")
  };
  compile__T__I__ju_regex_Pattern(regex, flags) {
    let x1;
    if (((16 & flags) !== 0)) {
      x1 = $ct_T2__O__O__(new $c_T2(), this.quote__T__T(regex), flags)
    } else {
      const m = this.ju_regex_Pattern$__f_java$util$regex$Pattern$$splitHackPat.exec(regex);
      let this$5;
      if ((m !== null)) {
        const value = m[1];
        if ((value === (void 0))) {
          throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "undefined.get")
        };
        this$5 = new $c_s_Some($ct_T2__O__O__(new $c_T2(), this.quote__T__T(value), flags))
      } else {
        this$5 = $m_s_None$()
      };
      let this$28;
      if (this$5.isEmpty__Z()) {
        const this$6 = $m_ju_regex_Pattern$();
        const m$1 = this$6.ju_regex_Pattern$__f_java$util$regex$Pattern$$flagHackPat.exec(regex);
        if ((m$1 !== null)) {
          const value$1 = m$1[0];
          if ((value$1 === (void 0))) {
            throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "undefined.get")
          };
          const this$11 = value$1;
          const beginIndex = (this$11.length | 0);
          const newPat = regex.substring(beginIndex);
          let elem = 0;
          elem = flags;
          const value$2 = m$1[1];
          if ((value$2 !== (void 0))) {
            const chars = value$2;
            const end = (chars.length | 0);
            let i = 0;
            while ((i < end)) {
              const arg1 = i;
              elem = (elem | $m_ju_regex_Pattern$().java$util$regex$Pattern$$charToFlag__C__I((65535 & (chars.charCodeAt(arg1) | 0))));
              i = ((1 + i) | 0)
            }
          };
          const value$3 = m$1[2];
          if ((value$3 !== (void 0))) {
            const chars$3 = value$3;
            const end$1 = (chars$3.length | 0);
            let i$1 = 0;
            while ((i$1 < end$1)) {
              const arg1$1 = i$1;
              elem = (elem & (~$m_ju_regex_Pattern$().java$util$regex$Pattern$$charToFlag__C__I((65535 & (chars$3.charCodeAt(arg1$1) | 0)))));
              i$1 = ((1 + i$1) | 0)
            }
          };
          this$28 = new $c_s_Some($ct_T2__O__O__(new $c_T2(), newPat, elem))
        } else {
          this$28 = $m_s_None$()
        }
      } else {
        this$28 = this$5
      };
      x1 = (this$28.isEmpty__Z() ? $ct_T2__O__O__(new $c_T2(), regex, flags) : this$28.get__O())
    };
    if ((x1 === null)) {
      throw new $c_s_MatchError(x1)
    };
    const jsPattern = x1._1__O();
    const flags1 = x1._2$mcI$sp__I();
    const jsFlags = (("g" + (((2 & flags1) !== 0) ? "i" : "")) + (((8 & flags1) !== 0) ? "m" : ""));
    const jsRegExp = new RegExp(jsPattern, jsFlags);
    return new $c_ju_regex_Pattern(jsRegExp, regex, flags1)
  };
  quote__T__T(s) {
    let result = "";
    let i = 0;
    while ((i < (s.length | 0))) {
      const index = i;
      const c = (65535 & (s.charCodeAt(index) | 0));
      const $$x2 = result;
      let $$x1;
      switch (c) {
        case 92:
        case 46:
        case 40:
        case 41:
        case 91:
        case 93:
        case 123:
        case 125:
        case 124:
        case 63:
        case 42:
        case 43:
        case 94:
        case 36: {
          $$x1 = ("\\" + $bC(c));
          break
        }
        default: {
          $$x1 = $bC(c)
        }
      };
      result = (("" + $$x2) + $$x1);
      i = ((1 + i) | 0)
    };
    return result
  };
  java$util$regex$Pattern$$charToFlag__C__I(c) {
    switch (c) {
      case 105: {
        return 2;
        break
      }
      case 100: {
        return 1;
        break
      }
      case 109: {
        return 8;
        break
      }
      case 115: {
        return 32;
        break
      }
      case 117: {
        return 64;
        break
      }
      case 120: {
        return 4;
        break
      }
      case 85: {
        return 256;
        break
      }
      default: {
        throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "bad in-pattern flag")
      }
    }
  };
}
const $d_ju_regex_Pattern$ = new $TypeData().initClass({
  ju_regex_Pattern$: 0
}, false, "java.util.regex.Pattern$", {
  ju_regex_Pattern$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_regex_Pattern$.prototype.$classData = $d_ju_regex_Pattern$;
let $n_ju_regex_Pattern$ = (void 0);
function $m_ju_regex_Pattern$() {
  if ((!$n_ju_regex_Pattern$)) {
    $n_ju_regex_Pattern$ = new $c_ju_regex_Pattern$()
  };
  return $n_ju_regex_Pattern$
}
const $p_RTLong$__toUnsignedString__I__I__T = (function($thiz, lo, hi) {
  if ((((-2097152) & hi) === 0)) {
    const this$1 = ((4.294967296E9 * hi) + (+(lo >>> 0)));
    return ("" + this$1)
  } else {
    return $p_RTLong$__unsignedDivModHelper__I__I__I__I__I__O($thiz, lo, hi, 1000000000, 0, 2)
  }
});
const $p_RTLong$__unsigned_$div__I__I__I__I__I = (function($thiz, alo, ahi, blo, bhi) {
  if ((((-2097152) & ahi) === 0)) {
    if ((((-2097152) & bhi) === 0)) {
      const aDouble = ((4.294967296E9 * ahi) + (+(alo >>> 0)));
      const bDouble = ((4.294967296E9 * bhi) + (+(blo >>> 0)));
      const rDouble = (aDouble / bDouble);
      const x = (rDouble / 4.294967296E9);
      $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = ((x | 0) | 0);
      return ((rDouble | 0) | 0)
    } else {
      $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0;
      return 0
    }
  } else if (((bhi === 0) && ((blo & (((-1) + blo) | 0)) === 0))) {
    const pow = ((31 - $clz32(blo)) | 0);
    $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = ((ahi >>> pow) | 0);
    return (((alo >>> pow) | 0) | ((ahi << 1) << ((31 - pow) | 0)))
  } else if (((blo === 0) && ((bhi & (((-1) + bhi) | 0)) === 0))) {
    const pow$2 = ((31 - $clz32(bhi)) | 0);
    $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0;
    return ((ahi >>> pow$2) | 0)
  } else {
    return ($p_RTLong$__unsignedDivModHelper__I__I__I__I__I__O($thiz, alo, ahi, blo, bhi, 0) | 0)
  }
});
const $p_RTLong$__unsigned_$percent__I__I__I__I__I = (function($thiz, alo, ahi, blo, bhi) {
  if ((((-2097152) & ahi) === 0)) {
    if ((((-2097152) & bhi) === 0)) {
      const aDouble = ((4.294967296E9 * ahi) + (+(alo >>> 0)));
      const bDouble = ((4.294967296E9 * bhi) + (+(blo >>> 0)));
      const rDouble = (aDouble % bDouble);
      const x = (rDouble / 4.294967296E9);
      $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = ((x | 0) | 0);
      return ((rDouble | 0) | 0)
    } else {
      $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = ahi;
      return alo
    }
  } else if (((bhi === 0) && ((blo & (((-1) + blo) | 0)) === 0))) {
    $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0;
    return (alo & (((-1) + blo) | 0))
  } else if (((blo === 0) && ((bhi & (((-1) + bhi) | 0)) === 0))) {
    $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = (ahi & (((-1) + bhi) | 0));
    return alo
  } else {
    return ($p_RTLong$__unsignedDivModHelper__I__I__I__I__I__O($thiz, alo, ahi, blo, bhi, 1) | 0)
  }
});
const $p_RTLong$__unsignedDivModHelper__I__I__I__I__I__O = (function($thiz, alo, ahi, blo, bhi, ask) {
  let shift = ((((bhi !== 0) ? $clz32(bhi) : ((32 + $clz32(blo)) | 0)) - ((ahi !== 0) ? $clz32(ahi) : ((32 + $clz32(alo)) | 0))) | 0);
  const n = shift;
  const lo = (((32 & n) === 0) ? (blo << n) : 0);
  const hi = (((32 & n) === 0) ? (((((blo >>> 1) | 0) >>> ((31 - n) | 0)) | 0) | (bhi << n)) : (blo << n));
  let bShiftLo = lo;
  let bShiftHi = hi;
  let remLo = alo;
  let remHi = ahi;
  let quotLo = 0;
  let quotHi = 0;
  while (((shift >= 0) && (((-2097152) & remHi) !== 0))) {
    const alo$1 = remLo;
    const ahi$1 = remHi;
    const blo$1 = bShiftLo;
    const bhi$1 = bShiftHi;
    if (((ahi$1 === bhi$1) ? (((-2147483648) ^ alo$1) >= ((-2147483648) ^ blo$1)) : (((-2147483648) ^ ahi$1) >= ((-2147483648) ^ bhi$1)))) {
      const lo$1 = remLo;
      const hi$1 = remHi;
      const lo$2 = bShiftLo;
      const hi$2 = bShiftHi;
      const lo$3 = ((lo$1 - lo$2) | 0);
      const hi$3 = ((((-2147483648) ^ lo$3) > ((-2147483648) ^ lo$1)) ? (((-1) + ((hi$1 - hi$2) | 0)) | 0) : ((hi$1 - hi$2) | 0));
      remLo = lo$3;
      remHi = hi$3;
      if ((shift < 32)) {
        quotLo = (quotLo | (1 << shift))
      } else {
        quotHi = (quotHi | (1 << shift))
      }
    };
    shift = (((-1) + shift) | 0);
    const lo$4 = bShiftLo;
    const hi$4 = bShiftHi;
    const lo$5 = (((lo$4 >>> 1) | 0) | (hi$4 << 31));
    const hi$5 = ((hi$4 >>> 1) | 0);
    bShiftLo = lo$5;
    bShiftHi = hi$5
  };
  const alo$2 = remLo;
  const ahi$2 = remHi;
  if (((ahi$2 === bhi) ? (((-2147483648) ^ alo$2) >= ((-2147483648) ^ blo)) : (((-2147483648) ^ ahi$2) >= ((-2147483648) ^ bhi)))) {
    const lo$6 = remLo;
    const hi$6 = remHi;
    const remDouble = ((4.294967296E9 * hi$6) + (+(lo$6 >>> 0)));
    const bDouble = ((4.294967296E9 * bhi) + (+(blo >>> 0)));
    if ((ask !== 1)) {
      const x = (remDouble / bDouble);
      const lo$7 = ((x | 0) | 0);
      const x$1 = (x / 4.294967296E9);
      const hi$7 = ((x$1 | 0) | 0);
      const lo$8 = quotLo;
      const hi$8 = quotHi;
      const lo$9 = ((lo$8 + lo$7) | 0);
      const hi$9 = ((((-2147483648) ^ lo$9) < ((-2147483648) ^ lo$8)) ? ((1 + ((hi$8 + hi$7) | 0)) | 0) : ((hi$8 + hi$7) | 0));
      quotLo = lo$9;
      quotHi = hi$9
    };
    if ((ask !== 0)) {
      const rem_mod_bDouble = (remDouble % bDouble);
      remLo = ((rem_mod_bDouble | 0) | 0);
      const x$2 = (rem_mod_bDouble / 4.294967296E9);
      remHi = ((x$2 | 0) | 0)
    }
  };
  if ((ask === 0)) {
    $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = quotHi;
    return quotLo
  } else if ((ask === 1)) {
    $thiz.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = remHi;
    return remLo
  } else {
    const lo$10 = quotLo;
    const hi$10 = quotHi;
    const quot = ((4.294967296E9 * hi$10) + (+(lo$10 >>> 0)));
    const this$3 = remLo;
    const remStr = ("" + this$3);
    const start = (remStr.length | 0);
    return ((("" + quot) + "000000000".substring(start)) + remStr)
  }
});
class $c_RTLong$ extends $c_O {
  constructor() {
    super();
    this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0
  };
  org$scalajs$linker$runtime$RuntimeLong$$toString__I__I__T(lo, hi) {
    return ((hi === (lo >> 31)) ? ("" + lo) : ((hi < 0) ? ("-" + $p_RTLong$__toUnsignedString__I__I__T(this, ((-lo) | 0), ((lo !== 0) ? (~hi) : ((-hi) | 0)))) : $p_RTLong$__toUnsignedString__I__I__T(this, lo, hi)))
  };
  org$scalajs$linker$runtime$RuntimeLong$$toDouble__I__I__D(lo, hi) {
    if ((hi < 0)) {
      const x = ((lo !== 0) ? (~hi) : ((-hi) | 0));
      const x$1 = ((-lo) | 0);
      return (-((4.294967296E9 * (+(x >>> 0))) + (+(x$1 >>> 0))))
    } else {
      return ((4.294967296E9 * hi) + (+(lo >>> 0)))
    }
  };
  fromInt__I__RTLong(value) {
    return new $c_RTLong(value, (value >> 31))
  };
  fromDouble__D__RTLong(value) {
    const lo = this.org$scalajs$linker$runtime$RuntimeLong$$fromDoubleImpl__D__I(value);
    return new $c_RTLong(lo, this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn)
  };
  org$scalajs$linker$runtime$RuntimeLong$$fromDoubleImpl__D__I(value) {
    if ((value < (-9.223372036854776E18))) {
      this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = (-2147483648);
      return 0
    } else if ((value >= 9.223372036854776E18)) {
      this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 2147483647;
      return (-1)
    } else {
      const rawLo = ((value | 0) | 0);
      const x = (value / 4.294967296E9);
      const rawHi = ((x | 0) | 0);
      this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = (((value < 0.0) && (rawLo !== 0)) ? (((-1) + rawHi) | 0) : rawHi);
      return rawLo
    }
  };
  org$scalajs$linker$runtime$RuntimeLong$$compare__I__I__I__I__I(alo, ahi, blo, bhi) {
    return ((ahi === bhi) ? ((alo === blo) ? 0 : ((((-2147483648) ^ alo) < ((-2147483648) ^ blo)) ? (-1) : 1)) : ((ahi < bhi) ? (-1) : 1))
  };
  divideImpl__I__I__I__I__I(alo, ahi, blo, bhi) {
    if (((blo | bhi) === 0)) {
      throw new $c_jl_ArithmeticException("/ by zero")
    };
    if ((ahi === (alo >> 31))) {
      if ((bhi === (blo >> 31))) {
        if (((alo === (-2147483648)) && (blo === (-1)))) {
          this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0;
          return (-2147483648)
        } else {
          const lo = $intDiv(alo, blo);
          this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = (lo >> 31);
          return lo
        }
      } else if (((alo === (-2147483648)) && ((blo === (-2147483648)) && (bhi === 0)))) {
        this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = (-1);
        return (-1)
      } else {
        this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0;
        return 0
      }
    } else {
      let aAbs__lo;
      let aAbs__hi;
      if ((ahi < 0)) {
        const lo$1 = ((-alo) | 0);
        const hi = ((alo !== 0) ? (~ahi) : ((-ahi) | 0));
        const $$x1__lo = lo$1;
        const $$x1__hi = hi;
        aAbs__lo = $$x1__lo;
        aAbs__hi = $$x1__hi
      } else {
        const $$x2__lo = alo;
        const $$x2__hi = ahi;
        aAbs__lo = $$x2__lo;
        aAbs__hi = $$x2__hi
      };
      let bAbs__lo;
      let bAbs__hi;
      if ((bhi < 0)) {
        const lo$2 = ((-blo) | 0);
        const hi$1 = ((blo !== 0) ? (~bhi) : ((-bhi) | 0));
        const $$x3__lo = lo$2;
        const $$x3__hi = hi$1;
        bAbs__lo = $$x3__lo;
        bAbs__hi = $$x3__hi
      } else {
        const $$x4__lo = blo;
        const $$x4__hi = bhi;
        bAbs__lo = $$x4__lo;
        bAbs__hi = $$x4__hi
      };
      const absRLo = $p_RTLong$__unsigned_$div__I__I__I__I__I(this, aAbs__lo, aAbs__hi, bAbs__lo, bAbs__hi);
      if (((ahi ^ bhi) >= 0)) {
        return absRLo
      } else {
        const hi$2 = this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
        this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = ((absRLo !== 0) ? (~hi$2) : ((-hi$2) | 0));
        return ((-absRLo) | 0)
      }
    }
  };
  remainderImpl__I__I__I__I__I(alo, ahi, blo, bhi) {
    if (((blo | bhi) === 0)) {
      throw new $c_jl_ArithmeticException("/ by zero")
    };
    if ((ahi === (alo >> 31))) {
      if ((bhi === (blo >> 31))) {
        if ((blo !== (-1))) {
          const lo = $intMod(alo, blo);
          this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = (lo >> 31);
          return lo
        } else {
          this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0;
          return 0
        }
      } else if (((alo === (-2147483648)) && ((blo === (-2147483648)) && (bhi === 0)))) {
        this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = 0;
        return 0
      } else {
        this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = ahi;
        return alo
      }
    } else {
      let aAbs__lo;
      let aAbs__hi;
      if ((ahi < 0)) {
        const lo$1 = ((-alo) | 0);
        const hi = ((alo !== 0) ? (~ahi) : ((-ahi) | 0));
        const $$x1__lo = lo$1;
        const $$x1__hi = hi;
        aAbs__lo = $$x1__lo;
        aAbs__hi = $$x1__hi
      } else {
        const $$x2__lo = alo;
        const $$x2__hi = ahi;
        aAbs__lo = $$x2__lo;
        aAbs__hi = $$x2__hi
      };
      let bAbs__lo;
      let bAbs__hi;
      if ((bhi < 0)) {
        const lo$2 = ((-blo) | 0);
        const hi$1 = ((blo !== 0) ? (~bhi) : ((-bhi) | 0));
        const $$x3__lo = lo$2;
        const $$x3__hi = hi$1;
        bAbs__lo = $$x3__lo;
        bAbs__hi = $$x3__hi
      } else {
        const $$x4__lo = blo;
        const $$x4__hi = bhi;
        bAbs__lo = $$x4__lo;
        bAbs__hi = $$x4__hi
      };
      const absRLo = $p_RTLong$__unsigned_$percent__I__I__I__I__I(this, aAbs__lo, aAbs__hi, bAbs__lo, bAbs__hi);
      if ((ahi < 0)) {
        const hi$2 = this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
        this.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn = ((absRLo !== 0) ? (~hi$2) : ((-hi$2) | 0));
        return ((-absRLo) | 0)
      } else {
        return absRLo
      }
    }
  };
}
const $d_RTLong$ = new $TypeData().initClass({
  RTLong$: 0
}, false, "org.scalajs.linker.runtime.RuntimeLong$", {
  RTLong$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_RTLong$.prototype.$classData = $d_RTLong$;
let $n_RTLong$ = (void 0);
function $m_RTLong$() {
  if ((!$n_RTLong$)) {
    $n_RTLong$ = new $c_RTLong$()
  };
  return $n_RTLong$
}
class $c_s_$less$colon$less$ extends $c_O {
  constructor() {
    super();
    this.s_$less$colon$less$__f_singleton = null;
    $n_s_$less$colon$less$ = this;
    this.s_$less$colon$less$__f_singleton = new $c_s_$less$colon$less$$anon$1()
  };
}
const $d_s_$less$colon$less$ = new $TypeData().initClass({
  s_$less$colon$less$: 0
}, false, "scala.$less$colon$less$", {
  s_$less$colon$less$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_$less$colon$less$.prototype.$classData = $d_s_$less$colon$less$;
let $n_s_$less$colon$less$ = (void 0);
function $m_s_$less$colon$less$() {
  if ((!$n_s_$less$colon$less$)) {
    $n_s_$less$colon$less$ = new $c_s_$less$colon$less$()
  };
  return $n_s_$less$colon$less$
}
const $p_s_Array$__slowcopy__O__I__O__I__I__V = (function($thiz, src, srcPos, dest, destPos, length) {
  let i = srcPos;
  let j = destPos;
  const srcUntil = ((srcPos + length) | 0);
  while ((i < srcUntil)) {
    $m_sr_ScalaRunTime$().array_update__O__I__O__V(dest, j, $m_sr_ScalaRunTime$().array_apply__O__I__O(src, i));
    i = ((1 + i) | 0);
    j = ((1 + j) | 0)
  }
});
const $p_s_Array$__newUnitArray__I__Ajl_Void = (function($thiz, len) {
  const result = $newArrayObject($d_jl_Void.getArrayOf(), [len]);
  $m_ju_Arrays$().fill__AO__O__V(result, (void 0));
  return result
});
class $c_s_Array$ extends $c_O {
  from__sc_IterableOnce__s_reflect_ClassTag__O(it, evidence$3) {
    const n = it.knownSize__I();
    if ((n > (-1))) {
      const elements = evidence$3.newArray__I__O(n);
      const iterator = it.iterator__sc_Iterator();
      let i = 0;
      while ((i < n)) {
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(elements, i, iterator.next__O());
        i = ((1 + i) | 0)
      };
      return elements
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      const elementClass = evidence$3.runtimeClass__jl_Class();
      capacity = 0;
      size = 0;
      const isCharArrayBuilder = (elementClass === $d_C.getClassOf());
      jsElems = [];
      const iterator$2 = it.iterator__sc_Iterator();
      while (iterator$2.hasNext__Z()) {
        const elem = iterator$2.next__O();
        const unboxedElem = (isCharArrayBuilder ? $uC(elem) : ((elem === null) ? elementClass.jl_Class__f_data.zero : elem));
        jsElems.push(unboxedElem)
      };
      const elemRuntimeClass = ((elementClass === $d_V.getClassOf()) ? $d_jl_Void.getClassOf() : (((elementClass === $d_sr_Null$.getClassOf()) || (elementClass === $d_sr_Nothing$.getClassOf())) ? $d_O.getClassOf() : elementClass));
      return $makeNativeArrayWrapper(elemRuntimeClass.jl_Class__f_data.getArrayOf(), jsElems)
    }
  };
  copy__O__I__O__I__I__V(src, srcPos, dest, destPos, length) {
    const srcClass = $objectGetClass(src);
    if ((srcClass.isArray__Z() && $objectGetClass(dest).isAssignableFrom__jl_Class__Z(srcClass))) {
      $systemArraycopy(src, srcPos, dest, destPos, length)
    } else {
      $p_s_Array$__slowcopy__O__I__O__I__I__V(this, src, srcPos, dest, destPos, length)
    }
  };
  copyOf__O__I__O(original, newLength) {
    if ($isArrayOf_jl_Void(original, 1)) {
      return $p_s_Array$__newUnitArray__I__Ajl_Void(this, newLength)
    } else if ($isArrayOf_O(original, 1)) {
      const x3 = original;
      return $m_ju_Arrays$().copyOf__AO__I__AO(x3, newLength)
    } else if ($isArrayOf_I(original, 1)) {
      const x4 = original;
      return $m_ju_Arrays$().copyOf__AI__I__AI(x4, newLength)
    } else if ($isArrayOf_D(original, 1)) {
      const x5 = original;
      return $m_ju_Arrays$().copyOf__AD__I__AD(x5, newLength)
    } else if ($isArrayOf_J(original, 1)) {
      const x6 = original;
      return $m_ju_Arrays$().copyOf__AJ__I__AJ(x6, newLength)
    } else if ($isArrayOf_F(original, 1)) {
      const x7 = original;
      return $m_ju_Arrays$().copyOf__AF__I__AF(x7, newLength)
    } else if ($isArrayOf_C(original, 1)) {
      const x8 = original;
      return $m_ju_Arrays$().copyOf__AC__I__AC(x8, newLength)
    } else if ($isArrayOf_B(original, 1)) {
      const x9 = original;
      return $m_ju_Arrays$().copyOf__AB__I__AB(x9, newLength)
    } else if ($isArrayOf_S(original, 1)) {
      const x10 = original;
      return $m_ju_Arrays$().copyOf__AS__I__AS(x10, newLength)
    } else if ($isArrayOf_Z(original, 1)) {
      const x11 = original;
      return $m_ju_Arrays$().copyOf__AZ__I__AZ(x11, newLength)
    } else {
      throw new $c_s_MatchError(original)
    }
  };
  copyAs__O__I__s_reflect_ClassTag__O(original, newLength, ct) {
    const runtimeClass = ct.runtimeClass__jl_Class();
    if (((runtimeClass !== null) && (runtimeClass === $d_V.getClassOf()))) {
      return $p_s_Array$__newUnitArray__I__Ajl_Void(this, newLength)
    } else if (runtimeClass.isAssignableFrom__jl_Class__Z($objectGetClass(original).getComponentType__jl_Class())) {
      if (runtimeClass.isPrimitive__Z()) {
        return this.copyOf__O__I__O(original, newLength)
      } else {
        const this$1 = $m_jl_reflect_Array$().newInstance__jl_Class__I__O(runtimeClass, 0);
        const destArrayClass = $objectGetClass(this$1);
        const original$1 = original;
        return $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(original$1, newLength, destArrayClass)
      }
    } else {
      const dest = ct.newArray__I__O(newLength);
      $m_s_Array$().copy__O__I__O__I__I__V(original, 0, dest, 0, $m_sr_ScalaRunTime$().array_length__O__I(original));
      return dest
    }
  };
  equals__AO__AO__Z(xs, ys) {
    if ((xs === ys)) {
      return true
    };
    if ((xs.u.length !== ys.u.length)) {
      return false
    };
    const len = xs.u.length;
    let i = 0;
    while ((i < len)) {
      if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(xs.u[i], ys.u[i]))) {
        return false
      };
      i = ((1 + i) | 0)
    };
    return true
  };
}
const $d_s_Array$ = new $TypeData().initClass({
  s_Array$: 0
}, false, "scala.Array$", {
  s_Array$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_Array$.prototype.$classData = $d_s_Array$;
let $n_s_Array$ = (void 0);
function $m_s_Array$() {
  if ((!$n_s_Array$)) {
    $n_s_Array$ = new $c_s_Array$()
  };
  return $n_s_Array$
}
const $p_s_Enumeration__ValueOrdering$lzycompute$1__V = (function($thiz) {
  if (($thiz.s_Enumeration__f_ValueOrdering$module === null)) {
    $thiz.s_Enumeration__f_ValueOrdering$module = new $c_s_Enumeration$ValueOrdering$($thiz)
  }
});
const $p_s_Enumeration__ValueSet$lzycompute$1__V = (function($thiz) {
  if (($thiz.s_Enumeration__f_ValueSet$module === null)) {
    $thiz.s_Enumeration__f_ValueSet$module = new $c_s_Enumeration$ValueSet$($thiz)
  }
});
const $ct_s_Enumeration__I__ = (function($thiz, initial) {
  $thiz.s_Enumeration__f_scala$Enumeration$$vmap = $ct_scm_HashMap__(new $c_scm_HashMap());
  $thiz.s_Enumeration__f_vset = null;
  $thiz.s_Enumeration__f_scala$Enumeration$$vsetDefined = false;
  $thiz.s_Enumeration__f_nmap = $ct_scm_HashMap__(new $c_scm_HashMap());
  $thiz.s_Enumeration__f_nextId = initial;
  $thiz.s_Enumeration__f_scala$Enumeration$$topId = initial;
  $thiz.s_Enumeration__f_scala$Enumeration$$bottomId = ((initial < 0) ? initial : 0);
  return $thiz
});
class $c_s_Enumeration extends $c_O {
  constructor() {
    super();
    this.s_Enumeration__f_ValueOrdering$module = null;
    this.s_Enumeration__f_ValueSet$module = null;
    this.s_Enumeration__f_scala$Enumeration$$vmap = null;
    this.s_Enumeration__f_vset = null;
    this.s_Enumeration__f_scala$Enumeration$$vsetDefined = false;
    this.s_Enumeration__f_nmap = null;
    this.s_Enumeration__f_nextId = 0;
    this.s_Enumeration__f_nextName = null;
    this.s_Enumeration__f_scala$Enumeration$$topId = 0;
    this.s_Enumeration__f_scala$Enumeration$$bottomId = 0
  };
  ValueOrdering__s_Enumeration$ValueOrdering$() {
    if ((this.s_Enumeration__f_ValueOrdering$module === null)) {
      $p_s_Enumeration__ValueOrdering$lzycompute$1__V(this)
    };
    return this.s_Enumeration__f_ValueOrdering$module
  };
  ValueSet__s_Enumeration$ValueSet$() {
    if ((this.s_Enumeration__f_ValueSet$module === null)) {
      $p_s_Enumeration__ValueSet$lzycompute$1__V(this)
    };
    return this.s_Enumeration__f_ValueSet$module
  };
  toString__T() {
    const $$x5 = $m_sc_ArrayOps$();
    const $$x4 = $m_sc_StringOps$();
    const $$x3 = $m_sc_ArrayOps$();
    const $$x2 = $m_sc_StringOps$();
    const $$x1 = $m_sc_StringOps$();
    const x = $objectClassName(this);
    const x$1 = $$x1.stripSuffix$extension__T__T__T(x, "$");
    const xs = $$x2.split$extension__T__C__AT(x$1, 46);
    const x$2 = $$x3.last$extension__O__O(xs);
    const xs$1 = $$x4.split$extension__T__C__AT(x$2, 36);
    return $$x5.last$extension__O__O(xs$1)
  };
  values__s_Enumeration$ValueSet() {
    if ((!this.s_Enumeration__f_scala$Enumeration$$vsetDefined)) {
      const this$1 = this.ValueSet__s_Enumeration$ValueSet$();
      const this$3 = new $c_s_Enumeration$ValueSet$$anon$1(this$1);
      const this$2 = this.s_Enumeration__f_scala$Enumeration$$vmap;
      const xs = new $c_sc_MapOps$$anon$1(this$2);
      this.s_Enumeration__f_vset = $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this$3, xs).result__O();
      this.s_Enumeration__f_scala$Enumeration$$vsetDefined = true
    };
    return this.s_Enumeration__f_vset
  };
  withName__T__s_Enumeration$Value(s) {
    const this$1 = this.values__s_Enumeration$ValueSet();
    const l = this$1.newSpecificBuilder__scm_Builder();
    const r = this$1.newSpecificBuilder__scm_Builder();
    const this$2 = this$1.iterator__sc_Iterator();
    while (this$2.hasNext__Z()) {
      const arg1 = this$2.next__O();
      const x$2 = arg1;
      const this$3 = x$2.toString__T();
      let this$5;
      if ((((this$3.length | 0) >= 0) && (this$3.substring(0, ("<Unknown name for enum field ".length | 0)) === "<Unknown name for enum field "))) {
        this$5 = l
      } else {
        this$5 = r
      };
      this$5.addOne__O__scm_Growable(arg1)
    };
    const _1 = l.result__O();
    const _2 = r.result__O();
    const unnamed = _1;
    const named = _2;
    let x1$2;
    _return: {
      const it = named.iterator__sc_Iterator();
      while (it.hasNext__Z()) {
        const a = it.next__O();
        const x$4 = a;
        if ((x$4.toString__T() === s)) {
          x1$2 = new $c_s_Some(a);
          break _return
        }
      };
      x1$2 = $m_s_None$()
    };
    if ((x1$2 instanceof $c_s_Some)) {
      const x2 = x1$2;
      const v = x2.s_Some__f_value;
      return v
    } else {
      const x = $m_s_None$();
      if (((x === x1$2) && (!unnamed.isEmpty__Z()))) {
        const x$1 = ((("Couldn't find enum field with name " + s) + ".\n             |However, there were the following unnamed fields:\n             |") + $f_sc_IterableOnceOps__mkString__T__T__T__T(unnamed, "  ", "\n  ", ""));
        throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), $m_sc_StringOps$().stripMargin$extension__T__C__T(x$1, 124))
      } else {
        $m_s_None$().get__E()
      }
    }
  };
}
class $c_s_LowPriorityImplicits extends $c_s_LowPriorityImplicits2 {
  genericWrapArray__O__scm_ArraySeq(xs) {
    return ((xs === null) ? null : $m_scm_ArraySeq$().make__O__scm_ArraySeq(xs))
  };
  wrapRefArray__AO__scm_ArraySeq$ofRef(xs) {
    if ((xs === null)) {
      return null
    } else if ((xs.u.length === 0)) {
      const this$3 = $m_scm_ArraySeq$();
      $m_s_reflect_ManifestFactory$ObjectManifest$();
      return this$3.scm_ArraySeq$__f_EmptyArraySeq
    } else {
      return new $c_scm_ArraySeq$ofRef(xs)
    }
  };
}
class $c_T2$ extends $c_O {
  toString__T() {
    return "Tuple2"
  };
}
const $d_T2$ = new $TypeData().initClass({
  T2$: 0
}, false, "scala.Tuple2$", {
  T2$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_T2$.prototype.$classData = $d_T2$;
let $n_T2$ = (void 0);
function $m_T2$() {
  if ((!$n_T2$)) {
    $n_T2$ = new $c_T2$()
  };
  return $n_T2$
}
const $f_sc_IterableFactory__tabulate__I__F1__O = (function($thiz, n, f) {
  return $thiz.from__sc_IterableOnce__O(new $c_sc_View$Tabulate(n, f))
});
class $c_sc_WithFilter extends $c_O {
}
class $c_sci_$colon$colon$ extends $c_O {
  toString__T() {
    return "::"
  };
}
const $d_sci_$colon$colon$ = new $TypeData().initClass({
  sci_$colon$colon$: 0
}, false, "scala.collection.immutable.$colon$colon$", {
  sci_$colon$colon$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sci_$colon$colon$.prototype.$classData = $d_sci_$colon$colon$;
let $n_sci_$colon$colon$ = (void 0);
function $m_sci_$colon$colon$() {
  if ((!$n_sci_$colon$colon$)) {
    $n_sci_$colon$colon$ = new $c_sci_$colon$colon$()
  };
  return $n_sci_$colon$colon$
}
class $c_sci_HashMapBuilder$$anon$2 extends $c_sci_ChampBaseIterator {
  constructor(outer, x2$1) {
    super();
    $ct_sci_ChampBaseIterator__sci_Node__(this, x2$1.sci_HashMap__f_rootNode);
    while (this.hasNext__Z()) {
      const originalHash = this.sci_ChampBaseIterator__f_currentValueNode.getHash__I__I(this.sci_ChampBaseIterator__f_currentValueCursor);
      outer.update__sci_MapNode__O__O__I__I__I__V(outer.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode, this.sci_ChampBaseIterator__f_currentValueNode.getKey__I__O(this.sci_ChampBaseIterator__f_currentValueCursor), this.sci_ChampBaseIterator__f_currentValueNode.getValue__I__O(this.sci_ChampBaseIterator__f_currentValueCursor), originalHash, $m_sc_Hashing$().improve__I__I(originalHash), 0);
      this.sci_ChampBaseIterator__f_currentValueCursor = ((1 + this.sci_ChampBaseIterator__f_currentValueCursor) | 0)
    }
  };
}
const $d_sci_HashMapBuilder$$anon$2 = new $TypeData().initClass({
  sci_HashMapBuilder$$anon$2: 0
}, false, "scala.collection.immutable.HashMapBuilder$$anon$2", {
  sci_HashMapBuilder$$anon$2: 1,
  sci_ChampBaseIterator: 1,
  O: 1
});
$c_sci_HashMapBuilder$$anon$2.prototype.$classData = $d_sci_HashMapBuilder$$anon$2;
class $c_sci_HashSetBuilder$$anon$1 extends $c_sci_ChampBaseIterator {
  constructor(outer, x2$1) {
    super();
    $ct_sci_ChampBaseIterator__sci_Node__(this, x2$1.sci_HashSet__f_rootNode);
    while (this.hasNext__Z()) {
      const originalHash = this.sci_ChampBaseIterator__f_currentValueNode.getHash__I__I(this.sci_ChampBaseIterator__f_currentValueCursor);
      outer.update__sci_SetNode__O__I__I__I__V(outer.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode, this.sci_ChampBaseIterator__f_currentValueNode.getPayload__I__O(this.sci_ChampBaseIterator__f_currentValueCursor), originalHash, $m_sc_Hashing$().improve__I__I(originalHash), 0);
      this.sci_ChampBaseIterator__f_currentValueCursor = ((1 + this.sci_ChampBaseIterator__f_currentValueCursor) | 0)
    }
  };
}
const $d_sci_HashSetBuilder$$anon$1 = new $TypeData().initClass({
  sci_HashSetBuilder$$anon$1: 0
}, false, "scala.collection.immutable.HashSetBuilder$$anon$1", {
  sci_HashSetBuilder$$anon$1: 1,
  sci_ChampBaseIterator: 1,
  O: 1
});
$c_sci_HashSetBuilder$$anon$1.prototype.$classData = $d_sci_HashSetBuilder$$anon$1;
function $is_sci_LazyList$State(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sci_LazyList$State)))
}
function $isArrayOf_sci_LazyList$State(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_LazyList$State)))
}
class $c_sci_List$$anon$1 extends $c_O {
  toString__T() {
    return "<function1>"
  };
  apply__O__O(x) {
    return this
  };
}
const $d_sci_List$$anon$1 = new $TypeData().initClass({
  sci_List$$anon$1: 0
}, false, "scala.collection.immutable.List$$anon$1", {
  sci_List$$anon$1: 1,
  O: 1,
  F1: 1
});
$c_sci_List$$anon$1.prototype.$classData = $d_sci_List$$anon$1;
class $c_sci_MapNode extends $c_sci_Node {
}
function $isArrayOf_sci_MapNode(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_MapNode)))
}
const $p_sci_NumericRange$__bigDecimalCheckUnderflow__O__O__O__s_math_Integral__V = (function($thiz, start, end, step, num) {
  if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(num.minus__O__O__O(num.plus__O__O__O(start, step), start), step))) {
    $p_sci_NumericRange$__FAIL$1__O__O__V($thiz, start, step)
  };
  if ((!$m_sr_BoxesRunTime$().equals__O__O__Z(num.minus__O__O__O(end, num.minus__O__O__O(end, step)), step))) {
    $p_sci_NumericRange$__FAIL$1__O__O__V($thiz, end, step)
  }
});
const $p_sci_NumericRange$__FAIL$1__O__O__V = (function($thiz, boundary, step) {
  let msg;
  if ((boundary instanceof $c_s_math_BigDecimal)) {
    const x2 = boundary;
    msg = ("Precision " + x2.mc__Ljava_math_MathContext().getPrecision__I())
  } else {
    msg = "Precision"
  };
  throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ((((msg + " inadequate to represent steps of size ") + step) + " near ") + boundary))
});
const $p_sci_NumericRange$__check$1__O__s_math_Integral__O__O = (function($thiz, t, num$1, limit$1) {
  if ($f_s_math_Ordering__gt__O__O__Z(num$1, t, limit$1)) {
    throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "More than Int.MaxValue elements.")
  } else {
    return t
  }
});
class $c_sci_NumericRange$ extends $c_O {
  constructor() {
    super();
    this.sci_NumericRange$__f_defaultOrdering = null;
    $n_sci_NumericRange$ = this;
    const this$14 = $m_sci_Map$();
    const self = $m_s_math_Numeric$IntIsIntegral$();
    const y = $m_s_math_Ordering$Int$();
    const $$x4 = $ct_T2__O__O__(new $c_T2(), self, y);
    const self$1 = $m_s_math_Numeric$ShortIsIntegral$();
    const y$1 = $m_s_math_Ordering$Short$();
    const $$x3 = $ct_T2__O__O__(new $c_T2(), self$1, y$1);
    const self$2 = $m_s_math_Numeric$ByteIsIntegral$();
    const y$2 = $m_s_math_Ordering$Byte$();
    const $$x2 = $ct_T2__O__O__(new $c_T2(), self$2, y$2);
    const self$3 = $m_s_math_Numeric$CharIsIntegral$();
    const y$3 = $m_s_math_Ordering$Char$();
    const $$x1 = $ct_T2__O__O__(new $c_T2(), self$3, y$3);
    const self$4 = $m_s_math_Numeric$LongIsIntegral$();
    const y$4 = $m_s_math_Ordering$Long$();
    const array = [$$x4, $$x3, $$x2, $$x1, $ct_T2__O__O__(new $c_T2(), self$4, y$4)];
    const elems = new $c_sjsr_WrappedVarArgs(array);
    this.sci_NumericRange$__f_defaultOrdering = this$14.from__sc_IterableOnce__sci_Map(elems)
  };
  count__O__O__O__Z__s_math_Integral__I(start, end, step, isInclusive, num) {
    const zero = num.fromInt__I__O(0);
    const upward = $f_s_math_Ordering__lt__O__O__Z(num, start, end);
    const posStep = $f_s_math_Ordering__gt__O__O__Z(num, step, zero);
    if ($m_sr_BoxesRunTime$().equals__O__O__Z(step, zero)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "step cannot be 0.")
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(start, end)) {
      return (isInclusive ? 1 : 0)
    } else if ((upward !== posStep)) {
      return 0
    } else {
      const startint = num.toInt__O__I(start);
      if ($m_sr_BoxesRunTime$().equals__O__O__Z(start, num.fromInt__I__O(startint))) {
        const endint = num.toInt__O__I(end);
        if ($m_sr_BoxesRunTime$().equals__O__O__Z(end, num.fromInt__I__O(endint))) {
          const stepint = num.toInt__O__I(step);
          if ($m_sr_BoxesRunTime$().equals__O__O__Z(step, num.fromInt__I__O(stepint))) {
            if (isInclusive) {
              const isEmpty = (((startint > endint) && (stepint > 0)) || ((startint < endint) && (stepint < 0)));
              if ((stepint === 0)) {
                throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "step cannot be 0.")
              };
              let scala$collection$immutable$Range$$numRangeElements;
              if (isEmpty) {
                scala$collection$immutable$Range$$numRangeElements = 0
              } else {
                const hi = (endint >> 31);
                const hi$1 = (startint >> 31);
                const lo = ((endint - startint) | 0);
                const hi$2 = ((((-2147483648) ^ lo) > ((-2147483648) ^ endint)) ? (((-1) + ((hi - hi$1) | 0)) | 0) : ((hi - hi$1) | 0));
                const hi$3 = (stepint >> 31);
                const this$6 = $m_RTLong$();
                const lo$1 = this$6.divideImpl__I__I__I__I__I(lo, hi$2, stepint, hi$3);
                const hi$4 = this$6.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
                const lo$2 = ((1 + lo$1) | 0);
                const hi$5 = ((lo$2 === 0) ? ((1 + hi$4) | 0) : hi$4);
                scala$collection$immutable$Range$$numRangeElements = (((hi$5 === 0) ? (((-2147483648) ^ lo$2) > (-1)) : (hi$5 > 0)) ? (-1) : lo$2)
              };
              switch (stepint) {
                case 1: {
                  break
                }
                case (-1): {
                  break
                }
                default: {
                  const hi$6 = (endint >> 31);
                  const hi$7 = (startint >> 31);
                  const lo$3 = ((endint - startint) | 0);
                  const hi$8 = ((((-2147483648) ^ lo$3) > ((-2147483648) ^ endint)) ? (((-1) + ((hi$6 - hi$7) | 0)) | 0) : ((hi$6 - hi$7) | 0));
                  const hi$9 = (stepint >> 31);
                  const this$12 = $m_RTLong$();
                  const lo$4 = this$12.remainderImpl__I__I__I__I__I(lo$3, hi$8, stepint, hi$9)
                }
              };
              return ((scala$collection$immutable$Range$$numRangeElements < 0) ? $m_sci_Range$().scala$collection$immutable$Range$$fail__I__I__I__Z__E(startint, endint, stepint, true) : scala$collection$immutable$Range$$numRangeElements)
            } else {
              const isEmpty$1 = ((((startint > endint) && (stepint > 0)) || ((startint < endint) && (stepint < 0))) || (startint === endint));
              if ((stepint === 0)) {
                throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "step cannot be 0.")
              };
              let scala$collection$immutable$Range$$numRangeElements$1;
              if (isEmpty$1) {
                scala$collection$immutable$Range$$numRangeElements$1 = 0
              } else {
                const hi$11 = (endint >> 31);
                const hi$12 = (startint >> 31);
                const lo$5 = ((endint - startint) | 0);
                const hi$13 = ((((-2147483648) ^ lo$5) > ((-2147483648) ^ endint)) ? (((-1) + ((hi$11 - hi$12) | 0)) | 0) : ((hi$11 - hi$12) | 0));
                const hi$14 = (stepint >> 31);
                const this$18 = $m_RTLong$();
                const lo$6 = this$18.divideImpl__I__I__I__I__I(lo$5, hi$13, stepint, hi$14);
                const hi$15 = this$18.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
                const hi$16 = (endint >> 31);
                const hi$17 = (startint >> 31);
                const lo$7 = ((endint - startint) | 0);
                const hi$18 = ((((-2147483648) ^ lo$7) > ((-2147483648) ^ endint)) ? (((-1) + ((hi$16 - hi$17) | 0)) | 0) : ((hi$16 - hi$17) | 0));
                const hi$19 = (stepint >> 31);
                const this$23 = $m_RTLong$();
                const lo$8 = this$23.remainderImpl__I__I__I__I__I(lo$7, hi$18, stepint, hi$19);
                const hi$20 = this$23.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
                let value;
                if ((!((lo$8 === 0) && (hi$20 === 0)))) {
                  value = 1
                } else {
                  value = 0
                };
                const hi$21 = (value >> 31);
                const lo$9 = ((lo$6 + value) | 0);
                const hi$22 = ((((-2147483648) ^ lo$9) < ((-2147483648) ^ lo$6)) ? ((1 + ((hi$15 + hi$21) | 0)) | 0) : ((hi$15 + hi$21) | 0));
                scala$collection$immutable$Range$$numRangeElements$1 = (((hi$22 === 0) ? (((-2147483648) ^ lo$9) > (-1)) : (hi$22 > 0)) ? (-1) : lo$9)
              };
              switch (stepint) {
                case 1: {
                  break
                }
                case (-1): {
                  break
                }
                default: {
                  const hi$23 = (endint >> 31);
                  const hi$24 = (startint >> 31);
                  const lo$10 = ((endint - startint) | 0);
                  const hi$25 = ((((-2147483648) ^ lo$10) > ((-2147483648) ^ endint)) ? (((-1) + ((hi$23 - hi$24) | 0)) | 0) : ((hi$23 - hi$24) | 0));
                  const hi$26 = (stepint >> 31);
                  const this$30 = $m_RTLong$();
                  const lo$11 = this$30.remainderImpl__I__I__I__I__I(lo$10, hi$25, stepint, hi$26)
                }
              };
              return ((scala$collection$immutable$Range$$numRangeElements$1 < 0) ? $m_sci_Range$().scala$collection$immutable$Range$$fail__I__I__I__Z__E(startint, endint, stepint, false) : scala$collection$immutable$Range$$numRangeElements$1)
            }
          }
        }
      };
      if ($is_s_math_Numeric$BigDecimalAsIfIntegral(num)) {
        $p_sci_NumericRange$__bigDecimalCheckUnderflow__O__O__O__s_math_Integral__V(this, start, end, step, num)
      };
      const one = num.fromInt__I__O(1);
      const limit = num.fromInt__I__O(2147483647);
      const startside = num.sign__O__O(start);
      const endside = num.sign__O__O(end);
      const x = num.times__O__O__O(startside, endside);
      let $$x1;
      if ($f_s_math_Ordering__gteq__O__O__Z(num, x, zero)) {
        const diff = num.minus__O__O__O(end, start);
        const quotient = $p_sci_NumericRange$__check$1__O__s_math_Integral__O__O(this, num.quot__O__O__O(diff, step), num, limit);
        const remainder = num.minus__O__O__O(diff, num.times__O__O__O(quotient, step));
        $$x1 = (((!isInclusive) && $m_sr_BoxesRunTime$().equals__O__O__Z(zero, remainder)) ? quotient : $p_sci_NumericRange$__check$1__O__s_math_Integral__O__O(this, num.plus__O__O__O(quotient, one), num, limit))
      } else {
        const negone = num.fromInt__I__O((-1));
        const startlim = (posStep ? negone : one);
        const startdiff = num.minus__O__O__O(startlim, start);
        const startq = $p_sci_NumericRange$__check$1__O__s_math_Integral__O__O(this, num.quot__O__O__O(startdiff, step), num, limit);
        const waypointA = ($m_sr_BoxesRunTime$().equals__O__O__Z(startq, zero) ? start : num.plus__O__O__O(start, num.times__O__O__O(startq, step)));
        const waypointB = num.plus__O__O__O(waypointA, step);
        let $$x2;
        if (($f_s_math_Ordering__lt__O__O__Z(num, waypointB, end) !== upward)) {
          $$x2 = ((isInclusive && $m_sr_BoxesRunTime$().equals__O__O__Z(waypointB, end)) ? num.plus__O__O__O(startq, num.fromInt__I__O(2)) : num.plus__O__O__O(startq, one))
        } else {
          const enddiff = num.minus__O__O__O(end, waypointB);
          const endq = $p_sci_NumericRange$__check$1__O__s_math_Integral__O__O(this, num.quot__O__O__O(enddiff, step), num, limit);
          const last = ($m_sr_BoxesRunTime$().equals__O__O__Z(endq, zero) ? waypointB : num.plus__O__O__O(waypointB, num.times__O__O__O(endq, step)));
          $$x2 = num.plus__O__O__O(startq, num.plus__O__O__O(endq, (((!isInclusive) && $m_sr_BoxesRunTime$().equals__O__O__Z(last, end)) ? one : num.fromInt__I__O(2))))
        };
        $$x1 = $p_sci_NumericRange$__check$1__O__s_math_Integral__O__O(this, $$x2, num, limit)
      };
      return num.toInt__O__I($$x1)
    }
  };
}
const $d_sci_NumericRange$ = new $TypeData().initClass({
  sci_NumericRange$: 0
}, false, "scala.collection.immutable.NumericRange$", {
  sci_NumericRange$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sci_NumericRange$.prototype.$classData = $d_sci_NumericRange$;
let $n_sci_NumericRange$ = (void 0);
function $m_sci_NumericRange$() {
  if ((!$n_sci_NumericRange$)) {
    $n_sci_NumericRange$ = new $c_sci_NumericRange$()
  };
  return $n_sci_NumericRange$
}
const $p_sci_Range$__description__I__I__I__Z__T = (function($thiz, start, end, step, isInclusive) {
  return ((((start + (isInclusive ? " to " : " until ")) + end) + " by ") + step)
});
class $c_sci_Range$ extends $c_O {
  scala$collection$immutable$Range$$fail__I__I__I__Z__E(start, end, step, isInclusive) {
    throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ($p_sci_Range$__description__I__I__I__Z__T(this, start, end, step, isInclusive) + ": seqs cannot contain more than Int.MaxValue elements."))
  };
  scala$collection$immutable$Range$$emptyRangeError__T__jl_Throwable(what) {
    return $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), (what + " on empty Range"))
  };
}
const $d_sci_Range$ = new $TypeData().initClass({
  sci_Range$: 0
}, false, "scala.collection.immutable.Range$", {
  sci_Range$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Range$.prototype.$classData = $d_sci_Range$;
let $n_sci_Range$ = (void 0);
function $m_sci_Range$() {
  if ((!$n_sci_Range$)) {
    $n_sci_Range$ = new $c_sci_Range$()
  };
  return $n_sci_Range$
}
class $c_sci_SetNode extends $c_sci_Node {
}
function $isArrayOf_sci_SetNode(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_SetNode)))
}
const $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable = (function($thiz, xs) {
  const it = xs.iterator__sc_Iterator();
  while (it.hasNext__Z()) {
    $thiz.addOne__O__scm_Growable(it.next__O())
  };
  return $thiz
});
class $c_scm_StringBuilder$ extends $c_O {
}
const $d_scm_StringBuilder$ = new $TypeData().initClass({
  scm_StringBuilder$: 0
}, false, "scala.collection.mutable.StringBuilder$", {
  scm_StringBuilder$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_scm_StringBuilder$.prototype.$classData = $d_scm_StringBuilder$;
let $n_scm_StringBuilder$ = (void 0);
function $m_scm_StringBuilder$() {
  if ((!$n_scm_StringBuilder$)) {
    $n_scm_StringBuilder$ = new $c_scm_StringBuilder$()
  };
  return $n_scm_StringBuilder$
}
class $c_s_math_Fractional$ extends $c_O {
}
const $d_s_math_Fractional$ = new $TypeData().initClass({
  s_math_Fractional$: 0
}, false, "scala.math.Fractional$", {
  s_math_Fractional$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Fractional$.prototype.$classData = $d_s_math_Fractional$;
let $n_s_math_Fractional$ = (void 0);
function $m_s_math_Fractional$() {
  if ((!$n_s_math_Fractional$)) {
    $n_s_math_Fractional$ = new $c_s_math_Fractional$()
  };
  return $n_s_math_Fractional$
}
class $c_s_math_Integral$ extends $c_O {
}
const $d_s_math_Integral$ = new $TypeData().initClass({
  s_math_Integral$: 0
}, false, "scala.math.Integral$", {
  s_math_Integral$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Integral$.prototype.$classData = $d_s_math_Integral$;
let $n_s_math_Integral$ = (void 0);
function $m_s_math_Integral$() {
  if ((!$n_s_math_Integral$)) {
    $n_s_math_Integral$ = new $c_s_math_Integral$()
  };
  return $n_s_math_Integral$
}
class $c_s_math_Integral$IntegralOps extends $c_s_math_Numeric$NumericOps {
  constructor(outer, lhs) {
    super();
    this.s_math_Integral$IntegralOps__f_lhs = null;
    this.s_math_Integral$IntegralOps__f_lhs = lhs;
    $ct_s_math_Numeric$NumericOps__s_math_Numeric__O__(this, outer, lhs)
  };
  $div__O__O(rhs) {
    return this.s_math_Numeric$NumericOps__f_$outer.quot__O__O__O(this.s_math_Integral$IntegralOps__f_lhs, rhs)
  };
  $percent__O__O(rhs) {
    return this.s_math_Numeric$NumericOps__f_$outer.rem__O__O__O(this.s_math_Integral$IntegralOps__f_lhs, rhs)
  };
}
const $d_s_math_Integral$IntegralOps = new $TypeData().initClass({
  s_math_Integral$IntegralOps: 0
}, false, "scala.math.Integral$IntegralOps", {
  s_math_Integral$IntegralOps: 1,
  s_math_Numeric$NumericOps: 1,
  O: 1
});
$c_s_math_Integral$IntegralOps.prototype.$classData = $d_s_math_Integral$IntegralOps;
class $c_s_math_Numeric$ extends $c_O {
}
const $d_s_math_Numeric$ = new $TypeData().initClass({
  s_math_Numeric$: 0
}, false, "scala.math.Numeric$", {
  s_math_Numeric$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Numeric$.prototype.$classData = $d_s_math_Numeric$;
let $n_s_math_Numeric$ = (void 0);
function $m_s_math_Numeric$() {
  if ((!$n_s_math_Numeric$)) {
    $n_s_math_Numeric$ = new $c_s_math_Numeric$()
  };
  return $n_s_math_Numeric$
}
class $c_s_package$$anon$1 extends $c_O {
  toString__T() {
    return "object AnyRef"
  };
}
const $d_s_package$$anon$1 = new $TypeData().initClass({
  s_package$$anon$1: 0
}, false, "scala.package$$anon$1", {
  s_package$$anon$1: 1,
  O: 1,
  s_Specializable: 1
});
$c_s_package$$anon$1.prototype.$classData = $d_s_package$$anon$1;
class $c_s_reflect_ClassTag$ extends $c_O {
  apply__jl_Class__s_reflect_ClassTag(runtimeClass1) {
    return ((runtimeClass1 === $d_B.getClassOf()) ? $m_s_reflect_ManifestFactory$ByteManifest$() : ((runtimeClass1 === $d_S.getClassOf()) ? $m_s_reflect_ManifestFactory$ShortManifest$() : ((runtimeClass1 === $d_C.getClassOf()) ? $m_s_reflect_ManifestFactory$CharManifest$() : ((runtimeClass1 === $d_I.getClassOf()) ? $m_s_reflect_ManifestFactory$IntManifest$() : ((runtimeClass1 === $d_J.getClassOf()) ? $m_s_reflect_ManifestFactory$LongManifest$() : ((runtimeClass1 === $d_F.getClassOf()) ? $m_s_reflect_ManifestFactory$FloatManifest$() : ((runtimeClass1 === $d_D.getClassOf()) ? $m_s_reflect_ManifestFactory$DoubleManifest$() : ((runtimeClass1 === $d_Z.getClassOf()) ? $m_s_reflect_ManifestFactory$BooleanManifest$() : ((runtimeClass1 === $d_V.getClassOf()) ? $m_s_reflect_ManifestFactory$UnitManifest$() : ((runtimeClass1 === $d_O.getClassOf()) ? $m_s_reflect_ManifestFactory$ObjectManifest$() : ((runtimeClass1 === $d_sr_Nothing$.getClassOf()) ? $m_s_reflect_ManifestFactory$NothingManifest$() : ((runtimeClass1 === $d_sr_Null$.getClassOf()) ? $m_s_reflect_ManifestFactory$NullManifest$() : new $c_s_reflect_ClassTag$GenericClassTag(runtimeClass1)))))))))))))
  };
}
const $d_s_reflect_ClassTag$ = new $TypeData().initClass({
  s_reflect_ClassTag$: 0
}, false, "scala.reflect.ClassTag$", {
  s_reflect_ClassTag$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_reflect_ClassTag$.prototype.$classData = $d_s_reflect_ClassTag$;
let $n_s_reflect_ClassTag$ = (void 0);
function $m_s_reflect_ClassTag$() {
  if ((!$n_s_reflect_ClassTag$)) {
    $n_s_reflect_ClassTag$ = new $c_s_reflect_ClassTag$()
  };
  return $n_s_reflect_ClassTag$
}
class $c_s_reflect_Manifest$ extends $c_O {
}
const $d_s_reflect_Manifest$ = new $TypeData().initClass({
  s_reflect_Manifest$: 0
}, false, "scala.reflect.Manifest$", {
  s_reflect_Manifest$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_reflect_Manifest$.prototype.$classData = $d_s_reflect_Manifest$;
let $n_s_reflect_Manifest$ = (void 0);
function $m_s_reflect_Manifest$() {
  if ((!$n_s_reflect_Manifest$)) {
    $n_s_reflect_Manifest$ = new $c_s_reflect_Manifest$()
  };
  return $n_s_reflect_Manifest$
}
class $c_sr_AbstractFunction0 extends $c_O {
  toString__T() {
    return "<function0>"
  };
}
class $c_sr_AbstractFunction1 extends $c_O {
  toString__T() {
    return "<function1>"
  };
}
class $c_sr_AbstractFunction2 extends $c_O {
  toString__T() {
    return "<function2>"
  };
}
class $c_sr_AbstractFunction3 extends $c_O {
  toString__T() {
    return "<function3>"
  };
}
class $c_sr_BooleanRef extends $c_O {
  constructor(elem) {
    super();
    this.sr_BooleanRef__f_elem = false;
    this.sr_BooleanRef__f_elem = elem
  };
  toString__T() {
    const b = this.sr_BooleanRef__f_elem;
    return ("" + b)
  };
}
const $d_sr_BooleanRef = new $TypeData().initClass({
  sr_BooleanRef: 0
}, false, "scala.runtime.BooleanRef", {
  sr_BooleanRef: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_BooleanRef.prototype.$classData = $d_sr_BooleanRef;
class $c_sr_IntRef extends $c_O {
  constructor(elem) {
    super();
    this.sr_IntRef__f_elem = 0;
    this.sr_IntRef__f_elem = elem
  };
  toString__T() {
    const i = this.sr_IntRef__f_elem;
    return ("" + i)
  };
}
const $d_sr_IntRef = new $TypeData().initClass({
  sr_IntRef: 0
}, false, "scala.runtime.IntRef", {
  sr_IntRef: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_IntRef.prototype.$classData = $d_sr_IntRef;
class $c_sr_ObjectRef extends $c_O {
  constructor(elem) {
    super();
    this.sr_ObjectRef__f_elem = null;
    this.sr_ObjectRef__f_elem = elem
  };
  toString__T() {
    const obj = this.sr_ObjectRef__f_elem;
    return ("" + obj)
  };
}
const $d_sr_ObjectRef = new $TypeData().initClass({
  sr_ObjectRef: 0
}, false, "scala.runtime.ObjectRef", {
  sr_ObjectRef: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_ObjectRef.prototype.$classData = $d_sr_ObjectRef;
const $d_sjs_js_Dynamic = new $TypeData().initClass({
  sjs_js_Dynamic: 0
}, false, "scala.scalajs.js.Dynamic", {
  sjs_js_Dynamic: 1,
  O: 1,
  sjs_js_Any: 1
}, true, (void 0), $noIsInstance);
class $c_s_util_Either$ extends $c_O {
}
const $d_s_util_Either$ = new $TypeData().initClass({
  s_util_Either$: 0
}, false, "scala.util.Either$", {
  s_util_Either$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_util_Either$.prototype.$classData = $d_s_util_Either$;
let $n_s_util_Either$ = (void 0);
function $m_s_util_Either$() {
  if ((!$n_s_util_Either$)) {
    $n_s_util_Either$ = new $c_s_util_Either$()
  };
  return $n_s_util_Either$
}
class $c_s_util_Left$ extends $c_O {
  toString__T() {
    return "Left"
  };
}
const $d_s_util_Left$ = new $TypeData().initClass({
  s_util_Left$: 0
}, false, "scala.util.Left$", {
  s_util_Left$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_util_Left$.prototype.$classData = $d_s_util_Left$;
let $n_s_util_Left$ = (void 0);
function $m_s_util_Left$() {
  if ((!$n_s_util_Left$)) {
    $n_s_util_Left$ = new $c_s_util_Left$()
  };
  return $n_s_util_Left$
}
class $c_s_util_Right$ extends $c_O {
  toString__T() {
    return "Right"
  };
}
const $d_s_util_Right$ = new $TypeData().initClass({
  s_util_Right$: 0
}, false, "scala.util.Right$", {
  s_util_Right$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_util_Right$.prototype.$classData = $d_s_util_Right$;
let $n_s_util_Right$ = (void 0);
function $m_s_util_Right$() {
  if ((!$n_s_util_Right$)) {
    $n_s_util_Right$ = new $c_s_util_Right$()
  };
  return $n_s_util_Right$
}
class $c_s_util_hashing_MurmurHash3$ extends $c_s_util_hashing_MurmurHash3 {
  constructor() {
    super();
    this.s_util_hashing_MurmurHash3$__f_seqSeed = 0;
    this.s_util_hashing_MurmurHash3$__f_mapSeed = 0;
    this.s_util_hashing_MurmurHash3$__f_setSeed = 0;
    $n_s_util_hashing_MurmurHash3$ = this;
    this.s_util_hashing_MurmurHash3$__f_seqSeed = $f_T__hashCode__I("Seq");
    this.s_util_hashing_MurmurHash3$__f_mapSeed = $f_T__hashCode__I("Map");
    this.s_util_hashing_MurmurHash3$__f_setSeed = $f_T__hashCode__I("Set")
  };
  seqHash__sc_Seq__I(xs) {
    if ($is_sc_IndexedSeq(xs)) {
      const x2 = xs;
      return this.indexedSeqHash__sc_IndexedSeq__I__I(x2, this.s_util_hashing_MurmurHash3$__f_seqSeed)
    } else if ((xs instanceof $c_sci_List)) {
      const x3 = xs;
      return this.listHash__sci_List__I__I(x3, this.s_util_hashing_MurmurHash3$__f_seqSeed)
    } else {
      return this.orderedHash__sc_IterableOnce__I__I(xs, this.s_util_hashing_MurmurHash3$__f_seqSeed)
    }
  };
}
const $d_s_util_hashing_MurmurHash3$ = new $TypeData().initClass({
  s_util_hashing_MurmurHash3$: 0
}, false, "scala.util.hashing.MurmurHash3$", {
  s_util_hashing_MurmurHash3$: 1,
  s_util_hashing_MurmurHash3: 1,
  O: 1
});
$c_s_util_hashing_MurmurHash3$.prototype.$classData = $d_s_util_hashing_MurmurHash3$;
let $n_s_util_hashing_MurmurHash3$ = (void 0);
function $m_s_util_hashing_MurmurHash3$() {
  if ((!$n_s_util_hashing_MurmurHash3$)) {
    $n_s_util_hashing_MurmurHash3$ = new $c_s_util_hashing_MurmurHash3$()
  };
  return $n_s_util_hashing_MurmurHash3$
}
const $f_Ltigerpython_parser_ast_AstNode$Body__update__T__Ltigerpython_parser_ast_AstNode$Statement__V = (function($thiz, key, value) {
  if ((key === "body")) {
    $thiz.body_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(value)
  } else if (((key === "else") || ((key === "elsebody") || ((key === "elseBody") || (key === "orelse"))))) {
    $thiz.elseBody_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(value)
  } else {
    throw new $c_s_MatchError(key)
  }
});
function $is_Ltigerpython_parser_ast_AstNode$Body(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ltigerpython_parser_ast_AstNode$Body)))
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Body(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Body)))
}
class $c_Ltigerpython_parser_ast_AstNode$Call$ extends $c_O {
  withoutArguments__Ltigerpython_parser_ast_AstNode$Expression__I__Ltigerpython_parser_ast_AstNode$Call(f, endPos) {
    const $$x1 = f.pos__I();
    const xs = $m_sci_Nil$();
    const len = xs.length__I();
    const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    const xs$1 = $m_sci_Nil$();
    const len$1 = xs$1.length__I();
    const array$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Keyword.getArrayOf(), [len$1]);
    const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$1 = 0;
    while (iterator$1.hasNext__Z()) {
      array$1.u[i$1] = iterator$1.next__O();
      i$1 = ((1 + i$1) | 0)
    };
    return new $c_Ltigerpython_parser_ast_AstNode$Call($$x1, endPos, f, array, array$1, null, null)
  };
  inserted__I__T__sci_Seq__Ltigerpython_parser_ast_AstNode$Call(pos, name, arg) {
    const $$x2 = new $c_Ltigerpython_parser_ast_AstNode$Name(pos, name);
    let $$x1;
    if ((arg.knownSize__I() >= 0)) {
      const len = arg.knownSize__I();
      const destination = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
      arg.copyToArray__O__I__I(destination, 0);
      $$x1 = destination
    } else {
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      const it = arg.iterator__sc_Iterator();
      while (it.hasNext__Z()) {
        const elem = it.next__O();
        const unboxedElem = ((elem === null) ? null : elem);
        jsElems.push(unboxedElem)
      };
      $$x1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), jsElems)
    };
    const xs = $m_sci_Nil$();
    const len$1 = xs.length__I();
    const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Keyword.getArrayOf(), [len$1]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    return new $c_Ltigerpython_parser_ast_AstNode$Call(pos, pos, $$x2, $$x1, array, null, null)
  };
  withName__I__I__T__ALtigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_ast_AstNode$Call(pos, endPos, name, args) {
    const $$x1 = new $c_Ltigerpython_parser_ast_AstNode$Name(pos, name);
    const xs = $m_sci_Nil$();
    const len = xs.length__I();
    const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Keyword.getArrayOf(), [len]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    return new $c_Ltigerpython_parser_ast_AstNode$Call(pos, endPos, $$x1, args, array, null, null)
  };
}
const $d_Ltigerpython_parser_ast_AstNode$Call$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Call$: 0
}, false, "tigerpython.parser.ast.AstNode$Call$", {
  Ltigerpython_parser_ast_AstNode$Call$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Call$.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Call$;
let $n_Ltigerpython_parser_ast_AstNode$Call$ = (void 0);
function $m_Ltigerpython_parser_ast_AstNode$Call$() {
  if ((!$n_Ltigerpython_parser_ast_AstNode$Call$)) {
    $n_Ltigerpython_parser_ast_AstNode$Call$ = new $c_Ltigerpython_parser_ast_AstNode$Call$()
  };
  return $n_Ltigerpython_parser_ast_AstNode$Call$
}
class $c_Ltigerpython_parser_ast_AstNode$Compare$ extends $c_O {
  fromSimple__I__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__Ltigerpython_parser_ast_AstNode$Expression__Ltigerpython_parser_ast_AstNode$Compare(pos, left, op, right) {
    return new $c_Ltigerpython_parser_ast_AstNode$Compare(pos, left, $makeNativeArrayWrapper($d_T2.getArrayOf(), [$ct_T2__O__O__(new $c_T2(), op, right)]))
  };
}
const $d_Ltigerpython_parser_ast_AstNode$Compare$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Compare$: 0
}, false, "tigerpython.parser.ast.AstNode$Compare$", {
  Ltigerpython_parser_ast_AstNode$Compare$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Compare$.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Compare$;
let $n_Ltigerpython_parser_ast_AstNode$Compare$ = (void 0);
function $m_Ltigerpython_parser_ast_AstNode$Compare$() {
  if ((!$n_Ltigerpython_parser_ast_AstNode$Compare$)) {
    $n_Ltigerpython_parser_ast_AstNode$Compare$ = new $c_Ltigerpython_parser_ast_AstNode$Compare$()
  };
  return $n_Ltigerpython_parser_ast_AstNode$Compare$
}
const $f_Ltigerpython_parser_ast_AstNode$Decoratable__addDecorator__Ltigerpython_parser_ast_AstNode$Expression__V = (function($thiz, decorator) {
  const xs = $thiz.decoratorList__ALtigerpython_parser_ast_AstNode$Expression();
  const this$5 = $m_s_Array$();
  const newLength = ((1 + xs.u.length) | 0);
  let dest$1;
  if ($d_Ltigerpython_parser_ast_AstNode$Expression.getClassOf().isAssignableFrom__jl_Class__Z($objectGetClass(xs).getComponentType__jl_Class())) {
    dest$1 = ($d_Ltigerpython_parser_ast_AstNode$Expression.getClassOf().isPrimitive__Z() ? this$5.copyOf__O__I__O(xs, newLength) : $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(xs, newLength, $d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf().getClassOf()))
  } else {
    const dest = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [newLength]);
    $m_s_Array$().copy__O__I__O__I__I__V(xs, 0, dest, 0, xs.u.length);
    dest$1 = dest
  };
  $m_sr_ScalaRunTime$().array_update__O__I__O__V(dest$1, xs.u.length, decorator);
  $thiz.decoratorList_$eq__ALtigerpython_parser_ast_AstNode$Expression__V(dest$1)
});
const $f_Ltigerpython_parser_ast_AstNode$Decoratable__getDecoratorString__T = (function($thiz) {
  const xs = $thiz.decoratorList__ALtigerpython_parser_ast_AstNode$Expression();
  if ((xs.u.length !== 0)) {
    const this$3 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef($thiz.decoratorList__ALtigerpython_parser_ast_AstNode$Expression());
    return (("@" + $f_sc_IterableOnceOps__mkString__T__T__T__T(this$3, "", ":@", "")) + ":")
  } else {
    return ""
  }
});
const $f_Ltigerpython_parser_ast_AstNode$Decoratable__hasDecorator__sci_Seq__Z = (function($thiz, decoratorNames) {
  const nonLocalReturnKey1 = $ct_O__(new $c_O());
  try {
    const xs = $thiz.decoratorList__ALtigerpython_parser_ast_AstNode$Expression();
    const f = ((this$2, decoratorNames$1, nonLocalReturnKey1$1) => ((decorator$2) => {
      const decorator = decorator$2;
      if ((decorator instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const x2 = decorator;
        const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
        if (decoratorNames$1.contains__O__Z(name)) {
          throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1$1, true)
        }
      }
    }))($thiz, decoratorNames, nonLocalReturnKey1);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    return false
  } catch (e) {
    if ((e instanceof $c_sr_NonLocalReturnControl)) {
      const ex = e;
      if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
        return ex.value$mcZ$sp__Z()
      } else {
        throw ex
      }
    } else {
      throw e
    }
  }
});
const $f_Ltigerpython_parser_ast_AstNode$Decoratable__update__T__Ltigerpython_parser_ast_AstNode$Statement__V = (function($thiz, key, value) {
  if ((key === "body")) {
    $thiz.body_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(value)
  } else {
    throw new $c_s_MatchError(key)
  }
});
const $f_Ltigerpython_parser_ast_AstNode$Decoratable__$init$__V = (function($thiz) {
  const xs = $m_sci_Nil$();
  const len = xs.length__I();
  const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len]);
  const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
  let i = 0;
  while (iterator.hasNext__Z()) {
    array.u[i] = iterator.next__O();
    i = ((1 + i) | 0)
  };
  $thiz.decoratorList_$eq__ALtigerpython_parser_ast_AstNode$Expression__V(array)
});
function $is_Ltigerpython_parser_ast_AstNode$Decoratable(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.Ltigerpython_parser_ast_AstNode$Decoratable)))
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Decoratable(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Decoratable)))
}
const $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__ = (function($thiz, kind) {
  $thiz.Ltigerpython_parser_ast_AstNode$Expression__f_kind = kind;
  return $thiz
});
class $c_Ltigerpython_parser_ast_AstNode$Expression extends $c_Ltigerpython_parser_ast_AstNode {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_AstNode$Expression__f_kind = null
  };
  kind__s_Enumeration$Value() {
    return this.Ltigerpython_parser_ast_AstNode$Expression__f_kind
  };
  isSingleName__Z() {
    return false
  };
  isValidAssignTarget__Z() {
    return false
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Expression(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Expression)))
}
const $d_Ltigerpython_parser_ast_AstNode$Expression = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Expression: 0
}, false, "tigerpython.parser.ast.AstNode$Expression", {
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1
});
$c_Ltigerpython_parser_ast_AstNode$Expression.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Expression;
class $c_Ltigerpython_parser_ast_AstNode$Parameter extends $c_Ltigerpython_parser_ast_AstNode {
  kind__s_Enumeration$Value() {
    return $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_PARAMETER
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Parameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Parameter)))
}
const $d_Ltigerpython_parser_ast_AstNode$Parameter = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Parameter: 0
}, false, "tigerpython.parser.ast.AstNode$Parameter", {
  Ltigerpython_parser_ast_AstNode$Parameter: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1
});
$c_Ltigerpython_parser_ast_AstNode$Parameter.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Parameter;
class $c_Ltigerpython_parser_ast_AstNode$Parameters$ extends $c_O {
  empty__I__Ltigerpython_parser_ast_AstNode$Parameters(pos) {
    const xs = $m_sci_Nil$();
    const len = xs.length__I();
    const array = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Parameter.getArrayOf(), [len]);
    const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i = 0;
    while (iterator.hasNext__Z()) {
      array.u[i] = iterator.next__O();
      i = ((1 + i) | 0)
    };
    const xs$1 = $m_sci_Nil$();
    const len$1 = xs$1.length__I();
    const array$1 = $newArrayObject($d_Ltigerpython_parser_ast_AstNode$Expression.getArrayOf(), [len$1]);
    const iterator$1 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    let i$1 = 0;
    while (iterator$1.hasNext__Z()) {
      array$1.u[i$1] = iterator$1.next__O();
      i$1 = ((1 + i$1) | 0)
    };
    return new $c_Ltigerpython_parser_ast_AstNode$Parameters(pos, array, array$1, 0, null, null)
  };
}
const $d_Ltigerpython_parser_ast_AstNode$Parameters$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Parameters$: 0
}, false, "tigerpython.parser.ast.AstNode$Parameters$", {
  Ltigerpython_parser_ast_AstNode$Parameters$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Parameters$.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Parameters$;
let $n_Ltigerpython_parser_ast_AstNode$Parameters$ = (void 0);
function $m_Ltigerpython_parser_ast_AstNode$Parameters$() {
  if ((!$n_Ltigerpython_parser_ast_AstNode$Parameters$)) {
    $n_Ltigerpython_parser_ast_AstNode$Parameters$ = new $c_Ltigerpython_parser_ast_AstNode$Parameters$()
  };
  return $n_Ltigerpython_parser_ast_AstNode$Parameters$
}
const $ct_Ltigerpython_parser_ast_AstNode$Slice__s_Enumeration$Value__ = (function($thiz, kind) {
  $thiz.Ltigerpython_parser_ast_AstNode$Slice__f_kind = kind;
  return $thiz
});
class $c_Ltigerpython_parser_ast_AstNode$Slice extends $c_Ltigerpython_parser_ast_AstNode {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_AstNode$Slice__f_kind = null
  };
  kind__s_Enumeration$Value() {
    return this.Ltigerpython_parser_ast_AstNode$Slice__f_kind
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Slice(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Slice)))
}
const $d_Ltigerpython_parser_ast_AstNode$Slice = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Slice: 0
}, false, "tigerpython.parser.ast.AstNode$Slice", {
  Ltigerpython_parser_ast_AstNode$Slice: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1
});
$c_Ltigerpython_parser_ast_AstNode$Slice.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Slice;
const $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__ = (function($thiz, _kind) {
  $thiz.Ltigerpython_parser_ast_AstNode$Statement__f__kind = _kind;
  return $thiz
});
class $c_Ltigerpython_parser_ast_AstNode$Statement extends $c_Ltigerpython_parser_ast_AstNode {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_AstNode$Statement__f__kind = null
  };
  isSingleName__Z() {
    return false
  };
  kind__s_Enumeration$Value() {
    return this.Ltigerpython_parser_ast_AstNode$Statement__f__kind
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Statement(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Statement)))
}
const $d_Ltigerpython_parser_ast_AstNode$Statement = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Statement: 0
}, false, "tigerpython.parser.ast.AstNode$Statement", {
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1
});
$c_Ltigerpython_parser_ast_AstNode$Statement.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Statement;
class $c_Ltigerpython_parser_errormessages_DutchMessages$ extends $c_Ltigerpython_parser_errormessages_ModifiableErrorMessages {
  constructor() {
    super();
    $ct_Ltigerpython_parser_errormessages_ModifiableErrorMessages__(this)
  };
  _getMessage__s_Enumeration$Value__T(msg) {
    const x = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
    if (((x === null) ? (msg === null) : x.equals__O__Z(msg))) {
      return "'%s' verbindt vergelijkingen en geen variabelen."
    } else {
      const x$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS;
      if (((x$3 === null) ? (msg === null) : x$3.equals__O__Z(msg))) {
        return "Je mag geen bijkomende argumenten na een unpacking var/keyword-argument doorgeven."
      } else {
        const x$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE;
        if (((x$5 === null) ? (msg === null) : x$5.equals__O__Z(msg))) {
          return "'as' is hier niet toegestaan."
        } else {
          const x$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
          if (((x$7 === null) ? (msg === null) : x$7.equals__O__Z(msg))) {
            return "Het doel van een toewijzing moet links staan."
          } else {
            const x$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN;
            if (((x$9 === null) ? (msg === null) : x$9.equals__O__Z(msg))) {
              return "Gebruik 'break' in plaats van 'return' om een lus te verlaten."
            } else {
              const x$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
              if (((x$11 === null) ? (msg === null) : x$11.equals__O__Z(msg))) {
                return "Een '%s'-statement kan niet buiten een lus staan."
              } else {
                const x$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES;
                if (((x$13 === null) ? (msg === null) : x$13.equals__O__Z(msg))) {
                  return "Een functie-oproep moet altijd haakjes bevatten, ook als deze leeg zijn."
                } else {
                  const x$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC;
                  if (((x$15 === null) ? (msg === null) : x$15.equals__O__Z(msg))) {
                    return "Je kan 'async' niet op deze uitdrukking toepassen."
                  } else {
                    const x$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL;
                    if (((x$17 === null) ? (msg === null) : x$17.equals__O__Z(msg))) {
                      return "Je mag niets aan een functie-aanroep toewijzen."
                    } else {
                      const x$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION;
                      if (((x$19 === null) ? (msg === null) : x$19.equals__O__Z(msg))) {
                        return "Je mag niets aan een functie toewijzen."
                      } else {
                        const x$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE;
                        if (((x$21 === null) ? (msg === null) : x$21.equals__O__Z(msg))) {
                          return "Je moet elk element van deze tupel individueel testen."
                        } else {
                          const x$23 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                          if (((x$23 === null) ? (msg === null) : x$23.equals__O__Z(msg))) {
                            return "Je mag het sleutelwoord '%s' niet als naam gebruiken."
                          } else {
                            const x$25 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF;
                            if (((x$25 === null) ? (msg === null) : x$25.equals__O__Z(msg))) {
                              return "Een klassen-methode heeft minstens \u00e9\u00e9n parameter nodig."
                            } else {
                              const x$27 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED;
                              if (((x$27 === null) ? (msg === null) : x$27.equals__O__Z(msg))) {
                                return "Een dubbelepunt ':' is hier nodig."
                              } else {
                                const x$29 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                                if (((x$29 === null) ? (msg === null) : x$29.equals__O__Z(msg))) {
                                  return "Aan deze voorwaarde wordt nooit voldaan."
                                } else {
                                  const x$31 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
                                  if (((x$31 === null) ? (msg === null) : x$31.equals__O__Z(msg))) {
                                    return "Aan deze voorwaarde wordt altijd voldaan."
                                  } else {
                                    const x$33 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH;
                                    if (((x$33 === null) ? (msg === null) : x$33.equals__O__Z(msg))) {
                                      return "Een functie en zijn decorator mogen niet dezelfde naam '%s' hebben."
                                    } else {
                                      const x$35 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE;
                                      if (((x$35 === null) ? (msg === null) : x$35.equals__O__Z(msg))) {
                                        return "Je mag decorators alleen op functiess en klassen toepassen."
                                      } else {
                                        const x$37 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
                                        if (((x$37 === null) ? (msg === null) : x$37.equals__O__Z(msg))) {
                                          return "Een '%s'-definitie kan niet binnen een lus staan."
                                        } else {
                                          const x$39 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
                                          if (((x$39 === null) ? (msg === null) : x$39.equals__O__Z(msg))) {
                                            return "Een '%s'-structuur kan alleen \u00e9\u00e9n 'else' bevatten."
                                          } else {
                                            const x$41 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED;
                                            if (((x$41 === null) ? (msg === null) : x$41.equals__O__Z(msg))) {
                                              return "Hier zijn twee gelijkheidstekens '==' nodig."
                                            } else {
                                              const x$43 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES;
                                              if (((x$43 === null) ? (msg === null) : x$43.equals__O__Z(msg))) {
                                                return "Twee parameters kunnen niet dezelfde naam hebben: '%s'."
                                              } else {
                                                const x$45 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED;
                                                if (((x$45 === null) ? (msg === null) : x$45.equals__O__Z(msg))) {
                                                  return "'%s' moet inspringen om met de 'if' overeen te komen."
                                                } else {
                                                  const x$47 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON;
                                                  if (((x$47 === null) ? (msg === null) : x$47.equals__O__Z(msg))) {
                                                    return "'else' heeft geen vergelijking."
                                                  } else {
                                                    const x$49 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                                    if (((x$49 === null) ? (msg === null) : x$49.equals__O__Z(msg))) {
                                                      return "Er is een '%s' zonder een 'if'."
                                                    } else {
                                                      const x$51 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT;
                                                      if (((x$51 === null) ? (msg === null) : x$51.equals__O__Z(msg))) {
                                                        return "Subscript mag niet leeg zijn."
                                                      } else {
                                                        const x$53 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION;
                                                        if (((x$53 === null) ? (msg === null) : x$53.equals__O__Z(msg))) {
                                                          return "Er is een bijkomende inspringing."
                                                        } else {
                                                          const x$55 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
                                                          if (((x$55 === null) ? (msg === null) : x$55.equals__O__Z(msg))) {
                                                            return "Er is een openingshaakje of accolade te veel: '%s'."
                                                          } else {
                                                            const x$57 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
                                                            if (((x$57 === null) ? (msg === null) : x$57.equals__O__Z(msg))) {
                                                              return "Er lijkt een regeleinde te veel te zijn. Je kunt deze door gebruik van '\\' verbergen."
                                                            } else {
                                                              const x$59 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
                                                              if (((x$59 === null) ? (msg === null) : x$59.equals__O__Z(msg))) {
                                                                return "Er is een sluithaakje of accolade te veel: '%s'."
                                                              } else {
                                                                const x$61 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                                                                if (((x$61 === null) ? (msg === null) : x$61.equals__O__Z(msg))) {
                                                                  return "Er is \u00e9\u00e9n spatie te veel."
                                                                } else {
                                                                  const x$63 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA;
                                                                  if (((x$63 === null) ? (msg === null) : x$63.equals__O__Z(msg))) {
                                                                    return "Er ontbreek een komma, of er is \u00e9\u00e9n spatie te veel."
                                                                  } else {
                                                                    const x$65 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                                                    if (((x$65 === null) ? (msg === null) : x$65.equals__O__Z(msg))) {
                                                                      return "Er is/zijn extra token(s): '%s'."
                                                                    } else {
                                                                      const x$67 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD;
                                                                      if (((x$67 === null) ? (msg === null) : x$67.equals__O__Z(msg))) {
                                                                        return "'%s' is geen sleutelwoord in Python."
                                                                      } else {
                                                                        const x$69 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE;
                                                                        if (((x$69 === null) ? (msg === null) : x$69.equals__O__Z(msg))) {
                                                                          return "Het token '%s' is ongeldig, gebruik '_' om de functie als 'private' te markeren."
                                                                        } else {
                                                                          const x$71 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                                                                          if (((x$71 === null) ? (msg === null) : x$71.equals__O__Z(msg))) {
                                                                            return "Python kent geen '%s'-uitdrukking."
                                                                          } else {
                                                                            const x$73 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                                                            if (((x$73 === null) ? (msg === null) : x$73.equals__O__Z(msg))) {
                                                                              return "Deze %s-syntax is niet toegestaan in Python."
                                                                            } else {
                                                                              const x$75 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
                                                                              if (((x$75 === null) ? (msg === null) : x$75.equals__O__Z(msg))) {
                                                                                return "Het token '%s' is ongeldig, gebruik '%s'."
                                                                              } else {
                                                                                const x$77 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                                                                                if (((x$77 === null) ? (msg === null) : x$77.equals__O__Z(msg))) {
                                                                                  return "Python gebruikt geen '%s' om variabelen te defini\u00ebren."
                                                                                } else {
                                                                                  const x$79 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
                                                                                  if (((x$79 === null) ? (msg === null) : x$79.equals__O__Z(msg))) {
                                                                                    return "De 'for'-lus heeft een variabele nodig."
                                                                                  } else {
                                                                                    const x$81 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST;
                                                                                    if (((x$81 === null) ? (msg === null) : x$81.equals__O__Z(msg))) {
                                                                                      return "De 'from __future__ import'-uitdrukking moet de eerste uitdrukking in een module zijn."
                                                                                    } else {
                                                                                      const x$83 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE;
                                                                                      if (((x$83 === null) ? (msg === null) : x$83.equals__O__Z(msg))) {
                                                                                        return "Een generator (functie met yield-expressie) kan niet 'return' gebruiken om een waarde terug te geven."
                                                                                      } else {
                                                                                        const x$85 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
                                                                                        if (((x$85 === null) ? (msg === null) : x$85.equals__O__Z(msg))) {
                                                                                          return "'%s'-expressies moeten de eerste expressies in een functie zijn."
                                                                                        } else {
                                                                                          const x$87 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
                                                                                          if (((x$87 === null) ? (msg === null) : x$87.equals__O__Z(msg))) {
                                                                                            return "Een '%s'-expressie mag niet buiten een functie staan."
                                                                                          } else {
                                                                                            const x$89 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP;
                                                                                            if (((x$89 === null) ? (msg === null) : x$89.equals__O__Z(msg))) {
                                                                                              return "Een 'import'-expressie kan niet binnen een lus staan."
                                                                                            } else {
                                                                                              const x$91 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT;
                                                                                              if (((x$91 === null) ? (msg === null) : x$91.equals__O__Z(msg))) {
                                                                                                return "Deze 'import'-opdracht is niet volledig."
                                                                                              } else {
                                                                                                const x$93 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
                                                                                                if (((x$93 === null) ? (msg === null) : x$93.equals__O__Z(msg))) {
                                                                                                  return "Inspringing niet volgens de regels."
                                                                                                } else {
                                                                                                  const x$95 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS;
                                                                                                  if (((x$95 === null) ? (msg === null) : x$95.equals__O__Z(msg))) {
                                                                                                    return "Deze functie geeft niet altijd een waarde terug."
                                                                                                  } else {
                                                                                                    const x$97 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                                                                                    if (((x$97 === null) ? (msg === null) : x$97.equals__O__Z(msg))) {
                                                                                                      return "Deze '%s' mag niet inspringen."
                                                                                                    } else {
                                                                                                      const x$99 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
                                                                                                      if (((x$99 === null) ? (msg === null) : x$99.equals__O__Z(msg))) {
                                                                                                        return "Dit is een oneindige lus: ze draait voor altijd."
                                                                                                      } else {
                                                                                                        const x$101 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                                                                                                        if (((x$101 === null) ? (msg === null) : x$101.equals__O__Z(msg))) {
                                                                                                          return "Je mag niet binnen de lus initialiseren."
                                                                                                        } else {
                                                                                                          const x$103 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                                                                                                          if (((x$103 === null) ? (msg === null) : x$103.equals__O__Z(msg))) {
                                                                                                            return "Je mag niets aan '%s' toewijzen."
                                                                                                          } else {
                                                                                                            const x$105 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
                                                                                                            if (((x$105 === null) ? (msg === null) : x$105.equals__O__Z(msg))) {
                                                                                                              return "Foutieve definitie van een functie."
                                                                                                            } else {
                                                                                                              const x$107 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN;
                                                                                                              if (((x$107 === null) ? (msg === null) : x$107.equals__O__Z(msg))) {
                                                                                                                return "Gebruik hier ':' en 'return' in plaats van een toewijzing."
                                                                                                              } else {
                                                                                                                const x$109 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG;
                                                                                                                if (((x$109 === null) ? (msg === null) : x$109.equals__O__Z(msg))) {
                                                                                                                  return "Een 'generator/comprehension' argument mag niet met andere argumenten gecombineerd worden."
                                                                                                                } else {
                                                                                                                  const x$111 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
                                                                                                                  if (((x$111 === null) ? (msg === null) : x$111.equals__O__Z(msg))) {
                                                                                                                    return "Deze waarde is niet als invoer toegestaan: '%s'."
                                                                                                                  } else {
                                                                                                                    const x$113 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                                                                                                                    if (((x$113 === null) ? (msg === null) : x$113.equals__O__Z(msg))) {
                                                                                                                      return "Dit is een ongeldige sleutel-waarde-combinatie."
                                                                                                                    } else {
                                                                                                                      const x$115 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
                                                                                                                      if (((x$115 === null) ? (msg === null) : x$115.equals__O__Z(msg))) {
                                                                                                                        return "Dit is een ongeldige naam: '%s'."
                                                                                                                      } else {
                                                                                                                        const x$117 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET;
                                                                                                                        if (((x$117 === null) ? (msg === null) : x$117.equals__O__Z(msg))) {
                                                                                                                          return "Deze expressie is geen geldig doel voor een toewijzing."
                                                                                                                        } else {
                                                                                                                          const x$119 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX;
                                                                                                                          if (((x$119 === null) ? (msg === null) : x$119.equals__O__Z(msg))) {
                                                                                                                            return "Dit is een ongeldige beginletter : '%s'."
                                                                                                                          } else {
                                                                                                                            const x$121 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE;
                                                                                                                            if (((x$121 === null) ? (msg === null) : x$121.equals__O__Z(msg))) {
                                                                                                                              return "Deze token kan niet aan het begin van een regel staan: '%s'."
                                                                                                                            } else {
                                                                                                                              const x$123 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                                                                                                                              if (((x$123 === null) ? (msg === null) : x$123.equals__O__Z(msg))) {
                                                                                                                                return "Een methode vereist een 'self'-parameter."
                                                                                                                              } else {
                                                                                                                                const x$125 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET;
                                                                                                                                if (((x$125 === null) ? (msg === null) : x$125.equals__O__Z(msg))) {
                                                                                                                                  return "Haakjes of accolades komen niet overeen: '%s' verwacht, maar '%s' gevonden."
                                                                                                                                } else {
                                                                                                                                  const x$127 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN;
                                                                                                                                  if (((x$127 === null) ? (msg === null) : x$127.equals__O__Z(msg))) {
                                                                                                                                    return "De toewijzing '%s' mag niet deel van een expressie zijn."
                                                                                                                                  } else {
                                                                                                                                    const x$129 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT;
                                                                                                                                    if (((x$129 === null) ? (msg === null) : x$129.equals__O__Z(msg))) {
                                                                                                                                      return "Er ontbreekt een toewijzing."
                                                                                                                                    } else {
                                                                                                                                      const x$131 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE;
                                                                                                                                      if (((x$131 === null) ? (msg === null) : x$131.equals__O__Z(msg))) {
                                                                                                                                        return "In de toewijzing ontbreekt een expressie."
                                                                                                                                      } else {
                                                                                                                                        const x$133 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY;
                                                                                                                                        if (((x$133 === null) ? (msg === null) : x$133.equals__O__Z(msg))) {
                                                                                                                                          return "Body of inspringing ontbreekt."
                                                                                                                                        } else {
                                                                                                                                          const x$135 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
                                                                                                                                          if (((x$135 === null) ? (msg === null) : x$135.equals__O__Z(msg))) {
                                                                                                                                            return "Er ontbreekt een komma."
                                                                                                                                          } else {
                                                                                                                                            const x$137 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
                                                                                                                                            if (((x$137 === null) ? (msg === null) : x$137.equals__O__Z(msg))) {
                                                                                                                                              return "Er ontbreekt een vergelijking."
                                                                                                                                            } else {
                                                                                                                                              const x$139 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT;
                                                                                                                                              if (((x$139 === null) ? (msg === null) : x$139.equals__O__Z(msg))) {
                                                                                                                                                return "Er ontbreekt een punt."
                                                                                                                                              } else {
                                                                                                                                                const x$141 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET;
                                                                                                                                                if (((x$141 === null) ? (msg === null) : x$141.equals__O__Z(msg))) {
                                                                                                                                                  return "Er ontbreekt een openingshaakje of accolade: '%s'."
                                                                                                                                                } else {
                                                                                                                                                  const x$143 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS;
                                                                                                                                                  if (((x$143 === null) ? (msg === null) : x$143.equals__O__Z(msg))) {
                                                                                                                                                    return "Er ontbreekt een openingshaakje '('."
                                                                                                                                                  } else {
                                                                                                                                                    const x$145 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA;
                                                                                                                                                    if (((x$145 === null) ? (msg === null) : x$145.equals__O__Z(msg))) {
                                                                                                                                                      return "Er ontbreekt een operator of komma."
                                                                                                                                                    } else {
                                                                                                                                                      const x$147 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES;
                                                                                                                                                      if (((x$147 === null) ? (msg === null) : x$147.equals__O__Z(msg))) {
                                                                                                                                                        return "Er ontbreekt een haakje."
                                                                                                                                                      } else {
                                                                                                                                                        const x$149 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
                                                                                                                                                        if (((x$149 === null) ? (msg === null) : x$149.equals__O__Z(msg))) {
                                                                                                                                                          return "Je bent vergeten de haakjes te sluiten: '%s'."
                                                                                                                                                        } else {
                                                                                                                                                          const x$151 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                                                                                                                          if (((x$151 === null) ? (msg === null) : x$151.equals__O__Z(msg))) {
                                                                                                                                                            return "Hier ontbreekt een spatie."
                                                                                                                                                          } else {
                                                                                                                                                            const x$153 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
                                                                                                                                                            if (((x$153 === null) ? (msg === null) : x$153.equals__O__Z(msg))) {
                                                                                                                                                              return "Ontbrekend '%s'."
                                                                                                                                                            } else {
                                                                                                                                                              const x$155 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                                                                                                                                              if (((x$155 === null) ? (msg === null) : x$155.equals__O__Z(msg))) {
                                                                                                                                                                return "Verkeerd gespeld sleutelwoord '%s' in plaats van '%s'."
                                                                                                                                                              } else {
                                                                                                                                                                const x$157 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER;
                                                                                                                                                                if (((x$157 === null) ? (msg === null) : x$157.equals__O__Z(msg))) {
                                                                                                                                                                  return "Het getal is verkeerd geschreven."
                                                                                                                                                                } else {
                                                                                                                                                                  const x$159 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
                                                                                                                                                                  if (((x$159 === null) ? (msg === null) : x$159.equals__O__Z(msg))) {
                                                                                                                                                                    return "Verkeerd gespelde operator '%s' in plaats van '%s'."
                                                                                                                                                                  } else {
                                                                                                                                                                    const x$161 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS;
                                                                                                                                                                    if (((x$161 === null) ? (msg === null) : x$161.equals__O__Z(msg))) {
                                                                                                                                                                      return "Alleen \u00e9\u00e9n unpacking var/keyword-argument is toegestaan."
                                                                                                                                                                    } else {
                                                                                                                                                                      const x$163 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
                                                                                                                                                                      if (((x$163 === null) ? (msg === null) : x$163.equals__O__Z(msg))) {
                                                                                                                                                                        return "Alleen \u00e9\u00e9n unpacking var/keyword-parameter is toegestaan."
                                                                                                                                                                      } else {
                                                                                                                                                                        const x$165 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
                                                                                                                                                                        if (((x$165 === null) ? (msg === null) : x$165.equals__O__Z(msg))) {
                                                                                                                                                                          return "Hier is een naam vereist."
                                                                                                                                                                        } else {
                                                                                                                                                                          const x$167 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
                                                                                                                                                                          if (((x$167 === null) ? (msg === null) : x$167.equals__O__Z(msg))) {
                                                                                                                                                                            return "Er is geen 'end' nodig of toegestaan in Python."
                                                                                                                                                                          } else {
                                                                                                                                                                            const x$169 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED;
                                                                                                                                                                            if (((x$169 === null) ? (msg === null) : x$169.equals__O__Z(msg))) {
                                                                                                                                                                              return "Een unpacking parameter kan geen standaardwaarde hebben."
                                                                                                                                                                            } else {
                                                                                                                                                                              const x$171 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
                                                                                                                                                                              if (((x$171 === null) ? (msg === null) : x$171.equals__O__Z(msg))) {
                                                                                                                                                                                return "Er is geen alternatief op '%s'."
                                                                                                                                                                              } else {
                                                                                                                                                                                const x$173 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE;
                                                                                                                                                                                if (((x$173 === null) ? (msg === null) : x$173.equals__O__Z(msg))) {
                                                                                                                                                                                  return "Een getal kan geen subscript hebben."
                                                                                                                                                                                } else {
                                                                                                                                                                                  const x$175 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM;
                                                                                                                                                                                  if (((x$175 === null) ? (msg === null) : x$175.equals__O__Z(msg))) {
                                                                                                                                                                                    return "De unpacking keyword-parameter komt als laatste."
                                                                                                                                                                                  } else {
                                                                                                                                                                                    const x$177 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED;
                                                                                                                                                                                    if (((x$177 === null) ? (msg === null) : x$177.equals__O__Z(msg))) {
                                                                                                                                                                                      return "Parameter(s) vereist maar '%s' gevonden."
                                                                                                                                                                                    } else {
                                                                                                                                                                                      const x$179 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD;
                                                                                                                                                                                      if (((x$179 === null) ? (msg === null) : x$179.equals__O__Z(msg))) {
                                                                                                                                                                                        return "Positionele argumenten kunnen niet volgen op keyword-argumenten."
                                                                                                                                                                                      } else {
                                                                                                                                                                                        const x$181 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD;
                                                                                                                                                                                        if (((x$181 === null) ? (msg === null) : x$181.equals__O__Z(msg))) {
                                                                                                                                                                                          return "Parameters zonder standaardwaarde kunnen niet volgen op parameters m\u00e9t een standaardwaarde of unpacking parameters."
                                                                                                                                                                                        } else {
                                                                                                                                                                                          const x$183 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT;
                                                                                                                                                                                          if (((x$183 === null) ? (msg === null) : x$183.equals__O__Z(msg))) {
                                                                                                                                                                                            return "In Python 2.x is 'print' een opdracht, en kan niet met sleutelwoorden opgeroepen worden."
                                                                                                                                                                                          } else {
                                                                                                                                                                                            const x$185 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED;
                                                                                                                                                                                            if (((x$185 === null) ? (msg === null) : x$185.equals__O__Z(msg))) {
                                                                                                                                                                                              return "'>>' moet door een doel opgevolgd worden."
                                                                                                                                                                                            } else {
                                                                                                                                                                                              const x$187 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES;
                                                                                                                                                                                              if (((x$187 === null) ? (msg === null) : x$187.equals__O__Z(msg))) {
                                                                                                                                                                                                return "'print' is in Python 3.x  een functie en vereist haakjes."
                                                                                                                                                                                              } else {
                                                                                                                                                                                                const x$189 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                if (((x$189 === null) ? (msg === null) : x$189.equals__O__Z(msg))) {
                                                                                                                                                                                                  return "Deze functie van Python 2.x is niet beschikbaar."
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  const x$191 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                  if (((x$191 === null) ? (msg === null) : x$191.equals__O__Z(msg))) {
                                                                                                                                                                                                    return "Deze functie van Python 3.x is niet beschikbaar."
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    const x$193 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION;
                                                                                                                                                                                                    if (((x$193 === null) ? (msg === null) : x$193.equals__O__Z(msg))) {
                                                                                                                                                                                                      return "Een 'return'-opdracht kan niet buiten een functie bestaan."
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      const x$195 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED;
                                                                                                                                                                                                      if (((x$195 === null) ? (msg === null) : x$195.equals__O__Z(msg))) {
                                                                                                                                                                                                        return "Gebruik een enkel gelijkheidsteken '=' voor een toewijzing."
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        const x$197 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                                                                                                                                                                                                        if (((x$197 === null) ? (msg === null) : x$197.equals__O__Z(msg))) {
                                                                                                                                                                                                          return "De vergelijking met '%s' is hier overbodig."
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          const x$199 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
                                                                                                                                                                                                          if (((x$199 === null) ? (msg === null) : x$199.equals__O__Z(msg))) {
                                                                                                                                                                                                            return "Deze waarden zijn blijkbaar verwisseld: '%s' en '%s'."
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            const x$201 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
                                                                                                                                                                                                            if (((x$201 === null) ? (msg === null) : x$201.equals__O__Z(msg))) {
                                                                                                                                                                                                              return "'%s' benodigd maar '%s' gevonden."
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              const x$203 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
                                                                                                                                                                                                              if (((x$203 === null) ? (msg === null) : x$203.equals__O__Z(msg))) {
                                                                                                                                                                                                                return "Deze tupel moet je tussen haakjes plaatsen."
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                const x$205 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
                                                                                                                                                                                                                if (((x$205 === null) ? (msg === null) : x$205.equals__O__Z(msg))) {
                                                                                                                                                                                                                  return "Onverwacht einde van de regel of invoer."
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  const x$207 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
                                                                                                                                                                                                                  if (((x$207 === null) ? (msg === null) : x$207.equals__O__Z(msg))) {
                                                                                                                                                                                                                    return "Het sleutelwoord '%s' kan hier niet staan."
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    const x$209 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET;
                                                                                                                                                                                                                    if (((x$209 === null) ? (msg === null) : x$209.equals__O__Z(msg))) {
                                                                                                                                                                                                                      return "Dit openingshaakje '%s' heeft geen sluithaakje."
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      const x$211 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE;
                                                                                                                                                                                                                      if (((x$211 === null) ? (msg === null) : x$211.equals__O__Z(msg))) {
                                                                                                                                                                                                                        return "Deze code wordt nooit bereikt en zal dus nooit uitgevoerd worden."
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        const x$213 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
                                                                                                                                                                                                                        if (((x$213 === null) ? (msg === null) : x$213.equals__O__Z(msg))) {
                                                                                                                                                                                                                          return "Deze tekenreeks is niet be\u00ebindigd."
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          const x$215 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA;
                                                                                                                                                                                                                          if (((x$215 === null) ? (msg === null) : x$215.equals__O__Z(msg))) {
                                                                                                                                                                                                                            return "Meerdere vergelijkingen worden gecombineerd door 'and' of 'or' in plaats van een komma."
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            const x$217 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND;
                                                                                                                                                                                                                            if (((x$217 === null) ? (msg === null) : x$217.equals__O__Z(msg))) {
                                                                                                                                                                                                                              return "Meerdere waarden worden door komma gescheiden in plaats van 'and'."
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              const x$219 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE;
                                                                                                                                                                                                                              if (((x$219 === null) ? (msg === null) : x$219.equals__O__Z(msg))) {
                                                                                                                                                                                                                                return "Gebruik 'elif' in plaats van 'else'."
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                const x$221 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF;
                                                                                                                                                                                                                                if (((x$221 === null) ? (msg === null) : x$221.equals__O__Z(msg))) {
                                                                                                                                                                                                                                  return "Gebruik 'elif' in plaats van 'else if'."
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  const x$223 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ;
                                                                                                                                                                                                                                  if (((x$223 === null) ? (msg === null) : x$223.equals__O__Z(msg))) {
                                                                                                                                                                                                                                    return "Gebruik '== %s' in plaats van '!= %s'."
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    const x$225 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV;
                                                                                                                                                                                                                                    if (((x$225 === null) ? (msg === null) : x$225.equals__O__Z(msg))) {
                                                                                                                                                                                                                                      return "Gebruik '%%' in plaats van '/' om op deelbaarheid te testen."
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      const x$227 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                                                                                                                                                                                                                                      if (((x$227 === null) ? (msg === null) : x$227.equals__O__Z(msg))) {
                                                                                                                                                                                                                                        return "Gebruik 'not' in plaats van een vergelijking met '%s'."
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        const x$229 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE;
                                                                                                                                                                                                                                        if (((x$229 === null) ? (msg === null) : x$229.equals__O__Z(msg))) {
                                                                                                                                                                                                                                          return "Gebruik 'repeat' in plaats van 'while'."
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          const x$231 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK;
                                                                                                                                                                                                                                          if (((x$231 === null) ? (msg === null) : x$231.equals__O__Z(msg))) {
                                                                                                                                                                                                                                            return "Gebruik 'return' in plaats van 'break' om een functie te verlaten."
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            const x$233 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION;
                                                                                                                                                                                                                                            if (((x$233 === null) ? (msg === null) : x$233.equals__O__Z(msg))) {
                                                                                                                                                                                                                                              return "Het resultaat van deze expressie wordt nooit gebruikt."
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              const x$235 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
                                                                                                                                                                                                                                              if (((x$235 === null) ? (msg === null) : x$235.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                return "Deze opdracht heeft geen effect, en is dus nutteloos."
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                const x$237 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN;
                                                                                                                                                                                                                                                if (((x$237 === null) ? (msg === null) : x$237.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                  return "Deze opdracht is nutteloos. Bedoel je '%s='?"
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  const x$239 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG;
                                                                                                                                                                                                                                                  if (((x$239 === null) ? (msg === null) : x$239.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                    return "Het unpacking var-argument moet het unpacking keyword-argument voorafgaan."
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    const x$241 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED;
                                                                                                                                                                                                                                                    if (((x$241 === null) ? (msg === null) : x$241.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                      return "Unpacking var/keyword-argumenten zijn hier niet toegestaan."
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      const x$243 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET;
                                                                                                                                                                                                                                                      if (((x$243 === null) ? (msg === null) : x$243.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                        return "Verkeerde haakjes: gebruik '%s' in plaats van '%s'."
                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                        const x$245 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN;
                                                                                                                                                                                                                                                        if (((x$245 === null) ? (msg === null) : x$245.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                          return "Verkeerd symbool '%s' in plaats van '%s'."
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                          const x$247 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION;
                                                                                                                                                                                                                                                          if (((x$247 === null) ? (msg === null) : x$247.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                            return "Een 'yield'-expressie kan niet buiten een functie bestaan."
                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_errormessages_DutchMessages$ = new $TypeData().initClass({
  Ltigerpython_parser_errormessages_DutchMessages$: 0
}, false, "tigerpython.parser.errormessages.DutchMessages$", {
  Ltigerpython_parser_errormessages_DutchMessages$: 1,
  Ltigerpython_parser_errormessages_ModifiableErrorMessages: 1,
  O: 1
});
$c_Ltigerpython_parser_errormessages_DutchMessages$.prototype.$classData = $d_Ltigerpython_parser_errormessages_DutchMessages$;
let $n_Ltigerpython_parser_errormessages_DutchMessages$ = (void 0);
function $m_Ltigerpython_parser_errormessages_DutchMessages$() {
  if ((!$n_Ltigerpython_parser_errormessages_DutchMessages$)) {
    $n_Ltigerpython_parser_errormessages_DutchMessages$ = new $c_Ltigerpython_parser_errormessages_DutchMessages$()
  };
  return $n_Ltigerpython_parser_errormessages_DutchMessages$
}
class $c_Ltigerpython_parser_errormessages_EnglishMessages$ extends $c_Ltigerpython_parser_errormessages_ModifiableErrorMessages {
  constructor() {
    super();
    $ct_Ltigerpython_parser_errormessages_ModifiableErrorMessages__(this)
  };
  _getMessage__s_Enumeration$Value__T(msg) {
    const x = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
    if (((x === null) ? (msg === null) : x.equals__O__Z(msg))) {
      return "'%s' connects comparisons not variables."
    } else {
      const x$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS;
      if (((x$3 === null) ? (msg === null) : x$3.equals__O__Z(msg))) {
        return "You cannot pass further arguments after an unpacking var/keyword-argument."
      } else {
        const x$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE;
        if (((x$5 === null) ? (msg === null) : x$5.equals__O__Z(msg))) {
          return "'as' is not allowed/supported here."
        } else {
          const x$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
          if (((x$7 === null) ? (msg === null) : x$7.equals__O__Z(msg))) {
            return "The target of an assignment must be on the left."
          } else {
            const x$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN;
            if (((x$9 === null) ? (msg === null) : x$9.equals__O__Z(msg))) {
              return "Use 'break' instead of 'return' to exit a loop."
            } else {
              const x$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
              if (((x$11 === null) ? (msg === null) : x$11.equals__O__Z(msg))) {
                return "A '%s'-statement cannot occur outside a loop."
              } else {
                const x$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES;
                if (((x$13 === null) ? (msg === null) : x$13.equals__O__Z(msg))) {
                  return "To call a function you must add parentheses even when they are empty: '%s()'."
                } else {
                  const x$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC;
                  if (((x$15 === null) ? (msg === null) : x$15.equals__O__Z(msg))) {
                    return "Cannot apply 'async' to this statement."
                  } else {
                    const x$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL;
                    if (((x$17 === null) ? (msg === null) : x$17.equals__O__Z(msg))) {
                      return "You cannot assign something to a function call."
                    } else {
                      const x$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION;
                      if (((x$19 === null) ? (msg === null) : x$19.equals__O__Z(msg))) {
                        return "You cannot assign something to a function."
                      } else {
                        const x$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
                        if (((x$21 === null) ? (msg === null) : x$21.equals__O__Z(msg))) {
                          return "The name '%s' is already defined."
                        } else {
                          const x$23 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE;
                          if (((x$23 === null) ? (msg === null) : x$23.equals__O__Z(msg))) {
                            return "You need to test each element of this tuple individually."
                          } else {
                            const x$25 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                            if (((x$25 === null) ? (msg === null) : x$25.equals__O__Z(msg))) {
                              return "You cannot use the keyword '%s' as a name."
                            } else {
                              const x$27 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF;
                              if (((x$27 === null) ? (msg === null) : x$27.equals__O__Z(msg))) {
                                return "A class-method needs at least one parameter."
                              } else {
                                const x$29 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED;
                                if (((x$29 === null) ? (msg === null) : x$29.equals__O__Z(msg))) {
                                  return "A colon ':' is required here."
                                } else {
                                  const x$31 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                                  if (((x$31 === null) ? (msg === null) : x$31.equals__O__Z(msg))) {
                                    return "This condition cannot be fulfilled."
                                  } else {
                                    const x$33 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
                                    if (((x$33 === null) ? (msg === null) : x$33.equals__O__Z(msg))) {
                                      return "This condition is always fulfilled."
                                    } else {
                                      const x$35 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH;
                                      if (((x$35 === null) ? (msg === null) : x$35.equals__O__Z(msg))) {
                                        return "A function and its decorator cannot have the same name '%s'."
                                      } else {
                                        const x$37 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE;
                                        if (((x$37 === null) ? (msg === null) : x$37.equals__O__Z(msg))) {
                                          return "Decorators are only applicable to functions and classes."
                                        } else {
                                          const x$39 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
                                          if (((x$39 === null) ? (msg === null) : x$39.equals__O__Z(msg))) {
                                            return "A '%s'-definition cannot be inside a loop."
                                          } else {
                                            const x$41 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
                                            if (((x$41 === null) ? (msg === null) : x$41.equals__O__Z(msg))) {
                                              return "An '%s'-structure can only have one 'else'-branch."
                                            } else {
                                              const x$43 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED;
                                              if (((x$43 === null) ? (msg === null) : x$43.equals__O__Z(msg))) {
                                                return "A double equal sign '==' is required here."
                                              } else {
                                                const x$45 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES;
                                                if (((x$45 === null) ? (msg === null) : x$45.equals__O__Z(msg))) {
                                                  return "Two parameters cannot have the same name: '%s'."
                                                } else {
                                                  const x$47 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED;
                                                  if (((x$47 === null) ? (msg === null) : x$47.equals__O__Z(msg))) {
                                                    return "'%s' must be indented to match the 'if'."
                                                  } else {
                                                    const x$49 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON;
                                                    if (((x$49 === null) ? (msg === null) : x$49.equals__O__Z(msg))) {
                                                      return "'else' does not have a comparison."
                                                    } else {
                                                      const x$51 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                                      if (((x$51 === null) ? (msg === null) : x$51.equals__O__Z(msg))) {
                                                        return "There is an '%s' without an 'if'."
                                                      } else {
                                                        const x$53 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT;
                                                        if (((x$53 === null) ? (msg === null) : x$53.equals__O__Z(msg))) {
                                                          return "The subscript '[]' cannot be empty."
                                                        } else {
                                                          const x$55 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION;
                                                          if (((x$55 === null) ? (msg === null) : x$55.equals__O__Z(msg))) {
                                                            return "There is an extra indentation."
                                                          } else {
                                                            const x$57 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
                                                            if (((x$57 === null) ? (msg === null) : x$57.equals__O__Z(msg))) {
                                                              return "There seems to be an extra linebreak. You might want to hide it using '\\'."
                                                            } else {
                                                              const x$59 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
                                                              if (((x$59 === null) ? (msg === null) : x$59.equals__O__Z(msg))) {
                                                                return "There is an extra opening bracket or parenthesis: '%s'."
                                                              } else {
                                                                const x$61 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
                                                                if (((x$61 === null) ? (msg === null) : x$61.equals__O__Z(msg))) {
                                                                  return "There is an extra closing bracket or parenthesis: '%s'."
                                                                } else {
                                                                  const x$63 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                                                                  if (((x$63 === null) ? (msg === null) : x$63.equals__O__Z(msg))) {
                                                                    return "There is an extra space."
                                                                  } else {
                                                                    const x$65 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA;
                                                                    if (((x$65 === null) ? (msg === null) : x$65.equals__O__Z(msg))) {
                                                                      return "There is an extra space or missing comma."
                                                                    } else {
                                                                      const x$67 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                                                      if (((x$67 === null) ? (msg === null) : x$67.equals__O__Z(msg))) {
                                                                        return "There seems to be an extra symbol '%s' here."
                                                                      } else {
                                                                        const x$69 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD;
                                                                        if (((x$69 === null) ? (msg === null) : x$69.equals__O__Z(msg))) {
                                                                          return "'%s' is not a keyword in Python."
                                                                        } else {
                                                                          const x$71 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE;
                                                                          if (((x$71 === null) ? (msg === null) : x$71.equals__O__Z(msg))) {
                                                                            return "The token '%s' is invalid, use underscores '_' to mark a function as 'private'."
                                                                          } else {
                                                                            const x$73 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                                                                            if (((x$73 === null) ? (msg === null) : x$73.equals__O__Z(msg))) {
                                                                              return "Python has no '%s'-statement."
                                                                            } else {
                                                                              const x$75 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                                                              if (((x$75 === null) ? (msg === null) : x$75.equals__O__Z(msg))) {
                                                                                return "This %s-syntax is invalid in Python."
                                                                              } else {
                                                                                const x$77 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
                                                                                if (((x$77 === null) ? (msg === null) : x$77.equals__O__Z(msg))) {
                                                                                  return "The token '%s' is invalid, use '%s' instead."
                                                                                } else {
                                                                                  const x$79 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                                                                                  if (((x$79 === null) ? (msg === null) : x$79.equals__O__Z(msg))) {
                                                                                    return "Python does not use '%s' to define variables."
                                                                                  } else {
                                                                                    const x$81 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
                                                                                    if (((x$81 === null) ? (msg === null) : x$81.equals__O__Z(msg))) {
                                                                                      return "The 'for'-loop requires a variable after the 'for'."
                                                                                    } else {
                                                                                      const x$83 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST;
                                                                                      if (((x$83 === null) ? (msg === null) : x$83.equals__O__Z(msg))) {
                                                                                        return "The 'from __future__ import'-statement must be the first statement in the module."
                                                                                      } else {
                                                                                        const x$85 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE;
                                                                                        if (((x$85 === null) ? (msg === null) : x$85.equals__O__Z(msg))) {
                                                                                          return "A generator cannot use 'return' to return a value."
                                                                                        } else {
                                                                                          const x$87 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
                                                                                          if (((x$87 === null) ? (msg === null) : x$87.equals__O__Z(msg))) {
                                                                                            return "'%s'-statements must be the first statements inside a function."
                                                                                          } else {
                                                                                            const x$89 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
                                                                                            if (((x$89 === null) ? (msg === null) : x$89.equals__O__Z(msg))) {
                                                                                              return "A '%s'-statement cannot occur outside a function."
                                                                                            } else {
                                                                                              const x$91 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP;
                                                                                              if (((x$91 === null) ? (msg === null) : x$91.equals__O__Z(msg))) {
                                                                                                return "An 'import'-statement cannot be inside a loop."
                                                                                              } else {
                                                                                                const x$93 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT;
                                                                                                if (((x$93 === null) ? (msg === null) : x$93.equals__O__Z(msg))) {
                                                                                                  return "This import statement is incomplete."
                                                                                                } else {
                                                                                                  const x$95 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
                                                                                                  if (((x$95 === null) ? (msg === null) : x$95.equals__O__Z(msg))) {
                                                                                                    return "The indentation is inconsistent."
                                                                                                  } else {
                                                                                                    const x$97 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS;
                                                                                                    if (((x$97 === null) ? (msg === null) : x$97.equals__O__Z(msg))) {
                                                                                                      return "This function sometimes returns a value and sometimes does not."
                                                                                                    } else {
                                                                                                      const x$99 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                                                                                      if (((x$99 === null) ? (msg === null) : x$99.equals__O__Z(msg))) {
                                                                                                        return "This '%s' must not be indented."
                                                                                                      } else {
                                                                                                        const x$101 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
                                                                                                        if (((x$101 === null) ? (msg === null) : x$101.equals__O__Z(msg))) {
                                                                                                          return "This is an infinite loop: it runs forever."
                                                                                                        } else {
                                                                                                          const x$103 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                                                                                                          if (((x$103 === null) ? (msg === null) : x$103.equals__O__Z(msg))) {
                                                                                                            return "You cannot have the initialization inside the loop."
                                                                                                          } else {
                                                                                                            const x$105 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                                                                                                            if (((x$105 === null) ? (msg === null) : x$105.equals__O__Z(msg))) {
                                                                                                              return "You cannot assign something to '%s'."
                                                                                                            } else {
                                                                                                              const x$107 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
                                                                                                              if (((x$107 === null) ? (msg === null) : x$107.equals__O__Z(msg))) {
                                                                                                                return "Invalid definition of a function."
                                                                                                              } else {
                                                                                                                const x$109 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN;
                                                                                                                if (((x$109 === null) ? (msg === null) : x$109.equals__O__Z(msg))) {
                                                                                                                  return "Use ':' and 'return' instead of an assignment."
                                                                                                                } else {
                                                                                                                  const x$111 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG;
                                                                                                                  if (((x$111 === null) ? (msg === null) : x$111.equals__O__Z(msg))) {
                                                                                                                    return "A 'generator/comprehension' argument cannot be combined with other arguments."
                                                                                                                  } else {
                                                                                                                    const x$113 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
                                                                                                                    if (((x$113 === null) ? (msg === null) : x$113.equals__O__Z(msg))) {
                                                                                                                      return "This is an invalid input character: '%s'."
                                                                                                                    } else {
                                                                                                                      const x$115 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                                                                                                                      if (((x$115 === null) ? (msg === null) : x$115.equals__O__Z(msg))) {
                                                                                                                        return "This is an invalid key-value-pair."
                                                                                                                      } else {
                                                                                                                        const x$117 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
                                                                                                                        if (((x$117 === null) ? (msg === null) : x$117.equals__O__Z(msg))) {
                                                                                                                          return "This is an invalid name: '%s'."
                                                                                                                        } else {
                                                                                                                          const x$119 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET;
                                                                                                                          if (((x$119 === null) ? (msg === null) : x$119.equals__O__Z(msg))) {
                                                                                                                            return "This expression is not a valid target for augmented assignment."
                                                                                                                          } else {
                                                                                                                            const x$121 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX;
                                                                                                                            if (((x$121 === null) ? (msg === null) : x$121.equals__O__Z(msg))) {
                                                                                                                              return "This is an invalid string prefix: '%s'."
                                                                                                                            } else {
                                                                                                                              const x$123 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE;
                                                                                                                              if (((x$123 === null) ? (msg === null) : x$123.equals__O__Z(msg))) {
                                                                                                                                return "This token cannot be at the beginning of a line: '%s'."
                                                                                                                              } else {
                                                                                                                                const x$125 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                                                                                                                                if (((x$125 === null) ? (msg === null) : x$125.equals__O__Z(msg))) {
                                                                                                                                  return "A method requires a 'self'-parameter."
                                                                                                                                } else {
                                                                                                                                  const x$127 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET;
                                                                                                                                  if (((x$127 === null) ? (msg === null) : x$127.equals__O__Z(msg))) {
                                                                                                                                    return "There are mismatched brackets or parentheses: expected '%s' but found '%s'."
                                                                                                                                  } else {
                                                                                                                                    const x$129 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN;
                                                                                                                                    if (((x$129 === null) ? (msg === null) : x$129.equals__O__Z(msg))) {
                                                                                                                                      return "The assignment '%s' cannot occur as part of an expression."
                                                                                                                                    } else {
                                                                                                                                      const x$131 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT;
                                                                                                                                      if (((x$131 === null) ? (msg === null) : x$131.equals__O__Z(msg))) {
                                                                                                                                        return "There seems to be an assignment missing."
                                                                                                                                      } else {
                                                                                                                                        const x$133 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE;
                                                                                                                                        if (((x$133 === null) ? (msg === null) : x$133.equals__O__Z(msg))) {
                                                                                                                                          return "The assignment is missing a value or source expression."
                                                                                                                                        } else {
                                                                                                                                          const x$135 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY;
                                                                                                                                          if (((x$135 === null) ? (msg === null) : x$135.equals__O__Z(msg))) {
                                                                                                                                            return "There is a body or indentation missing."
                                                                                                                                          } else {
                                                                                                                                            const x$137 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
                                                                                                                                            if (((x$137 === null) ? (msg === null) : x$137.equals__O__Z(msg))) {
                                                                                                                                              return "There seems to be a comma missing."
                                                                                                                                            } else {
                                                                                                                                              const x$139 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
                                                                                                                                              if (((x$139 === null) ? (msg === null) : x$139.equals__O__Z(msg))) {
                                                                                                                                                return "There is a comparison missing."
                                                                                                                                              } else {
                                                                                                                                                const x$141 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT;
                                                                                                                                                if (((x$141 === null) ? (msg === null) : x$141.equals__O__Z(msg))) {
                                                                                                                                                  return "There seems to be a dot missing."
                                                                                                                                                } else {
                                                                                                                                                  const x$143 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET;
                                                                                                                                                  if (((x$143 === null) ? (msg === null) : x$143.equals__O__Z(msg))) {
                                                                                                                                                    return "There is a missing left bracket or parenthesis: '%s'."
                                                                                                                                                  } else {
                                                                                                                                                    const x$145 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS;
                                                                                                                                                    if (((x$145 === null) ? (msg === null) : x$145.equals__O__Z(msg))) {
                                                                                                                                                      return "There is a missing left parenthesis '('."
                                                                                                                                                    } else {
                                                                                                                                                      const x$147 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA;
                                                                                                                                                      if (((x$147 === null) ? (msg === null) : x$147.equals__O__Z(msg))) {
                                                                                                                                                        return "There is an operator or comma missing."
                                                                                                                                                      } else {
                                                                                                                                                        const x$149 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES;
                                                                                                                                                        if (((x$149 === null) ? (msg === null) : x$149.equals__O__Z(msg))) {
                                                                                                                                                          return "There seem to be parentheses missing."
                                                                                                                                                        } else {
                                                                                                                                                          const x$151 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
                                                                                                                                                          if (((x$151 === null) ? (msg === null) : x$151.equals__O__Z(msg))) {
                                                                                                                                                            return "There is a closing bracket or parenthesis missing: '%s'."
                                                                                                                                                          } else {
                                                                                                                                                            const x$153 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                                                                                                                            if (((x$153 === null) ? (msg === null) : x$153.equals__O__Z(msg))) {
                                                                                                                                                              return "There is a space missing."
                                                                                                                                                            } else {
                                                                                                                                                              const x$155 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
                                                                                                                                                              if (((x$155 === null) ? (msg === null) : x$155.equals__O__Z(msg))) {
                                                                                                                                                                return "Missing '%s'."
                                                                                                                                                              } else {
                                                                                                                                                                const x$157 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                                                                                                                                                if (((x$157 === null) ? (msg === null) : x$157.equals__O__Z(msg))) {
                                                                                                                                                                  return "Misspelled keyword '%s' instead of '%s'."
                                                                                                                                                                } else {
                                                                                                                                                                  const x$159 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER;
                                                                                                                                                                  if (((x$159 === null) ? (msg === null) : x$159.equals__O__Z(msg))) {
                                                                                                                                                                    return "There seems to be a typo inside your number."
                                                                                                                                                                  } else {
                                                                                                                                                                    const x$161 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
                                                                                                                                                                    if (((x$161 === null) ? (msg === null) : x$161.equals__O__Z(msg))) {
                                                                                                                                                                      return "Misspelled operator '%s' instead of '%s'."
                                                                                                                                                                    } else {
                                                                                                                                                                      const x$163 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS;
                                                                                                                                                                      if (((x$163 === null) ? (msg === null) : x$163.equals__O__Z(msg))) {
                                                                                                                                                                        return "Only one unpacking var/keyword-argument is allowed."
                                                                                                                                                                      } else {
                                                                                                                                                                        const x$165 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
                                                                                                                                                                        if (((x$165 === null) ? (msg === null) : x$165.equals__O__Z(msg))) {
                                                                                                                                                                          return "Only one unpacking var/keyword-parameter is allowed."
                                                                                                                                                                        } else {
                                                                                                                                                                          const x$167 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
                                                                                                                                                                          if (((x$167 === null) ? (msg === null) : x$167.equals__O__Z(msg))) {
                                                                                                                                                                            return "There is a name required here."
                                                                                                                                                                          } else {
                                                                                                                                                                            const x$169 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
                                                                                                                                                                            if (((x$169 === null) ? (msg === null) : x$169.equals__O__Z(msg))) {
                                                                                                                                                                              return "There is no 'end' needed or allowed in Python."
                                                                                                                                                                            } else {
                                                                                                                                                                              const x$171 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED;
                                                                                                                                                                              if (((x$171 === null) ? (msg === null) : x$171.equals__O__Z(msg))) {
                                                                                                                                                                                return "An unpacking parameter cannot have a default value."
                                                                                                                                                                              } else {
                                                                                                                                                                                const x$173 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
                                                                                                                                                                                if (((x$173 === null) ? (msg === null) : x$173.equals__O__Z(msg))) {
                                                                                                                                                                                  return "I am lost and cannot make sense of your program code, anymore, at '%s'."
                                                                                                                                                                                } else {
                                                                                                                                                                                  const x$175 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE;
                                                                                                                                                                                  if (((x$175 === null) ? (msg === null) : x$175.equals__O__Z(msg))) {
                                                                                                                                                                                    return "A number cannot have a subscript."
                                                                                                                                                                                  } else {
                                                                                                                                                                                    const x$177 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM;
                                                                                                                                                                                    if (((x$177 === null) ? (msg === null) : x$177.equals__O__Z(msg))) {
                                                                                                                                                                                      return "The unpacking keyword-parameter must come last."
                                                                                                                                                                                    } else {
                                                                                                                                                                                      const x$179 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED;
                                                                                                                                                                                      if (((x$179 === null) ? (msg === null) : x$179.equals__O__Z(msg))) {
                                                                                                                                                                                        return "Parameter(s) required but '%s' found."
                                                                                                                                                                                      } else {
                                                                                                                                                                                        const x$181 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD;
                                                                                                                                                                                        if (((x$181 === null) ? (msg === null) : x$181.equals__O__Z(msg))) {
                                                                                                                                                                                          return "Positional arguments cannot follow keyword arguments."
                                                                                                                                                                                        } else {
                                                                                                                                                                                          const x$183 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD;
                                                                                                                                                                                          if (((x$183 === null) ? (msg === null) : x$183.equals__O__Z(msg))) {
                                                                                                                                                                                            return "Parameters without defaults cannot follow parameters with default value or unpacking parameters."
                                                                                                                                                                                          } else {
                                                                                                                                                                                            const x$185 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED;
                                                                                                                                                                                            if (((x$185 === null) ? (msg === null) : x$185.equals__O__Z(msg))) {
                                                                                                                                                                                              return "'>>' must be followed by a valid output destination."
                                                                                                                                                                                            } else {
                                                                                                                                                                                              const x$187 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT;
                                                                                                                                                                                              if (((x$187 === null) ? (msg === null) : x$187.equals__O__Z(msg))) {
                                                                                                                                                                                                return "In Python 2.x 'print' is a statement and cannot be called with keyword arguments."
                                                                                                                                                                                              } else {
                                                                                                                                                                                                const x$189 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES;
                                                                                                                                                                                                if (((x$189 === null) ? (msg === null) : x$189.equals__O__Z(msg))) {
                                                                                                                                                                                                  return "In Python 3.x 'print' is a function and requires parentheses."
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  const x$191 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                  if (((x$191 === null) ? (msg === null) : x$191.equals__O__Z(msg))) {
                                                                                                                                                                                                    return "This feature from Python 2.x is not available."
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    const x$193 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                    if (((x$193 === null) ? (msg === null) : x$193.equals__O__Z(msg))) {
                                                                                                                                                                                                      return "This feature from Python 3.x is not available."
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      const x$195 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK;
                                                                                                                                                                                                      if (((x$195 === null) ? (msg === null) : x$195.equals__O__Z(msg))) {
                                                                                                                                                                                                        return "Use 'return' instead of 'break' to exit a function."
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        const x$197 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION;
                                                                                                                                                                                                        if (((x$197 === null) ? (msg === null) : x$197.equals__O__Z(msg))) {
                                                                                                                                                                                                          return "A 'return'-statement cannot occur outside a function."
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          const x$199 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED;
                                                                                                                                                                                                          if (((x$199 === null) ? (msg === null) : x$199.equals__O__Z(msg))) {
                                                                                                                                                                                                            return "Use a single equal sign '=' for assignment."
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            const x$201 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                                                                                                                                                                                                            if (((x$201 === null) ? (msg === null) : x$201.equals__O__Z(msg))) {
                                                                                                                                                                                                              return "The comparison to '%s' is superfluous here."
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              const x$203 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
                                                                                                                                                                                                              if (((x$203 === null) ? (msg === null) : x$203.equals__O__Z(msg))) {
                                                                                                                                                                                                                return "These symbols seem to be swapped: '%s' and '%s'."
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                const x$205 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
                                                                                                                                                                                                                if (((x$205 === null) ? (msg === null) : x$205.equals__O__Z(msg))) {
                                                                                                                                                                                                                  return "'%s' required but '%s' found."
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  const x$207 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TWO_STATEMENTS;
                                                                                                                                                                                                                  if (((x$207 === null) ? (msg === null) : x$207.equals__O__Z(msg))) {
                                                                                                                                                                                                                    return "You cannot put two statements on a single line."
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    const x$209 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
                                                                                                                                                                                                                    if (((x$209 === null) ? (msg === null) : x$209.equals__O__Z(msg))) {
                                                                                                                                                                                                                      return "This tuple needs to be enclosed in parentheses."
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      const x$211 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
                                                                                                                                                                                                                      if (((x$211 === null) ? (msg === null) : x$211.equals__O__Z(msg))) {
                                                                                                                                                                                                                        return "Unexpected end of line or input."
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        const x$213 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
                                                                                                                                                                                                                        if (((x$213 === null) ? (msg === null) : x$213.equals__O__Z(msg))) {
                                                                                                                                                                                                                          return "The keyword '%s' cannot occur at this point."
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          const x$215 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET;
                                                                                                                                                                                                                          if (((x$215 === null) ? (msg === null) : x$215.equals__O__Z(msg))) {
                                                                                                                                                                                                                            return "This left bracket '%s' has no matching right bracket."
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            const x$217 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE;
                                                                                                                                                                                                                            if (((x$217 === null) ? (msg === null) : x$217.equals__O__Z(msg))) {
                                                                                                                                                                                                                              return "This code is unreachable and will never be executed."
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              const x$219 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
                                                                                                                                                                                                                              if (((x$219 === null) ? (msg === null) : x$219.equals__O__Z(msg))) {
                                                                                                                                                                                                                                return "This string is unterminated."
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                const x$221 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA;
                                                                                                                                                                                                                                if (((x$221 === null) ? (msg === null) : x$221.equals__O__Z(msg))) {
                                                                                                                                                                                                                                  return "Multiple comparisons are combined by 'and' or 'or' instead of a comma."
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  const x$223 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND;
                                                                                                                                                                                                                                  if (((x$223 === null) ? (msg === null) : x$223.equals__O__Z(msg))) {
                                                                                                                                                                                                                                    return "Multiple values are separated by comma instead of 'and'."
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    const x$225 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE;
                                                                                                                                                                                                                                    if (((x$225 === null) ? (msg === null) : x$225.equals__O__Z(msg))) {
                                                                                                                                                                                                                                      return "Use 'elif' instead of 'else'."
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      const x$227 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF;
                                                                                                                                                                                                                                      if (((x$227 === null) ? (msg === null) : x$227.equals__O__Z(msg))) {
                                                                                                                                                                                                                                        return "Use 'elif' instead of 'else if'."
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        const x$229 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ;
                                                                                                                                                                                                                                        if (((x$229 === null) ? (msg === null) : x$229.equals__O__Z(msg))) {
                                                                                                                                                                                                                                          return "Use '== %s' instead of '!= %s'."
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          const x$231 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV;
                                                                                                                                                                                                                                          if (((x$231 === null) ? (msg === null) : x$231.equals__O__Z(msg))) {
                                                                                                                                                                                                                                            return "Use '%%' instead of '/' to check for divisibility."
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            const x$233 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                                                                                                                                                                                                                                            if (((x$233 === null) ? (msg === null) : x$233.equals__O__Z(msg))) {
                                                                                                                                                                                                                                              return "Use 'not' rather than a comparison to '%s'."
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              const x$235 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE;
                                                                                                                                                                                                                                              if (((x$235 === null) ? (msg === null) : x$235.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                return "Use 'repeat' instead of 'while'."
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                const x$237 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION;
                                                                                                                                                                                                                                                if (((x$237 === null) ? (msg === null) : x$237.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                  return "The result of this expression is never used."
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  const x$239 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
                                                                                                                                                                                                                                                  if (((x$239 === null) ? (msg === null) : x$239.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                    return "This statement seems useless: it has no effect."
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    const x$241 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN;
                                                                                                                                                                                                                                                    if (((x$241 === null) ? (msg === null) : x$241.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                      return "This statement seems useless. Did you mean '%s='?"
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      const x$243 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG;
                                                                                                                                                                                                                                                      if (((x$243 === null) ? (msg === null) : x$243.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                        return "The unpacking var-argument must precede the unpacking keyword-argument."
                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                        const x$245 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED;
                                                                                                                                                                                                                                                        if (((x$245 === null) ? (msg === null) : x$245.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                          return "Unpacking var/keyword-arguments are not allowed at this point."
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                          const x$247 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET;
                                                                                                                                                                                                                                                          if (((x$247 === null) ? (msg === null) : x$247.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                            return "Wrong parenthesis or bracket: '%s' is required instead of '%s'."
                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                            const x$249 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN;
                                                                                                                                                                                                                                                            if (((x$249 === null) ? (msg === null) : x$249.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                              return "Wrong symbol '%s' instead of '%s'."
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                              const x$251 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION;
                                                                                                                                                                                                                                                              if (((x$251 === null) ? (msg === null) : x$251.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                                return "A 'yield'-expression cannot occur outside a function."
                                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                                return msg.toString__T()
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_errormessages_EnglishMessages$ = new $TypeData().initClass({
  Ltigerpython_parser_errormessages_EnglishMessages$: 0
}, false, "tigerpython.parser.errormessages.EnglishMessages$", {
  Ltigerpython_parser_errormessages_EnglishMessages$: 1,
  Ltigerpython_parser_errormessages_ModifiableErrorMessages: 1,
  O: 1
});
$c_Ltigerpython_parser_errormessages_EnglishMessages$.prototype.$classData = $d_Ltigerpython_parser_errormessages_EnglishMessages$;
let $n_Ltigerpython_parser_errormessages_EnglishMessages$ = (void 0);
function $m_Ltigerpython_parser_errormessages_EnglishMessages$() {
  if ((!$n_Ltigerpython_parser_errormessages_EnglishMessages$)) {
    $n_Ltigerpython_parser_errormessages_EnglishMessages$ = new $c_Ltigerpython_parser_errormessages_EnglishMessages$()
  };
  return $n_Ltigerpython_parser_errormessages_EnglishMessages$
}
class $c_Ltigerpython_parser_errormessages_FrenchMessages$ extends $c_Ltigerpython_parser_errormessages_ModifiableErrorMessages {
  constructor() {
    super();
    $ct_Ltigerpython_parser_errormessages_ModifiableErrorMessages__(this)
  };
  _getMessage__s_Enumeration$Value__T(msg) {
    const x = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
    if (((x === null) ? (msg === null) : x.equals__O__Z(msg))) {
      return "Combinaison erron\u00e9e d'une expression bool\u00e9enne avec une variable non bool\u00e9enne \u00e0 l'aide de l'op\u00e9rateur logique '%s'."
    } else {
      const x$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE;
      if (((x$3 === null) ? (msg === null) : x$3.equals__O__Z(msg))) {
        return "'as' n'est pas autoris\u00e9 dans ce contexte."
      } else {
        const x$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
        if (((x$5 === null) ? (msg === null) : x$5.equals__O__Z(msg))) {
          return "La destination d'une assignation doit se trouve \u00e0 gauche de l'op\u00e9rateur d'assignation et non \u00e0 droite."
        } else {
          const x$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN;
          if (((x$7 === null) ? (msg === null) : x$7.equals__O__Z(msg))) {
            return "Il faut utiliser 'break' au lieu de 'return' pour interrompre une boucle."
          } else {
            const x$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
            if (((x$9 === null) ? (msg === null) : x$9.equals__O__Z(msg))) {
              return "Il n'est pas possible d'utiliser l'instruction '%s' \u00e0 l'ext\u00e9rieur d'une boucle."
            } else {
              const x$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES;
              if (((x$11 === null) ? (msg === null) : x$11.equals__O__Z(msg))) {
                return "Il faut utiliser des parenth\u00e8ses pour appeler une fonction."
              } else {
                const x$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC;
                if (((x$13 === null) ? (msg === null) : x$13.equals__O__Z(msg))) {
                  return "Il est impossible d'appliquer 'async' \u00e0 cette instruction."
                } else {
                  const x$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL;
                  if (((x$15 === null) ? (msg === null) : x$15.equals__O__Z(msg))) {
                    return "Il est impossible d'assigner une valeur \u00e0 l'appel d'une fonction."
                  } else {
                    const x$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION;
                    if (((x$17 === null) ? (msg === null) : x$17.equals__O__Z(msg))) {
                      return "Il est dangereux d'assigner une valeur \u00e0 une fonction existante. Par mesure de s\u00e9curit\u00e9, TigerJython n'autorise pas cette op\u00e9ration."
                    } else {
                      const x$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_CALL_VALUE;
                      if (((x$19 === null) ? (msg === null) : x$19.equals__O__Z(msg))) {
                        return "Il n'est pas possible d'appeler '%s' avec des parenth\u00e8ses car ce n'est ni une fonction ni un objet 'callable'."
                      } else {
                        const x$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
                        if (((x$21 === null) ? (msg === null) : x$21.equals__O__Z(msg))) {
                          return "Le nom '%s' est d\u00e9j\u00e0 d\u00e9fini : il est dangereux de l'\u00e9craser. Par mesure de s\u00e9curit\u00e9, TigerJython n'autorise pas cette op\u00e9ration."
                        } else {
                          const x$23 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE;
                          if (((x$23 === null) ? (msg === null) : x$23.equals__O__Z(msg))) {
                            return "Il faut tester tous les \u00e9l\u00e9ments de ce tuple individuellement."
                          } else {
                            const x$25 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                            if (((x$25 === null) ? (msg === null) : x$25.equals__O__Z(msg))) {
                              return "'%s' est un mot r\u00e9serv\u00e9 : impossible de l'utiliser comme un nom."
                            } else {
                              const x$27 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF;
                              if (((x$27 === null) ? (msg === null) : x$27.equals__O__Z(msg))) {
                                return "Une m\u00e9thode de classe n\u00e9cessite au moins un param\u00e8tre (r\u00e9f\u00e9rence \u00e0 la classe)."
                              } else {
                                const x$29 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED;
                                if (((x$29 === null) ? (msg === null) : x$29.equals__O__Z(msg))) {
                                  return "Il manque le double point ':'."
                                } else {
                                  const x$31 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                                  if (((x$31 === null) ? (msg === null) : x$31.equals__O__Z(msg))) {
                                    return "Cette condition n'est jamais satisfaite."
                                  } else {
                                    const x$33 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
                                    if (((x$33 === null) ? (msg === null) : x$33.equals__O__Z(msg))) {
                                      return "Cette condition est toujours satisfaite."
                                    } else {
                                      const x$35 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH;
                                      if (((x$35 === null) ? (msg === null) : x$35.equals__O__Z(msg))) {
                                        return "Une fonction et son d\u00e9corateur ne peuvent pas prendre le m\u00eame nom '%s'."
                                      } else {
                                        const x$37 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE;
                                        if (((x$37 === null) ? (msg === null) : x$37.equals__O__Z(msg))) {
                                          return "Seules les fonctions et les classes peuvent \u00eatre d\u00e9cor\u00e9es."
                                        } else {
                                          const x$39 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
                                          if (((x$39 === null) ? (msg === null) : x$39.equals__O__Z(msg))) {
                                            return "Il faut d\u00e9finir la fonction '%s' \u00e0 l'ext\u00e9rieur de la boucle."
                                          } else {
                                            const x$41 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_CALL;
                                            if (((x$41 === null) ? (msg === null) : x$41.equals__O__Z(msg))) {
                                              return "Double appel : la valeur de retour de la fonction ne peut pas faire l'objet d'un appel."
                                            } else {
                                              const x$43 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
                                              if (((x$43 === null) ? (msg === null) : x$43.equals__O__Z(msg))) {
                                                return "Une instruction '%s' ne peut avoir qu'une seule branche 'else'."
                                              } else {
                                                const x$45 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED;
                                                if (((x$45 === null) ? (msg === null) : x$45.equals__O__Z(msg))) {
                                                  return "Pour tester l'\u00e9galit\u00e9, il faut utiliser l'op\u00e9rateur '=='."
                                                } else {
                                                  const x$47 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES;
                                                  if (((x$47 === null) ? (msg === null) : x$47.equals__O__Z(msg))) {
                                                    return "La fonction ne peut pas prendre deux param\u00e8tres de m\u00eame nom : '%s'."
                                                  } else {
                                                    const x$49 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED;
                                                    if (((x$49 === null) ? (msg === null) : x$49.equals__O__Z(msg))) {
                                                      return "Il faut que le '%s' soit indent\u00e9 de la m\u00eame mani\u00e8re que le 'if'."
                                                    } else {
                                                      const x$51 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON;
                                                      if (((x$51 === null) ? (msg === null) : x$51.equals__O__Z(msg))) {
                                                        return "'else' n'accepte pas de condition : utiliser 'elif'."
                                                      } else {
                                                        const x$53 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                                        if (((x$53 === null) ? (msg === null) : x$53.equals__O__Z(msg))) {
                                                          return "Il faut d'abord mettre un 'if' avant un '%s'."
                                                        } else {
                                                          const x$55 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT;
                                                          if (((x$55 === null) ? (msg === null) : x$55.equals__O__Z(msg))) {
                                                            return "Il faut fournir un indice ou un 'slice' entre les crochets []."
                                                          } else {
                                                            const x$57 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_BRACKETS;
                                                            if (((x$57 === null) ? (msg === null) : x$57.equals__O__Z(msg))) {
                                                              return "Il y a des parenth\u00e8ses en trop."
                                                            } else {
                                                              const x$59 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION;
                                                              if (((x$59 === null) ? (msg === null) : x$59.equals__O__Z(msg))) {
                                                                return "Cette ligne est trop indent\u00e9e par rapport \u00e0 la pr\u00e9c\u00e9dente."
                                                              } else {
                                                                const x$61 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
                                                                if (((x$61 === null) ? (msg === null) : x$61.equals__O__Z(msg))) {
                                                                  return "Il y a une parenth\u00e8se ouvrante en trop: '%s'."
                                                                } else {
                                                                  const x$63 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
                                                                  if (((x$63 === null) ? (msg === null) : x$63.equals__O__Z(msg))) {
                                                                    return "Pour \u00e9crire cette instruction sur plusieurs lignes, il faut mettre '\\' en fin de ligne."
                                                                  } else {
                                                                    const x$65 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINE_NUMBER;
                                                                    if (((x$65 === null) ? (msg === null) : x$65.equals__O__Z(msg))) {
                                                                      return "Il semble qu'il y ait un nombre trop grand de lignes."
                                                                    } else {
                                                                      const x$67 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
                                                                      if (((x$67 === null) ? (msg === null) : x$67.equals__O__Z(msg))) {
                                                                        return "Il y a une parenth\u00e8se fermante en trop: '%s'."
                                                                      } else {
                                                                        const x$69 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                                                                        if (((x$69 === null) ? (msg === null) : x$69.equals__O__Z(msg))) {
                                                                          return "Il y a un espace en trop."
                                                                        } else {
                                                                          const x$71 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA;
                                                                          if (((x$71 === null) ? (msg === null) : x$71.equals__O__Z(msg))) {
                                                                            return "Soit il y a un espace en trop, soit il manque une virgule."
                                                                          } else {
                                                                            const x$73 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                                                            if (((x$73 === null) ? (msg === null) : x$73.equals__O__Z(msg))) {
                                                                              return "Tokens en trop d\u00e9tect\u00e9s : '%s'."
                                                                            } else {
                                                                              const x$75 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD;
                                                                              if (((x$75 === null) ? (msg === null) : x$75.equals__O__Z(msg))) {
                                                                                return "'%s' n'est pas un mot-cl\u00e9 Python valide."
                                                                              } else {
                                                                                const x$77 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                                                                                if (((x$77 === null) ? (msg === null) : x$77.equals__O__Z(msg))) {
                                                                                  return "'%s' n'est pas une instruction Python valide."
                                                                                } else {
                                                                                  const x$79 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                                                                  if (((x$79 === null) ? (msg === null) : x$79.equals__O__Z(msg))) {
                                                                                    return "'%s' ne constitue pas une syntaxe valide en Python."
                                                                                  } else {
                                                                                    const x$81 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
                                                                                    if (((x$81 === null) ? (msg === null) : x$81.equals__O__Z(msg))) {
                                                                                      return "Le token '%s' est invalide en Python. Essayer d'utiliser '%s' \u00e0 la place."
                                                                                    } else {
                                                                                      const x$83 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                                                                                      if (((x$83 === null) ? (msg === null) : x$83.equals__O__Z(msg))) {
                                                                                        return "Python n'utilise pas '%s' pour d\u00e9finir les variables."
                                                                                      } else {
                                                                                        const x$85 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
                                                                                        if (((x$85 === null) ? (msg === null) : x$85.equals__O__Z(msg))) {
                                                                                          return "Le boucle 'for' n\u00e9cessite une variable de contr\u00f4le."
                                                                                        } else {
                                                                                          const x$87 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST;
                                                                                          if (((x$87 === null) ? (msg === null) : x$87.equals__O__Z(msg))) {
                                                                                            return "L'instruction 'from __future__ import' doit \u00eatre plac\u00e9e au tout d\u00e9but du module."
                                                                                          } else {
                                                                                            const x$89 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE;
                                                                                            if (((x$89 === null) ? (msg === null) : x$89.equals__O__Z(msg))) {
                                                                                              return "On ne peut pas utiliser 'return' pour renvoyer une valeur depuis un g\u00e9n\u00e9rateur."
                                                                                            } else {
                                                                                              const x$91 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
                                                                                              if (((x$91 === null) ? (msg === null) : x$91.equals__O__Z(msg))) {
                                                                                                return "Les instructions '%s' doivent \u00eatre plac\u00e9es tout au d\u00e9but du corps de la fonction."
                                                                                              } else {
                                                                                                const x$93 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
                                                                                                if (((x$93 === null) ? (msg === null) : x$93.equals__O__Z(msg))) {
                                                                                                  return "L'instruction '%s' n'est valide qu'\u00e0 l'int\u00e9rieur d'une fonction."
                                                                                                } else {
                                                                                                  const x$95 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP;
                                                                                                  if (((x$95 === null) ? (msg === null) : x$95.equals__O__Z(msg))) {
                                                                                                    return "L'instruction 'import' ne peut pas figurer \u00e0 l'int\u00e9rieur d'une boucle."
                                                                                                  } else {
                                                                                                    const x$97 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT;
                                                                                                    if (((x$97 === null) ? (msg === null) : x$97.equals__O__Z(msg))) {
                                                                                                      return "Instruction 'import' incompl\u00e8te."
                                                                                                    } else {
                                                                                                      const x$99 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
                                                                                                      if (((x$99 === null) ? (msg === null) : x$99.equals__O__Z(msg))) {
                                                                                                        return "Indentation incoh\u00e9rente."
                                                                                                      } else {
                                                                                                        const x$101 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS;
                                                                                                        if (((x$101 === null) ? (msg === null) : x$101.equals__O__Z(msg))) {
                                                                                                          return "Parfois, cette fonction renvoie une valeur, parfois elle ne renvoie rien."
                                                                                                        } else {
                                                                                                          const x$103 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                                                                                          if (((x$103 === null) ? (msg === null) : x$103.equals__O__Z(msg))) {
                                                                                                            return "Le '%s' ne doit pas \u00eatre indent\u00e9."
                                                                                                          } else {
                                                                                                            const x$105 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_HEADER;
                                                                                                            if (((x$105 === null) ? (msg === null) : x$105.equals__O__Z(msg))) {
                                                                                                              return "L'en-t\u00eate de l'instruction '%s' ne doit pas \u00eatre indent\u00e9 : seul son corps doit l'\u00eatre."
                                                                                                            } else {
                                                                                                              const x$107 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
                                                                                                              if (((x$107 === null) ? (msg === null) : x$107.equals__O__Z(msg))) {
                                                                                                                return "Boucle infinie probablement involontaire."
                                                                                                              } else {
                                                                                                                const x$109 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                                                                                                                if (((x$109 === null) ? (msg === null) : x$109.equals__O__Z(msg))) {
                                                                                                                  return "Il ne faut pas initialiser une variable \u00e0 l'int\u00e9rieur d'une boucle."
                                                                                                                } else {
                                                                                                                  const x$111 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                                                                                                                  if (((x$111 === null) ? (msg === null) : x$111.equals__O__Z(msg))) {
                                                                                                                    return "Il n'est pas possible d'assigner une valeur \u00e0 '%s'."
                                                                                                                  } else {
                                                                                                                    const x$113 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
                                                                                                                    if (((x$113 === null) ? (msg === null) : x$113.equals__O__Z(msg))) {
                                                                                                                      return "Cette d\u00e9finition de fonction n'est pas valide."
                                                                                                                    } else {
                                                                                                                      const x$115 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN;
                                                                                                                      if (((x$115 === null) ? (msg === null) : x$115.equals__O__Z(msg))) {
                                                                                                                        return "Utiliser ':' et 'return' au lieu d'une assignation."
                                                                                                                      } else {
                                                                                                                        const x$117 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG;
                                                                                                                        if (((x$117 === null) ? (msg === null) : x$117.equals__O__Z(msg))) {
                                                                                                                          return "Il n'est pas possible de combiner un param\u00e8tre donn\u00e9 sous forme de 'g\u00e9n\u00e9rateur/compr\u00e9hension' avec d'autres param\u00e8tres."
                                                                                                                        } else {
                                                                                                                          const x$119 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
                                                                                                                          if (((x$119 === null) ? (msg === null) : x$119.equals__O__Z(msg))) {
                                                                                                                            return "Ce caract\u00e8re n'est pas valide: '%s'."
                                                                                                                          } else {
                                                                                                                            const x$121 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                                                                                                                            if (((x$121 === null) ? (msg === null) : x$121.equals__O__Z(msg))) {
                                                                                                                              return "Ce couple de cl\u00e9-valeur n'est pas valide."
                                                                                                                            } else {
                                                                                                                              const x$123 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
                                                                                                                              if (((x$123 === null) ? (msg === null) : x$123.equals__O__Z(msg))) {
                                                                                                                                return "Ce nom n'est pas valide: '%s'."
                                                                                                                              } else {
                                                                                                                                const x$125 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET;
                                                                                                                                if (((x$125 === null) ? (msg === null) : x$125.equals__O__Z(msg))) {
                                                                                                                                  return "Cette expression n'est pas valide comme destination d'une assignation."
                                                                                                                                } else {
                                                                                                                                  const x$127 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX;
                                                                                                                                  if (((x$127 === null) ? (msg === null) : x$127.equals__O__Z(msg))) {
                                                                                                                                    return "'%s' n'est pas un pr\u00e9fixe de cha\u00eene de caract\u00e8res valide."
                                                                                                                                  } else {
                                                                                                                                    const x$129 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE;
                                                                                                                                    if (((x$129 === null) ? (msg === null) : x$129.equals__O__Z(msg))) {
                                                                                                                                      return "Le token '%s' ne peut pas se trouver en d\u00e9but de ligne."
                                                                                                                                    } else {
                                                                                                                                      const x$131 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                                                                                                                                      if (((x$131 === null) ? (msg === null) : x$131.equals__O__Z(msg))) {
                                                                                                                                        return "Une fonction de classe n\u00e9cessite un param\u00e8tre 'self'."
                                                                                                                                      } else {
                                                                                                                                        const x$133 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET;
                                                                                                                                        if (((x$133 === null) ? (msg === null) : x$133.equals__O__Z(msg))) {
                                                                                                                                          return "La parenth\u00e8se fermante n'est pas appropri\u00e9e: essayer '%s' au lieu de '%s'."
                                                                                                                                        } else {
                                                                                                                                          const x$135 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN;
                                                                                                                                          if (((x$135 === null) ? (msg === null) : x$135.equals__O__Z(msg))) {
                                                                                                                                            return "L'assignation '%s' ne peut pas faire partie d'une expression."
                                                                                                                                          } else {
                                                                                                                                            const x$137 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT;
                                                                                                                                            if (((x$137 === null) ? (msg === null) : x$137.equals__O__Z(msg))) {
                                                                                                                                              return "Il semble qu'il manque une assignation."
                                                                                                                                            } else {
                                                                                                                                              const x$139 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE;
                                                                                                                                              if (((x$139 === null) ? (msg === null) : x$139.equals__O__Z(msg))) {
                                                                                                                                                return "Il manque une expression source \u00e0 droite de l'assignation."
                                                                                                                                              } else {
                                                                                                                                                const x$141 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY;
                                                                                                                                                if (((x$141 === null) ? (msg === null) : x$141.equals__O__Z(msg))) {
                                                                                                                                                  return "Cette structure n\u00e9cessite un corps. V\u00e9rifier l'indentation !"
                                                                                                                                                } else {
                                                                                                                                                  const x$143 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
                                                                                                                                                  if (((x$143 === null) ? (msg === null) : x$143.equals__O__Z(msg))) {
                                                                                                                                                    return "Il manque une virgule."
                                                                                                                                                  } else {
                                                                                                                                                    const x$145 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
                                                                                                                                                    if (((x$145 === null) ? (msg === null) : x$145.equals__O__Z(msg))) {
                                                                                                                                                      return "Le test n\u00e9cessaire est manquant."
                                                                                                                                                    } else {
                                                                                                                                                      const x$147 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT;
                                                                                                                                                      if (((x$147 === null) ? (msg === null) : x$147.equals__O__Z(msg))) {
                                                                                                                                                        return "Il manque un point."
                                                                                                                                                      } else {
                                                                                                                                                        const x$149 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_EXPRESSION;
                                                                                                                                                        if (((x$149 === null) ? (msg === null) : x$149.equals__O__Z(msg))) {
                                                                                                                                                          return "Il manque une expression."
                                                                                                                                                        } else {
                                                                                                                                                          const x$151 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET;
                                                                                                                                                          if (((x$151 === null) ? (msg === null) : x$151.equals__O__Z(msg))) {
                                                                                                                                                            return "Il manque une parenth\u00e8se ouvrante: '%s'."
                                                                                                                                                          } else {
                                                                                                                                                            const x$153 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS;
                                                                                                                                                            if (((x$153 === null) ? (msg === null) : x$153.equals__O__Z(msg))) {
                                                                                                                                                              return "Il manque une parenth\u00e8se ouvrante '('."
                                                                                                                                                            } else {
                                                                                                                                                              const x$155 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA;
                                                                                                                                                              if (((x$155 === null) ? (msg === null) : x$155.equals__O__Z(msg))) {
                                                                                                                                                                return "Il manque une virgule ou un op\u00e9rateur."
                                                                                                                                                              } else {
                                                                                                                                                                const x$157 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES;
                                                                                                                                                                if (((x$157 === null) ? (msg === null) : x$157.equals__O__Z(msg))) {
                                                                                                                                                                  return "Il semble qu'il manque des parenth\u00e8ses ici."
                                                                                                                                                                } else {
                                                                                                                                                                  const x$159 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
                                                                                                                                                                  if (((x$159 === null) ? (msg === null) : x$159.equals__O__Z(msg))) {
                                                                                                                                                                    return "Il manque une parenth\u00e8se fermante: '%s'."
                                                                                                                                                                  } else {
                                                                                                                                                                    const x$161 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                                                                                                                                    if (((x$161 === null) ? (msg === null) : x$161.equals__O__Z(msg))) {
                                                                                                                                                                      return "Il manque un espace."
                                                                                                                                                                    } else {
                                                                                                                                                                      const x$163 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
                                                                                                                                                                      if (((x$163 === null) ? (msg === null) : x$163.equals__O__Z(msg))) {
                                                                                                                                                                        return "Il manque un '%s'."
                                                                                                                                                                      } else {
                                                                                                                                                                        const x$165 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                                                                                                                                                        if (((x$165 === null) ? (msg === null) : x$165.equals__O__Z(msg))) {
                                                                                                                                                                          return "Mot-cl\u00e9 mal orthographi\u00e9 : '%s' au lieu de '%s'."
                                                                                                                                                                        } else {
                                                                                                                                                                          const x$167 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER;
                                                                                                                                                                          if (((x$167 === null) ? (msg === null) : x$167.equals__O__Z(msg))) {
                                                                                                                                                                            return "Il semble que le nombre soit mal orthographi\u00e9."
                                                                                                                                                                          } else {
                                                                                                                                                                            const x$169 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
                                                                                                                                                                            if (((x$169 === null) ? (msg === null) : x$169.equals__O__Z(msg))) {
                                                                                                                                                                              return "Op\u00e9rateur mal orthographi\u00e9 : '%s' au lieu de '%s'."
                                                                                                                                                                            } else {
                                                                                                                                                                              const x$171 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
                                                                                                                                                                              if (((x$171 === null) ? (msg === null) : x$171.equals__O__Z(msg))) {
                                                                                                                                                                                return "Nom attendu \u00e0 cet endroit."
                                                                                                                                                                              } else {
                                                                                                                                                                                const x$173 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NESTED_FUNCTIONS;
                                                                                                                                                                                if (((x$173 === null) ? (msg === null) : x$173.equals__O__Z(msg))) {
                                                                                                                                                                                  return "D\u00e9finition d'une fonction \u00e0 l'int\u00e9rieur d'une autre fonction : est-ce bien volontaire ?"
                                                                                                                                                                                } else {
                                                                                                                                                                                  const x$175 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
                                                                                                                                                                                  if (((x$175 === null) ? (msg === null) : x$175.equals__O__Z(msg))) {
                                                                                                                                                                                    return "En Python, il ne faut pas mettre 'end' pour terminer un bloc d'instructions."
                                                                                                                                                                                  } else {
                                                                                                                                                                                    const x$177 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
                                                                                                                                                                                    if (((x$177 === null) ? (msg === null) : x$177.equals__O__Z(msg))) {
                                                                                                                                                                                      return "Impossible de d\u00e9terminer le type d'erreur et de sugg\u00e9rer une correction : '%s'."
                                                                                                                                                                                    } else {
                                                                                                                                                                                      const x$179 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE;
                                                                                                                                                                                      if (((x$179 === null) ? (msg === null) : x$179.equals__O__Z(msg))) {
                                                                                                                                                                                        return "Impossible d'indicer les nombres."
                                                                                                                                                                                      } else {
                                                                                                                                                                                        const x$181 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED;
                                                                                                                                                                                        if (((x$181 === null) ? (msg === null) : x$181.equals__O__Z(msg))) {
                                                                                                                                                                                          return "Il faut indiquer les param\u00e8tres entre parenth\u00e8ses : '%s' trouv\u00e9 \u00e0 la place."
                                                                                                                                                                                        } else {
                                                                                                                                                                                          const x$183 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT;
                                                                                                                                                                                          if (((x$183 === null) ? (msg === null) : x$183.equals__O__Z(msg))) {
                                                                                                                                                                                            return "En Python 2.x, 'print' n'est pas une fonction et ne peut pas \u00eatre appel\u00e9 avec des param\u00e8tres nomm\u00e9s."
                                                                                                                                                                                          } else {
                                                                                                                                                                                            const x$185 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES;
                                                                                                                                                                                            if (((x$185 === null) ? (msg === null) : x$185.equals__O__Z(msg))) {
                                                                                                                                                                                              return "En Python 3.x, 'print' est une fonction et n\u00e9cessite des parenth\u00e8ses."
                                                                                                                                                                                            } else {
                                                                                                                                                                                              const x$187 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK;
                                                                                                                                                                                              if (((x$187 === null) ? (msg === null) : x$187.equals__O__Z(msg))) {
                                                                                                                                                                                                return "Il faut utiliser 'return' au lieu de 'break' pour sortir d'une fonction."
                                                                                                                                                                                              } else {
                                                                                                                                                                                                const x$189 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION;
                                                                                                                                                                                                if (((x$189 === null) ? (msg === null) : x$189.equals__O__Z(msg))) {
                                                                                                                                                                                                  return "Une instruction 'return' ne peut pas figurer hors d'une fonction."
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  const x$191 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED;
                                                                                                                                                                                                  if (((x$191 === null) ? (msg === null) : x$191.equals__O__Z(msg))) {
                                                                                                                                                                                                    return "Pour effectuer une assignation, il faut utiliser un seul caract\u00e8re '='."
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    const x$193 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                                                                                                                                                                                                    if (((x$193 === null) ? (msg === null) : x$193.equals__O__Z(msg))) {
                                                                                                                                                                                                      return "Dans ce cas, la comparaison avec '%s' est superflue."
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      const x$195 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
                                                                                                                                                                                                      if (((x$195 === null) ? (msg === null) : x$195.equals__O__Z(msg))) {
                                                                                                                                                                                                        return "Il semble que ces tokens soient invers\u00e9s: '%s' et '%s'."
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        const x$197 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
                                                                                                                                                                                                        if (((x$197 === null) ? (msg === null) : x$197.equals__O__Z(msg))) {
                                                                                                                                                                                                          return "Il faut un '%s' \u00e0 la place de '%s'."
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          const x$199 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
                                                                                                                                                                                                          if (((x$199 === null) ? (msg === null) : x$199.equals__O__Z(msg))) {
                                                                                                                                                                                                            return "Pour former un tuple, il faut mettre les valeurs entre parenth\u00e8ses."
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            const x$201 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
                                                                                                                                                                                                            if (((x$201 === null) ? (msg === null) : x$201.equals__O__Z(msg))) {
                                                                                                                                                                                                              return "Fin de ligne inattendue."
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              const x$203 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
                                                                                                                                                                                                              if (((x$203 === null) ? (msg === null) : x$203.equals__O__Z(msg))) {
                                                                                                                                                                                                                return "Le mot-cl\u00e9 '%s' est inattendu dans ce contexte."
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                const x$205 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET;
                                                                                                                                                                                                                if (((x$205 === null) ? (msg === null) : x$205.equals__O__Z(msg))) {
                                                                                                                                                                                                                  return "La parenth\u00e8se ouvrante '%s' ne poss\u00e8de pas de parenth\u00e8se fermante correspondante."
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  const x$207 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE;
                                                                                                                                                                                                                  if (((x$207 === null) ? (msg === null) : x$207.equals__O__Z(msg))) {
                                                                                                                                                                                                                    return "Ce code est hors d'atteinte: il n'est jamais execut\u00e9."
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    const x$209 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
                                                                                                                                                                                                                    if (((x$209 === null) ? (msg === null) : x$209.equals__O__Z(msg))) {
                                                                                                                                                                                                                      return "Cha\u00eene de caract\u00e8res non termin\u00e9e."
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      const x$211 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA;
                                                                                                                                                                                                                      if (((x$211 === null) ? (msg === null) : x$211.equals__O__Z(msg))) {
                                                                                                                                                                                                                        return "Pour combiner plusieurs conditions, il faut utiliser 'and' ou 'or' et non une virgule."
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        const x$213 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND;
                                                                                                                                                                                                                        if (((x$213 === null) ? (msg === null) : x$213.equals__O__Z(msg))) {
                                                                                                                                                                                                                          return "Pour combiner plusieurs valeurs, il faut utiliser des virgules et non 'and'."
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          const x$215 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE;
                                                                                                                                                                                                                          if (((x$215 === null) ? (msg === null) : x$215.equals__O__Z(msg))) {
                                                                                                                                                                                                                            return "Utiliser 'elif' au lieu de 'else'."
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            const x$217 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF;
                                                                                                                                                                                                                            if (((x$217 === null) ? (msg === null) : x$217.equals__O__Z(msg))) {
                                                                                                                                                                                                                              return "Utiliser 'elif' au lieu de 'else if'."
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              const x$219 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ;
                                                                                                                                                                                                                              if (((x$219 === null) ? (msg === null) : x$219.equals__O__Z(msg))) {
                                                                                                                                                                                                                                return "Utiliser '== %s' au lieu de '!= %s'."
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                const x$221 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV;
                                                                                                                                                                                                                                if (((x$221 === null) ? (msg === null) : x$221.equals__O__Z(msg))) {
                                                                                                                                                                                                                                  return "Utiliser '%%' au lieu de '/' pour tester la divisibilit\u00e9."
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  const x$223 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                                                                                                                                                                                                                                  if (((x$223 === null) ? (msg === null) : x$223.equals__O__Z(msg))) {
                                                                                                                                                                                                                                    return "Utiliser 'not' au lieu d'une comparaison avec '%s'."
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    const x$225 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_PYTHON_POWER;
                                                                                                                                                                                                                                    if (((x$225 === null) ? (msg === null) : x$225.equals__O__Z(msg))) {
                                                                                                                                                                                                                                      return "Utiliser '**' au lieu de '^'."
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      const x$227 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE;
                                                                                                                                                                                                                                      if (((x$227 === null) ? (msg === null) : x$227.equals__O__Z(msg))) {
                                                                                                                                                                                                                                        return "Utiliser 'repeat' au lieu de 'while'."
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        const x$229 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_SEMICOLON_INSTEAD_OF_COMMA;
                                                                                                                                                                                                                                        if (((x$229 === null) ? (msg === null) : x$229.equals__O__Z(msg))) {
                                                                                                                                                                                                                                          return "Utiliser un point-virgule au lieu d'une virgule."
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          const x$231 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION;
                                                                                                                                                                                                                                          if (((x$231 === null) ? (msg === null) : x$231.equals__O__Z(msg))) {
                                                                                                                                                                                                                                            return "Le r\u00e9sultat de cette expression n'est jamais utilis\u00e9."
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            const x$233 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
                                                                                                                                                                                                                                            if (((x$233 === null) ? (msg === null) : x$233.equals__O__Z(msg))) {
                                                                                                                                                                                                                                              return "Cette instruction est inutile : elle n'a aucun effet."
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              const x$235 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN;
                                                                                                                                                                                                                                              if (((x$235 === null) ? (msg === null) : x$235.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                return "Cette instruction est inutile. L'id\u00e9e \u00e9tait-elle de faire '%s='?"
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                const x$237 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET;
                                                                                                                                                                                                                                                if (((x$237 === null) ? (msg === null) : x$237.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                  return "Mauvais type de parenth\u00e8ses : il faut utiliser '%s' au lieu de '%s'."
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  const x$239 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN;
                                                                                                                                                                                                                                                  if (((x$239 === null) ? (msg === null) : x$239.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                    return "Mauvais token : utiliser '%s' au lieu de '%s'."
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    const x$241 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION;
                                                                                                                                                                                                                                                    if (((x$241 === null) ? (msg === null) : x$241.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                      return "L'expression 'yield' ne peut pas figurer \u00e0 l'ext\u00e9rieur du corps d'une fonction."
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_errormessages_FrenchMessages$ = new $TypeData().initClass({
  Ltigerpython_parser_errormessages_FrenchMessages$: 0
}, false, "tigerpython.parser.errormessages.FrenchMessages$", {
  Ltigerpython_parser_errormessages_FrenchMessages$: 1,
  Ltigerpython_parser_errormessages_ModifiableErrorMessages: 1,
  O: 1
});
$c_Ltigerpython_parser_errormessages_FrenchMessages$.prototype.$classData = $d_Ltigerpython_parser_errormessages_FrenchMessages$;
let $n_Ltigerpython_parser_errormessages_FrenchMessages$ = (void 0);
function $m_Ltigerpython_parser_errormessages_FrenchMessages$() {
  if ((!$n_Ltigerpython_parser_errormessages_FrenchMessages$)) {
    $n_Ltigerpython_parser_errormessages_FrenchMessages$ = new $c_Ltigerpython_parser_errormessages_FrenchMessages$()
  };
  return $n_Ltigerpython_parser_errormessages_FrenchMessages$
}
class $c_Ltigerpython_parser_errormessages_GermanMessages$ extends $c_Ltigerpython_parser_errormessages_ModifiableErrorMessages {
  constructor() {
    super();
    $ct_Ltigerpython_parser_errormessages_ModifiableErrorMessages__(this)
  };
  _getMessage__s_Enumeration$Value__T(msg) {
    const x = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
    if (((x === null) ? (msg === null) : x.equals__O__Z(msg))) {
      return "'%s' verkn\u00fcpft Vergleiche, nicht Variablen."
    } else {
      const x$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS;
      if (((x$3 === null) ? (msg === null) : x$3.equals__O__Z(msg))) {
        return "Nach einem entpackenden Argument k\u00f6nnen keine weiteren Argumente folgen."
      } else {
        const x$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE;
        if (((x$5 === null) ? (msg === null) : x$5.equals__O__Z(msg))) {
          return "'as' ist hier nicht erlaubt/unterst\u00fctzt."
        } else {
          const x$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
          if (((x$7 === null) ? (msg === null) : x$7.equals__O__Z(msg))) {
            return "Das Ziel einer Zuweisung muss immer links stehen."
          } else {
            const x$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN;
            if (((x$9 === null) ? (msg === null) : x$9.equals__O__Z(msg))) {
              return "Verwende 'break' anstatt 'return', um eine Schleife zu verlassen."
            } else {
              const x$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
              if (((x$11 === null) ? (msg === null) : x$11.equals__O__Z(msg))) {
                return "Eine '%s'-Anweisung hat ausserhalb einer Schleife keinen Sinn."
              } else {
                const x$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES;
                if (((x$13 === null) ? (msg === null) : x$13.equals__O__Z(msg))) {
                  return "Um eine Funktion aufzurufen musst du auch dann Klammern schreiben, wenn diese leer sind: '%s()'."
                } else {
                  const x$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC;
                  if (((x$15 === null) ? (msg === null) : x$15.equals__O__Z(msg))) {
                    return "'async' kann nicht auf diese Anweisung angewendet werden."
                  } else {
                    const x$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL;
                    if (((x$17 === null) ? (msg === null) : x$17.equals__O__Z(msg))) {
                      return "Einem Funktionsaufruf kann nichts zugewiesen werden."
                    } else {
                      const x$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION;
                      if (((x$19 === null) ? (msg === null) : x$19.equals__O__Z(msg))) {
                        return "Einer Funktion kann nichts zugewiesen werden."
                      } else {
                        const x$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
                        if (((x$21 === null) ? (msg === null) : x$21.equals__O__Z(msg))) {
                          return "Der Name '%s' ist bereits definiert."
                        } else {
                          const x$23 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE;
                          if (((x$23 === null) ? (msg === null) : x$23.equals__O__Z(msg))) {
                            return "Jedes Element dieses Tupels muss hier einzeln getestet werden."
                          } else {
                            const x$25 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                            if (((x$25 === null) ? (msg === null) : x$25.equals__O__Z(msg))) {
                              return "Das Schl\u00fcsselwort '%s' kann nicht als Name verwendet werden."
                            } else {
                              const x$27 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF;
                              if (((x$27 === null) ? (msg === null) : x$27.equals__O__Z(msg))) {
                                return "Eine Klassen-Methode braucht mindestens einen Parameter."
                              } else {
                                const x$29 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED;
                                if (((x$29 === null) ? (msg === null) : x$29.equals__O__Z(msg))) {
                                  return "Doppelpunkt ':' fehlt."
                                } else {
                                  const x$31 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                                  if (((x$31 === null) ? (msg === null) : x$31.equals__O__Z(msg))) {
                                    return "Bedingung kann nicht erf\u00fcllt werden."
                                  } else {
                                    const x$33 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
                                    if (((x$33 === null) ? (msg === null) : x$33.equals__O__Z(msg))) {
                                      return "Bedingung ist immer erf\u00fcllt."
                                    } else {
                                      const x$35 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH;
                                      if (((x$35 === null) ? (msg === null) : x$35.equals__O__Z(msg))) {
                                        return "Eine Funktion und ihr Dekorator k\u00f6nnen nicht den selben Namen '%s' haben."
                                      } else {
                                        const x$37 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE;
                                        if (((x$37 === null) ? (msg === null) : x$37.equals__O__Z(msg))) {
                                          return "Dekoratoren k\u00f6nnen nur auf Funktionen und Klassen angewendet werden."
                                        } else {
                                          const x$39 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
                                          if (((x$39 === null) ? (msg === null) : x$39.equals__O__Z(msg))) {
                                            return "'%s'-Definition kann nicht innerhalb einer Schleife sein."
                                          } else {
                                            const x$41 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
                                            if (((x$41 === null) ? (msg === null) : x$41.equals__O__Z(msg))) {
                                              return "Eine '%s'-Struktur kann nur einen einzigen 'else'-Zweig haben."
                                            } else {
                                              const x$43 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED;
                                              if (((x$43 === null) ? (msg === null) : x$43.equals__O__Z(msg))) {
                                                return "Hier braucht es ein doppeltes Gleichheitszeichen '=='."
                                              } else {
                                                const x$45 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES;
                                                if (((x$45 === null) ? (msg === null) : x$45.equals__O__Z(msg))) {
                                                  return "Zwei Parameter k\u00f6nnen nicht den gleichen Namen haben: '%s'"
                                                } else {
                                                  const x$47 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED;
                                                  if (((x$47 === null) ? (msg === null) : x$47.equals__O__Z(msg))) {
                                                    return "'%s' muss gleich einger\u00fcckt sein wie 'if'"
                                                  } else {
                                                    const x$49 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON;
                                                    if (((x$49 === null) ? (msg === null) : x$49.equals__O__Z(msg))) {
                                                      return "'else' steht immer ohne eine Bedingung."
                                                    } else {
                                                      const x$51 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                                      if (((x$51 === null) ? (msg === null) : x$51.equals__O__Z(msg))) {
                                                        return "Da steht ein '%s' ohne das zugeh\u00f6rige 'if'"
                                                      } else {
                                                        const x$53 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT;
                                                        if (((x$53 === null) ? (msg === null) : x$53.equals__O__Z(msg))) {
                                                          return "Der Index-Zugriff '[]' darf nicht leer sein."
                                                        } else {
                                                          const x$55 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION;
                                                          if (((x$55 === null) ? (msg === null) : x$55.equals__O__Z(msg))) {
                                                            return "Unerlaubte (zus\u00e4tzliche) Einr\u00fcckung."
                                                          } else {
                                                            const x$57 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
                                                            if (((x$57 === null) ? (msg === null) : x$57.equals__O__Z(msg))) {
                                                              return "Hier scheint es einen unbeabsichtigten Zeilenwechsel zu haben."
                                                            } else {
                                                              const x$59 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
                                                              if (((x$59 === null) ? (msg === null) : x$59.equals__O__Z(msg))) {
                                                                return "Diese \u00f6ffnende Klammer hat kein Gegenst\u00fcck: '%s'."
                                                              } else {
                                                                const x$61 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
                                                                if (((x$61 === null) ? (msg === null) : x$61.equals__O__Z(msg))) {
                                                                  return "Diese schliessende Klammer hat kein Gegenst\u00fcck: '%s'."
                                                                } else {
                                                                  const x$63 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                                                                  if (((x$63 === null) ? (msg === null) : x$63.equals__O__Z(msg))) {
                                                                    return "Unerlaubter (zus\u00e4tzlicher) Abstand."
                                                                  } else {
                                                                    const x$65 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA;
                                                                    if (((x$65 === null) ? (msg === null) : x$65.equals__O__Z(msg))) {
                                                                      return "Unerlaubter Abstand oder fehlendes Komma."
                                                                    } else {
                                                                      const x$67 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                                                      if (((x$67 === null) ? (msg === null) : x$67.equals__O__Z(msg))) {
                                                                        return "Das Symbol '%s' scheint hier zu viel zu sein."
                                                                      } else {
                                                                        const x$69 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD;
                                                                        if (((x$69 === null) ? (msg === null) : x$69.equals__O__Z(msg))) {
                                                                          return "'%s' is in Python kein Schl\u00fcsselwort."
                                                                        } else {
                                                                          const x$71 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE;
                                                                          if (((x$71 === null) ? (msg === null) : x$71.equals__O__Z(msg))) {
                                                                            return "Unerlaubts Symbol: '%s', verwende den Unterstrich '_', um eine Funktion als 'private' zu markieren."
                                                                          } else {
                                                                            const x$73 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                                                                            if (((x$73 === null) ? (msg === null) : x$73.equals__O__Z(msg))) {
                                                                              return "Python hat keine '%s'-Anweisung."
                                                                            } else {
                                                                              const x$75 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                                                              if (((x$75 === null) ? (msg === null) : x$75.equals__O__Z(msg))) {
                                                                                return "Diese %s-Syntax ist in Python ung\u00fcltig."
                                                                              } else {
                                                                                const x$77 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
                                                                                if (((x$77 === null) ? (msg === null) : x$77.equals__O__Z(msg))) {
                                                                                  return "Unerlaubtes Symbol: '%s', verwende stattdessen '%s'"
                                                                                } else {
                                                                                  const x$79 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                                                                                  if (((x$79 === null) ? (msg === null) : x$79.equals__O__Z(msg))) {
                                                                                    return "Python verwendet kein '%s', um Variablen zu definieren."
                                                                                  } else {
                                                                                    const x$81 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
                                                                                    if (((x$81 === null) ? (msg === null) : x$81.equals__O__Z(msg))) {
                                                                                      return "Die 'for'-Schleife braucht eine Variable nach dem 'for'."
                                                                                    } else {
                                                                                      const x$83 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST;
                                                                                      if (((x$83 === null) ? (msg === null) : x$83.equals__O__Z(msg))) {
                                                                                        return "Die Anweisung 'from __future__ import ...' muss als erste Anweisung im Modul stehen."
                                                                                      } else {
                                                                                        const x$85 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE;
                                                                                        if (((x$85 === null) ? (msg === null) : x$85.equals__O__Z(msg))) {
                                                                                          return "Ein Generator kann keine Werte mit 'return' zur\u00fcckgeben."
                                                                                        } else {
                                                                                          const x$87 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
                                                                                          if (((x$87 === null) ? (msg === null) : x$87.equals__O__Z(msg))) {
                                                                                            return "'%s'-Anweisungen m\u00fcssen in einer Funktion zuerst stehen."
                                                                                          } else {
                                                                                            const x$89 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
                                                                                            if (((x$89 === null) ? (msg === null) : x$89.equals__O__Z(msg))) {
                                                                                              return "Eine '%s'-Anweisung kann nicht ausserhalb einer Funktion stehen."
                                                                                            } else {
                                                                                              const x$91 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP;
                                                                                              if (((x$91 === null) ? (msg === null) : x$91.equals__O__Z(msg))) {
                                                                                                return "'import'-Anweisungen d\u00fcrfen nicht in einer Schleife stehen."
                                                                                              } else {
                                                                                                const x$93 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT;
                                                                                                if (((x$93 === null) ? (msg === null) : x$93.equals__O__Z(msg))) {
                                                                                                  return "Unvollst\u00e4ndige 'import'-Anweisung."
                                                                                                } else {
                                                                                                  const x$95 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
                                                                                                  if (((x$95 === null) ? (msg === null) : x$95.equals__O__Z(msg))) {
                                                                                                    return "Die Einr\u00fcckung ist nicht einheitlich."
                                                                                                  } else {
                                                                                                    const x$97 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS;
                                                                                                    if (((x$97 === null) ? (msg === null) : x$97.equals__O__Z(msg))) {
                                                                                                      return "Die 'return'-Anweisungen sind nicht einheitlich."
                                                                                                    } else {
                                                                                                      const x$99 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                                                                                      if (((x$99 === null) ? (msg === null) : x$99.equals__O__Z(msg))) {
                                                                                                        return "Dieses '%s' ist zu stark einger\u00fcckt."
                                                                                                      } else {
                                                                                                        const x$101 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
                                                                                                        if (((x$101 === null) ? (msg === null) : x$101.equals__O__Z(msg))) {
                                                                                                          return "Unendliche Schleife: Diese Schleife h\u00f6rt nie auf."
                                                                                                        } else {
                                                                                                          const x$103 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                                                                                                          if (((x$103 === null) ? (msg === null) : x$103.equals__O__Z(msg))) {
                                                                                                            return "Die Variablen-Initialisierung muss vor der Schleife stehen."
                                                                                                          } else {
                                                                                                            const x$105 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                                                                                                            if (((x$105 === null) ? (msg === null) : x$105.equals__O__Z(msg))) {
                                                                                                              return "Kann nicht etwas zu '%s' zuweisen."
                                                                                                            } else {
                                                                                                              const x$107 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET;
                                                                                                              if (((x$107 === null) ? (msg === null) : x$107.equals__O__Z(msg))) {
                                                                                                                return "Dieser Ausdruck kann nicht als Ziel f\u00fcr eine erweiterte Zuweisung auftreten."
                                                                                                              } else {
                                                                                                                const x$109 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
                                                                                                                if (((x$109 === null) ? (msg === null) : x$109.equals__O__Z(msg))) {
                                                                                                                  return "Ung\u00fcltige Definition einer Funktion."
                                                                                                                } else {
                                                                                                                  const x$111 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN;
                                                                                                                  if (((x$111 === null) ? (msg === null) : x$111.equals__O__Z(msg))) {
                                                                                                                    return "Verwende ':' und 'return' anstelle der Zuweisung."
                                                                                                                  } else {
                                                                                                                    const x$113 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG;
                                                                                                                    if (((x$113 === null) ? (msg === null) : x$113.equals__O__Z(msg))) {
                                                                                                                      return "Ein 'generator/comprehension' kann nicht mit anderen Argumenten kombiniert werden."
                                                                                                                    } else {
                                                                                                                      const x$115 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
                                                                                                                      if (((x$115 === null) ? (msg === null) : x$115.equals__O__Z(msg))) {
                                                                                                                        return "Ung\u00fcltiges Zeichen: '%s'"
                                                                                                                      } else {
                                                                                                                        const x$117 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                                                                                                                        if (((x$117 === null) ? (msg === null) : x$117.equals__O__Z(msg))) {
                                                                                                                          return "Ung\u00fcltiges Schl\u00fcssel-Wert-Paar"
                                                                                                                        } else {
                                                                                                                          const x$119 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
                                                                                                                          if (((x$119 === null) ? (msg === null) : x$119.equals__O__Z(msg))) {
                                                                                                                            return "Ung\u00fcltiger Name: '%s'"
                                                                                                                          } else {
                                                                                                                            const x$121 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX;
                                                                                                                            if (((x$121 === null) ? (msg === null) : x$121.equals__O__Z(msg))) {
                                                                                                                              return "Ung\u00fcltiges String-Prefix: '%s'."
                                                                                                                            } else {
                                                                                                                              const x$123 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE;
                                                                                                                              if (((x$123 === null) ? (msg === null) : x$123.equals__O__Z(msg))) {
                                                                                                                                return "Ung\u00fcltiges Zeichen am Anfang der Zeile: '%s'"
                                                                                                                              } else {
                                                                                                                                const x$125 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                                                                                                                                if (((x$125 === null) ? (msg === null) : x$125.equals__O__Z(msg))) {
                                                                                                                                  return "Methoden brauchen einen 'self'-Parameter."
                                                                                                                                } else {
                                                                                                                                  const x$127 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET;
                                                                                                                                  if (((x$127 === null) ? (msg === null) : x$127.equals__O__Z(msg))) {
                                                                                                                                    return "Fehlerhafte Klammerung: An dieser Stelle braucht es '%s' anstatt '%s'"
                                                                                                                                  } else {
                                                                                                                                    const x$129 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN;
                                                                                                                                    if (((x$129 === null) ? (msg === null) : x$129.equals__O__Z(msg))) {
                                                                                                                                      return "Die Zuweisung '%s' kann nicht Teil eines Ausdrucks sein."
                                                                                                                                    } else {
                                                                                                                                      const x$131 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT;
                                                                                                                                      if (((x$131 === null) ? (msg === null) : x$131.equals__O__Z(msg))) {
                                                                                                                                        return "Da scheint eine Zuweisung zu fehlen."
                                                                                                                                      } else {
                                                                                                                                        const x$133 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE;
                                                                                                                                        if (((x$133 === null) ? (msg === null) : x$133.equals__O__Z(msg))) {
                                                                                                                                          return "Dieser Zuweisung fehlt ein Wert."
                                                                                                                                        } else {
                                                                                                                                          const x$135 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY;
                                                                                                                                          if (((x$135 === null) ? (msg === null) : x$135.equals__O__Z(msg))) {
                                                                                                                                            return "Hier fehlt der Code-Block oder er ist nicht korrekt einger\u00fcckt."
                                                                                                                                          } else {
                                                                                                                                            const x$137 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
                                                                                                                                            if (((x$137 === null) ? (msg === null) : x$137.equals__O__Z(msg))) {
                                                                                                                                              return "Hier scheint ein Komma ',' zu fehlen."
                                                                                                                                            } else {
                                                                                                                                              const x$139 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
                                                                                                                                              if (((x$139 === null) ? (msg === null) : x$139.equals__O__Z(msg))) {
                                                                                                                                                return "Hier fehlt ein Vergleich."
                                                                                                                                              } else {
                                                                                                                                                const x$141 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT;
                                                                                                                                                if (((x$141 === null) ? (msg === null) : x$141.equals__O__Z(msg))) {
                                                                                                                                                  return "Da scheint ein Punkt '.' zu fehlen."
                                                                                                                                                } else {
                                                                                                                                                  const x$143 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET;
                                                                                                                                                  if (((x$143 === null) ? (msg === null) : x$143.equals__O__Z(msg))) {
                                                                                                                                                    return "Fehlende \u00f6ffnende Klammer: '%s'"
                                                                                                                                                  } else {
                                                                                                                                                    const x$145 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS;
                                                                                                                                                    if (((x$145 === null) ? (msg === null) : x$145.equals__O__Z(msg))) {
                                                                                                                                                      return "Fehlende \u00f6ffnende Klammer."
                                                                                                                                                    } else {
                                                                                                                                                      const x$147 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA;
                                                                                                                                                      if (((x$147 === null) ? (msg === null) : x$147.equals__O__Z(msg))) {
                                                                                                                                                        return "Fehlender Operator oder Komma."
                                                                                                                                                      } else {
                                                                                                                                                        const x$149 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES;
                                                                                                                                                        if (((x$149 === null) ? (msg === null) : x$149.equals__O__Z(msg))) {
                                                                                                                                                          return "Da scheinen Klammern zu fehlen."
                                                                                                                                                        } else {
                                                                                                                                                          const x$151 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
                                                                                                                                                          if (((x$151 === null) ? (msg === null) : x$151.equals__O__Z(msg))) {
                                                                                                                                                            return "Fehlende schliessende Klammer: '%s'"
                                                                                                                                                          } else {
                                                                                                                                                            const x$153 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                                                                                                                            if (((x$153 === null) ? (msg === null) : x$153.equals__O__Z(msg))) {
                                                                                                                                                              return "Fehlender Abstand."
                                                                                                                                                            } else {
                                                                                                                                                              const x$155 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
                                                                                                                                                              if (((x$155 === null) ? (msg === null) : x$155.equals__O__Z(msg))) {
                                                                                                                                                                return "Hier fehlt ein '%s'."
                                                                                                                                                              } else {
                                                                                                                                                                const x$157 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                                                                                                                                                if (((x$157 === null) ? (msg === null) : x$157.equals__O__Z(msg))) {
                                                                                                                                                                  return "Falsch geschriebenes Schl\u00fcsselwort: '%s' anstelle von '%s'."
                                                                                                                                                                } else {
                                                                                                                                                                  const x$159 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER;
                                                                                                                                                                  if (((x$159 === null) ? (msg === null) : x$159.equals__O__Z(msg))) {
                                                                                                                                                                    return "In dieser Zahl hat es offenbar einen Tippfehler."
                                                                                                                                                                  } else {
                                                                                                                                                                    const x$161 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
                                                                                                                                                                    if (((x$161 === null) ? (msg === null) : x$161.equals__O__Z(msg))) {
                                                                                                                                                                      return "Falsch geschriebener Operator: '%s' anstelle von '%s'."
                                                                                                                                                                    } else {
                                                                                                                                                                      const x$163 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS;
                                                                                                                                                                      if (((x$163 === null) ? (msg === null) : x$163.equals__O__Z(msg))) {
                                                                                                                                                                        return "Es darf nur ein entpackendes Argument vorkommen."
                                                                                                                                                                      } else {
                                                                                                                                                                        const x$165 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
                                                                                                                                                                        if (((x$165 === null) ? (msg === null) : x$165.equals__O__Z(msg))) {
                                                                                                                                                                          return "Es darf nur ein entpackender Parameter vorkommen."
                                                                                                                                                                        } else {
                                                                                                                                                                          const x$167 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
                                                                                                                                                                          if (((x$167 === null) ? (msg === null) : x$167.equals__O__Z(msg))) {
                                                                                                                                                                            return "Hier wird ein Name erwartet."
                                                                                                                                                                          } else {
                                                                                                                                                                            const x$169 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
                                                                                                                                                                            if (((x$169 === null) ? (msg === null) : x$169.equals__O__Z(msg))) {
                                                                                                                                                                              return "Python braucht kein 'end'."
                                                                                                                                                                            } else {
                                                                                                                                                                              const x$171 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED;
                                                                                                                                                                              if (((x$171 === null) ? (msg === null) : x$171.equals__O__Z(msg))) {
                                                                                                                                                                                return "Entpackende Parameter k\u00f6nnen keine Standardwerte haben."
                                                                                                                                                                              } else {
                                                                                                                                                                                const x$173 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
                                                                                                                                                                                if (((x$173 === null) ? (msg === null) : x$173.equals__O__Z(msg))) {
                                                                                                                                                                                  return "Hier finde ich keine M\u00f6glichkeit mehr, den Code zu verstehen: '%s'"
                                                                                                                                                                                } else {
                                                                                                                                                                                  const x$175 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE;
                                                                                                                                                                                  if (((x$175 === null) ? (msg === null) : x$175.equals__O__Z(msg))) {
                                                                                                                                                                                    return "Eine Zahl kann keinen Index haben."
                                                                                                                                                                                  } else {
                                                                                                                                                                                    const x$177 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM;
                                                                                                                                                                                    if (((x$177 === null) ? (msg === null) : x$177.equals__O__Z(msg))) {
                                                                                                                                                                                      return "Der entpackende Schl\u00fcsselwert-Parameter muss zuletzt kommen."
                                                                                                                                                                                    } else {
                                                                                                                                                                                      const x$179 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED;
                                                                                                                                                                                      if (((x$179 === null) ? (msg === null) : x$179.equals__O__Z(msg))) {
                                                                                                                                                                                        return "Parameter erwartet aber '%s' gefunden."
                                                                                                                                                                                      } else {
                                                                                                                                                                                        const x$181 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD;
                                                                                                                                                                                        if (((x$181 === null) ? (msg === null) : x$181.equals__O__Z(msg))) {
                                                                                                                                                                                          return "Positionsbezogene Argumente k\u00f6nnen nicht nach Schl\u00fcsselwert-Argumenten stehen."
                                                                                                                                                                                        } else {
                                                                                                                                                                                          const x$183 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD;
                                                                                                                                                                                          if (((x$183 === null) ? (msg === null) : x$183.equals__O__Z(msg))) {
                                                                                                                                                                                            return "Parameter ohne Standardwert k\u00f6nnen nicht nach solchen mit Standardwert oder entpackenden Parameter stehen."
                                                                                                                                                                                          } else {
                                                                                                                                                                                            const x$185 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED;
                                                                                                                                                                                            if (((x$185 === null) ? (msg === null) : x$185.equals__O__Z(msg))) {
                                                                                                                                                                                              return "Nach '>>' ein g\u00fcltiges Ausgabe-Ziel stehen."
                                                                                                                                                                                            } else {
                                                                                                                                                                                              const x$187 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT;
                                                                                                                                                                                              if (((x$187 === null) ? (msg === null) : x$187.equals__O__Z(msg))) {
                                                                                                                                                                                                return "In Python 2.x ist 'print' eine Anweisung und kann nicht mit Schl\u00fcsselw\u00f6rtern aufgerufen werden."
                                                                                                                                                                                              } else {
                                                                                                                                                                                                const x$189 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES;
                                                                                                                                                                                                if (((x$189 === null) ? (msg === null) : x$189.equals__O__Z(msg))) {
                                                                                                                                                                                                  return "In Python 3.x ist 'print' eine Funktion und ben\u00f6tigt Klammern."
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  const x$191 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                  if (((x$191 === null) ? (msg === null) : x$191.equals__O__Z(msg))) {
                                                                                                                                                                                                    return "Dieses Feature von Python 2.x ist nicht verf\u00fcgbar."
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    const x$193 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                    if (((x$193 === null) ? (msg === null) : x$193.equals__O__Z(msg))) {
                                                                                                                                                                                                      return "Dieses Feature von Python 3.x ist nicht verf\u00fcgbar."
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      const x$195 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK;
                                                                                                                                                                                                      if (((x$195 === null) ? (msg === null) : x$195.equals__O__Z(msg))) {
                                                                                                                                                                                                        return "Verwende 'return' anstelle von 'break', um eine Funktion zu verlassen."
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        const x$197 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION;
                                                                                                                                                                                                        if (((x$197 === null) ? (msg === null) : x$197.equals__O__Z(msg))) {
                                                                                                                                                                                                          return "Eine 'return'-Anweisung kann nicht ausserhalb einer Funktion stehen."
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          const x$199 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED;
                                                                                                                                                                                                          if (((x$199 === null) ? (msg === null) : x$199.equals__O__Z(msg))) {
                                                                                                                                                                                                            return "Verwende ein einzelnes Gleichheitszeichen '=' f\u00fcr Zuweisungen."
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            const x$201 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                                                                                                                                                                                                            if (((x$201 === null) ? (msg === null) : x$201.equals__O__Z(msg))) {
                                                                                                                                                                                                              return "Der Vergleich mit '%s' ist hier \u00fcberfl\u00fcssig."
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              const x$203 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
                                                                                                                                                                                                              if (((x$203 === null) ? (msg === null) : x$203.equals__O__Z(msg))) {
                                                                                                                                                                                                                return "Diese beiden Symbole sind hier vertauscht: '%s' und '%s'."
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                const x$205 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
                                                                                                                                                                                                                if (((x$205 === null) ? (msg === null) : x$205.equals__O__Z(msg))) {
                                                                                                                                                                                                                  return "Hier braucht es ein '%s' anstelle von '%s'."
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  const x$207 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TWO_STATEMENTS;
                                                                                                                                                                                                                  if (((x$207 === null) ? (msg === null) : x$207.equals__O__Z(msg))) {
                                                                                                                                                                                                                    return "Du kannst nicht zwei Anweisungen auf eine Zeile schreiben."
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    const x$209 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
                                                                                                                                                                                                                    if (((x$209 === null) ? (msg === null) : x$209.equals__O__Z(msg))) {
                                                                                                                                                                                                                      return "Dieses Tuple muss in Klammern eingeschlossen werden."
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      const x$211 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
                                                                                                                                                                                                                      if (((x$211 === null) ? (msg === null) : x$211.equals__O__Z(msg))) {
                                                                                                                                                                                                                        return "\u00dcberraschendes Ende der Zeile oder des ganzen Programms."
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        const x$213 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
                                                                                                                                                                                                                        if (((x$213 === null) ? (msg === null) : x$213.equals__O__Z(msg))) {
                                                                                                                                                                                                                          return "Das Schl\u00fcsselwort '%s' kann an dieser Stelle nicht auftreten."
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          const x$215 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET;
                                                                                                                                                                                                                          if (((x$215 === null) ? (msg === null) : x$215.equals__O__Z(msg))) {
                                                                                                                                                                                                                            return "Zu dieser \u00f6ffnenden Klammer '%s' fehlt die schliessende Klammer."
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            const x$217 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE;
                                                                                                                                                                                                                            if (((x$217 === null) ? (msg === null) : x$217.equals__O__Z(msg))) {
                                                                                                                                                                                                                              return "Unerreichbarer Code."
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              const x$219 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
                                                                                                                                                                                                                              if (((x$219 === null) ? (msg === null) : x$219.equals__O__Z(msg))) {
                                                                                                                                                                                                                                return "Nicht abgeschlossener String."
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                const x$221 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA;
                                                                                                                                                                                                                                if (((x$221 === null) ? (msg === null) : x$221.equals__O__Z(msg))) {
                                                                                                                                                                                                                                  return "Mehrere Vergleiche werden mit 'and' oder 'or' kombiniert, nicht mit einem Komma."
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  const x$223 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND;
                                                                                                                                                                                                                                  if (((x$223 === null) ? (msg === null) : x$223.equals__O__Z(msg))) {
                                                                                                                                                                                                                                    return "Mehrere Werte werden durch Komma getrennt und nicht durch 'and'."
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    const x$225 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE;
                                                                                                                                                                                                                                    if (((x$225 === null) ? (msg === null) : x$225.equals__O__Z(msg))) {
                                                                                                                                                                                                                                      return "Verwende 'elif' anstelle von 'else'."
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      const x$227 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF;
                                                                                                                                                                                                                                      if (((x$227 === null) ? (msg === null) : x$227.equals__O__Z(msg))) {
                                                                                                                                                                                                                                        return "Verwende 'elif' anstelle von 'else if'."
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        const x$229 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ;
                                                                                                                                                                                                                                        if (((x$229 === null) ? (msg === null) : x$229.equals__O__Z(msg))) {
                                                                                                                                                                                                                                          return "Verwende '== %s' anstelle von '!= %s'."
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          const x$231 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV;
                                                                                                                                                                                                                                          if (((x$231 === null) ? (msg === null) : x$231.equals__O__Z(msg))) {
                                                                                                                                                                                                                                            return "Verwende '%%' anstelle von '/', um die Teilbarkeit zu pr\u00fcfen."
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            const x$233 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                                                                                                                                                                                                                                            if (((x$233 === null) ? (msg === null) : x$233.equals__O__Z(msg))) {
                                                                                                                                                                                                                                              return "Verwende 'not' anstelle eines Vergleichs mit '%s'."
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              const x$235 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE;
                                                                                                                                                                                                                                              if (((x$235 === null) ? (msg === null) : x$235.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                return "Verwende 'repeat' anstelle von 'while'."
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                const x$237 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION;
                                                                                                                                                                                                                                                if (((x$237 === null) ? (msg === null) : x$237.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                  return "Das Resultat dieses Ausdrucks wird nie verwendet."
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  const x$239 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
                                                                                                                                                                                                                                                  if (((x$239 === null) ? (msg === null) : x$239.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                    return "Diese Anweisung scheint keine Wirkung zu haben."
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    const x$241 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN;
                                                                                                                                                                                                                                                    if (((x$241 === null) ? (msg === null) : x$241.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                      return "Diese Anweisung scheint keine Wirkung zu haben. Meinst du vielleicht '%s='?"
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      const x$243 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG;
                                                                                                                                                                                                                                                      if (((x$243 === null) ? (msg === null) : x$243.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                        return "Das entpackende VAR-argument muss vor dem entpackenden Schl\u00fcsselwert-Argument stehen."
                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                        const x$245 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED;
                                                                                                                                                                                                                                                        if (((x$245 === null) ? (msg === null) : x$245.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                          return "Entpackende Argumente sind an dieser Stelle nicht erlaubt."
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                          const x$247 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET;
                                                                                                                                                                                                                                                          if (((x$247 === null) ? (msg === null) : x$247.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                            return "Falsche Klammer: hier braucht es eine '%s' anstelle von '%s'"
                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                            const x$249 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN;
                                                                                                                                                                                                                                                            if (((x$249 === null) ? (msg === null) : x$249.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                              return "Falsches Symbol: anstelle von '%s' sollte hier '%s' stehen."
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                              const x$251 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION;
                                                                                                                                                                                                                                                              if (((x$251 === null) ? (msg === null) : x$251.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                                return "Ein 'yield'-Ausdruck kann nicht ausserhalb einer Funktion stehen."
                                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_errormessages_GermanMessages$ = new $TypeData().initClass({
  Ltigerpython_parser_errormessages_GermanMessages$: 0
}, false, "tigerpython.parser.errormessages.GermanMessages$", {
  Ltigerpython_parser_errormessages_GermanMessages$: 1,
  Ltigerpython_parser_errormessages_ModifiableErrorMessages: 1,
  O: 1
});
$c_Ltigerpython_parser_errormessages_GermanMessages$.prototype.$classData = $d_Ltigerpython_parser_errormessages_GermanMessages$;
let $n_Ltigerpython_parser_errormessages_GermanMessages$ = (void 0);
function $m_Ltigerpython_parser_errormessages_GermanMessages$() {
  if ((!$n_Ltigerpython_parser_errormessages_GermanMessages$)) {
    $n_Ltigerpython_parser_errormessages_GermanMessages$ = new $c_Ltigerpython_parser_errormessages_GermanMessages$()
  };
  return $n_Ltigerpython_parser_errormessages_GermanMessages$
}
class $c_Ltigerpython_parser_errormessages_ItalianMessages$ extends $c_Ltigerpython_parser_errormessages_ModifiableErrorMessages {
  constructor() {
    super();
    $ct_Ltigerpython_parser_errormessages_ModifiableErrorMessages__(this)
  };
  _getMessage__s_Enumeration$Value__T(msg) {
    const x = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
    if (((x === null) ? (msg === null) : x.equals__O__Z(msg))) {
      return "'%s' connette comparazioni, non variabili."
    } else {
      const x$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS;
      if (((x$3 === null) ? (msg === null) : x$3.equals__O__Z(msg))) {
        return "Non puoi passare ulteriori argomenti dopo un argomento spacchettante."
      } else {
        const x$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE;
        if (((x$5 === null) ? (msg === null) : x$5.equals__O__Z(msg))) {
          return "'as' non \u00e8 permesso/supportato qui."
        } else {
          const x$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
          if (((x$7 === null) ? (msg === null) : x$7.equals__O__Z(msg))) {
            return "Il target dell'assegnamento deve essere sulla sinistra."
          } else {
            const x$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN;
            if (((x$9 === null) ? (msg === null) : x$9.equals__O__Z(msg))) {
              return "Usa 'break' invece di 'return' per uscire da un ciclo."
            } else {
              const x$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
              if (((x$11 === null) ? (msg === null) : x$11.equals__O__Z(msg))) {
                return "Non si pu\u00f2 usare un'istruzione '%s' fuori da un ciclo."
              } else {
                const x$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES;
                if (((x$13 === null) ? (msg === null) : x$13.equals__O__Z(msg))) {
                  return "Per invocare una funzione devi usare le parentesi anche quando sono vuote."
                } else {
                  const x$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC;
                  if (((x$15 === null) ? (msg === null) : x$15.equals__O__Z(msg))) {
                    return "Non \u00e8 possibile applicare 'async' a questa istruzione."
                  } else {
                    const x$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL;
                    if (((x$17 === null) ? (msg === null) : x$17.equals__O__Z(msg))) {
                      return "Non puoi assegnare qualcosa ad un'invocazione."
                    } else {
                      const x$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION;
                      if (((x$19 === null) ? (msg === null) : x$19.equals__O__Z(msg))) {
                        return "Non puoi assegnare qualcosa ad una funzione."
                      } else {
                        const x$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
                        if (((x$21 === null) ? (msg === null) : x$21.equals__O__Z(msg))) {
                          return "Il nome '%s' \u00e8 gi\u00e0 definito."
                        } else {
                          const x$23 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE;
                          if (((x$23 === null) ? (msg === null) : x$23.equals__O__Z(msg))) {
                            return "Devi testare ogni elemento di questa tupla individualmente."
                          } else {
                            const x$25 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                            if (((x$25 === null) ? (msg === null) : x$25.equals__O__Z(msg))) {
                              return "Non puoi usare la parola chiave '%s' come un nome."
                            } else {
                              const x$27 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF;
                              if (((x$27 === null) ? (msg === null) : x$27.equals__O__Z(msg))) {
                                return "Un metodo di classe richiede almeno un parametro."
                              } else {
                                const x$29 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED;
                                if (((x$29 === null) ? (msg === null) : x$29.equals__O__Z(msg))) {
                                  return "Due punti ':' sono necessari qui."
                                } else {
                                  const x$31 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                                  if (((x$31 === null) ? (msg === null) : x$31.equals__O__Z(msg))) {
                                    return "Questa condizione non pu\u00f2 essere soddisfatta."
                                  } else {
                                    const x$33 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
                                    if (((x$33 === null) ? (msg === null) : x$33.equals__O__Z(msg))) {
                                      return "Questa condizione \u00e8 sempre soddisfatta."
                                    } else {
                                      const x$35 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH;
                                      if (((x$35 === null) ? (msg === null) : x$35.equals__O__Z(msg))) {
                                        return "Una funziona e il suo decoratore non possono avere lo stesso nome '%s'."
                                      } else {
                                        const x$37 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE;
                                        if (((x$37 === null) ? (msg === null) : x$37.equals__O__Z(msg))) {
                                          return "Decoratori sono applicabili solo a funzioni e classi."
                                        } else {
                                          const x$39 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
                                          if (((x$39 === null) ? (msg === null) : x$39.equals__O__Z(msg))) {
                                            return "Una definizione '%s' non pu\u00f2 essere in un ciclo."
                                          } else {
                                            const x$41 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
                                            if (((x$41 === null) ? (msg === null) : x$41.equals__O__Z(msg))) {
                                              return "Una struttura '%s' pu\u00f2 avere solo un ramo 'else'."
                                            } else {
                                              const x$43 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED;
                                              if (((x$43 === null) ? (msg === null) : x$43.equals__O__Z(msg))) {
                                                return "Qui \u00e8 richiesto un doppio uguale '=='."
                                              } else {
                                                const x$45 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES;
                                                if (((x$45 === null) ? (msg === null) : x$45.equals__O__Z(msg))) {
                                                  return "Due parametri non possono avere lo stesso nome: '%s'."
                                                } else {
                                                  const x$47 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED;
                                                  if (((x$47 === null) ? (msg === null) : x$47.equals__O__Z(msg))) {
                                                    return "'%s' deve essere indentato quanto 'if'."
                                                  } else {
                                                    const x$49 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON;
                                                    if (((x$49 === null) ? (msg === null) : x$49.equals__O__Z(msg))) {
                                                      return "'else' non ha una comparazione."
                                                    } else {
                                                      const x$51 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                                      if (((x$51 === null) ? (msg === null) : x$51.equals__O__Z(msg))) {
                                                        return "C'\u00e8 un '%s' senza un 'if'."
                                                      } else {
                                                        const x$53 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT;
                                                        if (((x$53 === null) ? (msg === null) : x$53.equals__O__Z(msg))) {
                                                          return "L'indice non pu\u00f2 essere vuoto."
                                                        } else {
                                                          const x$55 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION;
                                                          if (((x$55 === null) ? (msg === null) : x$55.equals__O__Z(msg))) {
                                                            return "C'\u00e8 un indentazione di troppo."
                                                          } else {
                                                            const x$57 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
                                                            if (((x$57 === null) ? (msg === null) : x$57.equals__O__Z(msg))) {
                                                              return "Sembra che ci sia un'interruzione di linea di troppo. Forse vuoi nasconderla usando '\\'."
                                                            } else {
                                                              const x$59 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
                                                              if (((x$59 === null) ? (msg === null) : x$59.equals__O__Z(msg))) {
                                                                return "C'\u00e8 una parentesi aperta di troppo: '%s'."
                                                              } else {
                                                                const x$61 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
                                                                if (((x$61 === null) ? (msg === null) : x$61.equals__O__Z(msg))) {
                                                                  return "C'\u00e8 una parentesi chiusa di troppo: '%s'."
                                                                } else {
                                                                  const x$63 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                                                                  if (((x$63 === null) ? (msg === null) : x$63.equals__O__Z(msg))) {
                                                                    return "C'\u00e8 uno spazio di troppo."
                                                                  } else {
                                                                    const x$65 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA;
                                                                    if (((x$65 === null) ? (msg === null) : x$65.equals__O__Z(msg))) {
                                                                      return "C'\u00e8 uno spazio di troppo o una virgola mancante."
                                                                    } else {
                                                                      const x$67 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                                                      if (((x$67 === null) ? (msg === null) : x$67.equals__O__Z(msg))) {
                                                                        return "C'\u00e8 un token di troppo: '%s'."
                                                                      } else {
                                                                        const x$69 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD;
                                                                        if (((x$69 === null) ? (msg === null) : x$69.equals__O__Z(msg))) {
                                                                          return "'%s' non \u00e8 una parola chiave in Python."
                                                                        } else {
                                                                          const x$71 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE;
                                                                          if (((x$71 === null) ? (msg === null) : x$71.equals__O__Z(msg))) {
                                                                            return "Il token '%s' non \u00e8 valido, usa il trattino basso '_' per marcare la funzione come 'privata'."
                                                                          } else {
                                                                            const x$73 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                                                                            if (((x$73 === null) ? (msg === null) : x$73.equals__O__Z(msg))) {
                                                                              return "Python non ha un istruzione '%s'."
                                                                            } else {
                                                                              const x$75 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                                                              if (((x$75 === null) ? (msg === null) : x$75.equals__O__Z(msg))) {
                                                                                return "La seguente sintassi non \u00e8 valida in Python: %s."
                                                                              } else {
                                                                                const x$77 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
                                                                                if (((x$77 === null) ? (msg === null) : x$77.equals__O__Z(msg))) {
                                                                                  return "Il token '%s' non \u00e8 valido, invece usa '%s'."
                                                                                } else {
                                                                                  const x$79 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                                                                                  if (((x$79 === null) ? (msg === null) : x$79.equals__O__Z(msg))) {
                                                                                    return "Python non usa '%s' per definire variabili."
                                                                                  } else {
                                                                                    const x$81 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
                                                                                    if (((x$81 === null) ? (msg === null) : x$81.equals__O__Z(msg))) {
                                                                                      return "Il ciclo-'for' richiede una variabile."
                                                                                    } else {
                                                                                      const x$83 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST;
                                                                                      if (((x$83 === null) ? (msg === null) : x$83.equals__O__Z(msg))) {
                                                                                        return "L'istruzione 'from __future__ import' deve essere la prima istruzione del modulo."
                                                                                      } else {
                                                                                        const x$85 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE;
                                                                                        if (((x$85 === null) ? (msg === null) : x$85.equals__O__Z(msg))) {
                                                                                          return "Un generatore non pu\u00f2 usare 'return' per restituire un valore."
                                                                                        } else {
                                                                                          const x$87 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
                                                                                          if (((x$87 === null) ? (msg === null) : x$87.equals__O__Z(msg))) {
                                                                                            return "Le istruzioni '%s' devono essere la prime istruzioni all'interno di una funzione."
                                                                                          } else {
                                                                                            const x$89 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
                                                                                            if (((x$89 === null) ? (msg === null) : x$89.equals__O__Z(msg))) {
                                                                                              return "Un'istruzione '%s' non pu\u00f2 essere all'esterno di una funzione."
                                                                                            } else {
                                                                                              const x$91 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP;
                                                                                              if (((x$91 === null) ? (msg === null) : x$91.equals__O__Z(msg))) {
                                                                                                return "Un istruzione 'import' non pu\u00f2 essere all'interno di un ciclo."
                                                                                              } else {
                                                                                                const x$93 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT;
                                                                                                if (((x$93 === null) ? (msg === null) : x$93.equals__O__Z(msg))) {
                                                                                                  return "Questa istruzione 'import' \u00e8 incompleta."
                                                                                                } else {
                                                                                                  const x$95 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
                                                                                                  if (((x$95 === null) ? (msg === null) : x$95.equals__O__Z(msg))) {
                                                                                                    return "L'indentazione \u00e8 inconsistente."
                                                                                                  } else {
                                                                                                    const x$97 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS;
                                                                                                    if (((x$97 === null) ? (msg === null) : x$97.equals__O__Z(msg))) {
                                                                                                      return "Questa funzione ogni tanto ritorna un valore e ogni tanto no."
                                                                                                    } else {
                                                                                                      const x$99 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                                                                                      if (((x$99 === null) ? (msg === null) : x$99.equals__O__Z(msg))) {
                                                                                                        return "Questo '%s' deve essere indentato."
                                                                                                      } else {
                                                                                                        const x$101 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
                                                                                                        if (((x$101 === null) ? (msg === null) : x$101.equals__O__Z(msg))) {
                                                                                                          return "Questo \u00e8 un ciclo infinito: la sua esecuzione non termina mai."
                                                                                                        } else {
                                                                                                          const x$103 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                                                                                                          if (((x$103 === null) ? (msg === null) : x$103.equals__O__Z(msg))) {
                                                                                                            return "Non puoi avere un'inizializzazione all'interno di un ciclo."
                                                                                                          } else {
                                                                                                            const x$105 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                                                                                                            if (((x$105 === null) ? (msg === null) : x$105.equals__O__Z(msg))) {
                                                                                                              return "Non puoi assegnare qualcosa a '%s'."
                                                                                                            } else {
                                                                                                              const x$107 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
                                                                                                              if (((x$107 === null) ? (msg === null) : x$107.equals__O__Z(msg))) {
                                                                                                                return "Definizione di funzione non valida."
                                                                                                              } else {
                                                                                                                const x$109 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN;
                                                                                                                if (((x$109 === null) ? (msg === null) : x$109.equals__O__Z(msg))) {
                                                                                                                  return "Usa ':' e 'return' invece di un assegnamento."
                                                                                                                } else {
                                                                                                                  const x$111 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG;
                                                                                                                  if (((x$111 === null) ? (msg === null) : x$111.equals__O__Z(msg))) {
                                                                                                                    return "Un argomento 'generatore/comprensione' non pu\u00f2 essere combinato con altri argomenti."
                                                                                                                  } else {
                                                                                                                    const x$113 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
                                                                                                                    if (((x$113 === null) ? (msg === null) : x$113.equals__O__Z(msg))) {
                                                                                                                      return "Questo carattere immesso non \u00e8 valido: '%s'."
                                                                                                                    } else {
                                                                                                                      const x$115 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                                                                                                                      if (((x$115 === null) ? (msg === null) : x$115.equals__O__Z(msg))) {
                                                                                                                        return "Questa coppia chiave-valore non \u00e8 valida."
                                                                                                                      } else {
                                                                                                                        const x$117 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
                                                                                                                        if (((x$117 === null) ? (msg === null) : x$117.equals__O__Z(msg))) {
                                                                                                                          return "Questo nome non \u00e8 valido: '%s'."
                                                                                                                        } else {
                                                                                                                          const x$119 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET;
                                                                                                                          if (((x$119 === null) ? (msg === null) : x$119.equals__O__Z(msg))) {
                                                                                                                            return "Questa espressione non \u00e8 un target valido per un assegnamento aumentato."
                                                                                                                          } else {
                                                                                                                            const x$121 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX;
                                                                                                                            if (((x$121 === null) ? (msg === null) : x$121.equals__O__Z(msg))) {
                                                                                                                              return "Questo non \u00e8 un prefisso di stringa valido: '%s'."
                                                                                                                            } else {
                                                                                                                              const x$123 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE;
                                                                                                                              if (((x$123 === null) ? (msg === null) : x$123.equals__O__Z(msg))) {
                                                                                                                                return "Questo token non pu\u00f2 essere all'inizio di una riga: '%s'."
                                                                                                                              } else {
                                                                                                                                const x$125 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                                                                                                                                if (((x$125 === null) ? (msg === null) : x$125.equals__O__Z(msg))) {
                                                                                                                                  return "Un metodo richiede un argomento 'self'."
                                                                                                                                } else {
                                                                                                                                  const x$127 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET;
                                                                                                                                  if (((x$127 === null) ? (msg === null) : x$127.equals__O__Z(msg))) {
                                                                                                                                    return "Ci sono parentesi non corrispondenti: dovrebbe esserci '%s', ma c'\u00e8 '%s'."
                                                                                                                                  } else {
                                                                                                                                    const x$129 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN;
                                                                                                                                    if (((x$129 === null) ? (msg === null) : x$129.equals__O__Z(msg))) {
                                                                                                                                      return "L'assegnamento '%s' non pu\u00f2 avvenire all'interno di un espressione."
                                                                                                                                    } else {
                                                                                                                                      const x$131 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT;
                                                                                                                                      if (((x$131 === null) ? (msg === null) : x$131.equals__O__Z(msg))) {
                                                                                                                                        return "Sembra che manca un assegnamento."
                                                                                                                                      } else {
                                                                                                                                        const x$133 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE;
                                                                                                                                        if (((x$133 === null) ? (msg === null) : x$133.equals__O__Z(msg))) {
                                                                                                                                          return "A questo assegnamento manca un espressione sorgente."
                                                                                                                                        } else {
                                                                                                                                          const x$135 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY;
                                                                                                                                          if (((x$135 === null) ? (msg === null) : x$135.equals__O__Z(msg))) {
                                                                                                                                            return "Manca un corpo o un indentazione."
                                                                                                                                          } else {
                                                                                                                                            const x$137 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
                                                                                                                                            if (((x$137 === null) ? (msg === null) : x$137.equals__O__Z(msg))) {
                                                                                                                                              return "Manca una virgola."
                                                                                                                                            } else {
                                                                                                                                              const x$139 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
                                                                                                                                              if (((x$139 === null) ? (msg === null) : x$139.equals__O__Z(msg))) {
                                                                                                                                                return "Manca una comparazione."
                                                                                                                                              } else {
                                                                                                                                                const x$141 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT;
                                                                                                                                                if (((x$141 === null) ? (msg === null) : x$141.equals__O__Z(msg))) {
                                                                                                                                                  return "Sembra che manca un punto."
                                                                                                                                                } else {
                                                                                                                                                  const x$143 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET;
                                                                                                                                                  if (((x$143 === null) ? (msg === null) : x$143.equals__O__Z(msg))) {
                                                                                                                                                    return "Manca una parentesi aperta: '%s'."
                                                                                                                                                  } else {
                                                                                                                                                    const x$145 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS;
                                                                                                                                                    if (((x$145 === null) ? (msg === null) : x$145.equals__O__Z(msg))) {
                                                                                                                                                      return "Manca una parentesi tonda aperta '('."
                                                                                                                                                    } else {
                                                                                                                                                      const x$147 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA;
                                                                                                                                                      if (((x$147 === null) ? (msg === null) : x$147.equals__O__Z(msg))) {
                                                                                                                                                        return "Manca un operatore o una virgola."
                                                                                                                                                      } else {
                                                                                                                                                        const x$149 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES;
                                                                                                                                                        if (((x$149 === null) ? (msg === null) : x$149.equals__O__Z(msg))) {
                                                                                                                                                          return "Sembra che mancano delle parentesi."
                                                                                                                                                        } else {
                                                                                                                                                          const x$151 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
                                                                                                                                                          if (((x$151 === null) ? (msg === null) : x$151.equals__O__Z(msg))) {
                                                                                                                                                            return "Manca una parentesi chiusa: '%s'."
                                                                                                                                                          } else {
                                                                                                                                                            const x$153 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                                                                                                                            if (((x$153 === null) ? (msg === null) : x$153.equals__O__Z(msg))) {
                                                                                                                                                              return "Manca uno spazio."
                                                                                                                                                            } else {
                                                                                                                                                              const x$155 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
                                                                                                                                                              if (((x$155 === null) ? (msg === null) : x$155.equals__O__Z(msg))) {
                                                                                                                                                                return "Manca '%s'."
                                                                                                                                                              } else {
                                                                                                                                                                const x$157 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                                                                                                                                                if (((x$157 === null) ? (msg === null) : x$157.equals__O__Z(msg))) {
                                                                                                                                                                  return "Parola chiave errata '%s' invece di '%s'."
                                                                                                                                                                } else {
                                                                                                                                                                  const x$159 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER;
                                                                                                                                                                  if (((x$159 === null) ? (msg === null) : x$159.equals__O__Z(msg))) {
                                                                                                                                                                    return "Sembra che ci sia un errore all'interno del tuo numero."
                                                                                                                                                                  } else {
                                                                                                                                                                    const x$161 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
                                                                                                                                                                    if (((x$161 === null) ? (msg === null) : x$161.equals__O__Z(msg))) {
                                                                                                                                                                      return "Operatore errato '%s' invece di '%s'."
                                                                                                                                                                    } else {
                                                                                                                                                                      const x$163 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS;
                                                                                                                                                                      if (((x$163 === null) ? (msg === null) : x$163.equals__O__Z(msg))) {
                                                                                                                                                                        return "\u00c8 permesso un solo argomento spacchettante."
                                                                                                                                                                      } else {
                                                                                                                                                                        const x$165 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
                                                                                                                                                                        if (((x$165 === null) ? (msg === null) : x$165.equals__O__Z(msg))) {
                                                                                                                                                                          return "\u00c8 permesso un solo argomento spacchettante."
                                                                                                                                                                        } else {
                                                                                                                                                                          const x$167 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
                                                                                                                                                                          if (((x$167 === null) ? (msg === null) : x$167.equals__O__Z(msg))) {
                                                                                                                                                                            return "Qui serve un nome."
                                                                                                                                                                          } else {
                                                                                                                                                                            const x$169 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
                                                                                                                                                                            if (((x$169 === null) ? (msg === null) : x$169.equals__O__Z(msg))) {
                                                                                                                                                                              return "In Python non serve 'end', e non \u00e8 nemmeno permesso."
                                                                                                                                                                            } else {
                                                                                                                                                                              const x$171 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED;
                                                                                                                                                                              if (((x$171 === null) ? (msg === null) : x$171.equals__O__Z(msg))) {
                                                                                                                                                                                return "Un argomento spacchettante non pu\u00f2 avere un valore default."
                                                                                                                                                                              } else {
                                                                                                                                                                                const x$173 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
                                                                                                                                                                                if (((x$173 === null) ? (msg === null) : x$173.equals__O__Z(msg))) {
                                                                                                                                                                                  return "Non esiste nessun alternativa sensata: '%s'."
                                                                                                                                                                                } else {
                                                                                                                                                                                  const x$175 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE;
                                                                                                                                                                                  if (((x$175 === null) ? (msg === null) : x$175.equals__O__Z(msg))) {
                                                                                                                                                                                    return "Un numero non pu\u00f2 avere un indice."
                                                                                                                                                                                  } else {
                                                                                                                                                                                    const x$177 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM;
                                                                                                                                                                                    if (((x$177 === null) ? (msg === null) : x$177.equals__O__Z(msg))) {
                                                                                                                                                                                      return "L'argomento spacchettante deve essere alla fine."
                                                                                                                                                                                    } else {
                                                                                                                                                                                      const x$179 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED;
                                                                                                                                                                                      if (((x$179 === null) ? (msg === null) : x$179.equals__O__Z(msg))) {
                                                                                                                                                                                        return "Sono richiesti dei parametri, ma si \u00e8 trovato '%s'."
                                                                                                                                                                                      } else {
                                                                                                                                                                                        const x$181 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD;
                                                                                                                                                                                        if (((x$181 === null) ? (msg === null) : x$181.equals__O__Z(msg))) {
                                                                                                                                                                                          return "Argomenti posizionali non possono essere dopo argomenti con parola chiave."
                                                                                                                                                                                        } else {
                                                                                                                                                                                          const x$183 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD;
                                                                                                                                                                                          if (((x$183 === null) ? (msg === null) : x$183.equals__O__Z(msg))) {
                                                                                                                                                                                            return "Parametri senza defaults non possono essere dopo parametri con valori default o spacchettanti"
                                                                                                                                                                                          } else {
                                                                                                                                                                                            const x$185 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED;
                                                                                                                                                                                            if (((x$185 === null) ? (msg === null) : x$185.equals__O__Z(msg))) {
                                                                                                                                                                                              return "'>>' deve essere seguito da un target valido."
                                                                                                                                                                                            } else {
                                                                                                                                                                                              const x$187 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT;
                                                                                                                                                                                              if (((x$187 === null) ? (msg === null) : x$187.equals__O__Z(msg))) {
                                                                                                                                                                                                return "In Python 2.x 'print' \u00e8 un'istruzione e non pu\u00f2 essere invocata con argomenti con parola chiave."
                                                                                                                                                                                              } else {
                                                                                                                                                                                                const x$189 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES;
                                                                                                                                                                                                if (((x$189 === null) ? (msg === null) : x$189.equals__O__Z(msg))) {
                                                                                                                                                                                                  return "In Python 3.x 'print' \u00e8 una funzione e richiede parentesi."
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  const x$191 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                  if (((x$191 === null) ? (msg === null) : x$191.equals__O__Z(msg))) {
                                                                                                                                                                                                    return "Questa funzionalit\u00e0 da Python 2.x non \u00e8 disponibile."
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    const x$193 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                    if (((x$193 === null) ? (msg === null) : x$193.equals__O__Z(msg))) {
                                                                                                                                                                                                      return "Questa funzionalit\u00e0 da Python 3.x non \u00e8 disponibile."
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      const x$195 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK;
                                                                                                                                                                                                      if (((x$195 === null) ? (msg === null) : x$195.equals__O__Z(msg))) {
                                                                                                                                                                                                        return "Usa 'return' invece di 'break' per uscire da una funzione."
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        const x$197 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION;
                                                                                                                                                                                                        if (((x$197 === null) ? (msg === null) : x$197.equals__O__Z(msg))) {
                                                                                                                                                                                                          return "Un'istruzione 'return' non pu\u00f2 essere all'esterno di una funzione."
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          const x$199 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED;
                                                                                                                                                                                                          if (((x$199 === null) ? (msg === null) : x$199.equals__O__Z(msg))) {
                                                                                                                                                                                                            return "Usa un singolo uguale '=' per assegnamenti."
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            const x$201 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                                                                                                                                                                                                            if (((x$201 === null) ? (msg === null) : x$201.equals__O__Z(msg))) {
                                                                                                                                                                                                              return "La comparazione con '%s' \u00e8 superflua qui."
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              const x$203 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
                                                                                                                                                                                                              if (((x$203 === null) ? (msg === null) : x$203.equals__O__Z(msg))) {
                                                                                                                                                                                                                return "Sembra che questi token sono scambiati: '%s' e '%s'."
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                const x$205 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
                                                                                                                                                                                                                if (((x$205 === null) ? (msg === null) : x$205.equals__O__Z(msg))) {
                                                                                                                                                                                                                  return "'%s' \u00e8 richiesto, per\u00f2 '%s' \u00e8 stato trovato."
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  const x$207 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
                                                                                                                                                                                                                  if (((x$207 === null) ? (msg === null) : x$207.equals__O__Z(msg))) {
                                                                                                                                                                                                                    return "Questa tupla deve essere tra parentesi."
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    const x$209 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
                                                                                                                                                                                                                    if (((x$209 === null) ? (msg === null) : x$209.equals__O__Z(msg))) {
                                                                                                                                                                                                                      return "Interruzione di riga o di input inaspettato."
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      const x$211 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
                                                                                                                                                                                                                      if (((x$211 === null) ? (msg === null) : x$211.equals__O__Z(msg))) {
                                                                                                                                                                                                                        return "La parola chiave '%s' non pu\u00f2 essere in questo punto."
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        const x$213 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET;
                                                                                                                                                                                                                        if (((x$213 === null) ? (msg === null) : x$213.equals__O__Z(msg))) {
                                                                                                                                                                                                                          return "Questa parentesi aperta '%s' non ha una parentesi chiusa corrispondente."
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          const x$215 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE;
                                                                                                                                                                                                                          if (((x$215 === null) ? (msg === null) : x$215.equals__O__Z(msg))) {
                                                                                                                                                                                                                            return "Questo codice non \u00e8 raggiungibile e non sar\u00e0 mai eseguito."
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            const x$217 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
                                                                                                                                                                                                                            if (((x$217 === null) ? (msg === null) : x$217.equals__O__Z(msg))) {
                                                                                                                                                                                                                              return "Questa stringa non \u00e8 chiusa."
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              const x$219 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA;
                                                                                                                                                                                                                              if (((x$219 === null) ? (msg === null) : x$219.equals__O__Z(msg))) {
                                                                                                                                                                                                                                return "Multiple comparazioni sono collegate con 'and' oppure 'or' invece che da una virgola."
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                const x$221 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND;
                                                                                                                                                                                                                                if (((x$221 === null) ? (msg === null) : x$221.equals__O__Z(msg))) {
                                                                                                                                                                                                                                  return "Multipli valori sono separati con la virgola invece che con 'and'."
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  const x$223 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE;
                                                                                                                                                                                                                                  if (((x$223 === null) ? (msg === null) : x$223.equals__O__Z(msg))) {
                                                                                                                                                                                                                                    return "Usa 'elif' invece di 'else'."
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    const x$225 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF;
                                                                                                                                                                                                                                    if (((x$225 === null) ? (msg === null) : x$225.equals__O__Z(msg))) {
                                                                                                                                                                                                                                      return "Usa 'elif' invece di 'else if'."
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      const x$227 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ;
                                                                                                                                                                                                                                      if (((x$227 === null) ? (msg === null) : x$227.equals__O__Z(msg))) {
                                                                                                                                                                                                                                        return "Usa '== %s' invece di '!= %s'."
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        const x$229 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV;
                                                                                                                                                                                                                                        if (((x$229 === null) ? (msg === null) : x$229.equals__O__Z(msg))) {
                                                                                                                                                                                                                                          return "Usa '%%' invece di '/' per verificare se un numero \u00e8 divisibile."
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          const x$231 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                                                                                                                                                                                                                                          if (((x$231 === null) ? (msg === null) : x$231.equals__O__Z(msg))) {
                                                                                                                                                                                                                                            return "Usa 'not' piuttosto che una comparazione con '%s'."
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            const x$233 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE;
                                                                                                                                                                                                                                            if (((x$233 === null) ? (msg === null) : x$233.equals__O__Z(msg))) {
                                                                                                                                                                                                                                              return "Usa 'repeat' invece di 'while'."
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              const x$235 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION;
                                                                                                                                                                                                                                              if (((x$235 === null) ? (msg === null) : x$235.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                return "Il risultato di questa espressione non viene mai usato."
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                const x$237 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
                                                                                                                                                                                                                                                if (((x$237 === null) ? (msg === null) : x$237.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                  return "Questa istruzione \u00e8 inutile: non ha nessun effetto."
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  const x$239 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN;
                                                                                                                                                                                                                                                  if (((x$239 === null) ? (msg === null) : x$239.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                    return "Questa istruzione \u00e8 inutile. Intendevi '%s='?"
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    const x$241 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG;
                                                                                                                                                                                                                                                    if (((x$241 === null) ? (msg === null) : x$241.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                      return "L'argomento spacchettante variabile deve essere prima dell'argomento spacchettante con parola chiave."
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      const x$243 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED;
                                                                                                                                                                                                                                                      if (((x$243 === null) ? (msg === null) : x$243.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                        return "Argomenti spacchettanti non sono permessi a questo punto."
                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                        const x$245 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET;
                                                                                                                                                                                                                                                        if (((x$245 === null) ? (msg === null) : x$245.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                          return "Parentesi sbagliata: '%s' \u00e8 richiesto invece di '%s'."
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                          const x$247 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN;
                                                                                                                                                                                                                                                          if (((x$247 === null) ? (msg === null) : x$247.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                            return "Simbolo sbagliato '%s' invece di '%s'."
                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                            const x$249 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION;
                                                                                                                                                                                                                                                            if (((x$249 === null) ? (msg === null) : x$249.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                              return "Un'espressione 'yield' non pu\u00f2 essere all'esterno di una funzione."
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_errormessages_ItalianMessages$ = new $TypeData().initClass({
  Ltigerpython_parser_errormessages_ItalianMessages$: 0
}, false, "tigerpython.parser.errormessages.ItalianMessages$", {
  Ltigerpython_parser_errormessages_ItalianMessages$: 1,
  Ltigerpython_parser_errormessages_ModifiableErrorMessages: 1,
  O: 1
});
$c_Ltigerpython_parser_errormessages_ItalianMessages$.prototype.$classData = $d_Ltigerpython_parser_errormessages_ItalianMessages$;
let $n_Ltigerpython_parser_errormessages_ItalianMessages$ = (void 0);
function $m_Ltigerpython_parser_errormessages_ItalianMessages$() {
  if ((!$n_Ltigerpython_parser_errormessages_ItalianMessages$)) {
    $n_Ltigerpython_parser_errormessages_ItalianMessages$ = new $c_Ltigerpython_parser_errormessages_ItalianMessages$()
  };
  return $n_Ltigerpython_parser_errormessages_ItalianMessages$
}
class $c_Ltigerpython_parser_errormessages_RussianMessages$ extends $c_Ltigerpython_parser_errormessages_ModifiableErrorMessages {
  constructor() {
    super();
    $ct_Ltigerpython_parser_errormessages_ModifiableErrorMessages__(this)
  };
  _getMessage__s_Enumeration$Value__T(msg) {
    const x = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS;
    if (((x === null) ? (msg === null) : x.equals__O__Z(msg))) {
      return "'%s' \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f, \u0430 \u043d\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435."
    } else {
      const x$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS;
      if (((x$3 === null) ? (msg === null) : x$3.equals__O__Z(msg))) {
        return "\u0417\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0435\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430."
      } else {
        const x$5 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE;
        if (((x$5 === null) ? (msg === null) : x$5.equals__O__Z(msg))) {
          return "'as' \u0437\u0434\u0435\u0441\u044c \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e / \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f."
        } else {
          const x$7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT;
          if (((x$7 === null) ? (msg === null) : x$7.equals__O__Z(msg))) {
            return "\u0426\u0435\u043b\u0435\u0432\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u0435\u043d \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0432\u0430."
          } else {
            const x$9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN;
            if (((x$9 === null) ? (msg === null) : x$9.equals__O__Z(msg))) {
              return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'break' \u0432\u043c\u0435\u0441\u0442\u043e 'return' \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u0439\u0442\u0438 \u0438\u0437 \u0446\u0438\u043a\u043b\u0430."
            } else {
              const x$11 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP;
              if (((x$11 === null) ? (msg === null) : x$11.equals__O__Z(msg))) {
                return "\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f '%s' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u043d\u0435 \u0446\u0438\u043a\u043b\u0430."
              } else {
                const x$13 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES;
                if (((x$13 === null) ? (msg === null) : x$13.equals__O__Z(msg))) {
                  return "\u0427\u0442\u043e\u0431\u044b \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043a\u043e\u0431\u043a\u0438, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u043f\u0443\u0441\u0442\u044b\u0435."
                } else {
                  const x$15 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC;
                  if (((x$15 === null) ? (msg === null) : x$15.equals__O__Z(msg))) {
                    return "'async' \u043d\u0435\u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c\u043e \u0432 \u044d\u0442\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438."
                  } else {
                    const x$17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL;
                    if (((x$17 === null) ? (msg === null) : x$17.equals__O__Z(msg))) {
                      return "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0447\u0442\u043e-\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0432\u044b\u0437\u043e\u0432\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                    } else {
                      const x$19 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION;
                      if (((x$19 === null) ? (msg === null) : x$19.equals__O__Z(msg))) {
                        return "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0447\u0442\u043e-\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                      } else {
                        const x$21 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
                        if (((x$21 === null) ? (msg === null) : x$21.equals__O__Z(msg))) {
                          return "\u0418\u043c\u044f '%s' \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\u043e."
                        } else {
                          const x$23 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE;
                          if (((x$23 === null) ? (msg === null) : x$23.equals__O__Z(msg))) {
                            return "\u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043a\u043e\u0440\u0442\u0435\u0436\u0430 \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e."
                          } else {
                            const x$25 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME;
                            if (((x$25 === null) ? (msg === null) : x$25.equals__O__Z(msg))) {
                              return "\u0412\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e '%s' \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0438\u043c\u0435\u043d\u0438."
                            } else {
                              const x$27 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF;
                              if (((x$27 === null) ? (msg === null) : x$27.equals__O__Z(msg))) {
                                return "\u041c\u0435\u0442\u043e\u0434 \u043a\u043b\u0430\u0441\u0441\u0430 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430."
                              } else {
                                const x$29 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED;
                                if (((x$29 === null) ? (msg === null) : x$29.equals__O__Z(msg))) {
                                  return "\u0417\u0434\u0435\u0441\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u0432\u043e\u0435\u0442\u043e\u0447\u0438\u0435 ':'."
                                } else {
                                  const x$31 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED;
                                  if (((x$31 === null) ? (msg === null) : x$31.equals__O__Z(msg))) {
                                    return "\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f."
                                  } else {
                                    const x$33 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED;
                                    if (((x$33 === null) ? (msg === null) : x$33.equals__O__Z(msg))) {
                                      return "\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f."
                                    } else {
                                      const x$35 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH;
                                      if (((x$35 === null) ? (msg === null) : x$35.equals__O__Z(msg))) {
                                        return "\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438 \u0435\u0451 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e: '%s'."
                                      } else {
                                        const x$37 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE;
                                        if (((x$37 === null) ? (msg === null) : x$37.equals__O__Z(msg))) {
                                          return "\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u043a \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c \u0438 \u043a\u043b\u0430\u0441\u0441\u0430\u043c."
                                        } else {
                                          const x$39 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP;
                                          if (((x$39 === null) ? (msg === null) : x$39.equals__O__Z(msg))) {
                                            return "\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 '%s' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u0446\u0438\u043a\u043b\u0430."
                                          } else {
                                            const x$41 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE;
                                            if (((x$41 === null) ? (msg === null) : x$41.equals__O__Z(msg))) {
                                              return "\u0423 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b '%s' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0433\u043e 'else'."
                                            } else {
                                              const x$43 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED;
                                              if (((x$43 === null) ? (msg === null) : x$43.equals__O__Z(msg))) {
                                                return "\u041e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f '==', \u0430 \u043d\u0435 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f."
                                              } else {
                                                const x$45 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES;
                                                if (((x$45 === null) ? (msg === null) : x$45.equals__O__Z(msg))) {
                                                  return "\u0414\u0432\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e: '%s'."
                                                } else {
                                                  const x$47 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED;
                                                  if (((x$47 === null) ? (msg === null) : x$47.equals__O__Z(msg))) {
                                                    return "\u041e\u0442\u0441\u0442\u0443\u043f '%s' \u0434\u043e\u043b\u0436\u0435\u043d \u0440\u0430\u0432\u043d\u044f\u0442\u044c\u0441\u044f \u043e\u0442\u0441\u0442\u0443\u043f\u0443 'if'."
                                                  } else {
                                                    const x$49 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON;
                                                    if (((x$49 === null) ? (msg === null) : x$49.equals__O__Z(msg))) {
                                                      return "\u0423 'else' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f."
                                                    } else {
                                                      const x$51 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF;
                                                      if (((x$51 === null) ? (msg === null) : x$51.equals__O__Z(msg))) {
                                                        return "\u042d\u0442\u043e\u043c\u0443 '%s' \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 'if'."
                                                      } else {
                                                        const x$53 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT;
                                                        if (((x$53 === null) ? (msg === null) : x$53.equals__O__Z(msg))) {
                                                          return "\u0418\u043d\u0434\u0435\u043a\u0441 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c."
                                                        } else {
                                                          const x$55 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION;
                                                          if (((x$55 === null) ? (msg === null) : x$55.equals__O__Z(msg))) {
                                                            return "\u041b\u0438\u0448\u043d\u0438\u0439 \u043e\u0442\u0441\u0442\u0443\u043f."
                                                          } else {
                                                            const x$57 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
                                                            if (((x$57 === null) ? (msg === null) : x$57.equals__O__Z(msg))) {
                                                              return "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438\u0448\u043d\u0438\u0439 \u0440\u0430\u0437\u0440\u044b\u0432 \u0441\u0442\u0440\u043e\u043a\u0438. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0435\u0433\u043e \u0441\u043f\u0440\u044f\u0442\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e '\\'."
                                                            } else {
                                                              const x$59 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET;
                                                              if (((x$59 === null) ? (msg === null) : x$59.equals__O__Z(msg))) {
                                                                return "\u041b\u0438\u0448\u043d\u0430\u044f \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0441\u043a\u043e\u0431\u043a\u0430: '%s'."
                                                              } else {
                                                                const x$61 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
                                                                if (((x$61 === null) ? (msg === null) : x$61.equals__O__Z(msg))) {
                                                                  return "\u041b\u0438\u0448\u043d\u0430\u044f \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0441\u043a\u043e\u0431\u043a\u0430: '%s'."
                                                                } else {
                                                                  const x$63 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                                                                  if (((x$63 === null) ? (msg === null) : x$63.equals__O__Z(msg))) {
                                                                    return "\u041b\u0438\u0448\u043d\u0438\u0439 \u043f\u0440\u043e\u0431\u0435\u043b."
                                                                  } else {
                                                                    const x$65 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA;
                                                                    if (((x$65 === null) ? (msg === null) : x$65.equals__O__Z(msg))) {
                                                                      return "\u041b\u0438\u0448\u043d\u0438\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u0438\u043b\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0430\u044f \u0437\u0430\u043f\u044f\u0442\u0430\u044f."
                                                                    } else {
                                                                      const x$67 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
                                                                      if (((x$67 === null) ? (msg === null) : x$67.equals__O__Z(msg))) {
                                                                        return "\u041b\u0438\u0448\u043d\u044f\u044f \u043b\u0435\u043a\u0441\u0435\u043c\u0430: '%s'."
                                                                      } else {
                                                                        const x$69 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD;
                                                                        if (((x$69 === null) ? (msg === null) : x$69.equals__O__Z(msg))) {
                                                                          return "\u0412 Python \u043d\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 '%s'."
                                                                        } else {
                                                                          const x$71 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE;
                                                                          if (((x$71 === null) ? (msg === null) : x$71.equals__O__Z(msg))) {
                                                                            return "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u043b\u0435\u043a\u0441\u0435\u043c\u0430 '%s', \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043d\u0438\u0436\u043d\u0435\u0435 \u043f\u043e\u0434\u0447\u0451\u0440\u043a\u0438\u0432\u0430\u043d\u0438\u0435 '_', \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043c\u0435\u0442\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043a\u0430\u043a \u0437\u0430\u043a\u0440\u044b\u0442\u0443\u044e ('private')."
                                                                          } else {
                                                                            const x$73 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT;
                                                                            if (((x$73 === null) ? (msg === null) : x$73.equals__O__Z(msg))) {
                                                                              return "\u0412 Python \u043d\u0435\u0442 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 '%s'."
                                                                            } else {
                                                                              const x$75 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX;
                                                                              if (((x$75 === null) ? (msg === null) : x$75.equals__O__Z(msg))) {
                                                                                return "\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 %s \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u0435\u043d \u0432 Python."
                                                                              } else {
                                                                                const x$77 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
                                                                                if (((x$77 === null) ? (msg === null) : x$77.equals__O__Z(msg))) {
                                                                                  return "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u043b\u0435\u043a\u0441\u0435\u043c\u0430 '%s', \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 '%s'."
                                                                                } else {
                                                                                  const x$79 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR;
                                                                                  if (((x$79 === null) ? (msg === null) : x$79.equals__O__Z(msg))) {
                                                                                    return "\u0412 Python \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f '%s' \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445."
                                                                                  } else {
                                                                                    const x$81 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED;
                                                                                    if (((x$81 === null) ? (msg === null) : x$81.equals__O__Z(msg))) {
                                                                                      return "\u0414\u043b\u044f \u0446\u0438\u043a\u043b\u0430 'for' \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f."
                                                                                    } else {
                                                                                      const x$83 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST;
                                                                                      if (((x$83 === null) ? (msg === null) : x$83.equals__O__Z(msg))) {
                                                                                        return "\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f 'from __future__ import' \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0432\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439 \u0432 \u043c\u043e\u0434\u0443\u043b\u0435."
                                                                                      } else {
                                                                                        const x$85 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE;
                                                                                        if (((x$85 === null) ? (msg === null) : x$85.equals__O__Z(msg))) {
                                                                                          return "\u0413\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c 'return', \u0447\u0442\u043e\u0431\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0438\u043c\u0435\u043b\u0438 \u0432 \u0432\u0438\u0434\u0443 'yield'."
                                                                                        } else {
                                                                                          const x$87 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
                                                                                          if (((x$87 === null) ? (msg === null) : x$87.equals__O__Z(msg))) {
                                                                                            return "\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 '%s' \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0441\u0430\u043c\u044b\u043c\u0438 \u043f\u0435\u0440\u0432\u044b\u043c\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c\u0438 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                                                                                          } else {
                                                                                            const x$89 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
                                                                                            if (((x$89 === null) ? (msg === null) : x$89.equals__O__Z(msg))) {
                                                                                              return "\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f '%s' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u043d\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                                                                                            } else {
                                                                                              const x$91 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP;
                                                                                              if (((x$91 === null) ? (msg === null) : x$91.equals__O__Z(msg))) {
                                                                                                return "\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f 'import' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u0446\u0438\u043a\u043b\u0435."
                                                                                              } else {
                                                                                                const x$93 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT;
                                                                                                if (((x$93 === null) ? (msg === null) : x$93.equals__O__Z(msg))) {
                                                                                                  return "\u041d\u0435\u043f\u043e\u043b\u043d\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f import."
                                                                                                } else {
                                                                                                  const x$95 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
                                                                                                  if (((x$95 === null) ? (msg === null) : x$95.equals__O__Z(msg))) {
                                                                                                    return "\u041e\u0442\u0441\u0442\u0443\u043f\u044b \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443."
                                                                                                  } else {
                                                                                                    const x$97 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS;
                                                                                                    if (((x$97 === null) ? (msg === null) : x$97.equals__O__Z(msg))) {
                                                                                                      return "\u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u043d\u043e\u0433\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0430 \u0438\u043d\u043e\u0433\u0434\u0430 \u043d\u0435\u0442."
                                                                                                    } else {
                                                                                                      const x$99 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE;
                                                                                                      if (((x$99 === null) ? (msg === null) : x$99.equals__O__Z(msg))) {
                                                                                                        return "\u041b\u0438\u0448\u043d\u0438\u0435 \u043e\u0442\u0441\u0442\u0443\u043f\u044b: '%s'."
                                                                                                      } else {
                                                                                                        const x$101 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP;
                                                                                                        if (((x$101 === null) ? (msg === null) : x$101.equals__O__Z(msg))) {
                                                                                                          return "\u0411\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b."
                                                                                                        } else {
                                                                                                          const x$103 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                                                                                                          if (((x$103 === null) ? (msg === null) : x$103.equals__O__Z(msg))) {
                                                                                                            return "\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u0446\u0438\u043a\u043b\u0430."
                                                                                                          } else {
                                                                                                            const x$105 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT;
                                                                                                            if (((x$105 === null) ? (msg === null) : x$105.equals__O__Z(msg))) {
                                                                                                              return "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u0447\u0442\u043e-\u0442\u043e '%s'."
                                                                                                            } else {
                                                                                                              const x$107 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF;
                                                                                                              if (((x$107 === null) ? (msg === null) : x$107.equals__O__Z(msg))) {
                                                                                                                return "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                                                                                                              } else {
                                                                                                                const x$109 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN;
                                                                                                                if (((x$109 === null) ? (msg === null) : x$109.equals__O__Z(msg))) {
                                                                                                                  return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 ':' \u0438 'return' \u0432\u043c\u0435\u0441\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f."
                                                                                                                } else {
                                                                                                                  const x$111 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG;
                                                                                                                  if (((x$111 === null) ? (msg === null) : x$111.equals__O__Z(msg))) {
                                                                                                                    return "\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430/\u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0451\u043d \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438."
                                                                                                                  } else {
                                                                                                                    const x$113 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
                                                                                                                    if (((x$113 === null) ? (msg === null) : x$113.equals__O__Z(msg))) {
                                                                                                                      return "\u0412\u044b \u0432\u0432\u0435\u043b\u0438 \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b '%s'."
                                                                                                                    } else {
                                                                                                                      const x$115 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR;
                                                                                                                      if (((x$115 === null) ? (msg === null) : x$115.equals__O__Z(msg))) {
                                                                                                                        return "\u041f\u0430\u0440\u0430 '\u043a\u043b\u044e\u0447-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435' \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0430."
                                                                                                                      } else {
                                                                                                                        const x$117 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME;
                                                                                                                        if (((x$117 === null) ? (msg === null) : x$117.equals__O__Z(msg))) {
                                                                                                                          return "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0435 \u0438\u043c\u044f: '%s'."
                                                                                                                        } else {
                                                                                                                          const x$119 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET;
                                                                                                                          if (((x$119 === null) ? (msg === null) : x$119.equals__O__Z(msg))) {
                                                                                                                            return "\u042d\u0442\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0446\u0435\u043b\u044c\u044e \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f."
                                                                                                                          } else {
                                                                                                                            const x$121 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX;
                                                                                                                            if (((x$121 === null) ? (msg === null) : x$121.equals__O__Z(msg))) {
                                                                                                                              return "\u041d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0442\u0440\u043e\u043a\u0438: '%s'."
                                                                                                                            } else {
                                                                                                                              const x$123 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE;
                                                                                                                              if (((x$123 === null) ? (msg === null) : x$123.equals__O__Z(msg))) {
                                                                                                                                return "\u042d\u0442\u0430 \u043b\u0435\u043a\u0441\u0435\u043c\u0430 \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438: '%s'."
                                                                                                                              } else {
                                                                                                                                const x$125 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF;
                                                                                                                                if (((x$125 === null) ? (msg === null) : x$125.equals__O__Z(msg))) {
                                                                                                                                  return "\u0423 \u043c\u0435\u0442\u043e\u0434\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 'self'."
                                                                                                                                } else {
                                                                                                                                  const x$127 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET;
                                                                                                                                  if (((x$127 === null) ? (msg === null) : x$127.equals__O__Z(msg))) {
                                                                                                                                    return "\u041d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u043a\u043e\u0431\u043a\u0438: \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f '%s', \u043d\u043e \u043d\u0430\u0439\u0434\u0435\u043d\u043e '%s'."
                                                                                                                                  } else {
                                                                                                                                    const x$129 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN;
                                                                                                                                    if (((x$129 === null) ? (msg === null) : x$129.equals__O__Z(msg))) {
                                                                                                                                      return "\u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u0435 '%s' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0447\u0430\u0441\u0442\u044c\u044e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f."
                                                                                                                                    } else {
                                                                                                                                      const x$131 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT;
                                                                                                                                      if (((x$131 === null) ? (msg === null) : x$131.equals__O__Z(msg))) {
                                                                                                                                        return "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u043f\u0440\u043e\u043f\u0430\u043b\u043e \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u0435."
                                                                                                                                      } else {
                                                                                                                                        const x$133 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE;
                                                                                                                                        if (((x$133 === null) ? (msg === null) : x$133.equals__O__Z(msg))) {
                                                                                                                                          return "\u042d\u0442\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f-\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430."
                                                                                                                                        } else {
                                                                                                                                          const x$135 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY;
                                                                                                                                          if (((x$135 === null) ? (msg === null) : x$135.equals__O__Z(msg))) {
                                                                                                                                            return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u0435\u043b\u043e \u0438\u043b\u0438 \u043e\u0442\u0441\u0442\u0443\u043f."
                                                                                                                                          } else {
                                                                                                                                            const x$137 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA;
                                                                                                                                            if (((x$137 === null) ? (msg === null) : x$137.equals__O__Z(msg))) {
                                                                                                                                              return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u0430\u043f\u044f\u0442\u0430\u044f."
                                                                                                                                            } else {
                                                                                                                                              const x$139 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON;
                                                                                                                                              if (((x$139 === null) ? (msg === null) : x$139.equals__O__Z(msg))) {
                                                                                                                                                return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435."
                                                                                                                                              } else {
                                                                                                                                                const x$141 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT;
                                                                                                                                                if (((x$141 === null) ? (msg === null) : x$141.equals__O__Z(msg))) {
                                                                                                                                                  return "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u0442\u043e\u0447\u043a\u0438."
                                                                                                                                                } else {
                                                                                                                                                  const x$143 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET;
                                                                                                                                                  if (((x$143 === null) ? (msg === null) : x$143.equals__O__Z(msg))) {
                                                                                                                                                    return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0441\u043a\u043e\u0431\u043a\u0430: '%s'."
                                                                                                                                                  } else {
                                                                                                                                                    const x$145 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS;
                                                                                                                                                    if (((x$145 === null) ? (msg === null) : x$145.equals__O__Z(msg))) {
                                                                                                                                                      return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u043a\u0440\u0443\u0433\u043b\u0430\u044f \u0441\u043a\u043e\u0431\u043a\u0430 '('."
                                                                                                                                                    } else {
                                                                                                                                                      const x$147 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA;
                                                                                                                                                      if (((x$147 === null) ? (msg === null) : x$147.equals__O__Z(msg))) {
                                                                                                                                                        return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u0438\u043b\u0438 \u0437\u0430\u043f\u044f\u0442\u0430\u044f."
                                                                                                                                                      } else {
                                                                                                                                                        const x$149 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES;
                                                                                                                                                        if (((x$149 === null) ? (msg === null) : x$149.equals__O__Z(msg))) {
                                                                                                                                                          return "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u043a\u0440\u0443\u0433\u043b\u044b\u0445 \u0441\u043a\u043e\u0431\u043e\u043a."
                                                                                                                                                        } else {
                                                                                                                                                          const x$151 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
                                                                                                                                                          if (((x$151 === null) ? (msg === null) : x$151.equals__O__Z(msg))) {
                                                                                                                                                            return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0441\u043a\u043e\u0431\u043a\u0430: '%s'."
                                                                                                                                                          } else {
                                                                                                                                                            const x$153 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE;
                                                                                                                                                            if (((x$153 === null) ? (msg === null) : x$153.equals__O__Z(msg))) {
                                                                                                                                                              return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0440\u043e\u0431\u0435\u043b."
                                                                                                                                                            } else {
                                                                                                                                                              const x$155 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
                                                                                                                                                              if (((x$155 === null) ? (msg === null) : x$155.equals__O__Z(msg))) {
                                                                                                                                                                return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 '%s'."
                                                                                                                                                              } else {
                                                                                                                                                                const x$157 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
                                                                                                                                                                if (((x$157 === null) ? (msg === null) : x$157.equals__O__Z(msg))) {
                                                                                                                                                                  return "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e: '%s' \u0432\u043c\u0435\u0441\u0442\u043e '%s'."
                                                                                                                                                                } else {
                                                                                                                                                                  const x$159 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER;
                                                                                                                                                                  if (((x$159 === null) ? (msg === null) : x$159.equals__O__Z(msg))) {
                                                                                                                                                                    return "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u0432 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u043a\u0440\u0430\u043b\u0430\u0441\u044c \u043e\u043f\u0435\u0447\u0430\u0442\u043a\u0430."
                                                                                                                                                                  } else {
                                                                                                                                                                    const x$161 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
                                                                                                                                                                    if (((x$161 === null) ? (msg === null) : x$161.equals__O__Z(msg))) {
                                                                                                                                                                      return "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440: '%s' \u0432\u043c\u0435\u0441\u0442\u043e '%s'."
                                                                                                                                                                    } else {
                                                                                                                                                                      const x$163 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS;
                                                                                                                                                                      if (((x$163 === null) ? (msg === null) : x$163.equals__O__Z(msg))) {
                                                                                                                                                                        return "\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0435\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430."
                                                                                                                                                                      } else {
                                                                                                                                                                        const x$165 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS;
                                                                                                                                                                        if (((x$165 === null) ? (msg === null) : x$165.equals__O__Z(msg))) {
                                                                                                                                                                          return "\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0435\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430."
                                                                                                                                                                        } else {
                                                                                                                                                                          const x$167 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED;
                                                                                                                                                                          if (((x$167 === null) ? (msg === null) : x$167.equals__O__Z(msg))) {
                                                                                                                                                                            return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043c\u044f."
                                                                                                                                                                          } else {
                                                                                                                                                                            const x$169 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED;
                                                                                                                                                                            if (((x$169 === null) ? (msg === null) : x$169.equals__O__Z(msg))) {
                                                                                                                                                                              return "\u0412 Python \u043d\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 'end'."
                                                                                                                                                                            } else {
                                                                                                                                                                              const x$171 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED;
                                                                                                                                                                              if (((x$171 === null) ? (msg === null) : x$171.equals__O__Z(msg))) {
                                                                                                                                                                                return "\u0423 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0435\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e."
                                                                                                                                                                              } else {
                                                                                                                                                                                const x$173 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
                                                                                                                                                                                if (((x$173 === null) ? (msg === null) : x$173.equals__O__Z(msg))) {
                                                                                                                                                                                  return "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0434: '%s'."
                                                                                                                                                                                } else {
                                                                                                                                                                                  const x$175 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE;
                                                                                                                                                                                  if (((x$175 === null) ? (msg === null) : x$175.equals__O__Z(msg))) {
                                                                                                                                                                                    return "\u0423 \u0447\u0438\u0441\u043b\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430."
                                                                                                                                                                                  } else {
                                                                                                                                                                                    const x$177 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM;
                                                                                                                                                                                    if (((x$177 === null) ? (msg === null) : x$177.equals__O__Z(msg))) {
                                                                                                                                                                                      return "\u041a\u043b\u044e\u0447\u0435\u0432\u043e\u0439 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u0434\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c."
                                                                                                                                                                                    } else {
                                                                                                                                                                                      const x$179 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED;
                                                                                                                                                                                      if (((x$179 === null) ? (msg === null) : x$179.equals__O__Z(msg))) {
                                                                                                                                                                                        return "\u041e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440/\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043d\u043e \u043d\u0430\u0439\u0434\u0435\u043d\u043e '%s'."
                                                                                                                                                                                      } else {
                                                                                                                                                                                        const x$181 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD;
                                                                                                                                                                                        if (((x$181 === null) ? (msg === null) : x$181.equals__O__Z(msg))) {
                                                                                                                                                                                          return "\u041f\u043e\u0437\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0438\u0434\u0442\u0438 \u043f\u043e\u0441\u043b\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432."
                                                                                                                                                                                        } else {
                                                                                                                                                                                          const x$183 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD;
                                                                                                                                                                                          if (((x$183 === null) ? (msg === null) : x$183.equals__O__Z(msg))) {
                                                                                                                                                                                            return "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0431\u0435\u0437 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0437\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u043b\u0438 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438."
                                                                                                                                                                                          } else {
                                                                                                                                                                                            const x$185 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED;
                                                                                                                                                                                            if (((x$185 === null) ? (msg === null) : x$185.equals__O__Z(msg))) {
                                                                                                                                                                                              return "\u041f\u043e\u0441\u043b\u0435 '>>' \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u0442\u043e\u044f\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 \u0432\u044b\u0432\u043e\u0434\u0430."
                                                                                                                                                                                            } else {
                                                                                                                                                                                              const x$187 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT;
                                                                                                                                                                                              if (((x$187 === null) ? (msg === null) : x$187.equals__O__Z(msg))) {
                                                                                                                                                                                                return "\u0412 Python 2.x 'print' \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0435\u0439 \u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438."
                                                                                                                                                                                              } else {
                                                                                                                                                                                                const x$189 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES;
                                                                                                                                                                                                if (((x$189 === null) ? (msg === null) : x$189.equals__O__Z(msg))) {
                                                                                                                                                                                                  return "\u0412 Python 3.x 'print' \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u043a\u0440\u0443\u0433\u043b\u044b\u043c\u0438 \u0441\u043a\u043e\u0431\u043a\u0430\u043c\u0438."
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  const x$191 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                  if (((x$191 === null) ? (msg === null) : x$191.equals__O__Z(msg))) {
                                                                                                                                                                                                    return "\u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0437 Python 2.x \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430."
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    const x$193 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE;
                                                                                                                                                                                                    if (((x$193 === null) ? (msg === null) : x$193.equals__O__Z(msg))) {
                                                                                                                                                                                                      return "\u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u0437 Python 3.x \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430."
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      const x$195 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK;
                                                                                                                                                                                                      if (((x$195 === null) ? (msg === null) : x$195.equals__O__Z(msg))) {
                                                                                                                                                                                                        return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'return' \u0432\u043c\u0435\u0441\u0442\u043e 'break' \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u0439\u0442\u0438 \u0438\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        const x$197 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION;
                                                                                                                                                                                                        if (((x$197 === null) ? (msg === null) : x$197.equals__O__Z(msg))) {
                                                                                                                                                                                                          return "\u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f 'return' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u043d\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          const x$199 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED;
                                                                                                                                                                                                          if (((x$199 === null) ? (msg === null) : x$199.equals__O__Z(msg))) {
                                                                                                                                                                                                            return "\u0414\u043b\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f (\u043e\u0434\u0438\u043d!) \u0437\u043d\u0430\u043a '='."
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            const x$201 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON;
                                                                                                                                                                                                            if (((x$201 === null) ? (msg === null) : x$201.equals__O__Z(msg))) {
                                                                                                                                                                                                              return "\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441 '%s' \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f."
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              const x$203 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
                                                                                                                                                                                                              if (((x$203 === null) ? (msg === null) : x$203.equals__O__Z(msg))) {
                                                                                                                                                                                                                return "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u043b\u0435\u043a\u0441\u0435\u043c\u044b \u043f\u0435\u0440\u0435\u043f\u0443\u0442\u0430\u043d\u044b: '%s' \u0438 '%s'."
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                const x$205 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
                                                                                                                                                                                                                if (((x$205 === null) ? (msg === null) : x$205.equals__O__Z(msg))) {
                                                                                                                                                                                                                  return "\u041e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f'%s', \u043d\u043e \u043d\u0430\u0439\u0434\u0435\u043d\u043e '%s'."
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  const x$207 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS;
                                                                                                                                                                                                                  if (((x$207 === null) ? (msg === null) : x$207.equals__O__Z(msg))) {
                                                                                                                                                                                                                    return "\u0417\u0430\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u043a\u043e\u0440\u0442\u0435\u0436 \u0432 \u0441\u043a\u043e\u0431\u043a\u0438."
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    const x$209 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
                                                                                                                                                                                                                    if (((x$209 === null) ? (msg === null) : x$209.equals__O__Z(msg))) {
                                                                                                                                                                                                                      return "\u041d\u0435\u043e\u0436\u0438\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0435\u0446 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u043b\u0438 \u0432\u0432\u043e\u0434\u0430."
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      const x$211 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD;
                                                                                                                                                                                                                      if (((x$211 === null) ? (msg === null) : x$211.equals__O__Z(msg))) {
                                                                                                                                                                                                                        return "\u041a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e '%s' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0434\u0435\u0441\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f."
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        const x$213 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET;
                                                                                                                                                                                                                        if (((x$213 === null) ? (msg === null) : x$213.equals__O__Z(msg))) {
                                                                                                                                                                                                                          return "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0441\u043a\u043e\u0431\u043a\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0430\u044f \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0435\u0439 '%s'."
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          const x$215 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE;
                                                                                                                                                                                                                          if (((x$215 === null) ? (msg === null) : x$215.equals__O__Z(msg))) {
                                                                                                                                                                                                                            return "\u041d\u0435\u0434\u043e\u0441\u0442\u0438\u0436\u0438\u043c\u044b\u0439 \u043a\u043e\u0434: \u044d\u0442\u043e\u0442 \u043a\u043e\u0434 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442 \u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d."
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            const x$217 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
                                                                                                                                                                                                                            if (((x$217 === null) ? (msg === null) : x$217.equals__O__Z(msg))) {
                                                                                                                                                                                                                              return "\u0421\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u0437\u0430\u043a\u043e\u043d\u0447\u0435\u043d\u0430. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0438\u0445 \u043a\u0430\u0432\u044b\u0447\u0435\u043a."
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              const x$219 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA;
                                                                                                                                                                                                                              if (((x$219 === null) ? (msg === null) : x$219.equals__O__Z(msg))) {
                                                                                                                                                                                                                                return "\u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e 'and' \u0438\u043b\u0438 'or' \u0432\u043c\u0435\u0441\u0442\u043e \u0437\u0430\u043f\u044f\u0442\u043e\u0439."
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                const x$221 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND;
                                                                                                                                                                                                                                if (((x$221 === null) ? (msg === null) : x$221.equals__O__Z(msg))) {
                                                                                                                                                                                                                                  return "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u0437\u0430\u043f\u044f\u0442\u044b\u043c\u0438 \u0432\u043c\u0435\u0441\u0442\u043e 'and'."
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  const x$223 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE;
                                                                                                                                                                                                                                  if (((x$223 === null) ? (msg === null) : x$223.equals__O__Z(msg))) {
                                                                                                                                                                                                                                    return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'elif' \u0432\u043c\u0435\u0441\u0442\u043e 'else'."
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    const x$225 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF;
                                                                                                                                                                                                                                    if (((x$225 === null) ? (msg === null) : x$225.equals__O__Z(msg))) {
                                                                                                                                                                                                                                      return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'elif' \u0432\u043c\u0435\u0441\u0442\u043e 'else if'."
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                      const x$227 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ;
                                                                                                                                                                                                                                      if (((x$227 === null) ? (msg === null) : x$227.equals__O__Z(msg))) {
                                                                                                                                                                                                                                        return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 '== %s' \u0432\u043c\u0435\u0441\u0442\u043e '!= %s'."
                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                        const x$229 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV;
                                                                                                                                                                                                                                        if (((x$229 === null) ? (msg === null) : x$229.equals__O__Z(msg))) {
                                                                                                                                                                                                                                          return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 '%%' \u0432\u043c\u0435\u0441\u0442\u043e '/' \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0430 \u0434\u0435\u043b\u0438\u043c\u043e\u0441\u0442\u044c."
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                          const x$231 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE;
                                                                                                                                                                                                                                          if (((x$231 === null) ? (msg === null) : x$231.equals__O__Z(msg))) {
                                                                                                                                                                                                                                            return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'not' \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441 '%s'."
                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                            const x$233 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE;
                                                                                                                                                                                                                                            if (((x$233 === null) ? (msg === null) : x$233.equals__O__Z(msg))) {
                                                                                                                                                                                                                                              return "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'repeat' \u0432\u043c\u0435\u0441\u0442\u043e 'while'."
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                              const x$235 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION;
                                                                                                                                                                                                                                              if (((x$235 === null) ? (msg === null) : x$235.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                return "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u044d\u0442\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0438\u0433\u0434\u0435 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f."
                                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                                const x$237 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT;
                                                                                                                                                                                                                                                if (((x$237 === null) ? (msg === null) : x$237.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                  return "\u0411\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f: \u043e\u043d\u0430 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u0435\u043b\u0430\u0435\u0442."
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                  const x$239 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN;
                                                                                                                                                                                                                                                  if (((x$239 === null) ? (msg === null) : x$239.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                    return "\u0411\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0438\u043c\u0435\u043b\u0438 \u0432 \u0432\u0438\u0434\u0443 '%s='?"
                                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                                    const x$241 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG;
                                                                                                                                                                                                                                                    if (((x$241 === null) ? (msg === null) : x$241.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                      return "\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u0434\u0442\u0438 \u043f\u0435\u0440\u0435\u0434 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0438\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c."
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                      const x$243 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED;
                                                                                                                                                                                                                                                      if (((x$243 === null) ? (msg === null) : x$243.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                        return "\u0420\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0437\u0434\u0435\u0441\u044c \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u044b."
                                                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                                                        const x$245 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET;
                                                                                                                                                                                                                                                        if (((x$245 === null) ? (msg === null) : x$245.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                          return "\u041d\u0435\u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0430\u044f \u0441\u043a\u043e\u0431\u043a\u0430: \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f '%s' \u0432\u043c\u0435\u0441\u0442\u043e '%s'."
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                          const x$247 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN;
                                                                                                                                                                                                                                                          if (((x$247 === null) ? (msg === null) : x$247.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                            return "\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b '%s' \u0432\u043c\u0435\u0441\u0442\u043e '%s'."
                                                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                                                            const x$249 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION;
                                                                                                                                                                                                                                                            if (((x$249 === null) ? (msg === null) : x$249.equals__O__Z(msg))) {
                                                                                                                                                                                                                                                              return "\u0412\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 'yield' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u043d\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438."
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_errormessages_RussianMessages$ = new $TypeData().initClass({
  Ltigerpython_parser_errormessages_RussianMessages$: 0
}, false, "tigerpython.parser.errormessages.RussianMessages$", {
  Ltigerpython_parser_errormessages_RussianMessages$: 1,
  Ltigerpython_parser_errormessages_ModifiableErrorMessages: 1,
  O: 1
});
$c_Ltigerpython_parser_errormessages_RussianMessages$.prototype.$classData = $d_Ltigerpython_parser_errormessages_RussianMessages$;
let $n_Ltigerpython_parser_errormessages_RussianMessages$ = (void 0);
function $m_Ltigerpython_parser_errormessages_RussianMessages$() {
  if ((!$n_Ltigerpython_parser_errormessages_RussianMessages$)) {
    $n_Ltigerpython_parser_errormessages_RussianMessages$ = new $c_Ltigerpython_parser_errormessages_RussianMessages$()
  };
  return $n_Ltigerpython_parser_errormessages_RussianMessages$
}
class $c_Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_translator = null;
    this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList = null;
    this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_translator = $m_Ltigerpython_parser_errors_ErrorTranslator$().Ltigerpython_parser_errors_ErrorTranslator$__f_errorTranslator;
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems)
  };
  reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params) {
    return null
  };
  hasErrorInRange__I__I__Z(start, end) {
    const this$1 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
    let res = false;
    const this$2 = new $c_scm_ArrayBufferView(this$1.scm_ArrayBuffer__f_array, this$1.scm_ArrayBuffer__f_size0);
    const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2);
    while (((!res) && it.hasNext__Z())) {
      const arg1 = it.next__O();
      const item = arg1;
      res = ((start <= item.Ltigerpython_parser_errors_ExtErrorInfo__f_position) && (item.Ltigerpython_parser_errors_ExtErrorInfo__f_position <= end))
    };
    return res
  };
  reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params) {
    const x$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION;
    if (((code === null) ? (x$2 === null) : code.equals__O__Z(x$2))) {
      const this$1 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
      const this$2 = new $c_scm_ArrayBufferView(this$1.scm_ArrayBuffer__f_array, this$1.scm_ArrayBuffer__f_size0);
      const this$3 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$2);
      let idx;
      _return: {
        let i = 0;
        this$3.drop__I__sc_Iterator(0);
        while (this$3.hasNext__Z()) {
          const arg1 = this$3.next__O();
          const item = arg1;
          let $$x1;
          if ((item.Ltigerpython_parser_errors_ExtErrorInfo__f_position === pos)) {
            const x = item.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
            const x$2$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST;
            $$x1 = ((x === null) ? (x$2$1 === null) : x.equals__O__Z(x$2$1))
          } else {
            $$x1 = false
          };
          if ($$x1) {
            idx = i;
            break _return
          };
          i = ((1 + i) | 0)
        };
        idx = (-1)
      };
      if ((idx >= 0)) {
        this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList.remove__I__O(idx)
      }
    };
    const msg = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_translator.messageToString__s_Enumeration$Value__sci_Seq__T(code, params.map__F1__O(new $c_sjsr_AnonFunction1(((this$2$1) => ((x0$1$2) => {
      if ((x0$1$2 instanceof $c_Ltigerpython_parser_lexer_Token)) {
        const x2 = x0$1$2;
        return x2.getStringValue__T()
      } else {
        return x0$1$2
      }
    }))(this))));
    const this$6 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
    const elem = new $c_Ltigerpython_parser_errors_ExtErrorInfo(pos, line, code, msg, params);
    this$6.addOne__O__scm_ArrayBuffer(elem);
    return null
  };
  sort__V() {
    const this$2 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
    const f = new $c_sjsr_AnonFunction1(((this$1) => ((x$1$2) => {
      const x$1 = x$1$2;
      return x$1.Ltigerpython_parser_errors_ExtErrorInfo__f_position
    }))(this));
    const ord = $m_s_math_Ordering$Int$();
    this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList = $f_sc_SeqOps__sortBy__F1__s_math_Ordering__O(this$2, f, ord)
  };
  toString__T() {
    const this$1 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
    return $f_sc_IterableOnceOps__mkString__T__T__T__T(this$1, "", "\n", "")
  };
  getFirstError__s_Option() {
    const this$1 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
    if ((!$f_sc_SeqOps__isEmpty__Z(this$1))) {
      this.sort__V();
      const this$2 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
      const this$3 = new $c_scm_ArrayBufferView(this$2.scm_ArrayBuffer__f_array, this$2.scm_ArrayBuffer__f_size0);
      const headPos = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$3).next__O().Ltigerpython_parser_errors_ExtErrorInfo__f_position;
      const this$5 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
      const p = new $c_sjsr_AnonFunction1(((this$4, headPos$1) => ((x$2$2) => {
        const x$2 = x$2$2;
        return (x$2.Ltigerpython_parser_errors_ExtErrorInfo__f_position === headPos$1)
      }))(this, headPos));
      const headErrors = $f_sc_IterableOps__takeWhile__F1__O(this$5, p);
      if ((headErrors.scm_ArrayBuffer__f_size0 > 1)) {
        const b = new $c_scm_ArrayBuffer$$anon$1();
        const this$7 = new $c_scm_ArrayBufferView(headErrors.scm_ArrayBuffer__f_array, headErrors.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$7);
        while (it.hasNext__Z()) {
          const arg1 = it.next__O();
          const x$3 = arg1;
          const elem = x$3.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
          b.addOne__O__scm_GrowableBuilder(elem)
        };
        const headErrorTypes = b.scm_GrowableBuilder__f_elems;
        const elem$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
        let $$x2;
        if ($f_sc_SeqOps__contains__O__Z(headErrorTypes, elem$1)) {
          const elem$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
          $$x2 = $f_sc_SeqOps__contains__O__Z(headErrorTypes, elem$2)
        } else {
          $$x2 = false
        };
        let $$x1;
        if ($$x2) {
          $$x1 = true
        } else {
          let res = 0;
          const this$8 = new $c_scm_ArrayBufferView(headErrorTypes.scm_ArrayBuffer__f_array, headErrorTypes.scm_ArrayBuffer__f_size0);
          const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$8);
          while (it$1.hasNext__Z()) {
            const arg1$1 = it$1.next__O();
            const x$4 = arg1$1;
            const x$2$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
            if (((x$4 === null) ? (x$2$1 === null) : x$4.equals__O__Z(x$2$1))) {
              res = ((1 + res) | 0)
            }
          };
          $$x1 = (res > 1)
        };
        if ($$x1) {
          let $$x3;
          _return$1: {
            const this$9 = new $c_scm_ArrayBufferView(headErrors.scm_ArrayBuffer__f_array, headErrors.scm_ArrayBuffer__f_size0);
            const it$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$9);
            while (it$2.hasNext__Z()) {
              const a = it$2.next__O();
              const x$5 = a;
              const x = x$5.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
              const x$2$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
              if (((x === null) ? (x$2$3 === null) : x.equals__O__Z(x$2$3))) {
                $$x3 = new $c_s_Some(a);
                break _return$1
              }
            };
            $$x3 = $m_s_None$()
          };
          const p$1 = $$x3.get__O().Ltigerpython_parser_errors_ExtErrorInfo__f_params.apply__I__O(1);
          const this$10 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
          const this$11 = new $c_scm_ArrayBufferView(this$10.scm_ArrayBuffer__f_array, this$10.scm_ArrayBuffer__f_size0);
          const $$x10 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$11).next__O().Ltigerpython_parser_errors_ExtErrorInfo__f_line;
          const $$x9 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
          const $$x8 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_translator;
          const $$x7 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE;
          const $$x6 = $m_sci_Seq$();
          const array = [$dp_toString__T(p$1)];
          const $$x5 = $$x8.messageToString__s_Enumeration$Value__sci_Seq__T($$x7, $$x6.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array)));
          const $$x4 = $m_sci_Seq$();
          const array$1 = [p$1];
          return new $c_s_Some(new $c_Ltigerpython_parser_errors_ExtErrorInfo(headPos, $$x10, $$x9, $$x5, $$x4.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array$1))))
        }
      };
      const this$18 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
      const this$19 = new $c_scm_ArrayBufferView(this$18.scm_ArrayBuffer__f_array, this$18.scm_ArrayBuffer__f_size0);
      return new $c_s_Some(new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$19).next__O())
    } else {
      return $m_s_None$()
    }
  };
  getAllErrors__ALtigerpython_parser_errors_ExtErrorInfo() {
    const this$1 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
    if ((!$f_sc_SeqOps__isEmpty__Z(this$1))) {
      this.sort__V();
      const this$3 = this.Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler__f_errorList;
      if ((this$3.scm_ArrayBuffer__f_size0 >= 0)) {
        const len = this$3.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_errors_ExtErrorInfo.getArrayOf(), [len]);
        this$3.copyToArray__O__I__I__I(destination, 0, this$3.scm_ArrayBuffer__f_size0);
        return destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$6 = new $c_scm_ArrayBufferView(this$3.scm_ArrayBuffer__f_array, this$3.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$6);
        while (it.hasNext__Z()) {
          const elem = it.next__O();
          const unboxedElem = ((elem === null) ? null : elem);
          jsElems.push(unboxedElem)
        };
        return $makeNativeArrayWrapper($d_Ltigerpython_parser_errors_ExtErrorInfo.getArrayOf(), jsElems)
      }
    } else {
      const xs = $m_sci_Nil$();
      const len$1 = xs.length__I();
      const array = $newArrayObject($d_Ltigerpython_parser_errors_ExtErrorInfo.getArrayOf(), [len$1]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i = 0;
      while (iterator.hasNext__Z()) {
        array.u[i] = iterator.next__O();
        i = ((1 + i) | 0)
      };
      return array
    }
  };
}
const $d_Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler = new $TypeData().initClass({
  Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler: 0
}, false, "tigerpython.parser.errors.ErrorHandler$DefaultErrorHandler", {
  Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler: 1,
  O: 1,
  Ltigerpython_parser_errors_ErrorHandler: 1
});
$c_Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler.prototype.$classData = $d_Ltigerpython_parser_errors_ErrorHandler$DefaultErrorHandler;
class $c_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$ extends $c_O {
  getAllErrors__ALtigerpython_parser_errors_ExtErrorInfo() {
    return $f_Ltigerpython_parser_errors_ErrorHandler__getAllErrors__ALtigerpython_parser_errors_ExtErrorInfo(this)
  };
  getFirstError__s_Option() {
    return $m_s_None$()
  };
  hasErrorInRange__I__I__Z(start, end) {
    return false
  };
  reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params) {
    return null
  };
  reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params) {
    return null
  };
}
const $d_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$ = new $TypeData().initClass({
  Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$: 0
}, false, "tigerpython.parser.errors.ErrorHandler$SilentErrorHandler$", {
  Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$: 1,
  O: 1,
  Ltigerpython_parser_errors_ErrorHandler: 1
});
$c_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$.prototype.$classData = $d_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$;
let $n_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$ = (void 0);
function $m_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$() {
  if ((!$n_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$)) {
    $n_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$ = new $c_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$()
  };
  return $n_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$
}
class $c_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$ extends $c_O {
  constructor() {
    super();
    this.Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$__f__lang = null;
    this.Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$__f__lang = "en"
  };
  language_$eq__T__V(l) {
    const x1 = l.toLowerCase();
    if (((x1 === "en") || ((x1 === "de") || ((x1 === "nl") || ((x1 === "fr") || ((x1 === "it") || (x1 === "ru"))))))) {
      this.Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$__f__lang = x1
    }
  };
  messageToString__s_Enumeration$Value__sci_Seq__T(msg, params) {
    const x1 = this.Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$__f__lang;
    let baseMessage = ((x1 === "de") ? $m_Ltigerpython_parser_errormessages_GermanMessages$().getMessage__s_Enumeration$Value__T(msg) : ((x1 === "nl") ? $m_Ltigerpython_parser_errormessages_DutchMessages$().getMessage__s_Enumeration$Value__T(msg) : ((x1 === "fr") ? $m_Ltigerpython_parser_errormessages_FrenchMessages$().getMessage__s_Enumeration$Value__T(msg) : ((x1 === "it") ? $m_Ltigerpython_parser_errormessages_ItalianMessages$().getMessage__s_Enumeration$Value__T(msg) : ((x1 === "ru") ? $m_Ltigerpython_parser_errormessages_RussianMessages$().getMessage__s_Enumeration$Value__T(msg) : $m_Ltigerpython_parser_errormessages_EnglishMessages$().getMessage__s_Enumeration$Value__T(msg))))));
    if ((baseMessage === null)) {
      baseMessage = $m_Ltigerpython_parser_errormessages_EnglishMessages$().getMessage__s_Enumeration$Value__T(msg)
    };
    try {
      const $$x1 = $m_sc_StringOps$();
      const x = baseMessage;
      return $$x1.format$extension__T__sci_Seq__T(x, params.map__F1__O(new $c_sjsr_AnonFunction1(((this$2) => ((x$1$2) => $dp_toString__T(x$1$2)))(this))))
    } catch (e) {
      if ((e instanceof $c_ju_MissingFormatArgumentException)) {
        return baseMessage
      } else {
        throw e
      }
    }
  };
  setMessage__s_Enumeration$Value__T__Z(code, msg) {
    const x1 = this.Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$__f__lang;
    return ((x1 === "de") ? ($m_Ltigerpython_parser_errormessages_GermanMessages$().setMessage__s_Enumeration$Value__T__V(code, msg), true) : ((x1 === "en") && ($m_Ltigerpython_parser_errormessages_EnglishMessages$().setMessage__s_Enumeration$Value__T__V(code, msg), true)))
  };
}
const $d_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$ = new $TypeData().initClass({
  Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$: 0
}, false, "tigerpython.parser.errors.ErrorTranslator$DefaultErrorTranslator$", {
  Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$: 1,
  O: 1,
  Ltigerpython_parser_errors_ErrorTranslator: 1
});
$c_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$.prototype.$classData = $d_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$;
let $n_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$ = (void 0);
function $m_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$() {
  if ((!$n_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$)) {
    $n_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$ = new $c_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$()
  };
  return $n_Ltigerpython_parser_errors_ErrorTranslator$DefaultErrorTranslator$
}
class $c_Ltigerpython_parser_lexer_Scanner$$anon$1 extends $c_Ltigerpython_parser_lexer_CatCodes {
  constructor(outer) {
    super();
    $ct_Ltigerpython_parser_lexer_CatCodes__(this);
    const value = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ESCAPE;
    const this$1 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$1, $bC(92), value, false);
    const value$1 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_COMMENT;
    const this$2 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$2, $bC(35), value$1, false);
    const value$2 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_INVALID;
    const this$3 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$3, $bC(36), value$2, false);
    const value$3 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_INVALID;
    const this$4 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$4, $bC(63), value$3, false);
    const value$4 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$5 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$5, $bC(64), value$4, false);
    const value$5 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$6 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$6, $bC(62), value$5, false);
    const value$6 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$7 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$7, $bC(60), value$6, false);
    const value$7 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$8 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$8, $bC(37), value$7, false);
    const value$8 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$9 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$9, $bC(38), value$8, false);
    const value$9 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$10 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$10, $bC(124), value$9, false);
    const value$10 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$11 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$11, $bC(94), value$10, false);
    const value$11 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$12 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$12, $bC(61), value$11, false);
    const value$12 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$13 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$13, $bC(33), value$12, false);
    const value$13 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$14 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$14, $bC(126), value$13, false);
    const value$14 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    const this$15 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$15, $bC(96), value$14, false);
    const value$15 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DELIMITER;
    const this$16 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$16, $bC(58), value$15, false);
    const value$16 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_IGNORE;
    const this$17 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$17, $bC(12), value$16, false);
    const value$17 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_IGNORE;
    const this$18 = this.Ltigerpython_parser_lexer_CatCodes__f_values;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$18, $bC(65279), value$17, false)
  };
}
const $d_Ltigerpython_parser_lexer_Scanner$$anon$1 = new $TypeData().initClass({
  Ltigerpython_parser_lexer_Scanner$$anon$1: 0
}, false, "tigerpython.parser.lexer.Scanner$$anon$1", {
  Ltigerpython_parser_lexer_Scanner$$anon$1: 1,
  Ltigerpython_parser_lexer_CatCodes: 1,
  O: 1
});
$c_Ltigerpython_parser_lexer_Scanner$$anon$1.prototype.$classData = $d_Ltigerpython_parser_lexer_Scanner$$anon$1;
class $c_Ltigerpython_parser_lexer_Token$ extends $c_O {
  createNameToken__I__T__Ltigerpython_parser_lexer_Token(pos, s) {
    const result = new $c_Ltigerpython_parser_lexer_Token(pos, (s.length | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME);
    result.Ltigerpython_parser_lexer_Token__f_value = s;
    return result
  };
  createIntegerToken__I__T__Ltigerpython_parser_lexer_Token(pos, s) {
    const result = new $c_Ltigerpython_parser_lexer_Token(pos, (s.length | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT);
    result.Ltigerpython_parser_lexer_Token__f_value = s;
    return result
  };
}
const $d_Ltigerpython_parser_lexer_Token$ = new $TypeData().initClass({
  Ltigerpython_parser_lexer_Token$: 0
}, false, "tigerpython.parser.lexer.Token$", {
  Ltigerpython_parser_lexer_Token$: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_lexer_Token$.prototype.$classData = $d_Ltigerpython_parser_lexer_Token$;
let $n_Ltigerpython_parser_lexer_Token$ = (void 0);
function $m_Ltigerpython_parser_lexer_Token$() {
  if ((!$n_Ltigerpython_parser_lexer_Token$)) {
    $n_Ltigerpython_parser_lexer_Token$ = new $c_Ltigerpython_parser_lexer_Token$()
  };
  return $n_Ltigerpython_parser_lexer_Token$
}
class $c_Ltigerpython_parser_parsing_AstStack$ModuleItem extends $c_Ltigerpython_parser_parsing_AstStack$StackItem {
  constructor(outer) {
    super();
    this.Ltigerpython_parser_parsing_AstStack$ModuleItem__f_pos = 0;
    $ct_Ltigerpython_parser_parsing_AstStack$StackItem__Ltigerpython_parser_parsing_AstStack__Ltigerpython_parser_ast_AstNode$Statement__T__(this, outer, null, null);
    this.Ltigerpython_parser_parsing_AstStack$ModuleItem__f_pos = 0
  };
  pos__I() {
    return this.Ltigerpython_parser_parsing_AstStack$ModuleItem__f_pos
  };
  toStatement__Ltigerpython_parser_ast_AstNode$Statement() {
    return this.getItems__Ltigerpython_parser_ast_AstNode$Statement()
  };
}
const $d_Ltigerpython_parser_parsing_AstStack$ModuleItem = new $TypeData().initClass({
  Ltigerpython_parser_parsing_AstStack$ModuleItem: 0
}, false, "tigerpython.parser.parsing.AstStack$ModuleItem", {
  Ltigerpython_parser_parsing_AstStack$ModuleItem: 1,
  Ltigerpython_parser_parsing_AstStack$StackItem: 1,
  O: 1
});
$c_Ltigerpython_parser_parsing_AstStack$ModuleItem.prototype.$classData = $d_Ltigerpython_parser_parsing_AstStack$ModuleItem;
class $c_Ltigerpython_parser_parsing_ControlFlowChecker extends $c_O {
  constructor(parserState) {
    super();
    this.Ltigerpython_parser_parsing_ControlFlowChecker__f_parserState = null;
    this.Ltigerpython_parser_parsing_ControlFlowChecker__f_parserState = parserState
  };
  acceptAssignment__Ltigerpython_parser_ast_AstNode$Assignment__Z(assignment) {
    return false
  };
  acceptAugAssignment__Ltigerpython_parser_ast_AstNode$AugAssign__Z(augAssignment) {
    return false
  };
  acceptAttribute__Ltigerpython_parser_ast_AstNode$Attribute__Z(attribute) {
    return false
  };
  acceptCall__Ltigerpython_parser_ast_AstNode$Call__Z(call) {
    return false
  };
  acceptGlobal__Ltigerpython_parser_ast_AstNode$Global__Z(stmt) {
    return false
  };
  acceptImport__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt) {
    return false
  };
  acceptName__Ltigerpython_parser_ast_AstNode$Name__Z(name) {
    return false
  };
  acceptReturn__Ltigerpython_parser_ast_AstNode$Return__Z(stmt) {
    return false
  };
  acceptSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Z(subscript) {
    return false
  };
  acceptYield__Ltigerpython_parser_ast_AstNode$Yield__Z(yieldExpr) {
    return false
  };
  acceptParameterName__T__V(name) {
    /*<skip>*/
  };
  enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  acceptWhile__Ltigerpython_parser_ast_AstNode$While__Z(whileStmt) {
    return true
  };
  enterLoop__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    const x1 = node.body__Ltigerpython_parser_ast_AstNode$Statement();
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x2 = x1;
      this.checkForInLoopInitialization__ALtigerpython_parser_ast_AstNode$Statement__V(x2.Ltigerpython_parser_ast_AstNode$Suite__f_statements)
    }
  };
  checkForInLoopInitialization__ALtigerpython_parser_ast_AstNode$Statement__V(statements) {
    if ((statements.u.length > 1)) {
      const varNames = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
      let i = 0;
      while ((i < statements.u.length)) {
        const x1 = statements.u[i];
        matchEnd6: {
          if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment)) {
            const x2 = x1;
            const x1$2 = x2.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
            matchEnd7: {
              if ((x1$2 !== null)) {
                if (((new $c_s_Array$UnapplySeqWrapper(x1$2), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(x1$2, 1) === 0))) {
                  const p3 = x1$2.u[0];
                  if ((p3 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                    const x4 = p3;
                    const name = x4.Ltigerpython_parser_ast_AstNode$Name__f_name;
                    if ((name !== "")) {
                      if (((x2.Ltigerpython_parser_ast_AstNode$Assignment__f_value instanceof $c_Ltigerpython_parser_ast_AstNode$Value) && (!varNames.contains__O__Z(name)))) {
                        const value = x2.Ltigerpython_parser_ast_AstNode$Assignment__f_pos;
                        $p_scm_HashMap__put0__O__O__Z__s_Some(varNames, name, value, false);
                        break matchEnd7
                      } else {
                        break matchEnd7
                      }
                    }
                  }
                }
              }
            };
            i = ((1 + i) | 0);
            break matchEnd6
          };
          if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Print)) {
            i = ((1 + i) | 0);
            break matchEnd6
          };
          if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
            const x4$2 = x1;
            if ((x4$2.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)) {
              i = ((1 + i) | 0);
              break matchEnd6
            }
          };
          i = statements.u.length
        }
      };
      i = (((-1) + statements.u.length) | 0);
      while ((i >= 0)) {
        const x1$3 = statements.u[i];
        matchEnd20: {
          if ((x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment)) {
            const x2$2 = x1$3;
            const p4 = x2$2.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
            const value$1 = x2$2.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
            if ((p4 !== null)) {
              if (((new $c_s_Array$UnapplySeqWrapper(p4), true) && ($m_s_Array$UnapplySeqWrapper$().lengthCompare$extension__O__I__I(p4, 1) === 0))) {
                const p6 = p4.u[0];
                if ((p6 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                  const x7 = p6;
                  const name$2 = x7.Ltigerpython_parser_ast_AstNode$Name__f_name;
                  if (varNames.contains__O__Z(name$2)) {
                    matchEnd12: {
                      if ((value$1 instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
                        const x2$3 = value$1;
                        const left = x2$3.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
                        const right = x2$3.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
                        let isAugAssign;
                        if ((left instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                          const x4$3 = left;
                          const srcName = x4$3.Ltigerpython_parser_ast_AstNode$Name__f_name;
                          isAugAssign = (srcName === name$2)
                        } else if ((right instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                          const x8 = right;
                          const srcName$2 = x8.Ltigerpython_parser_ast_AstNode$Name__f_name;
                          isAugAssign = (srcName$2 === name$2)
                        } else {
                          isAugAssign = false
                        };
                        if (isAugAssign) {
                          const this$11 = this.Ltigerpython_parser_parsing_ControlFlowChecker__f_parserState;
                          const pos = (varNames.apply__O__O(name$2) | 0);
                          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                          const params = $m_sci_Nil$();
                          this$11.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
                          break matchEnd12
                        } else {
                          break matchEnd12
                        }
                      };
                      if ((value$1 instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
                        const x5 = value$1;
                        const p8 = x5.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
                        if ((p8 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
                          break matchEnd12
                        }
                      }
                    };
                    i = (((-1) + i) | 0);
                    break matchEnd20
                  }
                }
              }
            }
          };
          if ((x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$AugAssign)) {
            const x9 = x1$3;
            const p11 = x9.Ltigerpython_parser_ast_AstNode$AugAssign__f_target;
            if ((p11 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
              const x14 = p11;
              const name$3 = x14.Ltigerpython_parser_ast_AstNode$Name__f_name;
              if (varNames.contains__O__Z(name$3)) {
                const this$12 = this.Ltigerpython_parser_parsing_ControlFlowChecker__f_parserState;
                const pos$1 = (varNames.apply__O__O(name$3) | 0);
                const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP;
                const params$1 = $m_sci_Nil$();
                this$12.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1);
                i = (((-1) + i) | 0);
                break matchEnd20
              }
            }
          };
          if (((x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment) || ((x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$AugAssign) || (x1$3 instanceof $c_Ltigerpython_parser_ast_AstNode$Print)))) {
            i = (((-1) + i) | 0);
            break matchEnd20
          };
          i = (-1)
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_parsing_ControlFlowChecker = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ControlFlowChecker: 0
}, false, "tigerpython.parser.parsing.ControlFlowChecker", {
  Ltigerpython_parser_parsing_ControlFlowChecker: 1,
  O: 1,
  Ltigerpython_parser_ast_AstVisitor: 1
});
$c_Ltigerpython_parser_parsing_ControlFlowChecker.prototype.$classData = $d_Ltigerpython_parser_parsing_ControlFlowChecker;
class $c_Ltigerpython_parser_parsing_NameChecker extends $c_O {
  constructor(parser, parserState) {
    super();
    this.Ltigerpython_parser_parsing_NameChecker__f_parser = null;
    this.Ltigerpython_parser_parsing_NameChecker__f_parserState = null;
    this.Ltigerpython_parser_parsing_NameChecker__f_parser = parser;
    this.Ltigerpython_parser_parsing_NameChecker__f_parserState = parserState
  };
  acceptAssignment__Ltigerpython_parser_ast_AstNode$Assignment__Z(assignment) {
    return false
  };
  acceptAugAssignment__Ltigerpython_parser_ast_AstNode$AugAssign__Z(augAssignment) {
    return false
  };
  acceptAttribute__Ltigerpython_parser_ast_AstNode$Attribute__Z(attribute) {
    return false
  };
  acceptCall__Ltigerpython_parser_ast_AstNode$Call__Z(call) {
    return false
  };
  acceptGlobal__Ltigerpython_parser_ast_AstNode$Global__Z(stmt) {
    return false
  };
  acceptImport__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt) {
    return false
  };
  acceptReturn__Ltigerpython_parser_ast_AstNode$Return__Z(stmt) {
    return false
  };
  acceptSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Z(subscript) {
    return false
  };
  acceptWhile__Ltigerpython_parser_ast_AstNode$While__Z(whileStmt) {
    return false
  };
  acceptYield__Ltigerpython_parser_ast_AstNode$Yield__Z(yieldExpr) {
    return false
  };
  enterLoop__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  acceptName__Ltigerpython_parser_ast_AstNode$Name__Z(name) {
    return false
  };
  acceptParameterName__T__V(name) {
    /*<skip>*/
  };
  enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
}
const $d_Ltigerpython_parser_parsing_NameChecker = new $TypeData().initClass({
  Ltigerpython_parser_parsing_NameChecker: 0
}, false, "tigerpython.parser.parsing.NameChecker", {
  Ltigerpython_parser_parsing_NameChecker: 1,
  O: 1,
  Ltigerpython_parser_ast_AstVisitor: 1
});
$c_Ltigerpython_parser_parsing_NameChecker.prototype.$classData = $d_Ltigerpython_parser_parsing_NameChecker;
const $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V = (function($thiz, node, ctx) {
  if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
    const x2 = node;
    x2.Ltigerpython_parser_ast_AstNode$Name__f_extExprContext = ctx
  }
});
class $c_Ltigerpython_parser_parsing_NameContextWalker extends $c_O {
  acceptName__Ltigerpython_parser_ast_AstNode$Name__Z(name) {
    return false
  };
  acceptReturn__Ltigerpython_parser_ast_AstNode$Return__Z(stmt) {
    return false
  };
  acceptWhile__Ltigerpython_parser_ast_AstNode$While__Z(whileStmt) {
    return false
  };
  acceptYield__Ltigerpython_parser_ast_AstNode$Yield__Z(yieldExpr) {
    return false
  };
  acceptParameterName__T__V(name) {
    /*<skip>*/
  };
  enterLoop__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  acceptAssignment__Ltigerpython_parser_ast_AstNode$Assignment__Z(assignment) {
    const xs = assignment.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
    const f = ((this$2) => ((target$2) => {
      const target = target$2;
      $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this$2, target, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_ASSIGN_TARGET)
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    if ((assignment.Ltigerpython_parser_ast_AstNode$Assignment__f_targets.u.length === 1)) {
      $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this, assignment.Ltigerpython_parser_ast_AstNode$Assignment__f_value, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_COPY_LOAD)
    };
    return true
  };
  acceptAugAssignment__Ltigerpython_parser_ast_AstNode$AugAssign__Z(augAssignment) {
    $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this, augAssignment.Ltigerpython_parser_ast_AstNode$AugAssign__f_target, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_AUG_ASSIGN_TARGET);
    return true
  };
  acceptAttribute__Ltigerpython_parser_ast_AstNode$Attribute__Z(attribute) {
    $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this, attribute.Ltigerpython_parser_ast_AstNode$Attribute__f_base, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_ATTR_BASE);
    $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this, attribute.Ltigerpython_parser_ast_AstNode$Attribute__f_attr, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_ATTR_FIELD);
    return true
  };
  acceptCall__Ltigerpython_parser_ast_AstNode$Call__Z(call) {
    $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this, call.Ltigerpython_parser_ast_AstNode$Call__f_function, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_CALL);
    return true
  };
  acceptGlobal__Ltigerpython_parser_ast_AstNode$Global__Z(stmt) {
    const xs = stmt.Ltigerpython_parser_ast_AstNode$Global__f_names;
    const f = ((this$2) => ((name$2) => {
      const name = name$2;
      name.Ltigerpython_parser_ast_AstNode$Name__f_extExprContext = $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_GLOBAL
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    return true
  };
  acceptImport__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt) {
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Import)) {
      const x2 = stmt;
      const xs = x2.Ltigerpython_parser_ast_AstNode$Import__f_names;
      const f = ((this$2) => ((alias$2) => {
        const alias = alias$2;
        if ((alias.Ltigerpython_parser_ast_AstNode$Alias__f_asName !== null)) {
          $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this$2, alias.Ltigerpython_parser_ast_AstNode$Alias__f_asName, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_IMPORTED);
          $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this$2, alias.Ltigerpython_parser_ast_AstNode$Alias__f_name, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_HIDDEN)
        } else {
          $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this$2, alias.Ltigerpython_parser_ast_AstNode$Alias__f_name, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_IMPORTED)
        }
      }))(this);
      const len = xs.u.length;
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const arg1 = xs.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i < len)) {
          const arg1$1 = x3.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      };
      return true
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFrom)) {
      const x3$1 = stmt;
      $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this, x3$1.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_HIDDEN);
      const xs$1 = x3$1.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names;
      const f$1 = ((this$2$1) => ((alias$3$2) => {
        const alias$3 = alias$3$2;
        if ((alias$3.Ltigerpython_parser_ast_AstNode$Alias__f_asName !== null)) {
          $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this$2$1, alias$3.Ltigerpython_parser_ast_AstNode$Alias__f_asName, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_IMPORTED);
          $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this$2$1, alias$3.Ltigerpython_parser_ast_AstNode$Alias__f_name, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_HIDDEN)
        } else {
          $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this$2$1, alias$3.Ltigerpython_parser_ast_AstNode$Alias__f_name, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_IMPORTED)
        }
      }))(this);
      const len$1 = xs$1.u.length;
      let i$1 = 0;
      if ((xs$1 !== null)) {
        while ((i$1 < len$1)) {
          const arg1$8 = xs$1.u[i$1];
          f$1(arg1$8);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_I(xs$1, 1)) {
        const x3$2 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$9 = x3$2.u[i$1];
          f$1(arg1$9);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_D(xs$1, 1)) {
        const x4$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$10 = x4$1.u[i$1];
          f$1(arg1$10);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_J(xs$1, 1)) {
        const x5$1 = xs$1;
        while ((i$1 < len$1)) {
          const t$1 = x5$1.u[i$1];
          const lo$1 = t$1.RTLong__f_lo;
          const hi$1 = t$1.RTLong__f_hi;
          f$1(new $c_RTLong(lo$1, hi$1));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_F(xs$1, 1)) {
        const x6$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$11 = x6$1.u[i$1];
          f$1(arg1$11);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_C(xs$1, 1)) {
        const x7$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$12 = x7$1.u[i$1];
          f$1($bC(arg1$12));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_B(xs$1, 1)) {
        const x8$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$13 = x8$1.u[i$1];
          f$1(arg1$13);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_S(xs$1, 1)) {
        const x9$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$14 = x9$1.u[i$1];
          f$1(arg1$14);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_Z(xs$1, 1)) {
        const x10$1 = xs$1;
        while ((i$1 < len$1)) {
          const arg1$15 = x10$1.u[i$1];
          f$1(arg1$15);
          i$1 = ((1 + i$1) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$1)
      };
      return true
    } else {
      return false
    }
  };
  acceptSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Z(subscript) {
    $p_Ltigerpython_parser_parsing_NameContextWalker__setNameContext__Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__V(this, subscript.Ltigerpython_parser_ast_AstNode$Subscript__f_base, $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_SUBSCRIPT);
    return true
  };
}
const $d_Ltigerpython_parser_parsing_NameContextWalker = new $TypeData().initClass({
  Ltigerpython_parser_parsing_NameContextWalker: 0
}, false, "tigerpython.parser.parsing.NameContextWalker", {
  Ltigerpython_parser_parsing_NameContextWalker: 1,
  O: 1,
  Ltigerpython_parser_ast_AstVisitor: 1
});
$c_Ltigerpython_parser_parsing_NameContextWalker.prototype.$classData = $d_Ltigerpython_parser_parsing_NameContextWalker;
class $c_Ltigerpython_parser_parsing_ReturnValueChecker extends $c_O {
  constructor(parser, parserState) {
    super();
    this.Ltigerpython_parser_parsing_ReturnValueChecker__f_parser = null;
    this.Ltigerpython_parser_parsing_ReturnValueChecker__f_parserState = null;
    this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack = null;
    this.Ltigerpython_parser_parsing_ReturnValueChecker__f_parser = parser;
    this.Ltigerpython_parser_parsing_ReturnValueChecker__f_parserState = parserState;
    const elems = $m_sci_Nil$();
    const this$2 = new $c_scm_Stack(16);
    this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack = this$2.addAll__sc_IterableOnce__scm_ArrayDeque(elems)
  };
  acceptAugAssignment__Ltigerpython_parser_ast_AstNode$AugAssign__Z(augAssignment) {
    return false
  };
  acceptAttribute__Ltigerpython_parser_ast_AstNode$Attribute__Z(attribute) {
    return false
  };
  acceptCall__Ltigerpython_parser_ast_AstNode$Call__Z(call) {
    return false
  };
  acceptGlobal__Ltigerpython_parser_ast_AstNode$Global__Z(stmt) {
    return false
  };
  acceptImport__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt) {
    return false
  };
  acceptName__Ltigerpython_parser_ast_AstNode$Name__Z(name) {
    return false
  };
  acceptSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Z(subscript) {
    return false
  };
  acceptWhile__Ltigerpython_parser_ast_AstNode$While__Z(whileStmt) {
    return false
  };
  acceptParameterName__T__V(name) {
    /*<skip>*/
  };
  enterLoop__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  acceptReturn__Ltigerpython_parser_ast_AstNode$Return__Z(stmt) {
    const this$1 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
    if ((!this$1.isEmpty__Z())) {
      if ((stmt.Ltigerpython_parser_ast_AstNode$Return__f_value !== null)) {
        const this$2 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
        const this$3 = new $c_sc_IndexedSeqView$Id(this$2);
        new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$3).next__O().setToFunction__V()
      } else {
        const this$4 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
        const this$5 = new $c_sc_IndexedSeqView$Id(this$4);
        new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$5).next__O().setToProcedure__V()
      };
      return true
    } else {
      return false
    }
  };
  acceptYield__Ltigerpython_parser_ast_AstNode$Yield__Z(yieldExpr) {
    const this$1 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
    if ((!this$1.isEmpty__Z())) {
      const this$2 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
      const this$3 = new $c_sc_IndexedSeqView$Id(this$2);
      new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$3).next__O().setToGenerator__V();
      return true
    } else {
      return false
    }
  };
  acceptAssignment__Ltigerpython_parser_ast_AstNode$Assignment__Z(assignment) {
    const xs = assignment.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
    const f = ((this$2) => ((target$2) => {
      const target = target$2;
      if ((target instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const x2 = target;
        const pos = x2.Ltigerpython_parser_ast_AstNode$Name__f_pos;
        const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
        const this$3 = this$2.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
        let $$x1;
        if (((!this$3.isEmpty__Z()) && this$2.Ltigerpython_parser_parsing_ReturnValueChecker__f_parserState.Ltigerpython_parser_parsing_ParserState__f_strictCode)) {
          const this$4 = this$2.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
          const this$5 = new $c_sc_IndexedSeqView$Id(this$4);
          $$x1 = (name === new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$5).next__O().Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue__f_name)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const this$6 = this$2.Ltigerpython_parser_parsing_ReturnValueChecker__f_parserState;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION;
          const params = $m_sci_Nil$();
          return this$6.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
        } else if (this$2.Ltigerpython_parser_parsing_ReturnValueChecker__f_parserState.Ltigerpython_parser_parsing_ParserState__f_protectFunctions) {
          if ($m_Ltigerpython_parser_scopes_BuiltinNames$().Ltigerpython_parser_scopes_BuiltinNames$__f_builtins.contains__O__Z(name)) {
            const this$10 = this$2.Ltigerpython_parser_parsing_ReturnValueChecker__f_parserState;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME;
            const array = [name];
            const params$1 = new $c_sjsr_WrappedVarArgs(array);
            return this$10.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1)
          } else {
            return (void 0)
          }
        } else {
          return (void 0)
        }
      } else {
        return (void 0)
      }
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    return true
  };
  enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
      const x2 = node;
      const this$1 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
      const elem = new $c_Ltigerpython_parser_parsing_ReturnValueChecker$ReturnValue(x2.getName__T());
      this$1.prepend__O__scm_ArrayDeque(elem)
    }
  };
  leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    if ((node instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
      const x2 = node;
      const this$1 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_returnValueStack;
      const returnValue = this$1.removeHead__Z__O(false);
      if (this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(x2.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body)) {
        returnValue.setToProcedure__V()
      };
      if ((!returnValue.isNonUniform__Z())) {
        if (returnValue.isGeneratorWithReturnValue__Z()) {
          const this$2 = this.Ltigerpython_parser_parsing_ReturnValueChecker__f_parserState;
          const pos = node.pos__I();
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE;
          const params = $m_sci_Nil$();
          this$2.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
        }
      }
    }
  };
  hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt) {
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x2 = stmt;
      const xs = x2.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
      if ((xs.u.length !== 0)) {
        const $$x1 = $m_sc_ArrayOps$();
        const xs$1 = x2.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
        return this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z($$x1.last$extension__O__O(xs$1))
      }
    };
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x3 = stmt;
      return (this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(x3.Ltigerpython_parser_ast_AstNode$If__f_body) || ((x3.Ltigerpython_parser_ast_AstNode$If__f_elseBody !== null) && this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(x3.Ltigerpython_parser_ast_AstNode$If__f_elseBody)))
    };
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
      const x4 = stmt;
      if (this.isAlwaysTrue__Ltigerpython_parser_ast_AstNode$Expression__Z(x4.Ltigerpython_parser_ast_AstNode$While__f_test)) {
        return this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x4.Ltigerpython_parser_ast_AstNode$While__f_body)
      }
    };
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Return)) {
      const x5 = stmt;
      return (x5.Ltigerpython_parser_ast_AstNode$Return__f_value === null)
    };
    if (((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Raise2) || (stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Raise3))) {
      return false
    };
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x8 = stmt;
      if ((x8.Ltigerpython_parser_ast_AstNode$Try__f_finalBody === null)) {
        let $$x2;
        if (this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(x8.Ltigerpython_parser_ast_AstNode$Try__f_body)) {
          $$x2 = true
        } else {
          const xs$2 = x8.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
          let $$x3;
          _return: {
            let i = 0;
            while ((i < xs$2.u.length)) {
              const arg1 = xs$2.u[i];
              const h = arg1;
              if (this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(h.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body)) {
                $$x3 = i;
                break _return
              };
              i = ((1 + i) | 0)
            };
            $$x3 = (-1)
          };
          $$x2 = ($$x3 >= 0)
        };
        if ($$x2) {
          return true
        } else {
          return ((x8.Ltigerpython_parser_ast_AstNode$Try__f_elseBody !== null) && this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(x8.Ltigerpython_parser_ast_AstNode$Try__f_elseBody))
        }
      } else {
        return this.hasLooseEnd__Ltigerpython_parser_ast_AstNode$Statement__Z(x8.Ltigerpython_parser_ast_AstNode$Try__f_finalBody)
      }
    };
    return true
  };
  hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt) {
    if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const x2 = stmt;
      const xs = x2.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
      let $$x1;
      _return: {
        let i = 0;
        while ((i < xs.u.length)) {
          const arg1 = xs.u[i];
          const stmt$2 = arg1;
          if (this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt$2)) {
            $$x1 = i;
            break _return
          };
          i = ((1 + i) | 0)
        };
        $$x1 = (-1)
      };
      return ($$x1 >= 0)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const x3 = stmt;
      return (this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x3.Ltigerpython_parser_ast_AstNode$If__f_body) || this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x3.Ltigerpython_parser_ast_AstNode$If__f_elseBody))
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$With)) {
      const x4 = stmt;
      return this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x4.Ltigerpython_parser_ast_AstNode$With__f_body)
    } else if ((stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const x5 = stmt;
      if (((this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x5.Ltigerpython_parser_ast_AstNode$Try__f_body) || this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x5.Ltigerpython_parser_ast_AstNode$Try__f_finalBody)) || this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x5.Ltigerpython_parser_ast_AstNode$Try__f_elseBody))) {
        return true
      } else {
        const xs$1 = x5.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
        let $$x2;
        _return$1: {
          let i$1 = 0;
          while ((i$1 < xs$1.u.length)) {
            const arg1$1 = xs$1.u[i$1];
            const x = arg1$1;
            if (this.hasBreak__Ltigerpython_parser_ast_AstNode$Statement__Z(x.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body)) {
              $$x2 = i$1;
              break _return$1
            };
            i$1 = ((1 + i$1) | 0)
          };
          $$x2 = (-1)
        };
        return ($$x2 >= 0)
      }
    } else {
      return (stmt instanceof $c_Ltigerpython_parser_ast_AstNode$Break)
    }
  };
  isAlwaysTrue__Ltigerpython_parser_ast_AstNode$Expression__Z(test) {
    if ((test instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue)) {
      const x2 = test;
      const p4 = x2.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value;
      if ((p4 === true)) {
        return true
      }
    };
    return false
  };
}
const $d_Ltigerpython_parser_parsing_ReturnValueChecker = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ReturnValueChecker: 0
}, false, "tigerpython.parser.parsing.ReturnValueChecker", {
  Ltigerpython_parser_parsing_ReturnValueChecker: 1,
  O: 1,
  Ltigerpython_parser_ast_AstVisitor: 1
});
$c_Ltigerpython_parser_parsing_ReturnValueChecker.prototype.$classData = $d_Ltigerpython_parser_parsing_ReturnValueChecker;
class $c_Ltigerpython_parser_parsing_TypeChecker extends $c_O {
  constructor(parserUtils, parserState) {
    super();
    this.Ltigerpython_parser_parsing_TypeChecker__f_parserUtils = null;
    this.Ltigerpython_parser_parsing_TypeChecker__f_parserState = null;
    this.Ltigerpython_parser_parsing_TypeChecker__f_parserUtils = parserUtils;
    this.Ltigerpython_parser_parsing_TypeChecker__f_parserState = parserState
  };
  acceptAssignment__Ltigerpython_parser_ast_AstNode$Assignment__Z(assignment) {
    return false
  };
  acceptAugAssignment__Ltigerpython_parser_ast_AstNode$AugAssign__Z(augAssignment) {
    return false
  };
  acceptAttribute__Ltigerpython_parser_ast_AstNode$Attribute__Z(attribute) {
    return false
  };
  acceptGlobal__Ltigerpython_parser_ast_AstNode$Global__Z(stmt) {
    return false
  };
  acceptImport__Ltigerpython_parser_ast_AstNode$Statement__Z(stmt) {
    return false
  };
  acceptName__Ltigerpython_parser_ast_AstNode$Name__Z(name) {
    return false
  };
  acceptReturn__Ltigerpython_parser_ast_AstNode$Return__Z(stmt) {
    return false
  };
  acceptSubscript__Ltigerpython_parser_ast_AstNode$Subscript__Z(subscript) {
    return false
  };
  acceptWhile__Ltigerpython_parser_ast_AstNode$While__Z(whileStmt) {
    return false
  };
  acceptYield__Ltigerpython_parser_ast_AstNode$Yield__Z(yieldExpr) {
    return false
  };
  acceptParameterName__T__V(name) {
    /*<skip>*/
  };
  enterLoop__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  enterScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  leaveScope__Ltigerpython_parser_ast_AstNode$Statement__V(node) {
    /*<skip>*/
  };
  getTypeOfName__Ltigerpython_parser_ast_AstNode$Expression__s_Option(expr) {
    if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const x2 = expr;
      let rc6 = false;
      let x2$2 = null;
      const x1$2 = this.getTypeOfName__Ltigerpython_parser_ast_AstNode$Expression__s_Option(x2.Ltigerpython_parser_ast_AstNode$Call__f_function);
      if ((x1$2 instanceof $c_s_Some)) {
        rc6 = true;
        x2$2 = x1$2;
        const dt = x2$2.s_Some__f_value;
        if (dt.isCallable__Z()) {
          const x1$3 = dt.getReturnType__Ltigerpython_parser_types_DataType();
          const x = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE;
          let $$x1;
          if ((x === x1$3)) {
            $$x1 = true
          } else {
            const x$3 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE;
            $$x1 = (x$3 === x1$3)
          };
          if ($$x1) {
            return new $c_s_Some($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE)
          } else {
            return new $c_s_Some(x1$3)
          }
        }
      };
      if (rc6) {
        return new $c_s_Some($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE)
      };
      return $m_s_None$()
    } else if ((expr instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x3 = expr;
      return this.Ltigerpython_parser_parsing_TypeChecker__f_parserUtils.getTypeOfName__I__T__Z__s_Option(x3.Ltigerpython_parser_ast_AstNode$Name__f_pos, x3.Ltigerpython_parser_ast_AstNode$Name__f_name, false)
    } else {
      return $m_s_None$()
    }
  };
  acceptCall__Ltigerpython_parser_ast_AstNode$Call__Z(call) {
    const x1 = call.Ltigerpython_parser_ast_AstNode$Call__f_function;
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const x2 = x1;
      if ((x2 !== null)) {
        const x1$2 = this.getTypeOfName__Ltigerpython_parser_ast_AstNode$Expression__s_Option(call.Ltigerpython_parser_ast_AstNode$Call__f_function);
        matchEnd11: {
          if ((x1$2 instanceof $c_s_Some)) {
            const x2$2 = x1$2;
            const p3 = x2$2.s_Some__f_value;
            const x = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE;
            let $$x1;
            if ((x === p3)) {
              $$x1 = true
            } else {
              const x$3 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_NONE_TYPE;
              if ((x$3 === p3)) {
                $$x1 = true
              } else {
                const x$5 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_INTEGER;
                if ((x$5 === p3)) {
                  $$x1 = true
                } else {
                  const x$7 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
                  if ((x$7 === p3)) {
                    $$x1 = true
                  } else {
                    const x$9 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_STRING;
                    if ((x$9 === p3)) {
                      $$x1 = true
                    } else {
                      const x$11 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_BOOLEAN;
                      $$x1 = (x$11 === p3)
                    }
                  }
                }
              }
            };
            if ($$x1) {
              const this$1 = this.Ltigerpython_parser_parsing_TypeChecker__f_parserState;
              const pos = call.Ltigerpython_parser_ast_AstNode$Call__f_pos;
              const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_CALL;
              const params = $m_sci_Nil$();
              this$1.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
              break matchEnd11
            }
          }
        };
        return true
      }
    };
    return false
  };
}
const $d_Ltigerpython_parser_parsing_TypeChecker = new $TypeData().initClass({
  Ltigerpython_parser_parsing_TypeChecker: 0
}, false, "tigerpython.parser.parsing.TypeChecker", {
  Ltigerpython_parser_parsing_TypeChecker: 1,
  O: 1,
  Ltigerpython_parser_ast_AstVisitor: 1
});
$c_Ltigerpython_parser_parsing_TypeChecker.prototype.$classData = $d_Ltigerpython_parser_parsing_TypeChecker;
class $c_Ltigerpython_parser_scopes_AstWalker$$anon$1 extends $c_Ltigerpython_parser_types_TypeAstWalker {
  constructor(outer) {
    super();
    this.Ltigerpython_parser_scopes_AstWalker$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.Ltigerpython_parser_scopes_AstWalker$$anon$1__f_$outer = outer
    };
    $ct_Ltigerpython_parser_types_TypeAstWalker__(this)
  };
  findName__T__s_Option(name) {
    const result = $c_Ltigerpython_parser_types_TypeAstWalker.prototype.findName__T__s_Option.call(this, name);
    return ((!result.isEmpty__Z()) ? result : this.Ltigerpython_parser_scopes_AstWalker$$anon$1__f_$outer.Ltigerpython_parser_scopes_AstWalker__f_scope.findLocal__T__s_Option(name))
  };
}
const $d_Ltigerpython_parser_scopes_AstWalker$$anon$1 = new $TypeData().initClass({
  Ltigerpython_parser_scopes_AstWalker$$anon$1: 0
}, false, "tigerpython.parser.scopes.AstWalker$$anon$1", {
  Ltigerpython_parser_scopes_AstWalker$$anon$1: 1,
  Ltigerpython_parser_types_TypeAstWalker: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_AstWalker$$anon$1.prototype.$classData = $d_Ltigerpython_parser_scopes_AstWalker$$anon$1;
class $c_Ltigerpython_parser_scopes_ClassScope extends $c_Ltigerpython_parser_scopes_Scope {
  constructor(startPos, endPos, pyClass) {
    super();
    this.Ltigerpython_parser_scopes_ClassScope__f_startPos = 0;
    this.Ltigerpython_parser_scopes_ClassScope__f_endPos = 0;
    this.Ltigerpython_parser_scopes_ClassScope__f_pyClass = null;
    this.Ltigerpython_parser_scopes_ClassScope__f_startPos = startPos;
    this.Ltigerpython_parser_scopes_ClassScope__f_endPos = endPos;
    this.Ltigerpython_parser_scopes_ClassScope__f_pyClass = pyClass;
    $ct_Ltigerpython_parser_scopes_Scope__(this)
  };
  startPos__I() {
    return this.Ltigerpython_parser_scopes_ClassScope__f_startPos
  };
  endPos__I() {
    return this.Ltigerpython_parser_scopes_ClassScope__f_endPos
  };
  define__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    this.Ltigerpython_parser_scopes_ClassScope__f_pyClass.setField__T__Ltigerpython_parser_types_DataType__V(name, dataType)
  };
  getCurrentPath__T() {
    const $$x1 = $m_sc_StringOps$();
    const array = [$c_Ltigerpython_parser_scopes_Scope.prototype.getCurrentPath__T.call(this), this.Ltigerpython_parser_scopes_ClassScope__f_pyClass.Ltigerpython_parser_types_PythonClass__f_name];
    return $$x1.format$extension__T__sci_Seq__T("%s.%s", new $c_sjsr_WrappedVarArgs(array))
  };
  getLocals__sci_Map() {
    const this$1 = this.Ltigerpython_parser_scopes_ClassScope__f_pyClass;
    const this$2 = this$1.Ltigerpython_parser_types_PythonClass__f_classFields;
    const this$4 = this$2.Ltigerpython_parser_types_NameMap__f_map;
    $m_s_$less$colon$less$();
    const this$9 = $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$4);
    const this$5 = this.Ltigerpython_parser_scopes_ClassScope__f_pyClass;
    const this$6 = this$5.Ltigerpython_parser_types_PythonClass__f_instanceFields;
    const this$8 = this$6.Ltigerpython_parser_types_NameMap__f_map;
    $m_s_$less$colon$less$();
    const xs = $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$8);
    return this$9.concat__sc_IterableOnce__sc_IterableOps(xs)
  };
}
function $isArrayOf_Ltigerpython_parser_scopes_ClassScope(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_scopes_ClassScope)))
}
const $d_Ltigerpython_parser_scopes_ClassScope = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ClassScope: 0
}, false, "tigerpython.parser.scopes.ClassScope", {
  Ltigerpython_parser_scopes_ClassScope: 1,
  Ltigerpython_parser_scopes_Scope: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ClassScope.prototype.$classData = $d_Ltigerpython_parser_scopes_ClassScope;
class $c_Ltigerpython_parser_scopes_ForLoopScope extends $c_Ltigerpython_parser_scopes_Scope {
  constructor(startPos, endPos, loopVars) {
    super();
    this.Ltigerpython_parser_scopes_ForLoopScope__f_startPos = 0;
    this.Ltigerpython_parser_scopes_ForLoopScope__f_endPos = 0;
    this.Ltigerpython_parser_scopes_ForLoopScope__f_loopVars = null;
    this.Ltigerpython_parser_scopes_ForLoopScope__f_startPos = startPos;
    this.Ltigerpython_parser_scopes_ForLoopScope__f_endPos = endPos;
    this.Ltigerpython_parser_scopes_ForLoopScope__f_loopVars = loopVars;
    $ct_Ltigerpython_parser_scopes_Scope__(this)
  };
  startPos__I() {
    return this.Ltigerpython_parser_scopes_ForLoopScope__f_startPos
  };
  endPos__I() {
    return this.Ltigerpython_parser_scopes_ForLoopScope__f_endPos
  };
  addGlobal__T__V(name) {
    const x1 = this.Ltigerpython_parser_scopes_Scope__f_parent;
    if ((x1 instanceof $c_Ltigerpython_parser_scopes_ForLoopScope)) {
      const x2 = x1;
      x2.addGlobal__T__V(name)
    } else if ((x1 instanceof $c_Ltigerpython_parser_scopes_FunctionScope)) {
      const x3 = x1;
      const this$1 = x3.Ltigerpython_parser_scopes_FunctionScope__f_globals;
      this$1.addOne__O__scm_Growable(name)
    }
  };
  define__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    if ((!this.Ltigerpython_parser_scopes_ForLoopScope__f_loopVars.contains__O__Z(name))) {
      this.Ltigerpython_parser_scopes_Scope__f_parent.define__T__Ltigerpython_parser_types_DataType__V(name, dataType)
    }
  };
  getLocals__sci_Map() {
    const this$1 = this.Ltigerpython_parser_scopes_Scope__f_parent.getLocals__sci_Map();
    const xs = this.Ltigerpython_parser_scopes_ForLoopScope__f_loopVars;
    return this$1.concat__sc_IterableOnce__sc_IterableOps(xs)
  };
}
function $isArrayOf_Ltigerpython_parser_scopes_ForLoopScope(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_scopes_ForLoopScope)))
}
const $d_Ltigerpython_parser_scopes_ForLoopScope = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ForLoopScope: 0
}, false, "tigerpython.parser.scopes.ForLoopScope", {
  Ltigerpython_parser_scopes_ForLoopScope: 1,
  Ltigerpython_parser_scopes_Scope: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ForLoopScope.prototype.$classData = $d_Ltigerpython_parser_scopes_ForLoopScope;
class $c_Ltigerpython_parser_scopes_FunctionScope extends $c_Ltigerpython_parser_scopes_Scope {
  constructor(startPos, endPos, function$1) {
    super();
    this.Ltigerpython_parser_scopes_FunctionScope__f_startPos = 0;
    this.Ltigerpython_parser_scopes_FunctionScope__f_endPos = 0;
    this.Ltigerpython_parser_scopes_FunctionScope__f_function = null;
    this.Ltigerpython_parser_scopes_FunctionScope__f_locals = null;
    this.Ltigerpython_parser_scopes_FunctionScope__f_globals = null;
    this.Ltigerpython_parser_scopes_FunctionScope__f_extNameInfo = null;
    this.Ltigerpython_parser_scopes_FunctionScope__f__returnType = null;
    this.Ltigerpython_parser_scopes_FunctionScope__f_startPos = startPos;
    this.Ltigerpython_parser_scopes_FunctionScope__f_endPos = endPos;
    this.Ltigerpython_parser_scopes_FunctionScope__f_function = function$1;
    $ct_Ltigerpython_parser_scopes_Scope__(this);
    this.Ltigerpython_parser_scopes_FunctionScope__f_locals = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    this.Ltigerpython_parser_scopes_FunctionScope__f_globals = $m_scm_Set$().apply__sci_Seq__O($m_sci_Nil$());
    this.Ltigerpython_parser_scopes_FunctionScope__f_extNameInfo = new $c_Ltigerpython_parser_scopes_ExtNameInfo();
    const xs = function$1.Ltigerpython_parser_types_PythonFunction__f_params;
    const f = ((this$2) => ((param$2) => {
      const param = param$2;
      this$2.define__T__Ltigerpython_parser_types_DataType__V(param.Ltigerpython_parser_types_Parameter__f_name, param.Ltigerpython_parser_types_Parameter__f_dataType)
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    }
  };
  startPos__I() {
    return this.Ltigerpython_parser_scopes_FunctionScope__f_startPos
  };
  endPos__I() {
    return this.Ltigerpython_parser_scopes_FunctionScope__f_endPos
  };
  returnType_$eq__Ltigerpython_parser_types_DataType__V(retType) {
    if (((this.Ltigerpython_parser_scopes_FunctionScope__f__returnType !== null) && (retType !== null))) {
      if ((!this.Ltigerpython_parser_scopes_FunctionScope__f__returnType.isOf__Ltigerpython_parser_types_DataType__Z($m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_GENERATOR_TYPE))) {
        this.Ltigerpython_parser_scopes_FunctionScope__f__returnType = $m_Ltigerpython_parser_types_DataType$().getCompatibleType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(this.Ltigerpython_parser_scopes_FunctionScope__f__returnType, retType)
      }
    } else {
      this.Ltigerpython_parser_scopes_FunctionScope__f__returnType = retType
    }
  };
  getCurrentPath__T() {
    const parentPath = $c_Ltigerpython_parser_scopes_Scope.prototype.getCurrentPath__T.call(this);
    if ((parentPath !== null)) {
      const $$x1 = $m_sc_StringOps$();
      const array = [parentPath, this.Ltigerpython_parser_scopes_FunctionScope__f_function.Ltigerpython_parser_types_PythonFunction__f_name];
      return $$x1.format$extension__T__sci_Seq__T("%s.%s", new $c_sjsr_WrappedVarArgs(array))
    } else {
      return this.Ltigerpython_parser_scopes_FunctionScope__f_function.Ltigerpython_parser_types_PythonFunction__f_name
    }
  };
  define__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    if (this.Ltigerpython_parser_scopes_FunctionScope__f_globals.contains__O__Z(name)) {
      const module = this.getModule__Ltigerpython_parser_scopes_ModuleScope();
      if ((module !== null)) {
        module.define__T__Ltigerpython_parser_types_DataType__V(name, dataType);
        module.addGlobal__T__V(name)
      }
    } else {
      const this$1 = this.Ltigerpython_parser_scopes_FunctionScope__f_locals;
      $p_scm_HashMap__put0__O__O__Z__s_Some(this$1, name, dataType, false)
    }
  };
  getLocals__sci_Map() {
    const this$2 = this.Ltigerpython_parser_scopes_FunctionScope__f_locals;
    $m_s_$less$colon$less$();
    return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$2)
  };
}
function $isArrayOf_Ltigerpython_parser_scopes_FunctionScope(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_scopes_FunctionScope)))
}
const $d_Ltigerpython_parser_scopes_FunctionScope = new $TypeData().initClass({
  Ltigerpython_parser_scopes_FunctionScope: 0
}, false, "tigerpython.parser.scopes.FunctionScope", {
  Ltigerpython_parser_scopes_FunctionScope: 1,
  Ltigerpython_parser_scopes_Scope: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_FunctionScope.prototype.$classData = $d_Ltigerpython_parser_scopes_FunctionScope;
class $c_Ltigerpython_parser_scopes_ModuleScope extends $c_Ltigerpython_parser_scopes_Scope {
  constructor(sourceLength, module, moduleLoader) {
    super();
    this.Ltigerpython_parser_scopes_ModuleScope__f_module = null;
    this.Ltigerpython_parser_scopes_ModuleScope__f_moduleLoader = null;
    this.Ltigerpython_parser_scopes_ModuleScope__f_startPos = 0;
    this.Ltigerpython_parser_scopes_ModuleScope__f_endPos = 0;
    this.Ltigerpython_parser_scopes_ModuleScope__f_globals = null;
    this.Ltigerpython_parser_scopes_ModuleScope__f_extNameInfo = null;
    this.Ltigerpython_parser_scopes_ModuleScope__f_module = module;
    this.Ltigerpython_parser_scopes_ModuleScope__f_moduleLoader = moduleLoader;
    $ct_Ltigerpython_parser_scopes_Scope__(this);
    this.Ltigerpython_parser_scopes_ModuleScope__f_startPos = 0;
    this.Ltigerpython_parser_scopes_ModuleScope__f_endPos = sourceLength;
    this.Ltigerpython_parser_scopes_ModuleScope__f_globals = $m_scm_Set$().apply__sci_Seq__O($m_sci_Nil$());
    this.Ltigerpython_parser_scopes_ModuleScope__f_extNameInfo = new $c_Ltigerpython_parser_scopes_ExtNameInfo()
  };
  startPos__I() {
    return this.Ltigerpython_parser_scopes_ModuleScope__f_startPos
  };
  endPos__I() {
    return this.Ltigerpython_parser_scopes_ModuleScope__f_endPos
  };
  getModule__Ltigerpython_parser_scopes_ModuleScope() {
    return this
  };
  define__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    if ((this.Ltigerpython_parser_scopes_ModuleScope__f_module !== null)) {
      this.Ltigerpython_parser_scopes_ModuleScope__f_module.setField__T__Ltigerpython_parser_types_DataType__V(name, dataType)
    }
  };
  getCurrentPath__T() {
    return this.Ltigerpython_parser_scopes_ModuleScope__f_module.getFullName__T()
  };
  getLocals__sci_Map() {
    if ((this.Ltigerpython_parser_scopes_ModuleScope__f_module !== null)) {
      return this.Ltigerpython_parser_scopes_ModuleScope__f_module.getFields__sci_Map()
    } else {
      const this$1 = $m_s_Predef$().s_Predef$__f_Map;
      const elems = $m_sci_Nil$();
      return this$1.from__sc_IterableOnce__sci_Map(elems)
    }
  };
  importModule__T__T__s_Option(moduleName, importName) {
    if (((importName === null) || (importName === ""))) {
      return new $c_s_Some(this.Ltigerpython_parser_scopes_ModuleScope__f_moduleLoader.importName__T__Ltigerpython_parser_types_DataType(moduleName))
    } else if (((moduleName === ".") || (moduleName === this.Ltigerpython_parser_scopes_ModuleScope__f_module.name__T()))) {
      return this.findName__T__s_Option(importName)
    } else {
      let $$x1;
      if ((((moduleName.length | 0) >= 0) && (moduleName.substring(0, (".".length | 0)) === "."))) {
        $$x1 = true
      } else {
        let x1;
        _return: {
          const len = (moduleName.length | 0);
          let i = 0;
          while ((i < len)) {
            const index = i;
            const arg1 = (65535 & (moduleName.charCodeAt(index) | 0));
            if ((arg1 === 46)) {
              x1 = i;
              break _return
            };
            i = ((1 + i) | 0)
          };
          x1 = (-1)
        };
        $$x1 = (((x1 === (-1)) ? moduleName : moduleName.substring(0, x1)) === this.Ltigerpython_parser_scopes_ModuleScope__f_module.name__T())
      };
      if ($$x1) {
        let x1$1;
        _return$1: {
          const len$1 = (moduleName.length | 0);
          let i$1 = 0;
          while ((i$1 < len$1)) {
            const index$1 = i$1;
            const arg1$1 = (65535 & (moduleName.charCodeAt(index$1) | 0));
            if ((arg1$1 === 46)) {
              x1$1 = i$1;
              break _return$1
            };
            i$1 = ((1 + i$1) | 0)
          };
          x1$1 = (-1)
        };
        const x = ((x1$1 === (-1)) ? "" : moduleName.substring(x1$1));
        let x1$2;
        _return$2: {
          const len$2 = (x.length | 0);
          let i$2 = 0;
          while ((i$2 < len$2)) {
            const index$2 = i$2;
            const arg1$2 = (65535 & (x.charCodeAt(index$2) | 0));
            if ((arg1$2 !== 46)) {
              x1$2 = i$2;
              break _return$2
            };
            i$2 = ((1 + i$2) | 0)
          };
          x1$2 = (-1)
        };
        const modName = ((x1$2 === (-1)) ? "" : x.substring(x1$2));
        if ((modName !== "")) {
          const x1$3 = this.findName__T__s_Option(modName);
          if ((x1$3 instanceof $c_s_Some)) {
            const x2 = x1$3;
            const dt = x2.s_Some__f_value;
            return dt.findField__T__s_Option(importName)
          } else {
            return $m_s_None$()
          }
        } else {
          return this.importModule__T__T__s_Option(".", importName)
        }
      } else {
        return new $c_s_Some(this.Ltigerpython_parser_scopes_ModuleScope__f_moduleLoader.importNameFrom__T__T__Ltigerpython_parser_types_DataType(moduleName, importName))
      }
    }
  };
  addGlobal__T__V(name) {
    if (((name !== null) && (name !== ""))) {
      const this$1 = this.Ltigerpython_parser_scopes_ModuleScope__f_globals;
      this$1.addOne__O__scm_Growable(name)
    }
  };
}
function $isArrayOf_Ltigerpython_parser_scopes_ModuleScope(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_scopes_ModuleScope)))
}
const $d_Ltigerpython_parser_scopes_ModuleScope = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ModuleScope: 0
}, false, "tigerpython.parser.scopes.ModuleScope", {
  Ltigerpython_parser_scopes_ModuleScope: 1,
  Ltigerpython_parser_scopes_Scope: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ModuleScope.prototype.$classData = $d_Ltigerpython_parser_scopes_ModuleScope;
class $c_Ltigerpython_parser_types_ClassType extends $c_Ltigerpython_parser_types_DataType {
  getProtectedFields__sci_Map() {
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    return this$1.from__sc_IterableOnce__sci_Map(elems)
  };
  isCallable__Z() {
    return true
  };
}
function $isArrayOf_Ltigerpython_parser_types_ClassType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_ClassType)))
}
const $d_Ltigerpython_parser_types_ClassType = new $TypeData().initClass({
  Ltigerpython_parser_types_ClassType: 0
}, false, "tigerpython.parser.types.ClassType", {
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_ClassType.prototype.$classData = $d_Ltigerpython_parser_types_ClassType;
class $c_Ltigerpython_parser_types_FunctionType extends $c_Ltigerpython_parser_types_DataType {
  getFields__sci_Map() {
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    return this$1.from__sc_IterableOnce__sci_Map(elems)
  };
  isCallable__Z() {
    return true
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    /*<skip>*/
  };
}
function $isArrayOf_Ltigerpython_parser_types_FunctionType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_FunctionType)))
}
class $c_Ltigerpython_parser_types_Instance extends $c_Ltigerpython_parser_types_DataType {
  constructor(baseType) {
    super();
    this.Ltigerpython_parser_types_Instance__f_baseType = null;
    this.Ltigerpython_parser_types_Instance__f_baseType = baseType;
    if ((baseType !== null)) {
      const s = baseType.Ltigerpython_parser_types_DataType__f__docString;
      this.Ltigerpython_parser_types_DataType__f__docString = s
    }
  };
  getItemType__Ltigerpython_parser_types_DataType() {
    return $m_Ltigerpython_parser_types_Instance$().apply__Ltigerpython_parser_types_DataType__Ltigerpython_parser_types_DataType(this.Ltigerpython_parser_types_Instance__f_baseType.getItemType__Ltigerpython_parser_types_DataType())
  };
  isOf__Ltigerpython_parser_types_DataType__Z(dataType) {
    if ((this === dataType)) {
      return true
    } else {
      const x$3 = this.Ltigerpython_parser_types_Instance__f_baseType;
      return (x$3 === dataType)
    }
  };
  name__T() {
    if ((this.Ltigerpython_parser_types_Instance__f_baseType !== null)) {
      const $$x1 = $m_sc_StringOps$();
      const array = [this.Ltigerpython_parser_types_Instance__f_baseType.name__T()];
      return $$x1.format$extension__T__sci_Seq__T("instance of %s", new $c_sjsr_WrappedVarArgs(array))
    } else {
      return "instance"
    }
  };
  getFields__sci_Map() {
    if ((this.Ltigerpython_parser_types_Instance__f_baseType !== null)) {
      return this.Ltigerpython_parser_types_Instance__f_baseType.getInstanceFields__sci_Map()
    } else {
      const this$1 = $m_s_Predef$().s_Predef$__f_Map;
      const elems = $m_sci_Nil$();
      return this$1.from__sc_IterableOnce__sci_Map(elems)
    }
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    /*<skip>*/
  };
}
function $isArrayOf_Ltigerpython_parser_types_Instance(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_Instance)))
}
const $d_Ltigerpython_parser_types_Instance = new $TypeData().initClass({
  Ltigerpython_parser_types_Instance: 0
}, false, "tigerpython.parser.types.Instance", {
  Ltigerpython_parser_types_Instance: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_Instance.prototype.$classData = $d_Ltigerpython_parser_types_Instance;
class $c_Ltigerpython_parser_types_Package extends $c_Ltigerpython_parser_types_DataType {
  constructor() {
    super();
    this.Ltigerpython_parser_types_Package__f_parent = null
  };
}
class $c_Ltigerpython_parser_types_SelfClass extends $c_Ltigerpython_parser_types_DataType {
  constructor(baseType) {
    super();
    this.Ltigerpython_parser_types_SelfClass__f_baseType = null;
    this.Ltigerpython_parser_types_SelfClass__f_baseType = baseType
  };
  name__T() {
    if ((this.Ltigerpython_parser_types_SelfClass__f_baseType !== null)) {
      const $$x1 = $m_sc_StringOps$();
      const array = [this.Ltigerpython_parser_types_SelfClass__f_baseType.Ltigerpython_parser_types_PythonClass__f_name];
      return $$x1.format$extension__T__sci_Seq__T("SelfClass[%s]", new $c_sjsr_WrappedVarArgs(array))
    } else {
      return "SelfClass"
    }
  };
  getFields__sci_Map() {
    if ((this.Ltigerpython_parser_types_SelfClass__f_baseType !== null)) {
      const this$1 = this.Ltigerpython_parser_types_SelfClass__f_baseType;
      const this$2 = this$1.Ltigerpython_parser_types_PythonClass__f_classFields;
      const this$4 = this$2.Ltigerpython_parser_types_NameMap__f_map;
      $m_s_$less$colon$less$();
      return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$4)
    } else {
      const this$5 = $m_s_Predef$().s_Predef$__f_Map;
      const elems = $m_sci_Nil$();
      return this$5.from__sc_IterableOnce__sci_Map(elems)
    }
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    if ((this.Ltigerpython_parser_types_SelfClass__f_baseType !== null)) {
      this.Ltigerpython_parser_types_SelfClass__f_baseType.setField__T__Ltigerpython_parser_types_DataType__V(name, dataType)
    }
  };
}
function $isArrayOf_Ltigerpython_parser_types_SelfClass(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_SelfClass)))
}
const $d_Ltigerpython_parser_types_SelfClass = new $TypeData().initClass({
  Ltigerpython_parser_types_SelfClass: 0
}, false, "tigerpython.parser.types.SelfClass", {
  Ltigerpython_parser_types_SelfClass: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_SelfClass.prototype.$classData = $d_Ltigerpython_parser_types_SelfClass;
class $c_Ltigerpython_parser_types_SelfInstance extends $c_Ltigerpython_parser_types_DataType {
  constructor(baseType) {
    super();
    this.Ltigerpython_parser_types_SelfInstance__f_baseType = null;
    this.Ltigerpython_parser_types_SelfInstance__f_baseType = baseType
  };
  docString__T() {
    if ((this.Ltigerpython_parser_types_SelfInstance__f_baseType !== null)) {
      const this$1 = this.Ltigerpython_parser_types_SelfInstance__f_baseType;
      return this$1.Ltigerpython_parser_types_DataType__f__docString
    } else {
      return this.Ltigerpython_parser_types_DataType__f__docString
    }
  };
  docString_$eq__T__V(s) {
    if ((this.Ltigerpython_parser_types_SelfInstance__f_baseType !== null)) {
      const this$1 = this.Ltigerpython_parser_types_SelfInstance__f_baseType;
      this$1.Ltigerpython_parser_types_DataType__f__docString = s
    }
  };
  name__T() {
    if ((this.Ltigerpython_parser_types_SelfInstance__f_baseType !== null)) {
      const $$x1 = $m_sc_StringOps$();
      const array = [this.Ltigerpython_parser_types_SelfInstance__f_baseType.Ltigerpython_parser_types_PythonClass__f_name];
      return $$x1.format$extension__T__sci_Seq__T("Self[%s]", new $c_sjsr_WrappedVarArgs(array))
    } else {
      return "Self"
    }
  };
  getFields__sci_Map() {
    if ((this.Ltigerpython_parser_types_SelfInstance__f_baseType !== null)) {
      const this$1 = this.Ltigerpython_parser_types_SelfInstance__f_baseType;
      const this$2 = this$1.Ltigerpython_parser_types_PythonClass__f_instanceFields;
      const this$4 = this$2.Ltigerpython_parser_types_NameMap__f_map;
      $m_s_$less$colon$less$();
      const this$9 = $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$4);
      const this$5 = this.Ltigerpython_parser_types_SelfInstance__f_baseType;
      const this$6 = this$5.Ltigerpython_parser_types_PythonClass__f_protectedFields;
      const this$8 = this$6.Ltigerpython_parser_types_NameMap__f_map;
      $m_s_$less$colon$less$();
      const xs = $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$8);
      return this$9.concat__sc_IterableOnce__sc_IterableOps(xs)
    } else {
      const this$10 = $m_s_Predef$().s_Predef$__f_Map;
      const elems = $m_sci_Nil$();
      return this$10.from__sc_IterableOnce__sci_Map(elems)
    }
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    if ((this.Ltigerpython_parser_types_SelfInstance__f_baseType !== null)) {
      this.Ltigerpython_parser_types_SelfInstance__f_baseType.setInstanceField__T__Ltigerpython_parser_types_DataType__V(name, dataType)
    }
  };
}
function $isArrayOf_Ltigerpython_parser_types_SelfInstance(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_SelfInstance)))
}
const $d_Ltigerpython_parser_types_SelfInstance = new $TypeData().initClass({
  Ltigerpython_parser_types_SelfInstance: 0
}, false, "tigerpython.parser.types.SelfInstance", {
  Ltigerpython_parser_types_SelfInstance: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_SelfInstance.prototype.$classData = $d_Ltigerpython_parser_types_SelfInstance;
const $f_jl_Boolean__equals__O__Z = (function($thiz, that) {
  return ($thiz === that)
});
const $f_jl_Boolean__hashCode__I = (function($thiz) {
  return ((!(!$thiz)) ? 1231 : 1237)
});
const $f_jl_Boolean__toString__T = (function($thiz) {
  const b = (!(!$thiz));
  return ("" + b)
});
const $d_jl_Boolean = new $TypeData().initClass({
  jl_Boolean: 0
}, false, "java.lang.Boolean", {
  jl_Boolean: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => ((typeof x) === "boolean")));
const $f_jl_Character__hashCode__I = (function($thiz) {
  return $uC($thiz)
});
const $f_jl_Character__equals__O__Z = (function($thiz, that) {
  if ((that instanceof $Char)) {
    const this$1 = that;
    return ($uC($thiz) === $uC(this$1))
  } else {
    return false
  }
});
const $f_jl_Character__toString__T = (function($thiz) {
  const c = $uC($thiz);
  return String.fromCharCode(c)
});
function $isArrayOf_jl_Character(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Character)))
}
const $d_jl_Character = new $TypeData().initClass({
  jl_Character: 0
}, false, "java.lang.Character", {
  jl_Character: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => (x instanceof $Char)));
class $c_jl_Error extends $c_jl_Throwable {
}
const $ct_jl_Exception__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
class $c_jl_Exception extends $c_jl_Throwable {
}
const $d_jl_Exception = new $TypeData().initClass({
  jl_Exception: 0
}, false, "java.lang.Exception", {
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_Exception.prototype.$classData = $d_jl_Exception;
class $c_s_$less$colon$less extends $c_O {
}
class $c_s_Predef$ extends $c_s_LowPriorityImplicits {
  constructor() {
    super();
    this.s_Predef$__f_Map = null;
    this.s_Predef$__f_Set = null;
    this.s_Predef$__f_$minus$greater = null;
    this.s_Predef$__f_Manifest = null;
    this.s_Predef$__f_NoManifest = null;
    $n_s_Predef$ = this;
    $m_s_package$();
    $m_sci_List$();
    this.s_Predef$__f_Map = $m_sci_Map$();
    this.s_Predef$__f_Set = $m_sci_Set$();
    this.s_Predef$__f_$minus$greater = $m_T2$();
    this.s_Predef$__f_Manifest = $m_s_reflect_Manifest$();
    this.s_Predef$__f_NoManifest = $m_s_reflect_NoManifest$()
  };
  assert__Z__V(assertion) {
    if ((!assertion)) {
      throw new $c_jl_AssertionError("assertion failed")
    }
  };
  require__Z__V(requirement) {
    if ((!requirement)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "requirement failed")
    }
  };
}
const $d_s_Predef$ = new $TypeData().initClass({
  s_Predef$: 0
}, false, "scala.Predef$", {
  s_Predef$: 1,
  s_LowPriorityImplicits: 1,
  s_LowPriorityImplicits2: 1,
  O: 1
});
$c_s_Predef$.prototype.$classData = $d_s_Predef$;
let $n_s_Predef$ = (void 0);
function $m_s_Predef$() {
  if ((!$n_s_Predef$)) {
    $n_s_Predef$ = new $c_s_Predef$()
  };
  return $n_s_Predef$
}
const $f_s_Product2__productElement__I__O = (function($thiz, n) {
  switch (n) {
    case 0: {
      return $thiz._1__O();
      break
    }
    case 1: {
      return $thiz._2__O();
      break
    }
    default: {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (n + " is out of bounds (min 0, max 1)"))
    }
  }
});
const $ct_sc_ClassTagIterableFactory$AnyIterableDelegate__sc_ClassTagIterableFactory__ = (function($thiz, delegate) {
  $thiz.sc_ClassTagIterableFactory$AnyIterableDelegate__f_delegate = delegate;
  return $thiz
});
class $c_sc_ClassTagIterableFactory$AnyIterableDelegate extends $c_O {
  constructor() {
    super();
    this.sc_ClassTagIterableFactory$AnyIterableDelegate__f_delegate = null
  };
  from__sc_IterableOnce__O(it) {
    return this.sc_ClassTagIterableFactory$AnyIterableDelegate__f_delegate.from__sc_IterableOnce__O__O(it, $m_s_reflect_ManifestFactory$AnyManifest$())
  };
  newBuilder__scm_Builder() {
    const this$3 = this.sc_ClassTagIterableFactory$AnyIterableDelegate__f_delegate;
    const evidence$12 = $m_s_reflect_ManifestFactory$AnyManifest$();
    return this$3.newBuilder__s_reflect_ClassTag__scm_Builder(evidence$12)
  };
  apply__sci_Seq__O(elems) {
    const this$3 = this.sc_ClassTagIterableFactory$AnyIterableDelegate__f_delegate;
    const evidence$7 = $m_s_reflect_ManifestFactory$AnyManifest$();
    return this$3.from__sc_IterableOnce__O__O(elems, evidence$7)
  };
  tabulate__I__F1__O(n, f) {
    return this.sc_ClassTagIterableFactory$AnyIterableDelegate__f_delegate.tabulate__I__F1__O__O(n, f, $m_s_reflect_ManifestFactory$AnyManifest$())
  };
}
const $ct_sc_IterableFactory$Delegate__sc_IterableFactory__ = (function($thiz, delegate) {
  $thiz.sc_IterableFactory$Delegate__f_delegate = delegate;
  return $thiz
});
class $c_sc_IterableFactory$Delegate extends $c_O {
  constructor() {
    super();
    this.sc_IterableFactory$Delegate__f_delegate = null
  };
  apply__sci_Seq__O(elems) {
    return this.sc_IterableFactory$Delegate__f_delegate.apply__sci_Seq__O(elems)
  };
  from__sc_IterableOnce__O(it) {
    return this.sc_IterableFactory$Delegate__f_delegate.from__sc_IterableOnce__O(it)
  };
  newBuilder__scm_Builder() {
    return this.sc_IterableFactory$Delegate__f_delegate.newBuilder__scm_Builder()
  };
}
const $f_sc_IterableOps__last__O = (function($thiz) {
  const it = $thiz.iterator__sc_Iterator();
  let lst = it.next__O();
  while (it.hasNext__Z()) {
    lst = it.next__O()
  };
  return lst
});
const $f_sc_IterableOps__sizeCompare__I__I = (function($thiz, otherSize) {
  if ((otherSize < 0)) {
    return 1
  } else {
    const known = $thiz.knownSize__I();
    if ((known >= 0)) {
      return ((known === otherSize) ? 0 : ((known < otherSize) ? (-1) : 1))
    } else {
      let i = 0;
      const it = $thiz.iterator__sc_Iterator();
      while (it.hasNext__Z()) {
        if ((i === otherSize)) {
          return (it.hasNext__Z() ? 1 : 0)
        };
        it.next__O();
        i = ((1 + i) | 0)
      };
      return ((i - otherSize) | 0)
    }
  }
});
const $f_sc_IterableOps__takeWhile__F1__O = (function($thiz, p) {
  return $thiz.fromSpecific__sc_IterableOnce__O(new $c_sc_View$TakeWhile($thiz, p))
});
const $f_sc_IterableOps__drop__I__O = (function($thiz, n) {
  return $thiz.fromSpecific__sc_IterableOnce__O($ct_sc_View$Drop__sc_IterableOps__I__(new $c_sc_View$Drop(), $thiz, n))
});
const $f_sc_IterableOps__tail__O = (function($thiz) {
  if ($thiz.isEmpty__Z()) {
    throw $ct_jl_UnsupportedOperationException__(new $c_jl_UnsupportedOperationException())
  };
  return $thiz.drop__I__O(1)
});
function $is_sc_IterableOps(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_IterableOps)))
}
function $isArrayOf_sc_IterableOps(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_IterableOps)))
}
const $ct_sc_IterableOps$WithFilter__sc_IterableOps__F1__ = (function($thiz, self, p) {
  $thiz.sc_IterableOps$WithFilter__f_self = self;
  $thiz.sc_IterableOps$WithFilter__f_p = p;
  return $thiz
});
class $c_sc_IterableOps$WithFilter extends $c_sc_WithFilter {
  constructor() {
    super();
    this.sc_IterableOps$WithFilter__f_self = null;
    this.sc_IterableOps$WithFilter__f_p = null
  };
  filtered__sc_Iterable() {
    return new $c_sc_View$Filter(this.sc_IterableOps$WithFilter__f_self, this.sc_IterableOps$WithFilter__f_p, false)
  };
  map__F1__O(f) {
    return this.sc_IterableOps$WithFilter__f_self.iterableFactory__sc_IterableFactory().from__sc_IterableOnce__O($ct_sc_View$Map__sc_IterableOps__F1__(new $c_sc_View$Map(), this.filtered__sc_Iterable(), f))
  };
}
const $f_sc_Iterator__indexWhere__F1__I__I = (function($thiz, p, from) {
  let i = ((from > 0) ? from : 0);
  $thiz.drop__I__sc_Iterator(from);
  while ($thiz.hasNext__Z()) {
    if ((!(!p.apply__O__O($thiz.next__O())))) {
      return i
    };
    i = ((1 + i) | 0)
  };
  return (-1)
});
const $f_sc_Iterator__concat__F0__sc_Iterator = (function($thiz, xs) {
  return new $c_sc_Iterator$ConcatIterator($thiz).concat__F0__sc_Iterator(xs)
});
const $f_sc_Iterator__drop__I__sc_Iterator = (function($thiz, n) {
  let i = 0;
  while (((i < n) && $thiz.hasNext__Z())) {
    $thiz.next__O();
    i = ((1 + i) | 0)
  };
  return $thiz
});
const $f_sc_Iterator__sameElements__sc_IterableOnce__Z = (function($thiz, that) {
  const those = that.iterator__sc_Iterator();
  while (($thiz.hasNext__Z() && those.hasNext__Z())) {
    if ((!$m_sr_BoxesRunTime$().equals__O__O__Z($thiz.next__O(), those.next__O()))) {
      return false
    }
  };
  return ($thiz.hasNext__Z() === those.hasNext__Z())
});
function $is_sc_Iterator(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_Iterator)))
}
function $isArrayOf_sc_Iterator(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_Iterator)))
}
class $c_sc_Iterator$ extends $c_O {
  constructor() {
    super();
    this.sc_Iterator$__f_scala$collection$Iterator$$_empty = null;
    $n_sc_Iterator$ = this;
    this.sc_Iterator$__f_scala$collection$Iterator$$_empty = new $c_sc_Iterator$$anon$19()
  };
  newBuilder__scm_Builder() {
    return new $c_sc_Iterator$$anon$21()
  };
  apply__sci_Seq__O(elems) {
    return elems.iterator__sc_Iterator()
  };
  from__sc_IterableOnce__O(source) {
    return source.iterator__sc_Iterator()
  };
}
const $d_sc_Iterator$ = new $TypeData().initClass({
  sc_Iterator$: 0
}, false, "scala.collection.Iterator$", {
  sc_Iterator$: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sc_Iterator$.prototype.$classData = $d_sc_Iterator$;
let $n_sc_Iterator$ = (void 0);
function $m_sc_Iterator$() {
  if ((!$n_sc_Iterator$)) {
    $n_sc_Iterator$ = new $c_sc_Iterator$()
  };
  return $n_sc_Iterator$
}
const $ct_sc_MapFactory$Delegate__sc_MapFactory__ = (function($thiz, delegate) {
  $thiz.sc_MapFactory$Delegate__f_delegate = delegate;
  return $thiz
});
class $c_sc_MapFactory$Delegate extends $c_O {
  constructor() {
    super();
    this.sc_MapFactory$Delegate__f_delegate = null
  };
  apply__sci_Seq__O(elems) {
    return this.sc_MapFactory$Delegate__f_delegate.apply__sci_Seq__O(elems)
  };
  from__sc_IterableOnce__O(it) {
    return this.sc_MapFactory$Delegate__f_delegate.from__sc_IterableOnce__O(it)
  };
}
class $c_sc_View$ extends $c_O {
  from__sc_IterableOnce__sc_View(it) {
    if ($is_sc_View(it)) {
      const x2 = it;
      return x2
    } else if ($is_sc_Iterable(it)) {
      const x3 = it;
      const it$1 = new $c_sjsr_AnonFunction0(((this$1, x3$1) => (() => x3$1.iterator__sc_Iterator()))(this, x3));
      return new $c_sc_View$$anon$1(it$1)
    } else {
      const this$3 = $m_sci_LazyList$().from__sc_IterableOnce__sci_LazyList(it);
      return $ct_sc_SeqView$Id__sc_SeqOps__(new $c_sc_SeqView$Id(), this$3)
    }
  };
  newBuilder__scm_Builder() {
    const this$3 = new $c_scm_ArrayBuffer$$anon$1();
    const f = new $c_sjsr_AnonFunction1(((this$2) => ((it$2) => {
      const it = it$2;
      return $m_sc_View$().from__sc_IterableOnce__sc_View(it)
    }))(this));
    return new $c_scm_Builder$$anon$1(this$3, f)
  };
  apply__sci_Seq__O(elems) {
    return new $c_sc_View$Elems(elems)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sc_View(source)
  };
}
const $d_sc_View$ = new $TypeData().initClass({
  sc_View$: 0
}, false, "scala.collection.View$", {
  sc_View$: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$.prototype.$classData = $d_sc_View$;
let $n_sc_View$ = (void 0);
function $m_sc_View$() {
  if ((!$n_sc_View$)) {
    $n_sc_View$ = new $c_sc_View$()
  };
  return $n_sc_View$
}
class $c_sci_BitmapIndexedMapNode extends $c_sci_MapNode {
  constructor(dataMap, nodeMap, content, originalHashes, size, cachedJavaKeySetHashCode) {
    super();
    this.sci_BitmapIndexedMapNode__f_dataMap = 0;
    this.sci_BitmapIndexedMapNode__f_nodeMap = 0;
    this.sci_BitmapIndexedMapNode__f_content = null;
    this.sci_BitmapIndexedMapNode__f_originalHashes = null;
    this.sci_BitmapIndexedMapNode__f_size = 0;
    this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode = 0;
    this.sci_BitmapIndexedMapNode__f_dataMap = dataMap;
    this.sci_BitmapIndexedMapNode__f_nodeMap = nodeMap;
    this.sci_BitmapIndexedMapNode__f_content = content;
    this.sci_BitmapIndexedMapNode__f_originalHashes = originalHashes;
    this.sci_BitmapIndexedMapNode__f_size = size;
    this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode = cachedJavaKeySetHashCode
  };
  size__I() {
    return this.sci_BitmapIndexedMapNode__f_size
  };
  cachedJavaKeySetHashCode__I() {
    return this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode
  };
  getKey__I__O(index) {
    return this.sci_BitmapIndexedMapNode__f_content.u[(index << 1)]
  };
  getValue__I__O(index) {
    return this.sci_BitmapIndexedMapNode__f_content.u[((1 + (index << 1)) | 0)]
  };
  getPayload__I__T2(index) {
    return $ct_T2__O__O__(new $c_T2(), this.sci_BitmapIndexedMapNode__f_content.u[(index << 1)], this.sci_BitmapIndexedMapNode__f_content.u[((1 + (index << 1)) | 0)])
  };
  getHash__I__I(index) {
    return this.sci_BitmapIndexedMapNode__f_originalHashes.u[index]
  };
  getNode__I__sci_MapNode(index) {
    return this.sci_BitmapIndexedMapNode__f_content.u[(((((-1) + this.sci_BitmapIndexedMapNode__f_content.u.length) | 0) - index) | 0)]
  };
  apply__O__I__I__I__O(key, originalHash, keyHash, shift) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
      if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.getKey__I__O(index))) {
        return this.getValue__I__O(index)
      } else {
        throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
      }
    } else if (((this.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0)) {
      return this.getNode__I__sci_MapNode($m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos)).apply__O__I__I__I__O(key, originalHash, keyHash, ((5 + shift) | 0))
    } else {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    }
  };
  get__O__I__I__I__s_Option(key, originalHash, keyHash, shift) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
      const key0 = this.getKey__I__O(index);
      return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, key0) ? new $c_s_Some(this.getValue__I__O(index)) : $m_s_None$())
    } else if (((this.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos);
      return this.getNode__I__sci_MapNode(index$2).get__O__I__I__I__s_Option(key, originalHash, keyHash, ((5 + shift) | 0))
    } else {
      return $m_s_None$()
    }
  };
  getOrElse__O__I__I__I__F0__O(key, originalHash, keyHash, shift, f) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
      const key0 = this.getKey__I__O(index);
      return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, key0) ? this.getValue__I__O(index) : f.apply__O())
    } else if (((this.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos);
      return this.getNode__I__sci_MapNode(index$2).getOrElse__O__I__I__I__F0__O(key, originalHash, keyHash, ((5 + shift) | 0), f)
    } else {
      return f.apply__O()
    }
  };
  containsKey__O__I__I__I__Z(key, originalHash, keyHash, shift) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
      return ((this.sci_BitmapIndexedMapNode__f_originalHashes.u[index] === originalHash) && $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.getKey__I__O(index)))
    } else {
      return (((this.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0) && this.getNode__I__sci_MapNode($m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos)).containsKey__O__I__I__I__Z(key, originalHash, keyHash, ((5 + shift) | 0)))
    }
  };
  updated__O__O__I__I__I__Z__sci_BitmapIndexedMapNode(key, value, originalHash, keyHash, shift, replaceValue) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
      const key0 = this.getKey__I__O(index);
      const key0UnimprovedHash = this.getHash__I__I(index);
      if (((key0UnimprovedHash === originalHash) && $m_sr_BoxesRunTime$().equals__O__O__Z(key0, key))) {
        if (replaceValue) {
          const value0 = this.getValue__I__O(index);
          return ((Object.is(key0, key) && Object.is(value0, value)) ? this : this.copyAndSetValue__I__O__O__sci_BitmapIndexedMapNode(bitpos, key, value))
        } else {
          return this
        }
      } else {
        const value0$2 = this.getValue__I__O(index);
        const key0Hash = $m_sc_Hashing$().improve__I__I(key0UnimprovedHash);
        const subNodeNew = this.mergeTwoKeyValPairs__O__O__I__I__O__O__I__I__I__sci_MapNode(key0, value0$2, key0UnimprovedHash, key0Hash, key, value, originalHash, keyHash, ((5 + shift) | 0));
        return this.copyAndMigrateFromInlineToNode__I__I__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, key0Hash, subNodeNew)
      }
    } else if (((this.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos);
      const subNode = this.getNode__I__sci_MapNode(index$2);
      const subNodeNew$2 = subNode.updated__O__O__I__I__I__Z__sci_MapNode(key, value, originalHash, keyHash, ((5 + shift) | 0), replaceValue);
      return ((subNodeNew$2 === subNode) ? this : this.copyAndSetNode__I__sci_MapNode__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, subNode, subNodeNew$2))
    } else {
      return this.copyAndInsertValue__I__O__I__I__O__sci_BitmapIndexedMapNode(bitpos, key, originalHash, keyHash, value)
    }
  };
  updateWithShallowMutations__O__O__I__I__I__I__I(key, value, originalHash, keyHash, shift, shallowlyMutableNodeMap) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
      const key0 = this.getKey__I__O(index);
      const key0UnimprovedHash = this.getHash__I__I(index);
      if (((key0UnimprovedHash === originalHash) && $m_sr_BoxesRunTime$().equals__O__O__Z(key0, key))) {
        const value0 = this.getValue__I__O(index);
        if ((!(Object.is(key0, key) && Object.is(value0, value)))) {
          const dataIx = this.dataIndex__I__I(bitpos);
          const idx = (dataIx << 1);
          this.sci_BitmapIndexedMapNode__f_content.u[((1 + idx) | 0)] = value
        };
        return shallowlyMutableNodeMap
      } else {
        const value0$2 = this.getValue__I__O(index);
        const key0Hash = $m_sc_Hashing$().improve__I__I(key0UnimprovedHash);
        const subNodeNew = this.mergeTwoKeyValPairs__O__O__I__I__O__O__I__I__I__sci_MapNode(key0, value0$2, key0UnimprovedHash, key0Hash, key, value, originalHash, keyHash, ((5 + shift) | 0));
        this.migrateFromInlineToNodeInPlace__I__I__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, key0Hash, subNodeNew);
        return (shallowlyMutableNodeMap | bitpos)
      }
    } else if (((this.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos);
      const subNode = this.getNode__I__sci_MapNode(index$2);
      const subNodeSize = subNode.size__I();
      const subNodeHashCode = subNode.cachedJavaKeySetHashCode__I();
      let returnMutableNodeMap = shallowlyMutableNodeMap;
      let subNodeNew$2;
      matchEnd4: {
        if ((subNode instanceof $c_sci_BitmapIndexedMapNode)) {
          const x2 = subNode;
          if (((bitpos & shallowlyMutableNodeMap) !== 0)) {
            x2.updateWithShallowMutations__O__O__I__I__I__I__I(key, value, originalHash, keyHash, ((5 + shift) | 0), 0);
            subNodeNew$2 = x2;
            break matchEnd4
          }
        };
        const result = subNode.updated__O__O__I__I__I__Z__sci_MapNode(key, value, originalHash, keyHash, ((5 + shift) | 0), true);
        if ((result !== subNode)) {
          returnMutableNodeMap = (returnMutableNodeMap | bitpos)
        };
        subNodeNew$2 = result
      };
      this.sci_BitmapIndexedMapNode__f_content.u[(((((-1) + this.sci_BitmapIndexedMapNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0)] = subNodeNew$2;
      this.sci_BitmapIndexedMapNode__f_size = ((((this.sci_BitmapIndexedMapNode__f_size - subNodeSize) | 0) + subNodeNew$2.size__I()) | 0);
      this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode = ((((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode - subNodeHashCode) | 0) + subNodeNew$2.cachedJavaKeySetHashCode__I()) | 0);
      return returnMutableNodeMap
    } else {
      const dataIx$2 = this.dataIndex__I__I(bitpos);
      const idx$2 = (dataIx$2 << 1);
      const src = this.sci_BitmapIndexedMapNode__f_content;
      const dst = $newArrayObject($d_O.getArrayOf(), [((2 + src.u.length) | 0)]);
      $systemArraycopy(src, 0, dst, 0, idx$2);
      dst.u[idx$2] = key;
      dst.u[((1 + idx$2) | 0)] = value;
      const destPos = ((2 + idx$2) | 0);
      const length = ((src.u.length - idx$2) | 0);
      $systemArraycopy(src, idx$2, dst, destPos, length);
      this.sci_BitmapIndexedMapNode__f_dataMap = (this.sci_BitmapIndexedMapNode__f_dataMap | bitpos);
      this.sci_BitmapIndexedMapNode__f_content = dst;
      this.sci_BitmapIndexedMapNode__f_originalHashes = this.insertElement__AI__I__I__AI(this.sci_BitmapIndexedMapNode__f_originalHashes, dataIx$2, originalHash);
      this.sci_BitmapIndexedMapNode__f_size = ((1 + this.sci_BitmapIndexedMapNode__f_size) | 0);
      this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode = ((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode + keyHash) | 0);
      return shallowlyMutableNodeMap
    }
  };
  removed__O__I__I__I__sci_BitmapIndexedMapNode(key, originalHash, keyHash, shift) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
      const key0 = this.getKey__I__O(index);
      if ($m_sr_BoxesRunTime$().equals__O__O__Z(key0, key)) {
        const i = this.sci_BitmapIndexedMapNode__f_dataMap;
        let $$x1;
        if (($m_jl_Integer$().bitCount__I__I(i) === 2)) {
          const i$1 = this.sci_BitmapIndexedMapNode__f_nodeMap;
          $$x1 = ($m_jl_Integer$().bitCount__I__I(i$1) === 0)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const newDataMap = ((shift === 0) ? (this.sci_BitmapIndexedMapNode__f_dataMap ^ bitpos) : $m_sci_Node$().bitposFrom__I__I($m_sci_Node$().maskFrom__I__I__I(keyHash, 0)));
          if ((index === 0)) {
            const array = [this.getKey__I__O(1), this.getValue__I__O(1)];
            const xs = new $c_sjsr_WrappedVarArgs(array);
            $m_s_reflect_ManifestFactory$AnyManifest$();
            const len = xs.length__I();
            const array$1 = $newArrayObject($d_O.getArrayOf(), [len]);
            const this$7 = new $c_sc_IndexedSeqView$Id(xs);
            const iterator = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$7);
            let i$2 = 0;
            while (iterator.hasNext__Z()) {
              array$1.u[i$2] = iterator.next__O();
              i$2 = ((1 + i$2) | 0)
            };
            return new $c_sci_BitmapIndexedMapNode(newDataMap, 0, array$1, $makeNativeArrayWrapper($d_I.getArrayOf(), [this.sci_BitmapIndexedMapNode__f_originalHashes.u[1]]), 1, $m_sc_Hashing$().improve__I__I(this.getHash__I__I(1)))
          } else {
            const array$2 = [this.getKey__I__O(0), this.getValue__I__O(0)];
            const xs$1 = new $c_sjsr_WrappedVarArgs(array$2);
            $m_s_reflect_ManifestFactory$AnyManifest$();
            const len$1 = xs$1.length__I();
            const array$3 = $newArrayObject($d_O.getArrayOf(), [len$1]);
            const this$14 = new $c_sc_IndexedSeqView$Id(xs$1);
            const iterator$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$14);
            let i$3 = 0;
            while (iterator$1.hasNext__Z()) {
              array$3.u[i$3] = iterator$1.next__O();
              i$3 = ((1 + i$3) | 0)
            };
            return new $c_sci_BitmapIndexedMapNode(newDataMap, 0, array$3, $makeNativeArrayWrapper($d_I.getArrayOf(), [this.sci_BitmapIndexedMapNode__f_originalHashes.u[0]]), 1, $m_sc_Hashing$().improve__I__I(this.getHash__I__I(0)))
          }
        } else {
          return this.copyAndRemoveValue__I__I__sci_BitmapIndexedMapNode(bitpos, keyHash)
        }
      } else {
        return this
      }
    } else if (((this.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos);
      const subNode = this.getNode__I__sci_MapNode(index$2);
      const subNodeNew = subNode.removed__O__I__I__I__sci_MapNode(key, originalHash, keyHash, ((5 + shift) | 0));
      if ((subNodeNew === subNode)) {
        return this
      };
      const subNodeNewSize = subNodeNew.size__I();
      return ((subNodeNewSize === 1) ? ((this.sci_BitmapIndexedMapNode__f_size === subNode.size__I()) ? subNodeNew : this.copyAndMigrateFromNodeToInline__I__sci_MapNode__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, subNode, subNodeNew)) : ((subNodeNewSize > 1) ? this.copyAndSetNode__I__sci_MapNode__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, subNode, subNodeNew) : this))
    } else {
      return this
    }
  };
  mergeTwoKeyValPairs__O__O__I__I__O__O__I__I__I__sci_MapNode(key0, value0, originalHash0, keyHash0, key1, value1, originalHash1, keyHash1, shift) {
    if ((shift >= 32)) {
      const this$4 = $m_sci_Vector$();
      const array = [$ct_T2__O__O__(new $c_T2(), key0, value0), $ct_T2__O__O__(new $c_T2(), key1, value1)];
      const elems = new $c_sjsr_WrappedVarArgs(array);
      return new $c_sci_HashCollisionMapNode(originalHash0, keyHash0, this$4.from__sc_IterableOnce__sci_Vector(elems))
    } else {
      const mask0 = $m_sci_Node$().maskFrom__I__I__I(keyHash0, shift);
      const mask1 = $m_sci_Node$().maskFrom__I__I__I(keyHash1, shift);
      const newCachedHash = ((keyHash0 + keyHash1) | 0);
      if ((mask0 !== mask1)) {
        const dataMap = ($m_sci_Node$().bitposFrom__I__I(mask0) | $m_sci_Node$().bitposFrom__I__I(mask1));
        if ((mask0 < mask1)) {
          const array$1 = [key0, value0, key1, value1];
          const xs = new $c_sjsr_WrappedVarArgs(array$1);
          $m_s_reflect_ManifestFactory$AnyManifest$();
          const len = xs.length__I();
          const array$2 = $newArrayObject($d_O.getArrayOf(), [len]);
          const this$11 = new $c_sc_IndexedSeqView$Id(xs);
          const iterator = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$11);
          let i = 0;
          while (iterator.hasNext__Z()) {
            array$2.u[i] = iterator.next__O();
            i = ((1 + i) | 0)
          };
          return new $c_sci_BitmapIndexedMapNode(dataMap, 0, array$2, $makeNativeArrayWrapper($d_I.getArrayOf(), [originalHash0, originalHash1]), 2, newCachedHash)
        } else {
          const array$3 = [key1, value1, key0, value0];
          const xs$1 = new $c_sjsr_WrappedVarArgs(array$3);
          $m_s_reflect_ManifestFactory$AnyManifest$();
          const len$1 = xs$1.length__I();
          const array$4 = $newArrayObject($d_O.getArrayOf(), [len$1]);
          const this$18 = new $c_sc_IndexedSeqView$Id(xs$1);
          const iterator$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$18);
          let i$1 = 0;
          while (iterator$1.hasNext__Z()) {
            array$4.u[i$1] = iterator$1.next__O();
            i$1 = ((1 + i$1) | 0)
          };
          return new $c_sci_BitmapIndexedMapNode(dataMap, 0, array$4, $makeNativeArrayWrapper($d_I.getArrayOf(), [originalHash1, originalHash0]), 2, newCachedHash)
        }
      } else {
        const nodeMap = $m_sci_Node$().bitposFrom__I__I(mask0);
        const node = this.mergeTwoKeyValPairs__O__O__I__I__O__O__I__I__I__sci_MapNode(key0, value0, originalHash0, keyHash0, key1, value1, originalHash1, keyHash1, ((5 + shift) | 0));
        const array$5 = [node];
        const xs$2 = new $c_sjsr_WrappedVarArgs(array$5);
        $m_s_reflect_ManifestFactory$AnyManifest$();
        const len$2 = xs$2.length__I();
        const array$6 = $newArrayObject($d_O.getArrayOf(), [len$2]);
        const this$25 = new $c_sc_IndexedSeqView$Id(xs$2);
        const iterator$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$25);
        let i$2 = 0;
        while (iterator$2.hasNext__Z()) {
          array$6.u[i$2] = iterator$2.next__O();
          i$2 = ((1 + i$2) | 0)
        };
        return new $c_sci_BitmapIndexedMapNode(0, nodeMap, array$6, $m_s_Array$EmptyArrays$().s_Array$EmptyArrays$__f_emptyIntArray, node.size__I(), node.cachedJavaKeySetHashCode__I())
      }
    }
  };
  hasNodes__Z() {
    return (this.sci_BitmapIndexedMapNode__f_nodeMap !== 0)
  };
  nodeArity__I() {
    const i = this.sci_BitmapIndexedMapNode__f_nodeMap;
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  hasPayload__Z() {
    return (this.sci_BitmapIndexedMapNode__f_dataMap !== 0)
  };
  payloadArity__I() {
    const i = this.sci_BitmapIndexedMapNode__f_dataMap;
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  dataIndex__I__I(bitpos) {
    const i = (this.sci_BitmapIndexedMapNode__f_dataMap & (((-1) + bitpos) | 0));
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  nodeIndex__I__I(bitpos) {
    const i = (this.sci_BitmapIndexedMapNode__f_nodeMap & (((-1) + bitpos) | 0));
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  copyAndSetValue__I__O__O__sci_BitmapIndexedMapNode(bitpos, newKey, newValue) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const idx = (dataIx << 1);
    const src = this.sci_BitmapIndexedMapNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [src.u.length]);
    const length = src.u.length;
    $systemArraycopy(src, 0, dst, 0, length);
    dst.u[((1 + idx) | 0)] = newValue;
    return new $c_sci_BitmapIndexedMapNode(this.sci_BitmapIndexedMapNode__f_dataMap, this.sci_BitmapIndexedMapNode__f_nodeMap, dst, this.sci_BitmapIndexedMapNode__f_originalHashes, this.sci_BitmapIndexedMapNode__f_size, this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode)
  };
  copyAndSetNode__I__sci_MapNode__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, oldNode, newNode) {
    const idx = (((((-1) + this.sci_BitmapIndexedMapNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const src = this.sci_BitmapIndexedMapNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [src.u.length]);
    const length = src.u.length;
    $systemArraycopy(src, 0, dst, 0, length);
    dst.u[idx] = newNode;
    return new $c_sci_BitmapIndexedMapNode(this.sci_BitmapIndexedMapNode__f_dataMap, this.sci_BitmapIndexedMapNode__f_nodeMap, dst, this.sci_BitmapIndexedMapNode__f_originalHashes, ((((this.sci_BitmapIndexedMapNode__f_size - oldNode.size__I()) | 0) + newNode.size__I()) | 0), ((((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode - oldNode.cachedJavaKeySetHashCode__I()) | 0) + newNode.cachedJavaKeySetHashCode__I()) | 0))
  };
  copyAndInsertValue__I__O__I__I__O__sci_BitmapIndexedMapNode(bitpos, key, originalHash, keyHash, value) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const idx = (dataIx << 1);
    const src = this.sci_BitmapIndexedMapNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [((2 + src.u.length) | 0)]);
    $systemArraycopy(src, 0, dst, 0, idx);
    dst.u[idx] = key;
    dst.u[((1 + idx) | 0)] = value;
    const destPos = ((2 + idx) | 0);
    const length = ((src.u.length - idx) | 0);
    $systemArraycopy(src, idx, dst, destPos, length);
    const dstHashes = this.insertElement__AI__I__I__AI(this.sci_BitmapIndexedMapNode__f_originalHashes, dataIx, originalHash);
    return new $c_sci_BitmapIndexedMapNode((this.sci_BitmapIndexedMapNode__f_dataMap | bitpos), this.sci_BitmapIndexedMapNode__f_nodeMap, dst, dstHashes, ((1 + this.sci_BitmapIndexedMapNode__f_size) | 0), ((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode + keyHash) | 0))
  };
  copyAndRemoveValue__I__I__sci_BitmapIndexedMapNode(bitpos, keyHash) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const idx = (dataIx << 1);
    const src = this.sci_BitmapIndexedMapNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [(((-2) + src.u.length) | 0)]);
    $systemArraycopy(src, 0, dst, 0, idx);
    const srcPos = ((2 + idx) | 0);
    const length = (((-2) + ((src.u.length - idx) | 0)) | 0);
    $systemArraycopy(src, srcPos, dst, idx, length);
    const dstHashes = this.removeElement__AI__I__AI(this.sci_BitmapIndexedMapNode__f_originalHashes, dataIx);
    return new $c_sci_BitmapIndexedMapNode((this.sci_BitmapIndexedMapNode__f_dataMap ^ bitpos), this.sci_BitmapIndexedMapNode__f_nodeMap, dst, dstHashes, (((-1) + this.sci_BitmapIndexedMapNode__f_size) | 0), ((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode - keyHash) | 0))
  };
  migrateFromInlineToNodeInPlace__I__I__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, keyHash, node) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const idxOld = (dataIx << 1);
    const idxNew = (((((-2) + this.sci_BitmapIndexedMapNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const src = this.sci_BitmapIndexedMapNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [(((-1) + src.u.length) | 0)]);
    $systemArraycopy(src, 0, dst, 0, idxOld);
    const srcPos = ((2 + idxOld) | 0);
    const length = ((idxNew - idxOld) | 0);
    $systemArraycopy(src, srcPos, dst, idxOld, length);
    dst.u[idxNew] = node;
    const srcPos$1 = ((2 + idxNew) | 0);
    const destPos = ((1 + idxNew) | 0);
    const length$1 = (((-2) + ((src.u.length - idxNew) | 0)) | 0);
    $systemArraycopy(src, srcPos$1, dst, destPos, length$1);
    const dstHashes = this.removeElement__AI__I__AI(this.sci_BitmapIndexedMapNode__f_originalHashes, dataIx);
    this.sci_BitmapIndexedMapNode__f_dataMap = (this.sci_BitmapIndexedMapNode__f_dataMap ^ bitpos);
    this.sci_BitmapIndexedMapNode__f_nodeMap = (this.sci_BitmapIndexedMapNode__f_nodeMap | bitpos);
    this.sci_BitmapIndexedMapNode__f_content = dst;
    this.sci_BitmapIndexedMapNode__f_originalHashes = dstHashes;
    this.sci_BitmapIndexedMapNode__f_size = (((((-1) + this.sci_BitmapIndexedMapNode__f_size) | 0) + node.size__I()) | 0);
    this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode = ((((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode - keyHash) | 0) + node.cachedJavaKeySetHashCode__I()) | 0);
    return this
  };
  copyAndMigrateFromInlineToNode__I__I__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, keyHash, node) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const idxOld = (dataIx << 1);
    const idxNew = (((((-2) + this.sci_BitmapIndexedMapNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const src = this.sci_BitmapIndexedMapNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [(((-1) + src.u.length) | 0)]);
    $systemArraycopy(src, 0, dst, 0, idxOld);
    const srcPos = ((2 + idxOld) | 0);
    const length = ((idxNew - idxOld) | 0);
    $systemArraycopy(src, srcPos, dst, idxOld, length);
    dst.u[idxNew] = node;
    const srcPos$1 = ((2 + idxNew) | 0);
    const destPos = ((1 + idxNew) | 0);
    const length$1 = (((-2) + ((src.u.length - idxNew) | 0)) | 0);
    $systemArraycopy(src, srcPos$1, dst, destPos, length$1);
    const dstHashes = this.removeElement__AI__I__AI(this.sci_BitmapIndexedMapNode__f_originalHashes, dataIx);
    return new $c_sci_BitmapIndexedMapNode((this.sci_BitmapIndexedMapNode__f_dataMap ^ bitpos), (this.sci_BitmapIndexedMapNode__f_nodeMap | bitpos), dst, dstHashes, (((((-1) + this.sci_BitmapIndexedMapNode__f_size) | 0) + node.size__I()) | 0), ((((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode - keyHash) | 0) + node.cachedJavaKeySetHashCode__I()) | 0))
  };
  copyAndMigrateFromNodeToInline__I__sci_MapNode__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, oldNode, node) {
    const idxOld = (((((-1) + this.sci_BitmapIndexedMapNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const dataIxNew = this.dataIndex__I__I(bitpos);
    const idxNew = (dataIxNew << 1);
    const key = node.getKey__I__O(0);
    const value = node.getValue__I__O(0);
    const src = this.sci_BitmapIndexedMapNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [((1 + src.u.length) | 0)]);
    $systemArraycopy(src, 0, dst, 0, idxNew);
    dst.u[idxNew] = key;
    dst.u[((1 + idxNew) | 0)] = value;
    const destPos = ((2 + idxNew) | 0);
    const length = ((idxOld - idxNew) | 0);
    $systemArraycopy(src, idxNew, dst, destPos, length);
    const srcPos = ((1 + idxOld) | 0);
    const destPos$1 = ((2 + idxOld) | 0);
    const length$1 = (((-1) + ((src.u.length - idxOld) | 0)) | 0);
    $systemArraycopy(src, srcPos, dst, destPos$1, length$1);
    const hash = node.getHash__I__I(0);
    const dstHashes = this.insertElement__AI__I__I__AI(this.sci_BitmapIndexedMapNode__f_originalHashes, dataIxNew, hash);
    return new $c_sci_BitmapIndexedMapNode((this.sci_BitmapIndexedMapNode__f_dataMap | bitpos), (this.sci_BitmapIndexedMapNode__f_nodeMap ^ bitpos), dst, dstHashes, ((1 + ((this.sci_BitmapIndexedMapNode__f_size - oldNode.size__I()) | 0)) | 0), ((((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode - oldNode.cachedJavaKeySetHashCode__I()) | 0) + node.cachedJavaKeySetHashCode__I()) | 0))
  };
  foreach__F1__V(f) {
    const i = this.sci_BitmapIndexedMapNode__f_dataMap;
    const iN = $m_jl_Integer$().bitCount__I__I(i);
    let i$1 = 0;
    while ((i$1 < iN)) {
      f.apply__O__O(this.getPayload__I__T2(i$1));
      i$1 = ((1 + i$1) | 0)
    };
    const i$2 = this.sci_BitmapIndexedMapNode__f_nodeMap;
    const jN = $m_jl_Integer$().bitCount__I__I(i$2);
    let j = 0;
    while ((j < jN)) {
      this.getNode__I__sci_MapNode(j).foreach__F1__V(f);
      j = ((1 + j) | 0)
    }
  };
  foreachWithHash__F3__V(f) {
    let i = 0;
    const i$1 = this.sci_BitmapIndexedMapNode__f_dataMap;
    const iN = $m_jl_Integer$().bitCount__I__I(i$1);
    while ((i < iN)) {
      f.apply__O__O__O__O(this.getKey__I__O(i), this.getValue__I__O(i), this.getHash__I__I(i));
      i = ((1 + i) | 0)
    };
    const i$2 = this.sci_BitmapIndexedMapNode__f_nodeMap;
    const jN = $m_jl_Integer$().bitCount__I__I(i$2);
    let j = 0;
    while ((j < jN)) {
      this.getNode__I__sci_MapNode(j).foreachWithHash__F3__V(f);
      j = ((1 + j) | 0)
    }
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_BitmapIndexedMapNode)) {
      const x2 = that;
      if ((this === x2)) {
        return true
      } else {
        let $$x1;
        if (((((this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode === x2.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode) && (this.sci_BitmapIndexedMapNode__f_nodeMap === x2.sci_BitmapIndexedMapNode__f_nodeMap)) && (this.sci_BitmapIndexedMapNode__f_dataMap === x2.sci_BitmapIndexedMapNode__f_dataMap)) && (this.sci_BitmapIndexedMapNode__f_size === x2.sci_BitmapIndexedMapNode__f_size))) {
          const a = this.sci_BitmapIndexedMapNode__f_originalHashes;
          const b = x2.sci_BitmapIndexedMapNode__f_originalHashes;
          $$x1 = $m_ju_Arrays$().equals__AI__AI__Z(a, b)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const a1 = this.sci_BitmapIndexedMapNode__f_content;
          const a2 = x2.sci_BitmapIndexedMapNode__f_content;
          const length = this.sci_BitmapIndexedMapNode__f_content.u.length;
          if ((a1 === a2)) {
            return true
          } else {
            let isEqual = true;
            let i = 0;
            while ((isEqual && (i < length))) {
              isEqual = $m_sr_BoxesRunTime$().equals__O__O__Z(a1.u[i], a2.u[i]);
              i = ((1 + i) | 0)
            };
            return isEqual
          }
        } else {
          return false
        }
      }
    } else {
      return false
    }
  };
  hashCode__I() {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "Trie nodes do not support hashing.")
  };
  concat__sci_MapNode__I__sci_BitmapIndexedMapNode(that, shift) {
    if ((that instanceof $c_sci_BitmapIndexedMapNode)) {
      const x2 = that;
      if ((this.sci_BitmapIndexedMapNode__f_size === 0)) {
        return x2
      } else if (((x2.sci_BitmapIndexedMapNode__f_size === 0) || (x2 === this))) {
        return this
      } else if ((x2.sci_BitmapIndexedMapNode__f_size === 1)) {
        const originalHash = x2.getHash__I__I(0);
        return this.updated__O__O__I__I__I__Z__sci_BitmapIndexedMapNode(x2.getKey__I__O(0), x2.getValue__I__O(0), originalHash, $m_sc_Hashing$().improve__I__I(originalHash), shift, true)
      };
      let anyChangesMadeSoFar = false;
      const allMap = (((this.sci_BitmapIndexedMapNode__f_dataMap | x2.sci_BitmapIndexedMapNode__f_dataMap) | this.sci_BitmapIndexedMapNode__f_nodeMap) | x2.sci_BitmapIndexedMapNode__f_nodeMap);
      const minimumBitPos = $m_sci_Node$().bitposFrom__I__I(((allMap === 0) ? 32 : ((31 - $clz32((allMap & ((-allMap) | 0)))) | 0)));
      const maximumBitPos = $m_sci_Node$().bitposFrom__I__I(((31 - $clz32(allMap)) | 0));
      let leftNodeRightNode = 0;
      let leftDataRightNode = 0;
      let leftNodeRightData = 0;
      let leftDataOnly = 0;
      let rightDataOnly = 0;
      let leftNodeOnly = 0;
      let rightNodeOnly = 0;
      let leftDataRightDataMigrateToNode = 0;
      let leftDataRightDataRightOverwrites = 0;
      let dataToNodeMigrationTargets = 0;
      let bitpos = minimumBitPos;
      let leftIdx = 0;
      let rightIdx = 0;
      let finished = false;
      while ((!finished)) {
        if (((bitpos & this.sci_BitmapIndexedMapNode__f_dataMap) !== 0)) {
          if (((bitpos & x2.sci_BitmapIndexedMapNode__f_dataMap) !== 0)) {
            const leftOriginalHash = this.getHash__I__I(leftIdx);
            if (((leftOriginalHash === x2.getHash__I__I(rightIdx)) && $m_sr_BoxesRunTime$().equals__O__O__Z(this.getKey__I__O(leftIdx), x2.getKey__I__O(rightIdx)))) {
              leftDataRightDataRightOverwrites = (leftDataRightDataRightOverwrites | bitpos)
            } else {
              leftDataRightDataMigrateToNode = (leftDataRightDataMigrateToNode | bitpos);
              dataToNodeMigrationTargets = (dataToNodeMigrationTargets | $m_sci_Node$().bitposFrom__I__I($m_sci_Node$().maskFrom__I__I__I($m_sc_Hashing$().improve__I__I(leftOriginalHash), shift)))
            };
            rightIdx = ((1 + rightIdx) | 0)
          } else if (((bitpos & x2.sci_BitmapIndexedMapNode__f_nodeMap) !== 0)) {
            leftDataRightNode = (leftDataRightNode | bitpos)
          } else {
            leftDataOnly = (leftDataOnly | bitpos)
          };
          leftIdx = ((1 + leftIdx) | 0)
        } else if (((bitpos & this.sci_BitmapIndexedMapNode__f_nodeMap) !== 0)) {
          if (((bitpos & x2.sci_BitmapIndexedMapNode__f_dataMap) !== 0)) {
            leftNodeRightData = (leftNodeRightData | bitpos);
            rightIdx = ((1 + rightIdx) | 0)
          } else if (((bitpos & x2.sci_BitmapIndexedMapNode__f_nodeMap) !== 0)) {
            leftNodeRightNode = (leftNodeRightNode | bitpos)
          } else {
            leftNodeOnly = (leftNodeOnly | bitpos)
          }
        } else if (((bitpos & x2.sci_BitmapIndexedMapNode__f_dataMap) !== 0)) {
          rightDataOnly = (rightDataOnly | bitpos);
          rightIdx = ((1 + rightIdx) | 0)
        } else if (((bitpos & x2.sci_BitmapIndexedMapNode__f_nodeMap) !== 0)) {
          rightNodeOnly = (rightNodeOnly | bitpos)
        };
        if ((bitpos === maximumBitPos)) {
          finished = true
        } else {
          bitpos = (bitpos << 1)
        }
      };
      const newDataMap = ((leftDataOnly | rightDataOnly) | leftDataRightDataRightOverwrites);
      const newNodeMap = (((((leftNodeRightNode | leftDataRightNode) | leftNodeRightData) | leftNodeOnly) | rightNodeOnly) | dataToNodeMigrationTargets);
      if (((newDataMap === (rightDataOnly | leftDataRightDataRightOverwrites)) && (newNodeMap === rightNodeOnly))) {
        return x2
      };
      const newDataSize = $m_jl_Integer$().bitCount__I__I(newDataMap);
      const newContentSize = (((newDataSize << 1) + $m_jl_Integer$().bitCount__I__I(newNodeMap)) | 0);
      const newContent = $newArrayObject($d_O.getArrayOf(), [newContentSize]);
      const newOriginalHashes = $newArrayObject($d_I.getArrayOf(), [newDataSize]);
      let newSize = 0;
      let newCachedHashCode = 0;
      let leftDataIdx = 0;
      let rightDataIdx = 0;
      let leftNodeIdx = 0;
      let rightNodeIdx = 0;
      const nextShift = ((5 + shift) | 0);
      let compressedDataIdx = 0;
      let compressedNodeIdx = 0;
      let bitpos$2 = minimumBitPos;
      let finished$2 = false;
      while ((!finished$2)) {
        if (((bitpos$2 & leftNodeRightNode) !== 0)) {
          const rightNode = x2.getNode__I__sci_MapNode(rightNodeIdx);
          const newNode = this.getNode__I__sci_MapNode(leftNodeIdx).concat__sci_MapNode__I__sci_MapNode(rightNode, nextShift);
          if ((rightNode !== newNode)) {
            anyChangesMadeSoFar = true
          };
          newContent.u[(((-1) + ((newContentSize - compressedNodeIdx) | 0)) | 0)] = newNode;
          compressedNodeIdx = ((1 + compressedNodeIdx) | 0);
          rightNodeIdx = ((1 + rightNodeIdx) | 0);
          leftNodeIdx = ((1 + leftNodeIdx) | 0);
          newSize = ((newSize + newNode.size__I()) | 0);
          newCachedHashCode = ((newCachedHashCode + newNode.cachedJavaKeySetHashCode__I()) | 0)
        } else if (((bitpos$2 & leftDataRightNode) !== 0)) {
          const n = x2.getNode__I__sci_MapNode(rightNodeIdx);
          const leftKey = this.getKey__I__O(leftDataIdx);
          const leftValue = this.getValue__I__O(leftDataIdx);
          const leftOriginalHash$2 = this.getHash__I__I(leftDataIdx);
          const leftImproved = $m_sc_Hashing$().improve__I__I(leftOriginalHash$2);
          const updated = n.updated__O__O__I__I__I__Z__sci_MapNode(leftKey, leftValue, leftOriginalHash$2, leftImproved, nextShift, false);
          if ((updated !== n)) {
            anyChangesMadeSoFar = true
          };
          newContent.u[(((-1) + ((newContentSize - compressedNodeIdx) | 0)) | 0)] = updated;
          compressedNodeIdx = ((1 + compressedNodeIdx) | 0);
          rightNodeIdx = ((1 + rightNodeIdx) | 0);
          leftDataIdx = ((1 + leftDataIdx) | 0);
          newSize = ((newSize + updated.size__I()) | 0);
          newCachedHashCode = ((newCachedHashCode + updated.cachedJavaKeySetHashCode__I()) | 0)
        } else if (((bitpos$2 & leftNodeRightData) !== 0)) {
          anyChangesMadeSoFar = true;
          const rightOriginalHash = x2.getHash__I__I(rightDataIdx);
          const newNode$3 = this.getNode__I__sci_MapNode(leftNodeIdx).updated__O__O__I__I__I__Z__sci_MapNode(x2.getKey__I__O(rightDataIdx), x2.getValue__I__O(rightDataIdx), x2.getHash__I__I(rightDataIdx), $m_sc_Hashing$().improve__I__I(rightOriginalHash), nextShift, true);
          newContent.u[(((-1) + ((newContentSize - compressedNodeIdx) | 0)) | 0)] = newNode$3;
          compressedNodeIdx = ((1 + compressedNodeIdx) | 0);
          leftNodeIdx = ((1 + leftNodeIdx) | 0);
          rightDataIdx = ((1 + rightDataIdx) | 0);
          newSize = ((newSize + newNode$3.size__I()) | 0);
          newCachedHashCode = ((newCachedHashCode + newNode$3.cachedJavaKeySetHashCode__I()) | 0)
        } else if (((bitpos$2 & leftDataOnly) !== 0)) {
          anyChangesMadeSoFar = true;
          const originalHash$2 = this.sci_BitmapIndexedMapNode__f_originalHashes.u[leftDataIdx];
          newContent.u[(compressedDataIdx << 1)] = this.getKey__I__O(leftDataIdx);
          newContent.u[((1 + (compressedDataIdx << 1)) | 0)] = this.getValue__I__O(leftDataIdx);
          newOriginalHashes.u[compressedDataIdx] = originalHash$2;
          compressedDataIdx = ((1 + compressedDataIdx) | 0);
          leftDataIdx = ((1 + leftDataIdx) | 0);
          newSize = ((1 + newSize) | 0);
          newCachedHashCode = ((newCachedHashCode + $m_sc_Hashing$().improve__I__I(originalHash$2)) | 0)
        } else if (((bitpos$2 & rightDataOnly) !== 0)) {
          const originalHash$3 = x2.sci_BitmapIndexedMapNode__f_originalHashes.u[rightDataIdx];
          newContent.u[(compressedDataIdx << 1)] = x2.getKey__I__O(rightDataIdx);
          newContent.u[((1 + (compressedDataIdx << 1)) | 0)] = x2.getValue__I__O(rightDataIdx);
          newOriginalHashes.u[compressedDataIdx] = originalHash$3;
          compressedDataIdx = ((1 + compressedDataIdx) | 0);
          rightDataIdx = ((1 + rightDataIdx) | 0);
          newSize = ((1 + newSize) | 0);
          newCachedHashCode = ((newCachedHashCode + $m_sc_Hashing$().improve__I__I(originalHash$3)) | 0)
        } else if (((bitpos$2 & leftNodeOnly) !== 0)) {
          anyChangesMadeSoFar = true;
          const newNode$4 = this.getNode__I__sci_MapNode(leftNodeIdx);
          newContent.u[(((-1) + ((newContentSize - compressedNodeIdx) | 0)) | 0)] = newNode$4;
          compressedNodeIdx = ((1 + compressedNodeIdx) | 0);
          leftNodeIdx = ((1 + leftNodeIdx) | 0);
          newSize = ((newSize + newNode$4.size__I()) | 0);
          newCachedHashCode = ((newCachedHashCode + newNode$4.cachedJavaKeySetHashCode__I()) | 0)
        } else if (((bitpos$2 & rightNodeOnly) !== 0)) {
          const newNode$5 = x2.getNode__I__sci_MapNode(rightNodeIdx);
          newContent.u[(((-1) + ((newContentSize - compressedNodeIdx) | 0)) | 0)] = newNode$5;
          compressedNodeIdx = ((1 + compressedNodeIdx) | 0);
          rightNodeIdx = ((1 + rightNodeIdx) | 0);
          newSize = ((newSize + newNode$5.size__I()) | 0);
          newCachedHashCode = ((newCachedHashCode + newNode$5.cachedJavaKeySetHashCode__I()) | 0)
        } else if (((bitpos$2 & leftDataRightDataMigrateToNode) !== 0)) {
          anyChangesMadeSoFar = true;
          const leftOriginalHash$3 = this.getHash__I__I(leftDataIdx);
          const rightOriginalHash$2 = x2.getHash__I__I(rightDataIdx);
          const newNode$6 = x2.mergeTwoKeyValPairs__O__O__I__I__O__O__I__I__I__sci_MapNode(this.getKey__I__O(leftDataIdx), this.getValue__I__O(leftDataIdx), leftOriginalHash$3, $m_sc_Hashing$().improve__I__I(leftOriginalHash$3), x2.getKey__I__O(rightDataIdx), x2.getValue__I__O(rightDataIdx), rightOriginalHash$2, $m_sc_Hashing$().improve__I__I(rightOriginalHash$2), nextShift);
          newContent.u[(((-1) + ((newContentSize - compressedNodeIdx) | 0)) | 0)] = newNode$6;
          compressedNodeIdx = ((1 + compressedNodeIdx) | 0);
          leftDataIdx = ((1 + leftDataIdx) | 0);
          rightDataIdx = ((1 + rightDataIdx) | 0);
          newSize = ((newSize + newNode$6.size__I()) | 0);
          newCachedHashCode = ((newCachedHashCode + newNode$6.cachedJavaKeySetHashCode__I()) | 0)
        } else if (((bitpos$2 & leftDataRightDataRightOverwrites) !== 0)) {
          const originalHash$4 = x2.sci_BitmapIndexedMapNode__f_originalHashes.u[rightDataIdx];
          newContent.u[(compressedDataIdx << 1)] = x2.getKey__I__O(rightDataIdx);
          newContent.u[((1 + (compressedDataIdx << 1)) | 0)] = x2.getValue__I__O(rightDataIdx);
          newOriginalHashes.u[compressedDataIdx] = originalHash$4;
          compressedDataIdx = ((1 + compressedDataIdx) | 0);
          rightDataIdx = ((1 + rightDataIdx) | 0);
          newSize = ((1 + newSize) | 0);
          newCachedHashCode = ((newCachedHashCode + $m_sc_Hashing$().improve__I__I(originalHash$4)) | 0);
          leftDataIdx = ((1 + leftDataIdx) | 0)
        };
        if ((bitpos$2 === maximumBitPos)) {
          finished$2 = true
        } else {
          bitpos$2 = (bitpos$2 << 1)
        }
      };
      return (anyChangesMadeSoFar ? new $c_sci_BitmapIndexedMapNode(newDataMap, newNodeMap, newContent, newOriginalHashes, newSize, newCachedHashCode) : x2)
    } else {
      throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "Cannot concatenate a HashCollisionMapNode with a BitmapIndexedMapNode")
    }
  };
  copy__sci_BitmapIndexedMapNode() {
    const contentClone = this.sci_BitmapIndexedMapNode__f_content.clone__O();
    const contentLength = contentClone.u.length;
    const i = this.sci_BitmapIndexedMapNode__f_dataMap;
    let i$1 = ($m_jl_Integer$().bitCount__I__I(i) << 1);
    while ((i$1 < contentLength)) {
      contentClone.u[i$1] = contentClone.u[i$1].copy__sci_MapNode();
      i$1 = ((1 + i$1) | 0)
    };
    return new $c_sci_BitmapIndexedMapNode(this.sci_BitmapIndexedMapNode__f_dataMap, this.sci_BitmapIndexedMapNode__f_nodeMap, contentClone, this.sci_BitmapIndexedMapNode__f_originalHashes.clone__O(), this.sci_BitmapIndexedMapNode__f_size, this.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode)
  };
  copy__sci_MapNode() {
    return this.copy__sci_BitmapIndexedMapNode()
  };
  concat__sci_MapNode__I__sci_MapNode(that, shift) {
    return this.concat__sci_MapNode__I__sci_BitmapIndexedMapNode(that, shift)
  };
  removed__O__I__I__I__sci_MapNode(key, originalHash, hash, shift) {
    return this.removed__O__I__I__I__sci_BitmapIndexedMapNode(key, originalHash, hash, shift)
  };
  updated__O__O__I__I__I__Z__sci_MapNode(key, value, originalHash, hash, shift, replaceValue) {
    return this.updated__O__O__I__I__I__Z__sci_BitmapIndexedMapNode(key, value, originalHash, hash, shift, replaceValue)
  };
  getNode__I__sci_Node(index) {
    return this.getNode__I__sci_MapNode(index)
  };
}
function $isArrayOf_sci_BitmapIndexedMapNode(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_BitmapIndexedMapNode)))
}
const $d_sci_BitmapIndexedMapNode = new $TypeData().initClass({
  sci_BitmapIndexedMapNode: 0
}, false, "scala.collection.immutable.BitmapIndexedMapNode", {
  sci_BitmapIndexedMapNode: 1,
  sci_MapNode: 1,
  sci_Node: 1,
  O: 1
});
$c_sci_BitmapIndexedMapNode.prototype.$classData = $d_sci_BitmapIndexedMapNode;
class $c_sci_BitmapIndexedSetNode extends $c_sci_SetNode {
  constructor(dataMap, nodeMap, content, originalHashes, size, cachedJavaKeySetHashCode) {
    super();
    this.sci_BitmapIndexedSetNode__f_dataMap = 0;
    this.sci_BitmapIndexedSetNode__f_nodeMap = 0;
    this.sci_BitmapIndexedSetNode__f_content = null;
    this.sci_BitmapIndexedSetNode__f_originalHashes = null;
    this.sci_BitmapIndexedSetNode__f_size = 0;
    this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode = 0;
    this.sci_BitmapIndexedSetNode__f_dataMap = dataMap;
    this.sci_BitmapIndexedSetNode__f_nodeMap = nodeMap;
    this.sci_BitmapIndexedSetNode__f_content = content;
    this.sci_BitmapIndexedSetNode__f_originalHashes = originalHashes;
    this.sci_BitmapIndexedSetNode__f_size = size;
    this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode = cachedJavaKeySetHashCode
  };
  size__I() {
    return this.sci_BitmapIndexedSetNode__f_size
  };
  cachedJavaKeySetHashCode__I() {
    return this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode
  };
  getPayload__I__O(index) {
    return this.sci_BitmapIndexedSetNode__f_content.u[index]
  };
  getHash__I__I(index) {
    return this.sci_BitmapIndexedSetNode__f_originalHashes.u[index]
  };
  getNode__I__sci_SetNode(index) {
    return this.sci_BitmapIndexedSetNode__f_content.u[(((((-1) + this.sci_BitmapIndexedSetNode__f_content.u.length) | 0) - index) | 0)]
  };
  contains__O__I__I__I__Z(element, originalHash, elementHash, shift) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(elementHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedSetNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedSetNode__f_dataMap, mask, bitpos);
      return ((this.sci_BitmapIndexedSetNode__f_originalHashes.u[index] === originalHash) && $m_sr_BoxesRunTime$().equals__O__O__Z(element, this.getPayload__I__O(index)))
    };
    if (((this.sci_BitmapIndexedSetNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedSetNode__f_nodeMap, mask, bitpos);
      return this.getNode__I__sci_SetNode(index$2).contains__O__I__I__I__Z(element, originalHash, elementHash, ((5 + shift) | 0))
    };
    return false
  };
  updated__O__I__I__I__sci_BitmapIndexedSetNode(element, originalHash, elementHash, shift) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(elementHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedSetNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedSetNode__f_dataMap, mask, bitpos);
      const element0 = this.getPayload__I__O(index);
      if (Object.is(element0, element)) {
        return this
      } else {
        const element0UnimprovedHash = this.getHash__I__I(index);
        const element0Hash = $m_sc_Hashing$().improve__I__I(element0UnimprovedHash);
        if (((originalHash === element0UnimprovedHash) && $m_sr_BoxesRunTime$().equals__O__O__Z(element0, element))) {
          return this
        } else {
          const subNodeNew = this.mergeTwoKeyValPairs__O__I__I__O__I__I__I__sci_SetNode(element0, element0UnimprovedHash, element0Hash, element, originalHash, elementHash, ((5 + shift) | 0));
          return this.copyAndMigrateFromInlineToNode__I__I__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, element0Hash, subNodeNew)
        }
      }
    };
    if (((this.sci_BitmapIndexedSetNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedSetNode__f_nodeMap, mask, bitpos);
      const subNode = this.getNode__I__sci_SetNode(index$2);
      const subNodeNew$2 = subNode.updated__O__I__I__I__sci_SetNode(element, originalHash, elementHash, ((5 + shift) | 0));
      if ((subNode === subNodeNew$2)) {
        return this
      } else {
        return this.copyAndSetNode__I__sci_SetNode__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, subNode, subNodeNew$2)
      }
    };
    return this.copyAndInsertValue__I__O__I__I__sci_BitmapIndexedSetNode(bitpos, element, originalHash, elementHash)
  };
  removed__O__I__I__I__sci_BitmapIndexedSetNode(element, originalHash, elementHash, shift) {
    const mask = $m_sci_Node$().maskFrom__I__I__I(elementHash, shift);
    const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
    if (((this.sci_BitmapIndexedSetNode__f_dataMap & bitpos) !== 0)) {
      const index = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedSetNode__f_dataMap, mask, bitpos);
      const element0 = this.getPayload__I__O(index);
      if ($m_sr_BoxesRunTime$().equals__O__O__Z(element0, element)) {
        const i = this.sci_BitmapIndexedSetNode__f_dataMap;
        let $$x1;
        if (($m_jl_Integer$().bitCount__I__I(i) === 2)) {
          const i$1 = this.sci_BitmapIndexedSetNode__f_nodeMap;
          $$x1 = ($m_jl_Integer$().bitCount__I__I(i$1) === 0)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const newDataMap = ((shift === 0) ? (this.sci_BitmapIndexedSetNode__f_dataMap ^ bitpos) : $m_sci_Node$().bitposFrom__I__I($m_sci_Node$().maskFrom__I__I__I(elementHash, 0)));
          if ((index === 0)) {
            const array = [this.getPayload__I__O(1)];
            const xs = new $c_sjsr_WrappedVarArgs(array);
            $m_s_reflect_ManifestFactory$AnyManifest$();
            const len = xs.length__I();
            const array$1 = $newArrayObject($d_O.getArrayOf(), [len]);
            const this$7 = new $c_sc_IndexedSeqView$Id(xs);
            const iterator = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$7);
            let i$2 = 0;
            while (iterator.hasNext__Z()) {
              array$1.u[i$2] = iterator.next__O();
              i$2 = ((1 + i$2) | 0)
            };
            return new $c_sci_BitmapIndexedSetNode(newDataMap, 0, array$1, $makeNativeArrayWrapper($d_I.getArrayOf(), [this.sci_BitmapIndexedSetNode__f_originalHashes.u[1]]), (((-1) + this.sci_BitmapIndexedSetNode__f_size) | 0), $m_sc_Hashing$().improve__I__I(this.sci_BitmapIndexedSetNode__f_originalHashes.u[1]))
          } else {
            const array$2 = [this.getPayload__I__O(0)];
            const xs$1 = new $c_sjsr_WrappedVarArgs(array$2);
            $m_s_reflect_ManifestFactory$AnyManifest$();
            const len$1 = xs$1.length__I();
            const array$3 = $newArrayObject($d_O.getArrayOf(), [len$1]);
            const this$14 = new $c_sc_IndexedSeqView$Id(xs$1);
            const iterator$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$14);
            let i$3 = 0;
            while (iterator$1.hasNext__Z()) {
              array$3.u[i$3] = iterator$1.next__O();
              i$3 = ((1 + i$3) | 0)
            };
            return new $c_sci_BitmapIndexedSetNode(newDataMap, 0, array$3, $makeNativeArrayWrapper($d_I.getArrayOf(), [this.sci_BitmapIndexedSetNode__f_originalHashes.u[0]]), (((-1) + this.sci_BitmapIndexedSetNode__f_size) | 0), $m_sc_Hashing$().improve__I__I(this.sci_BitmapIndexedSetNode__f_originalHashes.u[0]))
          }
        } else {
          return this.copyAndRemoveValue__I__I__sci_BitmapIndexedSetNode(bitpos, elementHash)
        }
      } else {
        return this
      }
    };
    if (((this.sci_BitmapIndexedSetNode__f_nodeMap & bitpos) !== 0)) {
      const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(this.sci_BitmapIndexedSetNode__f_nodeMap, mask, bitpos);
      const subNode = this.getNode__I__sci_SetNode(index$2);
      const subNodeNew = subNode.removed__O__I__I__I__sci_SetNode(element, originalHash, elementHash, ((5 + shift) | 0));
      if ((subNodeNew === subNode)) {
        return this
      };
      const subNodeNewSize = subNodeNew.size__I();
      if ((subNodeNewSize === 1)) {
        if ((this.sci_BitmapIndexedSetNode__f_size === subNode.size__I())) {
          return subNodeNew
        } else {
          return this.copyAndMigrateFromNodeToInline__I__I__sci_SetNode__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, elementHash, subNode, subNodeNew)
        }
      } else if ((subNodeNewSize > 1)) {
        return this.copyAndSetNode__I__sci_SetNode__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, subNode, subNodeNew)
      }
    };
    return this
  };
  mergeTwoKeyValPairs__O__I__I__O__I__I__I__sci_SetNode(key0, originalKeyHash0, keyHash0, key1, originalKeyHash1, keyHash1, shift) {
    if ((shift >= 32)) {
      const this$4 = $m_sci_Vector$();
      const array = [key0, key1];
      const elems = new $c_sjsr_WrappedVarArgs(array);
      return new $c_sci_HashCollisionSetNode(originalKeyHash0, keyHash0, this$4.from__sc_IterableOnce__sci_Vector(elems))
    } else {
      const mask0 = $m_sci_Node$().maskFrom__I__I__I(keyHash0, shift);
      const mask1 = $m_sci_Node$().maskFrom__I__I__I(keyHash1, shift);
      if ((mask0 !== mask1)) {
        const dataMap = ($m_sci_Node$().bitposFrom__I__I(mask0) | $m_sci_Node$().bitposFrom__I__I(mask1));
        const newCachedHashCode = ((keyHash0 + keyHash1) | 0);
        if ((mask0 < mask1)) {
          const array$1 = [key0, key1];
          const xs = new $c_sjsr_WrappedVarArgs(array$1);
          $m_s_reflect_ManifestFactory$AnyManifest$();
          const len = xs.length__I();
          const array$2 = $newArrayObject($d_O.getArrayOf(), [len]);
          const this$11 = new $c_sc_IndexedSeqView$Id(xs);
          const iterator = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$11);
          let i = 0;
          while (iterator.hasNext__Z()) {
            array$2.u[i] = iterator.next__O();
            i = ((1 + i) | 0)
          };
          return new $c_sci_BitmapIndexedSetNode(dataMap, 0, array$2, $makeNativeArrayWrapper($d_I.getArrayOf(), [originalKeyHash0, originalKeyHash1]), 2, newCachedHashCode)
        } else {
          const array$3 = [key1, key0];
          const xs$1 = new $c_sjsr_WrappedVarArgs(array$3);
          $m_s_reflect_ManifestFactory$AnyManifest$();
          const len$1 = xs$1.length__I();
          const array$4 = $newArrayObject($d_O.getArrayOf(), [len$1]);
          const this$18 = new $c_sc_IndexedSeqView$Id(xs$1);
          const iterator$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$18);
          let i$1 = 0;
          while (iterator$1.hasNext__Z()) {
            array$4.u[i$1] = iterator$1.next__O();
            i$1 = ((1 + i$1) | 0)
          };
          return new $c_sci_BitmapIndexedSetNode(dataMap, 0, array$4, $makeNativeArrayWrapper($d_I.getArrayOf(), [originalKeyHash1, originalKeyHash0]), 2, newCachedHashCode)
        }
      } else {
        const nodeMap = $m_sci_Node$().bitposFrom__I__I(mask0);
        const node = this.mergeTwoKeyValPairs__O__I__I__O__I__I__I__sci_SetNode(key0, originalKeyHash0, keyHash0, key1, originalKeyHash1, keyHash1, ((5 + shift) | 0));
        const array$5 = [node];
        const xs$2 = new $c_sjsr_WrappedVarArgs(array$5);
        $m_s_reflect_ManifestFactory$AnyManifest$();
        const len$2 = xs$2.length__I();
        const array$6 = $newArrayObject($d_O.getArrayOf(), [len$2]);
        const this$25 = new $c_sc_IndexedSeqView$Id(xs$2);
        const iterator$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$25);
        let i$2 = 0;
        while (iterator$2.hasNext__Z()) {
          array$6.u[i$2] = iterator$2.next__O();
          i$2 = ((1 + i$2) | 0)
        };
        return new $c_sci_BitmapIndexedSetNode(0, nodeMap, array$6, $m_s_Array$EmptyArrays$().s_Array$EmptyArrays$__f_emptyIntArray, node.size__I(), node.cachedJavaKeySetHashCode__I())
      }
    }
  };
  hasPayload__Z() {
    return (this.sci_BitmapIndexedSetNode__f_dataMap !== 0)
  };
  payloadArity__I() {
    const i = this.sci_BitmapIndexedSetNode__f_dataMap;
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  hasNodes__Z() {
    return (this.sci_BitmapIndexedSetNode__f_nodeMap !== 0)
  };
  nodeArity__I() {
    const i = this.sci_BitmapIndexedSetNode__f_nodeMap;
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  dataIndex__I__I(bitpos) {
    const i = (this.sci_BitmapIndexedSetNode__f_dataMap & (((-1) + bitpos) | 0));
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  nodeIndex__I__I(bitpos) {
    const i = (this.sci_BitmapIndexedSetNode__f_nodeMap & (((-1) + bitpos) | 0));
    return $m_jl_Integer$().bitCount__I__I(i)
  };
  copyAndSetNode__I__sci_SetNode__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, oldNode, newNode) {
    const idx = (((((-1) + this.sci_BitmapIndexedSetNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const src = this.sci_BitmapIndexedSetNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [src.u.length]);
    const length = src.u.length;
    $systemArraycopy(src, 0, dst, 0, length);
    dst.u[idx] = newNode;
    return new $c_sci_BitmapIndexedSetNode(this.sci_BitmapIndexedSetNode__f_dataMap, this.sci_BitmapIndexedSetNode__f_nodeMap, dst, this.sci_BitmapIndexedSetNode__f_originalHashes, ((((this.sci_BitmapIndexedSetNode__f_size - oldNode.size__I()) | 0) + newNode.size__I()) | 0), ((((this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode - oldNode.cachedJavaKeySetHashCode__I()) | 0) + newNode.cachedJavaKeySetHashCode__I()) | 0))
  };
  copyAndInsertValue__I__O__I__I__sci_BitmapIndexedSetNode(bitpos, key, originalHash, elementHash) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const src = this.sci_BitmapIndexedSetNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [((1 + src.u.length) | 0)]);
    $systemArraycopy(src, 0, dst, 0, dataIx);
    dst.u[dataIx] = key;
    const destPos = ((1 + dataIx) | 0);
    const length = ((src.u.length - dataIx) | 0);
    $systemArraycopy(src, dataIx, dst, destPos, length);
    const dstHashes = this.insertElement__AI__I__I__AI(this.sci_BitmapIndexedSetNode__f_originalHashes, dataIx, originalHash);
    return new $c_sci_BitmapIndexedSetNode((this.sci_BitmapIndexedSetNode__f_dataMap | bitpos), this.sci_BitmapIndexedSetNode__f_nodeMap, dst, dstHashes, ((1 + this.sci_BitmapIndexedSetNode__f_size) | 0), ((this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode + elementHash) | 0))
  };
  copyAndRemoveValue__I__I__sci_BitmapIndexedSetNode(bitpos, elementHash) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const src = this.sci_BitmapIndexedSetNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [(((-1) + src.u.length) | 0)]);
    $systemArraycopy(src, 0, dst, 0, dataIx);
    const srcPos = ((1 + dataIx) | 0);
    const length = (((-1) + ((src.u.length - dataIx) | 0)) | 0);
    $systemArraycopy(src, srcPos, dst, dataIx, length);
    const dstHashes = this.removeElement__AI__I__AI(this.sci_BitmapIndexedSetNode__f_originalHashes, dataIx);
    return new $c_sci_BitmapIndexedSetNode((this.sci_BitmapIndexedSetNode__f_dataMap ^ bitpos), this.sci_BitmapIndexedSetNode__f_nodeMap, dst, dstHashes, (((-1) + this.sci_BitmapIndexedSetNode__f_size) | 0), ((this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode - elementHash) | 0))
  };
  copyAndMigrateFromInlineToNode__I__I__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, elementHash, node) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const idxNew = (((((-1) + this.sci_BitmapIndexedSetNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const src = this.sci_BitmapIndexedSetNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [src.u.length]);
    $systemArraycopy(src, 0, dst, 0, dataIx);
    const srcPos = ((1 + dataIx) | 0);
    const length = ((idxNew - dataIx) | 0);
    $systemArraycopy(src, srcPos, dst, dataIx, length);
    dst.u[idxNew] = node;
    const srcPos$1 = ((1 + idxNew) | 0);
    const destPos = ((1 + idxNew) | 0);
    const length$1 = (((-1) + ((src.u.length - idxNew) | 0)) | 0);
    $systemArraycopy(src, srcPos$1, dst, destPos, length$1);
    const dstHashes = this.removeElement__AI__I__AI(this.sci_BitmapIndexedSetNode__f_originalHashes, dataIx);
    return new $c_sci_BitmapIndexedSetNode((this.sci_BitmapIndexedSetNode__f_dataMap ^ bitpos), (this.sci_BitmapIndexedSetNode__f_nodeMap | bitpos), dst, dstHashes, (((((-1) + this.sci_BitmapIndexedSetNode__f_size) | 0) + node.size__I()) | 0), ((((this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode - elementHash) | 0) + node.cachedJavaKeySetHashCode__I()) | 0))
  };
  migrateFromInlineToNodeInPlace__I__I__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, keyHash, node) {
    const dataIx = this.dataIndex__I__I(bitpos);
    const idxNew = (((((-1) + this.sci_BitmapIndexedSetNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const src = this.sci_BitmapIndexedSetNode__f_content;
    const srcPos = ((1 + dataIx) | 0);
    const dest = this.sci_BitmapIndexedSetNode__f_content;
    const length = ((idxNew - dataIx) | 0);
    $systemArraycopy(src, srcPos, dest, dataIx, length);
    this.sci_BitmapIndexedSetNode__f_content.u[idxNew] = node;
    this.sci_BitmapIndexedSetNode__f_dataMap = (this.sci_BitmapIndexedSetNode__f_dataMap ^ bitpos);
    this.sci_BitmapIndexedSetNode__f_nodeMap = (this.sci_BitmapIndexedSetNode__f_nodeMap | bitpos);
    this.sci_BitmapIndexedSetNode__f_originalHashes = this.removeElement__AI__I__AI(this.sci_BitmapIndexedSetNode__f_originalHashes, dataIx);
    this.sci_BitmapIndexedSetNode__f_size = (((((-1) + this.sci_BitmapIndexedSetNode__f_size) | 0) + node.size__I()) | 0);
    this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode = ((((this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode - keyHash) | 0) + node.cachedJavaKeySetHashCode__I()) | 0);
    return this
  };
  copyAndMigrateFromNodeToInline__I__I__sci_SetNode__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, elementHash, oldNode, node) {
    const idxOld = (((((-1) + this.sci_BitmapIndexedSetNode__f_content.u.length) | 0) - this.nodeIndex__I__I(bitpos)) | 0);
    const dataIxNew = this.dataIndex__I__I(bitpos);
    const src = this.sci_BitmapIndexedSetNode__f_content;
    const dst = $newArrayObject($d_O.getArrayOf(), [src.u.length]);
    $systemArraycopy(src, 0, dst, 0, dataIxNew);
    dst.u[dataIxNew] = node.getPayload__I__O(0);
    const destPos = ((1 + dataIxNew) | 0);
    const length = ((idxOld - dataIxNew) | 0);
    $systemArraycopy(src, dataIxNew, dst, destPos, length);
    const srcPos = ((1 + idxOld) | 0);
    const destPos$1 = ((1 + idxOld) | 0);
    const length$1 = (((-1) + ((src.u.length - idxOld) | 0)) | 0);
    $systemArraycopy(src, srcPos, dst, destPos$1, length$1);
    const hash = node.getHash__I__I(0);
    const dstHashes = this.insertElement__AI__I__I__AI(this.sci_BitmapIndexedSetNode__f_originalHashes, dataIxNew, hash);
    return new $c_sci_BitmapIndexedSetNode((this.sci_BitmapIndexedSetNode__f_dataMap | bitpos), (this.sci_BitmapIndexedSetNode__f_nodeMap ^ bitpos), dst, dstHashes, ((1 + ((this.sci_BitmapIndexedSetNode__f_size - oldNode.size__I()) | 0)) | 0), ((((this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode - oldNode.cachedJavaKeySetHashCode__I()) | 0) + node.cachedJavaKeySetHashCode__I()) | 0))
  };
  foreach__F1__V(f) {
    const i = this.sci_BitmapIndexedSetNode__f_dataMap;
    const thisPayloadArity = $m_jl_Integer$().bitCount__I__I(i);
    let i$1 = 0;
    while ((i$1 < thisPayloadArity)) {
      f.apply__O__O(this.getPayload__I__O(i$1));
      i$1 = ((1 + i$1) | 0)
    };
    const i$2 = this.sci_BitmapIndexedSetNode__f_nodeMap;
    const thisNodeArity = $m_jl_Integer$().bitCount__I__I(i$2);
    let j = 0;
    while ((j < thisNodeArity)) {
      this.getNode__I__sci_SetNode(j).foreach__F1__V(f);
      j = ((1 + j) | 0)
    }
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_BitmapIndexedSetNode)) {
      const x2 = that;
      if ((this === x2)) {
        return true
      } else {
        let $$x1;
        if (((((this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode === x2.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode) && (this.sci_BitmapIndexedSetNode__f_nodeMap === x2.sci_BitmapIndexedSetNode__f_nodeMap)) && (this.sci_BitmapIndexedSetNode__f_dataMap === x2.sci_BitmapIndexedSetNode__f_dataMap)) && (this.sci_BitmapIndexedSetNode__f_size === x2.sci_BitmapIndexedSetNode__f_size))) {
          const a = this.sci_BitmapIndexedSetNode__f_originalHashes;
          const b = x2.sci_BitmapIndexedSetNode__f_originalHashes;
          $$x1 = $m_ju_Arrays$().equals__AI__AI__Z(a, b)
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const a1 = this.sci_BitmapIndexedSetNode__f_content;
          const a2 = x2.sci_BitmapIndexedSetNode__f_content;
          const length = this.sci_BitmapIndexedSetNode__f_content.u.length;
          if ((a1 === a2)) {
            return true
          } else {
            let isEqual = true;
            let i = 0;
            while ((isEqual && (i < length))) {
              isEqual = $m_sr_BoxesRunTime$().equals__O__O__Z(a1.u[i], a2.u[i]);
              i = ((1 + i) | 0)
            };
            return isEqual
          }
        } else {
          return false
        }
      }
    } else {
      return false
    }
  };
  hashCode__I() {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "Trie nodes do not support hashing.")
  };
  copy__sci_BitmapIndexedSetNode() {
    const contentClone = this.sci_BitmapIndexedSetNode__f_content.clone__O();
    const contentLength = contentClone.u.length;
    const i = this.sci_BitmapIndexedSetNode__f_dataMap;
    let i$1 = $m_jl_Integer$().bitCount__I__I(i);
    while ((i$1 < contentLength)) {
      contentClone.u[i$1] = contentClone.u[i$1].copy__sci_SetNode();
      i$1 = ((1 + i$1) | 0)
    };
    return new $c_sci_BitmapIndexedSetNode(this.sci_BitmapIndexedSetNode__f_dataMap, this.sci_BitmapIndexedSetNode__f_nodeMap, contentClone, this.sci_BitmapIndexedSetNode__f_originalHashes.clone__O(), this.sci_BitmapIndexedSetNode__f_size, this.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode)
  };
  foreachWithHash__F2__V(f) {
    const i = this.sci_BitmapIndexedSetNode__f_dataMap;
    const iN = $m_jl_Integer$().bitCount__I__I(i);
    let i$1 = 0;
    while ((i$1 < iN)) {
      f.apply__O__O__O(this.getPayload__I__O(i$1), this.getHash__I__I(i$1));
      i$1 = ((1 + i$1) | 0)
    };
    const i$2 = this.sci_BitmapIndexedSetNode__f_nodeMap;
    const jN = $m_jl_Integer$().bitCount__I__I(i$2);
    let j = 0;
    while ((j < jN)) {
      this.getNode__I__sci_SetNode(j).foreachWithHash__F2__V(f);
      j = ((1 + j) | 0)
    }
  };
  copy__sci_SetNode() {
    return this.copy__sci_BitmapIndexedSetNode()
  };
  removed__O__I__I__I__sci_SetNode(element, originalHash, hash, shift) {
    return this.removed__O__I__I__I__sci_BitmapIndexedSetNode(element, originalHash, hash, shift)
  };
  updated__O__I__I__I__sci_SetNode(element, originalHash, hash, shift) {
    return this.updated__O__I__I__I__sci_BitmapIndexedSetNode(element, originalHash, hash, shift)
  };
  getNode__I__sci_Node(index) {
    return this.getNode__I__sci_SetNode(index)
  };
}
function $isArrayOf_sci_BitmapIndexedSetNode(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_BitmapIndexedSetNode)))
}
const $d_sci_BitmapIndexedSetNode = new $TypeData().initClass({
  sci_BitmapIndexedSetNode: 0
}, false, "scala.collection.immutable.BitmapIndexedSetNode", {
  sci_BitmapIndexedSetNode: 1,
  sci_SetNode: 1,
  sci_Node: 1,
  O: 1
});
$c_sci_BitmapIndexedSetNode.prototype.$classData = $d_sci_BitmapIndexedSetNode;
class $c_sci_HashCollisionMapNode extends $c_sci_MapNode {
  constructor(originalHash, hash, content) {
    super();
    this.sci_HashCollisionMapNode__f_originalHash = 0;
    this.sci_HashCollisionMapNode__f_hash = 0;
    this.sci_HashCollisionMapNode__f_content = null;
    this.sci_HashCollisionMapNode__f_originalHash = originalHash;
    this.sci_HashCollisionMapNode__f_hash = hash;
    this.sci_HashCollisionMapNode__f_content = content;
    $m_s_Predef$().require__Z__V((this.sci_HashCollisionMapNode__f_content.length__I() >= 2))
  };
  indexOf__O__I(key) {
    const iter = this.sci_HashCollisionMapNode__f_content.iterator__sc_Iterator();
    let i = 0;
    while (iter.hasNext__Z()) {
      if ($m_sr_BoxesRunTime$().equals__O__O__Z(iter.next__O()._1__O(), key)) {
        return i
      };
      i = ((1 + i) | 0)
    };
    return (-1)
  };
  size__I() {
    return this.sci_HashCollisionMapNode__f_content.length__I()
  };
  apply__O__I__I__I__O(key, originalHash, hash, shift) {
    const this$1 = this.get__O__I__I__I__s_Option(key, originalHash, hash, shift);
    if (this$1.isEmpty__Z()) {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    } else {
      return this$1.get__O()
    }
  };
  get__O__I__I__I__s_Option(key, originalHash, hash, shift) {
    if ((this.sci_HashCollisionMapNode__f_hash === hash)) {
      const index = this.indexOf__O__I(key);
      return ((index >= 0) ? new $c_s_Some(this.sci_HashCollisionMapNode__f_content.apply__I__O(index)._2__O()) : $m_s_None$())
    } else {
      return $m_s_None$()
    }
  };
  getOrElse__O__I__I__I__F0__O(key, originalHash, hash, shift, f) {
    if ((this.sci_HashCollisionMapNode__f_hash === hash)) {
      const x1 = this.indexOf__O__I(key);
      return ((x1 === (-1)) ? f.apply__O() : this.sci_HashCollisionMapNode__f_content.apply__I__O(x1)._2__O())
    } else {
      return f.apply__O()
    }
  };
  containsKey__O__I__I__I__Z(key, originalHash, hash, shift) {
    return ((this.sci_HashCollisionMapNode__f_hash === hash) && (this.indexOf__O__I(key) >= 0))
  };
  updated__O__O__I__I__I__Z__sci_MapNode(key, value, originalHash, hash, shift, replaceValue) {
    const index = this.indexOf__O__I(key);
    if ((index >= 0)) {
      if (replaceValue) {
        if (Object.is(this.sci_HashCollisionMapNode__f_content.apply__I__O(index)._2__O(), value)) {
          return this
        } else {
          const this$1 = this.sci_HashCollisionMapNode__f_content;
          const elem = $ct_T2__O__O__(new $c_T2(), key, value);
          return new $c_sci_HashCollisionMapNode(originalHash, hash, this$1.updateAt__I__O__sci_Vector(index, elem))
        }
      } else {
        return this
      }
    } else {
      return new $c_sci_HashCollisionMapNode(originalHash, hash, this.sci_HashCollisionMapNode__f_content.appended__O__sci_Vector($ct_T2__O__O__(new $c_T2(), key, value)))
    }
  };
  removed__O__I__I__I__sci_MapNode(key, originalHash, hash, shift) {
    if ((!this.containsKey__O__I__I__I__Z(key, originalHash, hash, shift))) {
      return this
    } else {
      const this$1 = this.sci_HashCollisionMapNode__f_content;
      $m_sci_Vector$();
      const b = new $c_sci_VectorBuilder();
      const it = this$1.iterator__sc_Iterator();
      while (it.hasNext__Z()) {
        const elem = it.next__O();
        const keyValuePair = elem;
        if (($m_sr_BoxesRunTime$().equals__O__O__Z(keyValuePair._1__O(), key) !== true)) {
          b.addOne__O__sci_VectorBuilder(elem)
        }
      };
      const updatedContent = b.result__sci_Vector();
      const x1 = updatedContent.length__I();
      if ((x1 === 1)) {
        const x1$2 = updatedContent.apply__I__O(0);
        if ((x1$2 === null)) {
          throw new $c_s_MatchError(x1$2)
        };
        const k = x1$2._1__O();
        const v = x1$2._2__O();
        const $$x1 = $m_sci_Node$().bitposFrom__I__I($m_sci_Node$().maskFrom__I__I__I(hash, 0));
        const array = [k, v];
        const xs = new $c_sjsr_WrappedVarArgs(array);
        $m_s_reflect_ManifestFactory$AnyManifest$();
        const len = xs.length__I();
        const array$1 = $newArrayObject($d_O.getArrayOf(), [len]);
        const this$9 = new $c_sc_IndexedSeqView$Id(xs);
        const iterator = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$9);
        let i = 0;
        while (iterator.hasNext__Z()) {
          array$1.u[i] = iterator.next__O();
          i = ((1 + i) | 0)
        };
        return new $c_sci_BitmapIndexedMapNode($$x1, 0, array$1, $makeNativeArrayWrapper($d_I.getArrayOf(), [originalHash]), 1, hash)
      } else {
        return new $c_sci_HashCollisionMapNode(originalHash, hash, updatedContent)
      }
    }
  };
  hasNodes__Z() {
    return false
  };
  nodeArity__I() {
    return 0
  };
  getNode__I__sci_MapNode(index) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), "No sub-nodes present in hash-collision leaf node.")
  };
  hasPayload__Z() {
    return true
  };
  payloadArity__I() {
    return this.sci_HashCollisionMapNode__f_content.length__I()
  };
  getKey__I__O(index) {
    return this.sci_HashCollisionMapNode__f_content.apply__I__O(index)._1__O()
  };
  getValue__I__O(index) {
    return this.sci_HashCollisionMapNode__f_content.apply__I__O(index)._2__O()
  };
  getPayload__I__T2(index) {
    return this.sci_HashCollisionMapNode__f_content.apply__I__O(index)
  };
  getHash__I__I(index) {
    return this.sci_HashCollisionMapNode__f_originalHash
  };
  foreach__F1__V(f) {
    const this$1 = this.sci_HashCollisionMapNode__f_content;
    $f_sc_IterableOnceOps__foreach__F1__V(this$1, f)
  };
  foreachWithHash__F3__V(f) {
    const iter = this.sci_HashCollisionMapNode__f_content.iterator__sc_Iterator();
    while (iter.hasNext__Z()) {
      const next = iter.next__O();
      f.apply__O__O__O__O(next._1__O(), next._2__O(), this.sci_HashCollisionMapNode__f_originalHash)
    }
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_HashCollisionMapNode)) {
      const x2 = that;
      if ((this === x2)) {
        return true
      } else if (((this.sci_HashCollisionMapNode__f_hash === x2.sci_HashCollisionMapNode__f_hash) && (this.sci_HashCollisionMapNode__f_content.length__I() === x2.sci_HashCollisionMapNode__f_content.length__I()))) {
        const iter = this.sci_HashCollisionMapNode__f_content.iterator__sc_Iterator();
        while (iter.hasNext__Z()) {
          const x1$2 = iter.next__O();
          if ((x1$2 === null)) {
            throw new $c_s_MatchError(x1$2)
          };
          const key = x1$2._1__O();
          const value = x1$2._2__O();
          const index = x2.indexOf__O__I(key);
          if (((index < 0) || (!$m_sr_BoxesRunTime$().equals__O__O__Z(value, x2.sci_HashCollisionMapNode__f_content.apply__I__O(index)._2__O())))) {
            return false
          }
        };
        return true
      } else {
        return false
      }
    } else {
      return false
    }
  };
  concat__sci_MapNode__I__sci_HashCollisionMapNode(that, shift) {
    if ((that instanceof $c_sci_HashCollisionMapNode)) {
      const x2 = that;
      if ((x2 === this)) {
        return this
      } else {
        let newContent = null;
        const iter = this.sci_HashCollisionMapNode__f_content.iterator__sc_Iterator();
        while (iter.hasNext__Z()) {
          const nextPayload = iter.next__O();
          if ((x2.indexOf__O__I(nextPayload._1__O()) < 0)) {
            if ((newContent === null)) {
              newContent = new $c_sci_VectorBuilder();
              newContent.addAll__sc_IterableOnce__sci_VectorBuilder(x2.sci_HashCollisionMapNode__f_content)
            };
            newContent.addOne__O__sci_VectorBuilder(nextPayload)
          }
        };
        return ((newContent === null) ? x2 : new $c_sci_HashCollisionMapNode(this.sci_HashCollisionMapNode__f_originalHash, this.sci_HashCollisionMapNode__f_hash, newContent.result__sci_Vector()))
      }
    } else if ((that instanceof $c_sci_BitmapIndexedMapNode)) {
      throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "Cannot concatenate a HashCollisionMapNode with a BitmapIndexedMapNode")
    } else {
      throw new $c_s_MatchError(that)
    }
  };
  hashCode__I() {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "Trie nodes do not support hashing.")
  };
  cachedJavaKeySetHashCode__I() {
    return $imul(this.sci_HashCollisionMapNode__f_content.length__I(), this.sci_HashCollisionMapNode__f_hash)
  };
  copy__sci_MapNode() {
    return new $c_sci_HashCollisionMapNode(this.sci_HashCollisionMapNode__f_originalHash, this.sci_HashCollisionMapNode__f_hash, this.sci_HashCollisionMapNode__f_content)
  };
  concat__sci_MapNode__I__sci_MapNode(that, shift) {
    return this.concat__sci_MapNode__I__sci_HashCollisionMapNode(that, shift)
  };
  getNode__I__sci_Node(index) {
    return this.getNode__I__sci_MapNode(index)
  };
}
function $isArrayOf_sci_HashCollisionMapNode(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_HashCollisionMapNode)))
}
const $d_sci_HashCollisionMapNode = new $TypeData().initClass({
  sci_HashCollisionMapNode: 0
}, false, "scala.collection.immutable.HashCollisionMapNode", {
  sci_HashCollisionMapNode: 1,
  sci_MapNode: 1,
  sci_Node: 1,
  O: 1
});
$c_sci_HashCollisionMapNode.prototype.$classData = $d_sci_HashCollisionMapNode;
class $c_sci_HashCollisionSetNode extends $c_sci_SetNode {
  constructor(originalHash, hash, content) {
    super();
    this.sci_HashCollisionSetNode__f_originalHash = 0;
    this.sci_HashCollisionSetNode__f_hash = 0;
    this.sci_HashCollisionSetNode__f_content = null;
    this.sci_HashCollisionSetNode__f_originalHash = originalHash;
    this.sci_HashCollisionSetNode__f_hash = hash;
    this.sci_HashCollisionSetNode__f_content = content;
    $m_s_Predef$().require__Z__V((this.sci_HashCollisionSetNode__f_content.length__I() >= 2))
  };
  contains__O__I__I__I__Z(element, originalHash, hash, shift) {
    if ((this.sci_HashCollisionSetNode__f_hash === hash)) {
      const this$1 = this.sci_HashCollisionSetNode__f_content;
      return $f_sc_SeqOps__contains__O__Z(this$1, element)
    } else {
      return false
    }
  };
  updated__O__I__I__I__sci_SetNode(element, originalHash, hash, shift) {
    return (this.contains__O__I__I__I__Z(element, originalHash, hash, shift) ? this : new $c_sci_HashCollisionSetNode(originalHash, hash, this.sci_HashCollisionSetNode__f_content.appended__O__sci_Vector(element)))
  };
  removed__O__I__I__I__sci_SetNode(element, originalHash, hash, shift) {
    if ((!this.contains__O__I__I__I__Z(element, originalHash, hash, shift))) {
      return this
    } else {
      const this$1 = this.sci_HashCollisionSetNode__f_content;
      $m_sci_Vector$();
      const b = new $c_sci_VectorBuilder();
      const it = this$1.iterator__sc_Iterator();
      while (it.hasNext__Z()) {
        const elem = it.next__O();
        if (($m_sr_BoxesRunTime$().equals__O__O__Z(elem, element) !== true)) {
          b.addOne__O__sci_VectorBuilder(elem)
        }
      };
      const updatedContent = b.result__sci_Vector();
      const x1 = updatedContent.length__I();
      if ((x1 === 1)) {
        const $$x1 = $m_sci_Node$().bitposFrom__I__I($m_sci_Node$().maskFrom__I__I__I(hash, 0));
        const array = [updatedContent.apply__I__O(0)];
        const xs = new $c_sjsr_WrappedVarArgs(array);
        $m_s_reflect_ManifestFactory$AnyManifest$();
        const len = xs.length__I();
        const array$1 = $newArrayObject($d_O.getArrayOf(), [len]);
        const this$9 = new $c_sc_IndexedSeqView$Id(xs);
        const iterator = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$9);
        let i = 0;
        while (iterator.hasNext__Z()) {
          array$1.u[i] = iterator.next__O();
          i = ((1 + i) | 0)
        };
        return new $c_sci_BitmapIndexedSetNode($$x1, 0, array$1, $makeNativeArrayWrapper($d_I.getArrayOf(), [originalHash]), 1, hash)
      } else {
        return new $c_sci_HashCollisionSetNode(originalHash, hash, updatedContent)
      }
    }
  };
  hasNodes__Z() {
    return false
  };
  nodeArity__I() {
    return 0
  };
  getNode__I__sci_SetNode(index) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), "No sub-nodes present in hash-collision leaf node.")
  };
  hasPayload__Z() {
    return true
  };
  payloadArity__I() {
    return this.sci_HashCollisionSetNode__f_content.length__I()
  };
  getPayload__I__O(index) {
    return this.sci_HashCollisionSetNode__f_content.apply__I__O(index)
  };
  getHash__I__I(index) {
    return this.sci_HashCollisionSetNode__f_originalHash
  };
  size__I() {
    return this.sci_HashCollisionSetNode__f_content.length__I()
  };
  foreach__F1__V(f) {
    const iter = this.sci_HashCollisionSetNode__f_content.iterator__sc_Iterator();
    while (iter.hasNext__Z()) {
      f.apply__O__O(iter.next__O())
    }
  };
  cachedJavaKeySetHashCode__I() {
    return $imul(this.sci_HashCollisionSetNode__f_content.length__I(), this.sci_HashCollisionSetNode__f_hash)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_HashCollisionSetNode)) {
      const x2 = that;
      if ((this === x2)) {
        return true
      } else {
        let $$x1;
        if ((this.sci_HashCollisionSetNode__f_hash === x2.sci_HashCollisionSetNode__f_hash)) {
          const this$1 = this.sci_HashCollisionSetNode__f_content;
          const $$x2 = this$1.length__I();
          const this$2 = x2.sci_HashCollisionSetNode__f_content;
          $$x1 = ($$x2 === this$2.length__I())
        } else {
          $$x1 = false
        };
        if ($$x1) {
          const this$3 = this.sci_HashCollisionSetNode__f_content;
          const eta$0$1 = x2.sci_HashCollisionSetNode__f_content;
          let res = true;
          const it = this$3.iterator__sc_Iterator();
          while ((res && it.hasNext__Z())) {
            const arg1 = it.next__O();
            res = $f_sc_SeqOps__contains__O__Z(eta$0$1, arg1)
          };
          return res
        } else {
          return false
        }
      }
    } else {
      return false
    }
  };
  hashCode__I() {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "Trie nodes do not support hashing.")
  };
  foreachWithHash__F2__V(f) {
    const iter = this.sci_HashCollisionSetNode__f_content.iterator__sc_Iterator();
    while (iter.hasNext__Z()) {
      const next = iter.next__O();
      f.apply__O__O__O(next, this.sci_HashCollisionSetNode__f_originalHash)
    }
  };
  copy__sci_SetNode() {
    return new $c_sci_HashCollisionSetNode(this.sci_HashCollisionSetNode__f_originalHash, this.sci_HashCollisionSetNode__f_hash, this.sci_HashCollisionSetNode__f_content)
  };
  getNode__I__sci_Node(index) {
    return this.getNode__I__sci_SetNode(index)
  };
}
function $isArrayOf_sci_HashCollisionSetNode(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_HashCollisionSetNode)))
}
const $d_sci_HashCollisionSetNode = new $TypeData().initClass({
  sci_HashCollisionSetNode: 0
}, false, "scala.collection.immutable.HashCollisionSetNode", {
  sci_HashCollisionSetNode: 1,
  sci_SetNode: 1,
  sci_Node: 1,
  O: 1
});
$c_sci_HashCollisionSetNode.prototype.$classData = $d_sci_HashCollisionSetNode;
class $c_sci_HashMap$ extends $c_O {
  constructor() {
    super();
    this.sci_HashMap$__f_EmptyMap = null;
    $n_sci_HashMap$ = this;
    const this$1 = $m_sci_MapNode$();
    this.sci_HashMap$__f_EmptyMap = new $c_sci_HashMap(this$1.sci_MapNode$__f_EmptyMapNode)
  };
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_HashMap(elems)
  };
  from__sc_IterableOnce__sci_HashMap(source) {
    if ((source instanceof $c_sci_HashMap)) {
      const x2 = source;
      return x2
    } else {
      const this$1 = new $c_sci_HashMapBuilder();
      const this$2 = this$1.addAll__sc_IterableOnce__sci_HashMapBuilder(source);
      return this$2.result__sci_HashMap()
    }
  };
  from__sc_IterableOnce__O(it) {
    return this.from__sc_IterableOnce__sci_HashMap(it)
  };
}
const $d_sci_HashMap$ = new $TypeData().initClass({
  sci_HashMap$: 0
}, false, "scala.collection.immutable.HashMap$", {
  sci_HashMap$: 1,
  O: 1,
  sc_MapFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_HashMap$.prototype.$classData = $d_sci_HashMap$;
let $n_sci_HashMap$ = (void 0);
function $m_sci_HashMap$() {
  if ((!$n_sci_HashMap$)) {
    $n_sci_HashMap$ = new $c_sci_HashMap$()
  };
  return $n_sci_HashMap$
}
class $c_sci_HashSet$ extends $c_O {
  constructor() {
    super();
    this.sci_HashSet$__f_EmptySet = null;
    $n_sci_HashSet$ = this;
    const this$1 = $m_sci_SetNode$();
    this.sci_HashSet$__f_EmptySet = new $c_sci_HashSet(this$1.sci_SetNode$__f_EmptySetNode)
  };
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_HashSet(elems)
  };
  from__sc_IterableOnce__sci_HashSet(source) {
    if ((source instanceof $c_sci_HashSet)) {
      const x2 = source;
      return x2
    } else if ((source.knownSize__I() === 0)) {
      return this.sci_HashSet$__f_EmptySet
    } else {
      const this$1 = new $c_sci_HashSetBuilder();
      const this$2 = this$1.addAll__sc_IterableOnce__sci_HashSetBuilder(source);
      return this$2.result__sci_HashSet()
    }
  };
  newBuilder__scm_Builder() {
    return new $c_sci_HashSetBuilder()
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_HashSet(source)
  };
}
const $d_sci_HashSet$ = new $TypeData().initClass({
  sci_HashSet$: 0
}, false, "scala.collection.immutable.HashSet$", {
  sci_HashSet$: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_HashSet$.prototype.$classData = $d_sci_HashSet$;
let $n_sci_HashSet$ = (void 0);
function $m_sci_HashSet$() {
  if ((!$n_sci_HashSet$)) {
    $n_sci_HashSet$ = new $c_sci_HashSet$()
  };
  return $n_sci_HashSet$
}
class $c_sci_LazyList$State$Cons extends $c_O {
  constructor(head, tail) {
    super();
    this.sci_LazyList$State$Cons__f_head = null;
    this.sci_LazyList$State$Cons__f_tail = null;
    this.sci_LazyList$State$Cons__f_head = head;
    this.sci_LazyList$State$Cons__f_tail = tail
  };
  head__O() {
    return this.sci_LazyList$State$Cons__f_head
  };
  tail__sci_LazyList() {
    return this.sci_LazyList$State$Cons__f_tail
  };
}
const $d_sci_LazyList$State$Cons = new $TypeData().initClass({
  sci_LazyList$State$Cons: 0
}, false, "scala.collection.immutable.LazyList$State$Cons", {
  sci_LazyList$State$Cons: 1,
  O: 1,
  sci_LazyList$State: 1,
  Ljava_io_Serializable: 1
});
$c_sci_LazyList$State$Cons.prototype.$classData = $d_sci_LazyList$State$Cons;
class $c_sci_LazyList$State$Empty$ extends $c_O {
  head__E() {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "head of empty lazy list")
  };
  tail__sci_LazyList() {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "tail of empty lazy list")
  };
  head__O() {
    this.head__E()
  };
}
const $d_sci_LazyList$State$Empty$ = new $TypeData().initClass({
  sci_LazyList$State$Empty$: 0
}, false, "scala.collection.immutable.LazyList$State$Empty$", {
  sci_LazyList$State$Empty$: 1,
  O: 1,
  sci_LazyList$State: 1,
  Ljava_io_Serializable: 1
});
$c_sci_LazyList$State$Empty$.prototype.$classData = $d_sci_LazyList$State$Empty$;
let $n_sci_LazyList$State$Empty$ = (void 0);
function $m_sci_LazyList$State$Empty$() {
  if ((!$n_sci_LazyList$State$Empty$)) {
    $n_sci_LazyList$State$Empty$ = new $c_sci_LazyList$State$Empty$()
  };
  return $n_sci_LazyList$State$Empty$
}
class $c_sci_Map$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_Map(elems)
  };
  from__sc_IterableOnce__sci_Map(it) {
    if ($is_sci_Iterable(it)) {
      const x2 = it;
      if (x2.isEmpty__Z()) {
        return $m_sci_Map$EmptyMap$()
      }
    };
    if ($is_sci_Map(it)) {
      const x3 = it;
      return x3
    };
    const this$1 = new $c_sci_MapBuilderImpl();
    const this$2 = this$1.addAll__sc_IterableOnce__sci_MapBuilderImpl(it);
    return this$2.result__sci_Map()
  };
  from__sc_IterableOnce__O(it) {
    return this.from__sc_IterableOnce__sci_Map(it)
  };
}
const $d_sci_Map$ = new $TypeData().initClass({
  sci_Map$: 0
}, false, "scala.collection.immutable.Map$", {
  sci_Map$: 1,
  O: 1,
  sc_MapFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Map$.prototype.$classData = $d_sci_Map$;
let $n_sci_Map$ = (void 0);
function $m_sci_Map$() {
  if ((!$n_sci_Map$)) {
    $n_sci_Map$ = new $c_sci_Map$()
  };
  return $n_sci_Map$
}
class $c_sci_Set$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_Set(elems)
  };
  from__sc_IterableOnce__sci_Set(it) {
    if ($is_sci_SortedSet(it)) {
      const this$1 = new $c_sci_SetBuilderImpl();
      const this$2 = this$1.addAll__sc_IterableOnce__sci_SetBuilderImpl(it);
      return this$2.result__sci_Set()
    } else if ((it.knownSize__I() === 0)) {
      return $m_sci_Set$EmptySet$()
    } else if ($is_sci_Set(it)) {
      const x3 = it;
      return x3
    } else {
      const this$3 = new $c_sci_SetBuilderImpl();
      const this$4 = this$3.addAll__sc_IterableOnce__sci_SetBuilderImpl(it);
      return this$4.result__sci_Set()
    }
  };
  newBuilder__scm_Builder() {
    return new $c_sci_SetBuilderImpl()
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_Set(source)
  };
}
const $d_sci_Set$ = new $TypeData().initClass({
  sci_Set$: 0
}, false, "scala.collection.immutable.Set$", {
  sci_Set$: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Set$.prototype.$classData = $d_sci_Set$;
let $n_sci_Set$ = (void 0);
function $m_sci_Set$() {
  if ((!$n_sci_Set$)) {
    $n_sci_Set$ = new $c_sci_Set$()
  };
  return $n_sci_Set$
}
function $is_scm_Builder(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.scm_Builder)))
}
function $isArrayOf_scm_Builder(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_Builder)))
}
class $c_scm_HashMap$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__scm_HashMap(elems)
  };
  from__sc_IterableOnce__scm_HashMap(it) {
    const k = it.knownSize__I();
    const cap = ((k > 0) ? $doubleToInt((((1 + k) | 0) / 0.75)) : 16);
    return $ct_scm_HashMap__I__D__(new $c_scm_HashMap(), cap, 0.75).addAll__sc_IterableOnce__scm_HashMap(it)
  };
  from__sc_IterableOnce__O(it) {
    return this.from__sc_IterableOnce__scm_HashMap(it)
  };
}
const $d_scm_HashMap$ = new $TypeData().initClass({
  scm_HashMap$: 0
}, false, "scala.collection.mutable.HashMap$", {
  scm_HashMap$: 1,
  O: 1,
  sc_MapFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_HashMap$.prototype.$classData = $d_scm_HashMap$;
let $n_scm_HashMap$ = (void 0);
function $m_scm_HashMap$() {
  if ((!$n_scm_HashMap$)) {
    $n_scm_HashMap$ = new $c_scm_HashMap$()
  };
  return $n_scm_HashMap$
}
class $c_scm_HashSet$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__scm_HashSet(elems)
  };
  from__sc_IterableOnce__scm_HashSet(it) {
    const k = it.knownSize__I();
    const cap = ((k > 0) ? $doubleToInt((((1 + k) | 0) / 0.75)) : 16);
    const this$1 = new $c_scm_HashSet(cap, 0.75);
    return this$1.addAll__sc_IterableOnce__scm_HashSet(it)
  };
  newBuilder__scm_Builder() {
    return new $c_scm_HashSet$$anon$3(16, 0.75)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__scm_HashSet(source)
  };
}
const $d_scm_HashSet$ = new $TypeData().initClass({
  scm_HashSet$: 0
}, false, "scala.collection.mutable.HashSet$", {
  scm_HashSet$: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_HashSet$.prototype.$classData = $d_scm_HashSet$;
let $n_scm_HashSet$ = (void 0);
function $m_scm_HashSet$() {
  if ((!$n_scm_HashSet$)) {
    $n_scm_HashSet$ = new $c_scm_HashSet$()
  };
  return $n_scm_HashSet$
}
class $c_s_math_Equiv$ extends $c_O {
}
const $d_s_math_Equiv$ = new $TypeData().initClass({
  s_math_Equiv$: 0
}, false, "scala.math.Equiv$", {
  s_math_Equiv$: 1,
  O: 1,
  s_math_LowPriorityEquiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Equiv$.prototype.$classData = $d_s_math_Equiv$;
let $n_s_math_Equiv$ = (void 0);
function $m_s_math_Equiv$() {
  if ((!$n_s_math_Equiv$)) {
    $n_s_math_Equiv$ = new $c_s_math_Equiv$()
  };
  return $n_s_math_Equiv$
}
class $c_s_math_Ordering$ extends $c_O {
}
const $d_s_math_Ordering$ = new $TypeData().initClass({
  s_math_Ordering$: 0
}, false, "scala.math.Ordering$", {
  s_math_Ordering$: 1,
  O: 1,
  s_math_LowPriorityOrderingImplicits: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$.prototype.$classData = $d_s_math_Ordering$;
let $n_s_math_Ordering$ = (void 0);
function $m_s_math_Ordering$() {
  if ((!$n_s_math_Ordering$)) {
    $n_s_math_Ordering$ = new $c_s_math_Ordering$()
  };
  return $n_s_math_Ordering$
}
class $c_s_math_ScalaNumber {
}
function $isArrayOf_s_math_ScalaNumber(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_math_ScalaNumber)))
}
class $c_s_reflect_NoManifest$ extends $c_O {
  toString__T() {
    return "<?>"
  };
}
const $d_s_reflect_NoManifest$ = new $TypeData().initClass({
  s_reflect_NoManifest$: 0
}, false, "scala.reflect.NoManifest$", {
  s_reflect_NoManifest$: 1,
  O: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1
});
$c_s_reflect_NoManifest$.prototype.$classData = $d_s_reflect_NoManifest$;
let $n_s_reflect_NoManifest$ = (void 0);
function $m_s_reflect_NoManifest$() {
  if ((!$n_s_reflect_NoManifest$)) {
    $n_s_reflect_NoManifest$ = new $c_s_reflect_NoManifest$()
  };
  return $n_s_reflect_NoManifest$
}
const $d_sr_Nothing$ = new $TypeData().initClass({
  sr_Nothing$: 0
}, false, "scala.runtime.Nothing$", {
  sr_Nothing$: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
class $c_sjs_js_Any$ extends $c_O {
  fromFunction1__F1__sjs_js_Function1(f) {
    return ((f$2) => ((arg1$2) => f$2.apply__O__O(arg1$2)))(f)
  };
}
const $d_sjs_js_Any$ = new $TypeData().initClass({
  sjs_js_Any$: 0
}, false, "scala.scalajs.js.Any$", {
  sjs_js_Any$: 1,
  O: 1,
  sjs_js_LowPrioAnyImplicits: 1,
  sjs_js_LowestPrioAnyImplicits: 1
});
$c_sjs_js_Any$.prototype.$classData = $d_sjs_js_Any$;
let $n_sjs_js_Any$ = (void 0);
function $m_sjs_js_Any$() {
  if ((!$n_sjs_js_Any$)) {
    $n_sjs_js_Any$ = new $c_sjs_js_Any$()
  };
  return $n_sjs_js_Any$
}
class $c_sjsr_AnonFunction0 extends $c_sr_AbstractFunction0 {
  constructor(f) {
    super();
    this.sjsr_AnonFunction0__f_f = null;
    this.sjsr_AnonFunction0__f_f = f
  };
  apply__O() {
    return (0, this.sjsr_AnonFunction0__f_f)()
  };
}
const $d_sjsr_AnonFunction0 = new $TypeData().initClass({
  sjsr_AnonFunction0: 0
}, false, "scala.scalajs.runtime.AnonFunction0", {
  sjsr_AnonFunction0: 1,
  sr_AbstractFunction0: 1,
  O: 1,
  F0: 1
});
$c_sjsr_AnonFunction0.prototype.$classData = $d_sjsr_AnonFunction0;
class $c_sjsr_AnonFunction1 extends $c_sr_AbstractFunction1 {
  constructor(f) {
    super();
    this.sjsr_AnonFunction1__f_f = null;
    this.sjsr_AnonFunction1__f_f = f
  };
  apply__O__O(arg1) {
    return (0, this.sjsr_AnonFunction1__f_f)(arg1)
  };
}
const $d_sjsr_AnonFunction1 = new $TypeData().initClass({
  sjsr_AnonFunction1: 0
}, false, "scala.scalajs.runtime.AnonFunction1", {
  sjsr_AnonFunction1: 1,
  sr_AbstractFunction1: 1,
  O: 1,
  F1: 1
});
$c_sjsr_AnonFunction1.prototype.$classData = $d_sjsr_AnonFunction1;
class $c_sjsr_AnonFunction2 extends $c_sr_AbstractFunction2 {
  constructor(f) {
    super();
    this.sjsr_AnonFunction2__f_f = null;
    this.sjsr_AnonFunction2__f_f = f
  };
  apply__O__O__O(arg1, arg2) {
    return (0, this.sjsr_AnonFunction2__f_f)(arg1, arg2)
  };
}
const $d_sjsr_AnonFunction2 = new $TypeData().initClass({
  sjsr_AnonFunction2: 0
}, false, "scala.scalajs.runtime.AnonFunction2", {
  sjsr_AnonFunction2: 1,
  sr_AbstractFunction2: 1,
  O: 1,
  F2: 1
});
$c_sjsr_AnonFunction2.prototype.$classData = $d_sjsr_AnonFunction2;
class $c_sjsr_AnonFunction3 extends $c_sr_AbstractFunction3 {
  constructor(f) {
    super();
    this.sjsr_AnonFunction3__f_f = null;
    this.sjsr_AnonFunction3__f_f = f
  };
  apply__O__O__O__O(arg1, arg2, arg3) {
    return (0, this.sjsr_AnonFunction3__f_f)(arg1, arg2, arg3)
  };
}
const $d_sjsr_AnonFunction3 = new $TypeData().initClass({
  sjsr_AnonFunction3: 0
}, false, "scala.scalajs.runtime.AnonFunction3", {
  sjsr_AnonFunction3: 1,
  sr_AbstractFunction3: 1,
  O: 1,
  F3: 1
});
$c_sjsr_AnonFunction3.prototype.$classData = $d_sjsr_AnonFunction3;
class $c_s_util_control_ControlThrowable extends $c_jl_Throwable {
}
class $c_Ltigerpython_inputenc_StringTranslator$StringMode$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE = null;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE = null;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE = null;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE_TRIPLE = null;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE_TRIPLE = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_inputenc_StringTranslator$StringMode$ = this;
    const name = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "NONE");
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE = new $c_s_Enumeration$Val(this, i, name);
    const name$1 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "SINGLE");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE = new $c_s_Enumeration$Val(this, i$1, name$1);
    const name$2 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "DOUBLE");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE = new $c_s_Enumeration$Val(this, i$2, name$2);
    const name$3 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "SINGLE_TRIPLE");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE_TRIPLE = new $c_s_Enumeration$Val(this, i$3, name$3);
    const name$4 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "DOUBLE_TRIPLE");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE_TRIPLE = new $c_s_Enumeration$Val(this, i$4, name$4)
  };
}
const $d_Ltigerpython_inputenc_StringTranslator$StringMode$ = new $TypeData().initClass({
  Ltigerpython_inputenc_StringTranslator$StringMode$: 0
}, false, "tigerpython.inputenc.StringTranslator$StringMode$", {
  Ltigerpython_inputenc_StringTranslator$StringMode$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_inputenc_StringTranslator$StringMode$.prototype.$classData = $d_Ltigerpython_inputenc_StringTranslator$StringMode$;
let $n_Ltigerpython_inputenc_StringTranslator$StringMode$ = (void 0);
function $m_Ltigerpython_inputenc_StringTranslator$StringMode$() {
  if ((!$n_Ltigerpython_inputenc_StringTranslator$StringMode$)) {
    $n_Ltigerpython_inputenc_StringTranslator$StringMode$ = new $c_Ltigerpython_inputenc_StringTranslator$StringMode$()
  };
  return $n_Ltigerpython_inputenc_StringTranslator$StringMode$
}
class $c_Ltigerpython_parser_ast_AstNode$SequenceExpression extends $c_Ltigerpython_parser_ast_AstNode$Expression {
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$SequenceExpression(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$SequenceExpression)))
}
class $c_Ltigerpython_parser_ast_AstNodeKind$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_AstNodeKind$__f_MODULE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_INTERACTIVE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXPRESSION = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FUNCTION_TYPE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SUITE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FUNCTION_DEF = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_FUNCTION_DEF = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CLASS_DEF = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_RETURN = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_DELETE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASSIGN = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_AUG_ASSIGN = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ANN_ASSIGN = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FOR = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_FOR = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_WHILE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IF = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_WITH = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_WITH = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_RAISE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_TRY = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASSERT = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT_FROM = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_GLOBAL = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NON_LOCAL = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXPR = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PASS = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_BREAK = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CONTINUE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_BOOL_OP = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NAMED_EXPR = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_BIN_OP = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_UNARY_OP = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_LAMBDA = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IF_EXPR = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_DICT = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SET = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_LIST_COMP = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SET_COMP = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_DICT_COMP = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_GENERATOR_EXPR = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_AWAIT = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_YIELD = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_YIELD_FROM = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_COMPARE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CALL = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FORMATTED_VALUE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_JOINED_STR = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CONSTANT = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ATTRIBUTE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SUBSCRIPT = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_STARRED = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NAME = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_LIST = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_TUPLE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SLICE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXT_SLICE = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_INDEX = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXCEPT_HANDLER = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ALIAS = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ARGUMENT = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ARGUMENTS = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_COMPREHENSION = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PARAMETER = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PARAMETERS = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXEC_2 = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PRINT_2 = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_RAISE_2 = null;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NOTHING = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_ast_AstNodeKind$ = this;
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_MODULE = new $c_s_Enumeration$Val(this, i, "Module");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_INTERACTIVE = new $c_s_Enumeration$Val(this, i$1, "Interactive");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXPRESSION = new $c_s_Enumeration$Val(this, i$2, "Expression");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FUNCTION_TYPE = new $c_s_Enumeration$Val(this, i$3, "FunctionType");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SUITE = new $c_s_Enumeration$Val(this, i$4, "Suite");
    const i$5 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FUNCTION_DEF = new $c_s_Enumeration$Val(this, i$5, "FunctionDef");
    const i$6 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_FUNCTION_DEF = new $c_s_Enumeration$Val(this, i$6, "AsyncFunctionDef");
    const i$7 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CLASS_DEF = new $c_s_Enumeration$Val(this, i$7, "ClassDef");
    const i$8 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_RETURN = new $c_s_Enumeration$Val(this, i$8, "Return");
    const i$9 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_DELETE = new $c_s_Enumeration$Val(this, i$9, "Delete");
    const i$10 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASSIGN = new $c_s_Enumeration$Val(this, i$10, "Assign");
    const i$11 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_AUG_ASSIGN = new $c_s_Enumeration$Val(this, i$11, "AugAssign");
    const i$12 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ANN_ASSIGN = new $c_s_Enumeration$Val(this, i$12, "AnnAssign");
    const i$13 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FOR = new $c_s_Enumeration$Val(this, i$13, "For");
    const i$14 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_FOR = new $c_s_Enumeration$Val(this, i$14, "AsyncFor");
    const i$15 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_WHILE = new $c_s_Enumeration$Val(this, i$15, "While");
    const i$16 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IF = new $c_s_Enumeration$Val(this, i$16, "If");
    const i$17 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_WITH = new $c_s_Enumeration$Val(this, i$17, "With");
    const i$18 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_WITH = new $c_s_Enumeration$Val(this, i$18, "AsyncWith");
    const i$19 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_RAISE = new $c_s_Enumeration$Val(this, i$19, "Raise");
    const i$20 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_TRY = new $c_s_Enumeration$Val(this, i$20, "Try");
    const i$21 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ASSERT = new $c_s_Enumeration$Val(this, i$21, "Assert");
    const i$22 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT = new $c_s_Enumeration$Val(this, i$22, "Import");
    const i$23 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT_FROM = new $c_s_Enumeration$Val(this, i$23, "ImportFrom");
    const i$24 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_GLOBAL = new $c_s_Enumeration$Val(this, i$24, "Global");
    const i$25 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NON_LOCAL = new $c_s_Enumeration$Val(this, i$25, "Nonlocal");
    const i$26 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXPR = new $c_s_Enumeration$Val(this, i$26, "Expr");
    const i$27 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PASS = new $c_s_Enumeration$Val(this, i$27, "Pass");
    const i$28 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_BREAK = new $c_s_Enumeration$Val(this, i$28, "Break");
    const i$29 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CONTINUE = new $c_s_Enumeration$Val(this, i$29, "Continue");
    const i$30 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_BOOL_OP = new $c_s_Enumeration$Val(this, i$30, "BoolOp");
    const i$31 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NAMED_EXPR = new $c_s_Enumeration$Val(this, i$31, "NamedExpr");
    const i$32 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_BIN_OP = new $c_s_Enumeration$Val(this, i$32, "BinOp");
    const i$33 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_UNARY_OP = new $c_s_Enumeration$Val(this, i$33, "UnaryOp");
    const i$34 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_LAMBDA = new $c_s_Enumeration$Val(this, i$34, "Lambda");
    const i$35 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_IF_EXPR = new $c_s_Enumeration$Val(this, i$35, "IfExpr");
    const i$36 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_DICT = new $c_s_Enumeration$Val(this, i$36, "Dict");
    const i$37 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SET = new $c_s_Enumeration$Val(this, i$37, "Set");
    const i$38 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_LIST_COMP = new $c_s_Enumeration$Val(this, i$38, "ListComp");
    const i$39 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SET_COMP = new $c_s_Enumeration$Val(this, i$39, "SetComp");
    const i$40 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_DICT_COMP = new $c_s_Enumeration$Val(this, i$40, "DictComp");
    const i$41 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_GENERATOR_EXPR = new $c_s_Enumeration$Val(this, i$41, "GeneratorExpr");
    const i$42 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_AWAIT = new $c_s_Enumeration$Val(this, i$42, "Await");
    const i$43 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_YIELD = new $c_s_Enumeration$Val(this, i$43, "Yield");
    const i$44 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_YIELD_FROM = new $c_s_Enumeration$Val(this, i$44, "YieldFrom");
    const i$45 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_COMPARE = new $c_s_Enumeration$Val(this, i$45, "Compare");
    const i$46 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CALL = new $c_s_Enumeration$Val(this, i$46, "Call");
    const i$47 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_FORMATTED_VALUE = new $c_s_Enumeration$Val(this, i$47, "FormattedValue");
    const i$48 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_JOINED_STR = new $c_s_Enumeration$Val(this, i$48, "JoinedStr");
    const i$49 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_CONSTANT = new $c_s_Enumeration$Val(this, i$49, "Constant");
    const i$50 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ATTRIBUTE = new $c_s_Enumeration$Val(this, i$50, "Attribute");
    const i$51 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SUBSCRIPT = new $c_s_Enumeration$Val(this, i$51, "Subscript");
    const i$52 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_STARRED = new $c_s_Enumeration$Val(this, i$52, "Starred");
    const i$53 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NAME = new $c_s_Enumeration$Val(this, i$53, "Name");
    const i$54 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_LIST = new $c_s_Enumeration$Val(this, i$54, "List");
    const i$55 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_TUPLE = new $c_s_Enumeration$Val(this, i$55, "Tuple");
    const i$56 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_SLICE = new $c_s_Enumeration$Val(this, i$56, "Slice");
    const i$57 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXT_SLICE = new $c_s_Enumeration$Val(this, i$57, "ExtSlice");
    const i$58 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_INDEX = new $c_s_Enumeration$Val(this, i$58, "Index");
    const i$59 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXCEPT_HANDLER = new $c_s_Enumeration$Val(this, i$59, "ExceptHandler");
    const i$60 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ALIAS = new $c_s_Enumeration$Val(this, i$60, "alias");
    const i$61 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ARGUMENT = new $c_s_Enumeration$Val(this, i$61, "<arg>");
    const i$62 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_ARGUMENTS = new $c_s_Enumeration$Val(this, i$62, "<arguments>");
    const i$63 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_COMPREHENSION = new $c_s_Enumeration$Val(this, i$63, "<comprehension>");
    const i$64 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PARAMETER = new $c_s_Enumeration$Val(this, i$64, "arg");
    const i$65 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PARAMETERS = new $c_s_Enumeration$Val(this, i$65, "arguments");
    const i$66 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_EXEC_2 = new $c_s_Enumeration$Val(this, i$66, "Exec/2");
    const i$67 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_PRINT_2 = new $c_s_Enumeration$Val(this, i$67, "Print/2");
    const i$68 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_RAISE_2 = new $c_s_Enumeration$Val(this, i$68, "Raise/2");
    const i$69 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AstNodeKind$__f_NOTHING = new $c_s_Enumeration$Val(this, i$69, "<NOTHING>")
  };
}
const $d_Ltigerpython_parser_ast_AstNodeKind$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNodeKind$: 0
}, false, "tigerpython.parser.ast.AstNodeKind$", {
  Ltigerpython_parser_ast_AstNodeKind$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNodeKind$.prototype.$classData = $d_Ltigerpython_parser_ast_AstNodeKind$;
let $n_Ltigerpython_parser_ast_AstNodeKind$ = (void 0);
function $m_Ltigerpython_parser_ast_AstNodeKind$() {
  if ((!$n_Ltigerpython_parser_ast_AstNodeKind$)) {
    $n_Ltigerpython_parser_ast_AstNodeKind$ = new $c_Ltigerpython_parser_ast_AstNodeKind$()
  };
  return $n_Ltigerpython_parser_ast_AstNodeKind$
}
class $c_Ltigerpython_parser_ast_AugAssignOp$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_AugAssignOp$__f_ADD = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_AND = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_DIV = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_IDIV = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_MAT_MUL = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_MOD = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_MUL = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_OR = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_POW = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_SHIFT_L = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_SHIFT_R = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_SUB = null;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_XOR = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_ast_AugAssignOp$ = this;
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_ADD = new $c_s_Enumeration$Val(this, i, "+=");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_AND = new $c_s_Enumeration$Val(this, i$1, "&=");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_DIV = new $c_s_Enumeration$Val(this, i$2, "/=");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_IDIV = new $c_s_Enumeration$Val(this, i$3, "//=");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_MAT_MUL = new $c_s_Enumeration$Val(this, i$4, "@=");
    const i$5 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_MOD = new $c_s_Enumeration$Val(this, i$5, "%=");
    const i$6 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_MUL = new $c_s_Enumeration$Val(this, i$6, "*=");
    const i$7 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_OR = new $c_s_Enumeration$Val(this, i$7, "|=");
    const i$8 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_POW = new $c_s_Enumeration$Val(this, i$8, "**=");
    const i$9 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_SHIFT_L = new $c_s_Enumeration$Val(this, i$9, "<<=");
    const i$10 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_SHIFT_R = new $c_s_Enumeration$Val(this, i$10, ">>=");
    const i$11 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_SUB = new $c_s_Enumeration$Val(this, i$11, "-=");
    const i$12 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_AugAssignOp$__f_XOR = new $c_s_Enumeration$Val(this, i$12, "^=")
  };
  fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokenType) {
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MAT_MUL_ASSIGN;
    if ((x === tokenType)) {
      return this.Ltigerpython_parser_ast_AugAssignOp$__f_MAT_MUL
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_AND_ASSIGN;
      if ((x$3 === tokenType)) {
        return this.Ltigerpython_parser_ast_AugAssignOp$__f_AND
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_OR_ASSIGN;
        if ((x$5 === tokenType)) {
          return this.Ltigerpython_parser_ast_AugAssignOp$__f_OR
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR_ASSIGN;
          if ((x$7 === tokenType)) {
            return this.Ltigerpython_parser_ast_AugAssignOp$__f_XOR
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEC;
            if ((x$9 === tokenType)) {
              return this.Ltigerpython_parser_ast_AugAssignOp$__f_SUB
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV_ASSIGN;
              if ((x$11 === tokenType)) {
                return this.Ltigerpython_parser_ast_AugAssignOp$__f_DIV
              } else {
                const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INC;
                if ((x$13 === tokenType)) {
                  return this.Ltigerpython_parser_ast_AugAssignOp$__f_ADD
                } else {
                  const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT_DIV_ASSIGN;
                  if ((x$15 === tokenType)) {
                    return this.Ltigerpython_parser_ast_AugAssignOp$__f_IDIV
                  } else {
                    const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MOD_ASSIGN;
                    if ((x$17 === tokenType)) {
                      return this.Ltigerpython_parser_ast_AugAssignOp$__f_MOD
                    } else {
                      const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MUL_ASSIGN;
                      if ((x$19 === tokenType)) {
                        return this.Ltigerpython_parser_ast_AugAssignOp$__f_MUL
                      } else {
                        const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_POWER_ASSIGN;
                        if ((x$21 === tokenType)) {
                          return this.Ltigerpython_parser_ast_AugAssignOp$__f_POW
                        } else {
                          const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT_ASSIGN;
                          if ((x$23 === tokenType)) {
                            return this.Ltigerpython_parser_ast_AugAssignOp$__f_SHIFT_L
                          } else {
                            const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT_ASSIGN;
                            if ((x$25 === tokenType)) {
                              return this.Ltigerpython_parser_ast_AugAssignOp$__f_SHIFT_R
                            } else {
                              throw new $c_s_MatchError(tokenType)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_ast_AugAssignOp$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_AugAssignOp$: 0
}, false, "tigerpython.parser.ast.AugAssignOp$", {
  Ltigerpython_parser_ast_AugAssignOp$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AugAssignOp$.prototype.$classData = $d_Ltigerpython_parser_ast_AugAssignOp$;
let $n_Ltigerpython_parser_ast_AugAssignOp$ = (void 0);
function $m_Ltigerpython_parser_ast_AugAssignOp$() {
  if ((!$n_Ltigerpython_parser_ast_AugAssignOp$)) {
    $n_Ltigerpython_parser_ast_AugAssignOp$ = new $c_Ltigerpython_parser_ast_AugAssignOp$()
  };
  return $n_Ltigerpython_parser_ast_AugAssignOp$
}
class $c_Ltigerpython_parser_ast_BinOp$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_BinOp$__f_ADD = null;
    this.Ltigerpython_parser_ast_BinOp$__f_AND = null;
    this.Ltigerpython_parser_ast_BinOp$__f_BIT_AND = null;
    this.Ltigerpython_parser_ast_BinOp$__f_BIT_OR = null;
    this.Ltigerpython_parser_ast_BinOp$__f_BIT_XOR = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_EQ = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_GT = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_IN = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS_NOT = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_LT = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ = null;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_NOT_IN = null;
    this.Ltigerpython_parser_ast_BinOp$__f_DIV = null;
    this.Ltigerpython_parser_ast_BinOp$__f_IDIV = null;
    this.Ltigerpython_parser_ast_BinOp$__f_MAT_MUL = null;
    this.Ltigerpython_parser_ast_BinOp$__f_MOD = null;
    this.Ltigerpython_parser_ast_BinOp$__f_MUL = null;
    this.Ltigerpython_parser_ast_BinOp$__f_OR = null;
    this.Ltigerpython_parser_ast_BinOp$__f_POW = null;
    this.Ltigerpython_parser_ast_BinOp$__f_SHIFT_L = null;
    this.Ltigerpython_parser_ast_BinOp$__f_SHIFT_R = null;
    this.Ltigerpython_parser_ast_BinOp$__f_SUB = null;
    this.Ltigerpython_parser_ast_BinOp$__f_INVALID = null;
    this.Ltigerpython_parser_ast_BinOp$__f_comparisons = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_ast_BinOp$ = this;
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_ADD = new $c_s_Enumeration$Val(this, i, "+");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_AND = new $c_s_Enumeration$Val(this, i$1, "and");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_BIT_AND = new $c_s_Enumeration$Val(this, i$2, "&");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_BIT_OR = new $c_s_Enumeration$Val(this, i$3, "|");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_BIT_XOR = new $c_s_Enumeration$Val(this, i$4, "^");
    const i$5 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_EQ = new $c_s_Enumeration$Val(this, i$5, "==");
    const i$6 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ = new $c_s_Enumeration$Val(this, i$6, ">=");
    const i$7 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_GT = new $c_s_Enumeration$Val(this, i$7, ">");
    const i$8 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_IN = new $c_s_Enumeration$Val(this, i$8, "in");
    const i$9 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS = new $c_s_Enumeration$Val(this, i$9, "is");
    const i$10 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS_NOT = new $c_s_Enumeration$Val(this, i$10, "is not");
    const i$11 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ = new $c_s_Enumeration$Val(this, i$11, "<=");
    const i$12 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_LT = new $c_s_Enumeration$Val(this, i$12, "<");
    const i$13 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ = new $c_s_Enumeration$Val(this, i$13, "!=");
    const i$14 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_CMP_NOT_IN = new $c_s_Enumeration$Val(this, i$14, "not in");
    const i$15 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_DIV = new $c_s_Enumeration$Val(this, i$15, "/");
    const i$16 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_IDIV = new $c_s_Enumeration$Val(this, i$16, "//");
    const i$17 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_MAT_MUL = new $c_s_Enumeration$Val(this, i$17, "@");
    const i$18 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_MOD = new $c_s_Enumeration$Val(this, i$18, "%");
    const i$19 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_MUL = new $c_s_Enumeration$Val(this, i$19, "*");
    const i$20 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_OR = new $c_s_Enumeration$Val(this, i$20, "or");
    const i$21 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_POW = new $c_s_Enumeration$Val(this, i$21, "**");
    const i$22 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_SHIFT_L = new $c_s_Enumeration$Val(this, i$22, "<<");
    const i$23 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_SHIFT_R = new $c_s_Enumeration$Val(this, i$23, ">>");
    const i$24 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_SUB = new $c_s_Enumeration$Val(this, i$24, "-");
    const i$25 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_BinOp$__f_INVALID = new $c_s_Enumeration$Val(this, i$25, "?");
    const this$4 = $m_s_Predef$().s_Predef$__f_Set;
    const array = [this.Ltigerpython_parser_ast_BinOp$__f_CMP_EQ, this.Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ, this.Ltigerpython_parser_ast_BinOp$__f_CMP_GT, this.Ltigerpython_parser_ast_BinOp$__f_CMP_IN, this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS, this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS_NOT, this.Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ, this.Ltigerpython_parser_ast_BinOp$__f_CMP_LT, this.Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ, this.Ltigerpython_parser_ast_BinOp$__f_CMP_NOT_IN];
    const elems = new $c_sjsr_WrappedVarArgs(array);
    this.Ltigerpython_parser_ast_BinOp$__f_comparisons = this$4.from__sc_IterableOnce__sci_Set(elems)
  };
  fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokenType) {
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ANNOTATION;
    if ((x === tokenType)) {
      return this.Ltigerpython_parser_ast_BinOp$__f_MAT_MUL
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS;
      if ((x$3 === tokenType)) {
        return this.Ltigerpython_parser_ast_BinOp$__f_ADD
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AND;
        if ((x$5 === tokenType)) {
          return this.Ltigerpython_parser_ast_BinOp$__f_AND
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_AND;
          if ((x$7 === tokenType)) {
            return this.Ltigerpython_parser_ast_BinOp$__f_BIT_AND
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_OR;
            if ((x$9 === tokenType)) {
              return this.Ltigerpython_parser_ast_BinOp$__f_BIT_OR
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR;
              if ((x$11 === tokenType)) {
                return this.Ltigerpython_parser_ast_BinOp$__f_BIT_XOR
              } else {
                const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV;
                if ((x$13 === tokenType)) {
                  return this.Ltigerpython_parser_ast_BinOp$__f_DIV
                } else {
                  const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_EQ;
                  if ((x$15 === tokenType)) {
                    return this.Ltigerpython_parser_ast_BinOp$__f_CMP_EQ
                  } else {
                    const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GEQ;
                    if ((x$17 === tokenType)) {
                      return this.Ltigerpython_parser_ast_BinOp$__f_CMP_GEQ
                    } else {
                      const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_GREATER;
                      if ((x$19 === tokenType)) {
                        return this.Ltigerpython_parser_ast_BinOp$__f_CMP_GT
                      } else {
                        const x$21 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
                        if ((x$21 === tokenType)) {
                          return this.Ltigerpython_parser_ast_BinOp$__f_CMP_IN
                        } else {
                          const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT_DIV;
                          if ((x$23 === tokenType)) {
                            return this.Ltigerpython_parser_ast_BinOp$__f_IDIV
                          } else {
                            const x$25 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS;
                            if ((x$25 === tokenType)) {
                              return this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS
                            } else {
                              const x$27 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS_NOT;
                              if ((x$27 === tokenType)) {
                                return this.Ltigerpython_parser_ast_BinOp$__f_CMP_IS_NOT
                              } else {
                                const x$29 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEQ;
                                if ((x$29 === tokenType)) {
                                  return this.Ltigerpython_parser_ast_BinOp$__f_CMP_LEQ
                                } else {
                                  const x$31 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LESS;
                                  if ((x$31 === tokenType)) {
                                    return this.Ltigerpython_parser_ast_BinOp$__f_CMP_LT
                                  } else {
                                    const x$33 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
                                    if ((x$33 === tokenType)) {
                                      return this.Ltigerpython_parser_ast_BinOp$__f_SUB
                                    } else {
                                      const x$35 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MOD;
                                      if ((x$35 === tokenType)) {
                                        return this.Ltigerpython_parser_ast_BinOp$__f_MOD
                                      } else {
                                        const x$37 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEQ;
                                        if ((x$37 === tokenType)) {
                                          return this.Ltigerpython_parser_ast_BinOp$__f_CMP_NEQ
                                        } else {
                                          const x$39 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT_IN;
                                          if ((x$39 === tokenType)) {
                                            return this.Ltigerpython_parser_ast_BinOp$__f_CMP_NOT_IN
                                          } else {
                                            const x$41 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_OR;
                                            if ((x$41 === tokenType)) {
                                              return this.Ltigerpython_parser_ast_BinOp$__f_OR
                                            } else {
                                              const x$43 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_POWER;
                                              if ((x$43 === tokenType)) {
                                                return this.Ltigerpython_parser_ast_BinOp$__f_POW
                                              } else {
                                                const x$45 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_LEFT;
                                                if ((x$45 === tokenType)) {
                                                  return this.Ltigerpython_parser_ast_BinOp$__f_SHIFT_L
                                                } else {
                                                  const x$47 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SHIFT_RIGHT;
                                                  if ((x$47 === tokenType)) {
                                                    return this.Ltigerpython_parser_ast_BinOp$__f_SHIFT_R
                                                  } else {
                                                    const x$49 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR;
                                                    if ((x$49 === tokenType)) {
                                                      return this.Ltigerpython_parser_ast_BinOp$__f_MUL
                                                    } else {
                                                      throw new $c_s_MatchError(tokenType)
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_ast_BinOp$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_BinOp$: 0
}, false, "tigerpython.parser.ast.BinOp$", {
  Ltigerpython_parser_ast_BinOp$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_BinOp$.prototype.$classData = $d_Ltigerpython_parser_ast_BinOp$;
let $n_Ltigerpython_parser_ast_BinOp$ = (void 0);
function $m_Ltigerpython_parser_ast_BinOp$() {
  if ((!$n_Ltigerpython_parser_ast_BinOp$)) {
    $n_Ltigerpython_parser_ast_BinOp$ = new $c_Ltigerpython_parser_ast_BinOp$()
  };
  return $n_Ltigerpython_parser_ast_BinOp$
}
class $c_Ltigerpython_parser_ast_ExprContext$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_ExprContext$__f_LOAD = null;
    this.Ltigerpython_parser_ast_ExprContext$__f_STORE = null;
    this.Ltigerpython_parser_ast_ExprContext$__f_DEL = null;
    this.Ltigerpython_parser_ast_ExprContext$__f_AUG_STORE = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_ast_ExprContext$ = this;
    const name = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "LOAD");
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExprContext$__f_LOAD = new $c_s_Enumeration$Val(this, i, name);
    const name$1 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "STORE");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExprContext$__f_STORE = new $c_s_Enumeration$Val(this, i$1, name$1);
    const name$2 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "DEL");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExprContext$__f_DEL = new $c_s_Enumeration$Val(this, i$2, name$2);
    const name$3 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "AUG_STORE");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExprContext$__f_AUG_STORE = new $c_s_Enumeration$Val(this, i$3, name$3)
  };
}
const $d_Ltigerpython_parser_ast_ExprContext$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_ExprContext$: 0
}, false, "tigerpython.parser.ast.ExprContext$", {
  Ltigerpython_parser_ast_ExprContext$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_ExprContext$.prototype.$classData = $d_Ltigerpython_parser_ast_ExprContext$;
let $n_Ltigerpython_parser_ast_ExprContext$ = (void 0);
function $m_Ltigerpython_parser_ast_ExprContext$() {
  if ((!$n_Ltigerpython_parser_ast_ExprContext$)) {
    $n_Ltigerpython_parser_ast_ExprContext$ = new $c_Ltigerpython_parser_ast_ExprContext$()
  };
  return $n_Ltigerpython_parser_ast_ExprContext$
}
class $c_Ltigerpython_parser_ast_ExtExprContext$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_ExtExprContext$__f_PLAIN = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_CALL = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_SUBSCRIPT = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_COPY_LOAD = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_ATTR_BASE = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_ATTR_FIELD = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_PARAMETER = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_GLOBAL = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_AUG_ASSIGN_TARGET = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_ASSIGN_TARGET = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_IMPORTED = null;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_HIDDEN = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_ast_ExtExprContext$ = this;
    const name = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "PLAIN");
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_PLAIN = new $c_s_Enumeration$Val(this, i, name);
    const name$1 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "CALL");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_CALL = new $c_s_Enumeration$Val(this, i$1, name$1);
    const name$2 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "SUBSCRIPT");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_SUBSCRIPT = new $c_s_Enumeration$Val(this, i$2, name$2);
    const name$3 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "COPY_LOAD");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_COPY_LOAD = new $c_s_Enumeration$Val(this, i$3, name$3);
    const name$4 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "ATTR_BASE");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_ATTR_BASE = new $c_s_Enumeration$Val(this, i$4, name$4);
    const name$5 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "ATTR_FIELD");
    const i$5 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_ATTR_FIELD = new $c_s_Enumeration$Val(this, i$5, name$5);
    const name$6 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "PARAMETER");
    const i$6 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_PARAMETER = new $c_s_Enumeration$Val(this, i$6, name$6);
    const name$7 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "GLOBAL");
    const i$7 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_GLOBAL = new $c_s_Enumeration$Val(this, i$7, name$7);
    const name$8 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "AUG_ASSIGN_TARGET");
    const i$8 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_AUG_ASSIGN_TARGET = new $c_s_Enumeration$Val(this, i$8, name$8);
    const name$9 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "ASSIGN_TARGET");
    const i$9 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_ASSIGN_TARGET = new $c_s_Enumeration$Val(this, i$9, name$9);
    const name$10 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "IMPORTED");
    const i$10 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_IMPORTED = new $c_s_Enumeration$Val(this, i$10, name$10);
    const name$11 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "HIDDEN");
    const i$11 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ExtExprContext$__f_HIDDEN = new $c_s_Enumeration$Val(this, i$11, name$11)
  };
}
const $d_Ltigerpython_parser_ast_ExtExprContext$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_ExtExprContext$: 0
}, false, "tigerpython.parser.ast.ExtExprContext$", {
  Ltigerpython_parser_ast_ExtExprContext$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_ExtExprContext$.prototype.$classData = $d_Ltigerpython_parser_ast_ExtExprContext$;
let $n_Ltigerpython_parser_ast_ExtExprContext$ = (void 0);
function $m_Ltigerpython_parser_ast_ExtExprContext$() {
  if ((!$n_Ltigerpython_parser_ast_ExtExprContext$)) {
    $n_Ltigerpython_parser_ast_ExtExprContext$ = new $c_Ltigerpython_parser_ast_ExtExprContext$()
  };
  return $n_Ltigerpython_parser_ast_ExtExprContext$
}
class $c_Ltigerpython_parser_ast_UnOp$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_UnOp$__f_BIT_NOT = null;
    this.Ltigerpython_parser_ast_UnOp$__f_NEG = null;
    this.Ltigerpython_parser_ast_UnOp$__f_NOT = null;
    this.Ltigerpython_parser_ast_UnOp$__f_PLUS = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_ast_UnOp$ = this;
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_UnOp$__f_BIT_NOT = new $c_s_Enumeration$Val(this, i, "~");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_UnOp$__f_NEG = new $c_s_Enumeration$Val(this, i$1, "-");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_UnOp$__f_NOT = new $c_s_Enumeration$Val(this, i$2, "not");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_UnOp$__f_PLUS = new $c_s_Enumeration$Val(this, i$3, "+")
  };
}
const $d_Ltigerpython_parser_ast_UnOp$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_UnOp$: 0
}, false, "tigerpython.parser.ast.UnOp$", {
  Ltigerpython_parser_ast_UnOp$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_UnOp$.prototype.$classData = $d_Ltigerpython_parser_ast_UnOp$;
let $n_Ltigerpython_parser_ast_UnOp$ = (void 0);
function $m_Ltigerpython_parser_ast_UnOp$() {
  if ((!$n_Ltigerpython_parser_ast_UnOp$)) {
    $n_Ltigerpython_parser_ast_UnOp$ = new $c_Ltigerpython_parser_ast_UnOp$()
  };
  return $n_Ltigerpython_parser_ast_UnOp$
}
class $c_Ltigerpython_parser_ast_ValueType$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_ast_ValueType$__f_COMPLEX = null;
    this.Ltigerpython_parser_ast_ValueType$__f_FLOAT = null;
    this.Ltigerpython_parser_ast_ValueType$__f_INTEGER = null;
    this.Ltigerpython_parser_ast_ValueType$__f_NONE = null;
    this.Ltigerpython_parser_ast_ValueType$__f_BYTE_ARRAY = null;
    this.Ltigerpython_parser_ast_ValueType$__f_UNKNOWN = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_ast_ValueType$ = this;
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ValueType$__f_COMPLEX = new $c_s_Enumeration$Val(this, i, "complex");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ValueType$__f_FLOAT = new $c_s_Enumeration$Val(this, i$1, "float");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ValueType$__f_INTEGER = new $c_s_Enumeration$Val(this, i$2, "int");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ValueType$__f_NONE = new $c_s_Enumeration$Val(this, i$3, "none");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ValueType$__f_BYTE_ARRAY = new $c_s_Enumeration$Val(this, i$4, "bytearray");
    const i$5 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_ast_ValueType$__f_UNKNOWN = new $c_s_Enumeration$Val(this, i$5, "<???>")
  };
}
const $d_Ltigerpython_parser_ast_ValueType$ = new $TypeData().initClass({
  Ltigerpython_parser_ast_ValueType$: 0
}, false, "tigerpython.parser.ast.ValueType$", {
  Ltigerpython_parser_ast_ValueType$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_ValueType$.prototype.$classData = $d_Ltigerpython_parser_ast_ValueType$;
let $n_Ltigerpython_parser_ast_ValueType$ = (void 0);
function $m_Ltigerpython_parser_ast_ValueType$() {
  if ((!$n_Ltigerpython_parser_ast_ValueType$)) {
    $n_Ltigerpython_parser_ast_ValueType$ = new $c_Ltigerpython_parser_ast_ValueType$()
  };
  return $n_Ltigerpython_parser_ast_ValueType$
}
class $c_Ltigerpython_parser_errors_ErrorCode$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNKNOWN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_CALL_VALUE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_CALL = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_BRACKETS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINE_NUMBER = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_HEADER = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_CONDITION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_EXPRESSION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NESTED_FUNCTIONS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_REPEAT_NOT_ENABLED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_TWO_STATEMENTS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_PYTHON_POWER = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_SEMICOLON_INSTEAD_OF_COMMA = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN = null;
    this.Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_errors_ErrorCode$ = this;
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNKNOWN = new $c_s_Enumeration$Val(this, i, "UNKNOWN");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_AND_CONNECTS_CMP_NOT_VARS = new $c_s_Enumeration$Val(this, i$1, "AND_CONNECTS_CMP_NOT_VARS");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ARG_AFTER_VARARGS = new $c_s_Enumeration$Val(this, i$2, "ARG_AFTER_VARARGS");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_AS_NOT_ALLOWED_HERE = new $c_s_Enumeration$Val(this, i$3, "AS_NOT_ALLOWED_HERE");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ASSIGNMENT_TO_RIGHT = new $c_s_Enumeration$Val(this, i$4, "ASSIGNMENT_TO_RIGHT");
    const i$5 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_BREAK_OUTSIDE_LOOP = new $c_s_Enumeration$Val(this, i$5, "BREAK_OUTSIDE_LOOP");
    const i$6 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CALL_NEEDS_PARENTHESES = new $c_s_Enumeration$Val(this, i$6, "CALL_NEEDS_PARENTHESES");
    const i$7 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_APPLY_ASYNC = new $c_s_Enumeration$Val(this, i$7, "CANNOT_APPLY_ASYNC");
    const i$8 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_CALL = new $c_s_Enumeration$Val(this, i$8, "CANNOT_ASSIGN_TO_CALL");
    const i$9 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_ASSIGN_TO_FUNCTION = new $c_s_Enumeration$Val(this, i$9, "CANNOT_ASSIGN_TO_FUNCTION");
    const i$10 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_CALL_VALUE = new $c_s_Enumeration$Val(this, i$10, "CANNOT_CALL_VALUE");
    const i$11 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_REDEFINE_NAME = new $c_s_Enumeration$Val(this, i$11, "CANNOT_REDEFINE_NAME");
    const i$12 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_TEST_TUPLE = new $c_s_Enumeration$Val(this, i$12, "CANNOT_TEST_TUPLE");
    const i$13 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CANNOT_USE_KEYWORD_AS_NAME = new $c_s_Enumeration$Val(this, i$13, "CANNOT_USE_KEYWORD_AS_NAME");
    const i$14 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CLASS_METHOD_WITHOUT_SELF = new $c_s_Enumeration$Val(this, i$14, "CLASS_METHOD_WITHOUT_SELF");
    const i$15 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED = new $c_s_Enumeration$Val(this, i$15, "COLON_EXPECTED");
    const i$16 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_CANNOT_BE_FULFILLED = new $c_s_Enumeration$Val(this, i$16, "CONDITION_CANNOT_BE_FULFILLED");
    const i$17 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_CONDITION_ALWAYS_FULFILLED = new $c_s_Enumeration$Val(this, i$17, "CONDITION_ALWAYS_FULFILLED");
    const i$18 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NAME_CLASH = new $c_s_Enumeration$Val(this, i$18, "DECORATOR_NAME_CLASH");
    const i$19 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DECORATOR_NEEDS_CALLABLE = new $c_s_Enumeration$Val(this, i$19, "DECORATOR_NEEDS_CALLABLE");
    const i$20 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DEFINITION_INSIDE_LOOP = new $c_s_Enumeration$Val(this, i$20, "DEFINITION_INSIDE_LOOP");
    const i$21 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_CALL = new $c_s_Enumeration$Val(this, i$21, "DOUBLE_CALL");
    const i$22 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_EQUAL_SIGN_EXPECTED = new $c_s_Enumeration$Val(this, i$22, "DOUBLE_EQUAL_SIGN_EXPECTED");
    const i$23 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_ELSE = new $c_s_Enumeration$Val(this, i$23, "DOUBLE_ELSE");
    const i$24 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_DOUBLE_PARAMETER_NAMES = new $c_s_Enumeration$Val(this, i$24, "DOUBLE_PARAMETER_NAMES");
    const i$25 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ELSE_MUST_BE_INDENTED = new $c_s_Enumeration$Val(this, i$25, "ELSE_MUST_BE_INDENTED");
    const i$26 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITH_COMPARISON = new $c_s_Enumeration$Val(this, i$26, "ELSE_WITH_COMPARISON");
    const i$27 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_ELSE_WITHOUT_IF = new $c_s_Enumeration$Val(this, i$27, "ELSE_WITHOUT_IF");
    const i$28 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EMPTY_SUBSCRIPT = new $c_s_Enumeration$Val(this, i$28, "EMPTY_SUBSCRIPT");
    const i$29 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_BRACKETS = new $c_s_Enumeration$Val(this, i$29, "EXTRA_BRACKETS");
    const i$30 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_INDENTATION = new $c_s_Enumeration$Val(this, i$30, "EXTRA_INDENTATION");
    const i$31 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK = new $c_s_Enumeration$Val(this, i$31, "EXTRA_LINEBREAK");
    const i$32 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LEFT_BRACKET = new $c_s_Enumeration$Val(this, i$32, "EXTRA_LEFT_BRACKET");
    const i$33 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINE_NUMBER = new $c_s_Enumeration$Val(this, i$33, "EXTRA_LINE_NUMBER");
    const i$34 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET = new $c_s_Enumeration$Val(this, i$34, "EXTRA_RIGHT_BRACKET");
    const i$35 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE = new $c_s_Enumeration$Val(this, i$35, "EXTRA_SPACE");
    const i$36 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE_OR_MISSING_COMMA = new $c_s_Enumeration$Val(this, i$36, "EXTRA_SPACE_OR_MISSING_COMMA");
    const i$37 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN = new $c_s_Enumeration$Val(this, i$37, "EXTRA_TOKEN");
    const i$38 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_KEYWORD = new $c_s_Enumeration$Val(this, i$38, "FOREIGN_KEYWORD");
    const i$39 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_PRIVATE = new $c_s_Enumeration$Val(this, i$39, "FOREIGN_PRIVATE");
    const i$40 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_STATEMENT = new $c_s_Enumeration$Val(this, i$40, "FOREIGN_STATEMENT");
    const i$41 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_SYNTAX = new $c_s_Enumeration$Val(this, i$41, "FOREIGN_SYNTAX");
    const i$42 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN = new $c_s_Enumeration$Val(this, i$42, "FOREIGN_TOKEN");
    const i$43 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_VAR = new $c_s_Enumeration$Val(this, i$43, "FOREIGN_VAR");
    const i$44 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FOR_TARGET_NAME_REQUIRED = new $c_s_Enumeration$Val(this, i$44, "FOR_TARGET_NAME_REQUIRED");
    const i$45 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_FUTURE_MUST_BE_FIRST = new $c_s_Enumeration$Val(this, i$45, "FUTURE_MUST_BE_FIRST");
    const i$46 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_GENERATOR_CANNOT_RETURN_VALUE = new $c_s_Enumeration$Val(this, i$46, "GENERATOR_CANNOT_RETURN_VALUE");
    const i$47 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_MUST_BE_FIRST = new $c_s_Enumeration$Val(this, i$47, "GLOBAL_MUST_BE_FIRST");
    const i$48 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_GLOBAL_OUTSIDE_FUNCTION = new $c_s_Enumeration$Val(this, i$48, "GLOBAL_OUTSIDE_FUNCTION");
    const i$49 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_IMPORT_INSIDE_LOOP = new $c_s_Enumeration$Val(this, i$49, "IMPORT_INSIDE_LOOP");
    const i$50 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INCOMPLETE_IMPORT = new $c_s_Enumeration$Val(this, i$50, "INCOMPLETE_IMPORT");
    const i$51 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION = new $c_s_Enumeration$Val(this, i$51, "INCONSISTENT_INDENTATION");
    const i$52 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_RETURNS = new $c_s_Enumeration$Val(this, i$52, "INCONSISTENT_RETURNS");
    const i$53 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_ELSE = new $c_s_Enumeration$Val(this, i$53, "INDENTED_ELSE");
    const i$54 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INDENTED_HEADER = new $c_s_Enumeration$Val(this, i$54, "INDENTED_HEADER");
    const i$55 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INFINITE_LOOP = new $c_s_Enumeration$Val(this, i$55, "INFINITE_LOOP");
    const i$56 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INITIALIZATION_INSIDE_LOOP = new $c_s_Enumeration$Val(this, i$56, "INITIALIZATION_INSIDE_LOOP");
    const i$57 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_ASSIGNMENT = new $c_s_Enumeration$Val(this, i$57, "INVALID_ASSIGNMENT");
    const i$58 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_AUGASSIGN_TARGET = new $c_s_Enumeration$Val(this, i$58, "INVALID_AUGASSIGN_TARGET");
    const i$59 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_CONDITION = new $c_s_Enumeration$Val(this, i$59, "INVALID_CONDITION");
    const i$60 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF = new $c_s_Enumeration$Val(this, i$60, "INVALID_FUNCTION_DEF");
    const i$61 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_FUNCTION_DEF_ASSIGN = new $c_s_Enumeration$Val(this, i$61, "INVALID_FUNCTION_DEF_ASSIGN");
    const i$62 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_GENERATOR_ARG = new $c_s_Enumeration$Val(this, i$62, "INVALID_GENERATOR_ARG");
    const i$63 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER = new $c_s_Enumeration$Val(this, i$63, "INVALID_INPUT_CHARACTER");
    const i$64 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_KEY_VALUE_PAIR = new $c_s_Enumeration$Val(this, i$64, "INVALID_KEY_VALUE_PAIR");
    const i$65 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_NAME = new $c_s_Enumeration$Val(this, i$65, "INVALID_NAME");
    const i$66 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX = new $c_s_Enumeration$Val(this, i$66, "INVALID_STRING_PREFIX");
    const i$67 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE = new $c_s_Enumeration$Val(this, i$67, "INVALID_TOKEN_AT_START_OF_LINE");
    const i$68 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_METHOD_WITHOUT_SELF = new $c_s_Enumeration$Val(this, i$68, "METHOD_WITHOUT_SELF");
    const i$69 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET = new $c_s_Enumeration$Val(this, i$69, "MISMATCHED_CLOSING_BRACKET");
    const i$70 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISPLACED_ASSIGN = new $c_s_Enumeration$Val(this, i$70, "MISPLACED_ASSIGN");
    const i$71 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT = new $c_s_Enumeration$Val(this, i$71, "MISSING_ASSIGNMENT");
    const i$72 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_ASSIGNMENT_SOURCE = new $c_s_Enumeration$Val(this, i$72, "MISSING_ASSIGNMENT_SOURCE");
    const i$73 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_BODY = new $c_s_Enumeration$Val(this, i$73, "MISSING_BODY");
    const i$74 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMMA = new $c_s_Enumeration$Val(this, i$74, "MISSING_COMMA");
    const i$75 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_COMPARISON = new $c_s_Enumeration$Val(this, i$75, "MISSING_COMPARISON");
    const i$76 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_DOT = new $c_s_Enumeration$Val(this, i$76, "MISSING_DOT");
    const i$77 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_EXPRESSION = new $c_s_Enumeration$Val(this, i$77, "MISSING_EXPRESSION");
    const i$78 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_BRACKET = new $c_s_Enumeration$Val(this, i$78, "MISSING_LEFT_BRACKET");
    const i$79 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_LEFT_PARENTHESIS = new $c_s_Enumeration$Val(this, i$79, "MISSING_LEFT_PARENTHESIS");
    const i$80 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_OPERATOR_OR_COMMA = new $c_s_Enumeration$Val(this, i$80, "MISSING_OPERATOR_OR_COMMA");
    const i$81 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_PARENTHESES = new $c_s_Enumeration$Val(this, i$81, "MISSING_PARENTHESES");
    const i$82 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET = new $c_s_Enumeration$Val(this, i$82, "MISSING_RIGHT_BRACKET");
    const i$83 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_SPACE = new $c_s_Enumeration$Val(this, i$83, "MISSING_SPACE");
    const i$84 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN = new $c_s_Enumeration$Val(this, i$84, "MISSING_TOKEN");
    const i$85 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD = new $c_s_Enumeration$Val(this, i$85, "MISSPELLED_KEYWORD");
    const i$86 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER = new $c_s_Enumeration$Val(this, i$86, "MISSPELLED_NUMBER");
    const i$87 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR = new $c_s_Enumeration$Val(this, i$87, "MISSPELLED_OPERATOR");
    const i$88 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_ARGS = new $c_s_Enumeration$Val(this, i$88, "MULTIPLE_VAR_ARGS");
    const i$89 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_MULTIPLE_VAR_PARAMS = new $c_s_Enumeration$Val(this, i$89, "MULTIPLE_VAR_PARAMS");
    const i$90 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NAME_EXPECTED = new $c_s_Enumeration$Val(this, i$90, "NAME_EXPECTED");
    const i$91 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NESTED_FUNCTIONS = new $c_s_Enumeration$Val(this, i$91, "NESTED_FUNCTIONS");
    const i$92 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NO_END_NEEDED = new $c_s_Enumeration$Val(this, i$92, "NO_END_NEEDED");
    const i$93 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NO_PARAM_DEFAULT_ALLOWED = new $c_s_Enumeration$Val(this, i$93, "NO_PARAM_DEFAULT_ALLOWED");
    const i$94 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NO_VIABLE_ALTERNATIVE = new $c_s_Enumeration$Val(this, i$94, "NO_VIABLE_ALTERNATIVE");
    const i$95 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_NUMBER_NOT_SUBSCRIPTABLE = new $c_s_Enumeration$Val(this, i$95, "NUMBER_NOT_SUBSCRIPTABLE");
    const i$96 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PARAM_AFTER_KEYWORD_PARAM = new $c_s_Enumeration$Val(this, i$96, "PARAM_AFTER_KW");
    const i$97 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PARAMS_REQUIRED = new $c_s_Enumeration$Val(this, i$97, "PARAMS_REQUIRED");
    const i$98 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_POS_ARG_AFTER_KEYWORD = new $c_s_Enumeration$Val(this, i$98, "POS_ARG_AFTER_KEYWORD");
    const i$99 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_POS_PARAM_AFTER_KEYWORD = new $c_s_Enumeration$Val(this, i$99, "POS_PARAM_AFTER_KEYWORD");
    const i$100 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PRINT_DEST_EXPECTED = new $c_s_Enumeration$Val(this, i$100, "PRINT_DEST_EXPECTED");
    const i$101 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PRINT_IS_STATEMENT = new $c_s_Enumeration$Val(this, i$101, "PRINT_IS_STATEMENT");
    const i$102 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PRINT_NEEDS_PARENTHESES = new $c_s_Enumeration$Val(this, i$102, "PRINT_NEEDS_PARENTHESES");
    const i$103 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_2_FEATURE_NOT_AVAILABLE = new $c_s_Enumeration$Val(this, i$103, "PYTHON_2_FEATURE_NOT_AVAILABLE");
    const i$104 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_PYTHON_3_FEATURE_NOT_AVAILABLE = new $c_s_Enumeration$Val(this, i$104, "PYTHON_3_FEATURE_NOT_AVAILABLE");
    const i$105 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_REPEAT_NOT_ENABLED = new $c_s_Enumeration$Val(this, i$105, "REPEAT_NOT_ENABLED");
    const i$106 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_RETURN_OUTSIDE_FUNCTION = new $c_s_Enumeration$Val(this, i$106, "RETURN_OUTSIDE_FUNCTION");
    const i$107 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_SINGLE_EQUAL_SIGN_EXPECTED = new $c_s_Enumeration$Val(this, i$107, "SINGLE_EQUAL_SIGN_EXPECTED");
    const i$108 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_SUPERFLUOUS_COMPARISON = new $c_s_Enumeration$Val(this, i$108, "SUPERFLUOUS_COMPARISON");
    const i$109 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS = new $c_s_Enumeration$Val(this, i$109, "SWAPPED_TOKENS");
    const i$110 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED = new $c_s_Enumeration$Val(this, i$110, "TOKEN_REQUIRED");
    const i$111 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_TWO_STATEMENTS = new $c_s_Enumeration$Val(this, i$111, "TWO_STATEMENTS");
    const i$112 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_TUPLE_NEEDS_PARENS = new $c_s_Enumeration$Val(this, i$112, "TUPLE_NEEDS_PARENS");
    const i$113 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT = new $c_s_Enumeration$Val(this, i$113, "UNEXPECTED_END_OF_INPUT");
    const i$114 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_KEYWORD = new $c_s_Enumeration$Val(this, i$114, "UNEXPECTED_KEYWORD");
    const i$115 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNMATCHED_BRACKET = new $c_s_Enumeration$Val(this, i$115, "UNMATCHED_BRACKET");
    const i$116 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNREACHABLE_CODE = new $c_s_Enumeration$Val(this, i$116, "UNREACHABLE_CODE");
    const i$117 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING = new $c_s_Enumeration$Val(this, i$117, "UNTERMINATED_STRING");
    const i$118 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_AND_NOT_COMMA = new $c_s_Enumeration$Val(this, i$118, "USE_AND_NOT_COMMA");
    const i$119 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_BREAK_INSTEAD_OF_RETURN = new $c_s_Enumeration$Val(this, i$119, "BREAK_INSTEAD_OF_RETURN");
    const i$120 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_COMMA_NOT_AND = new $c_s_Enumeration$Val(this, i$120, "USE_COMMA_NOT_AND");
    const i$121 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE = new $c_s_Enumeration$Val(this, i$121, "USE_ELIF_INSTEAD_OF_ELSE");
    const i$122 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_ELIF_INSTEAD_OF_ELSE_IF = new $c_s_Enumeration$Val(this, i$122, "USE_ELIF_INSTEAD_OF_ELSE_IF");
    const i$123 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_EQ_INSTEAD_OF_NEQ = new $c_s_Enumeration$Val(this, i$123, "USE_EQ_INSTEAD_OF_NEQ");
    const i$124 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_MOD_NOT_DIV = new $c_s_Enumeration$Val(this, i$124, "USE_MOD_NOT_DIV");
    const i$125 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_NOT_INSTEAD_OF_FALSE = new $c_s_Enumeration$Val(this, i$125, "USE_NOT_INSTEAD_OF_FALSE");
    const i$126 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_PYTHON_POWER = new $c_s_Enumeration$Val(this, i$126, "USE_PYTHON_POWER");
    const i$127 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_REPEAT_INSTEAD_OF_WHILE = new $c_s_Enumeration$Val(this, i$127, "USE_REPEAT_INSTEAD_OF_WHILE");
    const i$128 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_RETURN_INSTEAD_OF_BREAK = new $c_s_Enumeration$Val(this, i$128, "RETURN_INSTEAD_OF_BREAK");
    const i$129 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USE_SEMICOLON_INSTEAD_OF_COMMA = new $c_s_Enumeration$Val(this, i$129, "USE_SEMICOLON_INSTEAD_OF_COMMA");
    const i$130 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USELESS_COMPUTATION = new $c_s_Enumeration$Val(this, i$130, "USELESS_COMPUTATION");
    const i$131 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STATEMENT = new $c_s_Enumeration$Val(this, i$131, "USELESS_STATEMENT");
    const i$132 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_USELESS_STMT_USE_AUG_ASSIGN = new $c_s_Enumeration$Val(this, i$132, "USELESS_STMT_USE_AUG_ASSIGN");
    const i$133 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_VARARG_AFTER_KEYWORD_ARG = new $c_s_Enumeration$Val(this, i$133, "VARARG_AFTER_KEYWORD_ARG");
    const i$134 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_VARARG_NOT_ALLOWED = new $c_s_Enumeration$Val(this, i$134, "VARARG_NOT_ALLOWED");
    const i$135 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_WRONG_BRACKET = new $c_s_Enumeration$Val(this, i$135, "WRONG_BRACKET");
    const i$136 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_WRONG_TOKEN = new $c_s_Enumeration$Val(this, i$136, "WRONG_TOKEN");
    const i$137 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_errors_ErrorCode$__f_YIELD_OUTSIDE_FUNCTION = new $c_s_Enumeration$Val(this, i$137, "YIELD_OUTSIDE_FUNCTION")
  };
}
const $d_Ltigerpython_parser_errors_ErrorCode$ = new $TypeData().initClass({
  Ltigerpython_parser_errors_ErrorCode$: 0
}, false, "tigerpython.parser.errors.ErrorCode$", {
  Ltigerpython_parser_errors_ErrorCode$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_errors_ErrorCode$.prototype.$classData = $d_Ltigerpython_parser_errors_ErrorCode$;
let $n_Ltigerpython_parser_errors_ErrorCode$ = (void 0);
function $m_Ltigerpython_parser_errors_ErrorCode$() {
  if ((!$n_Ltigerpython_parser_errors_ErrorCode$)) {
    $n_Ltigerpython_parser_errors_ErrorCode$ = new $c_Ltigerpython_parser_errors_ErrorCode$()
  };
  return $n_Ltigerpython_parser_errors_ErrorCode$
}
class $c_Ltigerpython_parser_lexer_CatCodes$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_lexer_CatCodes$__f_ALPHA = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_COMMENT = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_DELIMITER = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_DIGIT = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_DOT = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_EOF = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_ESCAPE = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_IGNORE = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_INVALID = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_SPECIAL = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_STRING = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_SYMBOL = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_UNICODE = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_WHITESPACE = null;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_lexer_CatCodes$ = this;
    const name = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "ALPHA");
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_ALPHA = new $c_s_Enumeration$Val(this, i, name);
    const name$1 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "BRACKET");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET = new $c_s_Enumeration$Val(this, i$1, name$1);
    const name$2 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "COMMENT");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_COMMENT = new $c_s_Enumeration$Val(this, i$2, name$2);
    const name$3 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "DELIMITER");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_DELIMITER = new $c_s_Enumeration$Val(this, i$3, name$3);
    const name$4 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "DIGIT");
    const i$4 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_DIGIT = new $c_s_Enumeration$Val(this, i$4, name$4);
    const name$5 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "DOT");
    const i$5 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_DOT = new $c_s_Enumeration$Val(this, i$5, name$5);
    const name$6 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "EOF");
    const i$6 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_EOF = new $c_s_Enumeration$Val(this, i$6, name$6);
    const name$7 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "ESCAPE");
    const i$7 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_ESCAPE = new $c_s_Enumeration$Val(this, i$7, name$7);
    const name$8 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "IGNORE");
    const i$8 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_IGNORE = new $c_s_Enumeration$Val(this, i$8, name$8);
    const name$9 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "INVALID");
    const i$9 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_INVALID = new $c_s_Enumeration$Val(this, i$9, name$9);
    const name$10 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "NEWLINE");
    const i$10 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE = new $c_s_Enumeration$Val(this, i$10, name$10);
    const name$11 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "OPERATOR");
    const i$11 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR = new $c_s_Enumeration$Val(this, i$11, name$11);
    const name$12 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "SPECIAL");
    const i$12 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_SPECIAL = new $c_s_Enumeration$Val(this, i$12, name$12);
    const name$13 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "STRING");
    const i$13 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_STRING = new $c_s_Enumeration$Val(this, i$13, name$13);
    const name$14 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "SYMBOL");
    const i$14 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_SYMBOL = new $c_s_Enumeration$Val(this, i$14, name$14);
    const name$15 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "UNICODE");
    const i$15 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_UNICODE = new $c_s_Enumeration$Val(this, i$15, name$15);
    const name$16 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "WHITESPACE");
    const i$16 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_lexer_CatCodes$__f_WHITESPACE = new $c_s_Enumeration$Val(this, i$16, name$16);
    this.Ltigerpython_parser_lexer_CatCodes$__f_base = $newArrayObject($d_s_Enumeration$Value.getArrayOf(), [128]);
    let i$17 = 0;
    while (true) {
      const v1 = i$17;
      $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_base.u[v1] = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_INVALID;
      if ((i$17 === 31)) {
        break
      };
      i$17 = ((1 + i$17) | 0)
    };
    const this$5 = new $c_sr_RichChar(48);
    const this$6 = $f_sr_IntegralProxy__to__O__sci_NumericRange$Inclusive(this$5, $bC(57));
    let count = 0;
    let current = this$6.sci_NumericRange__f_start;
    while ((count < this$6.length__I())) {
      const arg1 = current;
      const i$3$1 = $uC(arg1);
      $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_base.u[i$3$1] = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DIGIT;
      const this$7 = this$6.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs = current;
      current = new $c_s_math_Integral$IntegralOps(this$7, lhs).$plus__O__O(this$6.sci_NumericRange__f_step);
      count = ((1 + count) | 0)
    };
    const this$9 = new $c_sr_RichChar(65);
    const this$10 = $f_sr_IntegralProxy__to__O__sci_NumericRange$Inclusive(this$9, $bC(90));
    let count$1 = 0;
    let current$1 = this$10.sci_NumericRange__f_start;
    while ((count$1 < this$10.length__I())) {
      const arg1$1 = current$1;
      const i$4$1 = $uC(arg1$1);
      $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_base.u[i$4$1] = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ALPHA;
      const this$11 = this$10.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs$1 = current$1;
      current$1 = new $c_s_math_Integral$IntegralOps(this$11, lhs$1).$plus__O__O(this$10.sci_NumericRange__f_step);
      count$1 = ((1 + count$1) | 0)
    };
    const this$13 = new $c_sr_RichChar(97);
    const this$14 = $f_sr_IntegralProxy__to__O__sci_NumericRange$Inclusive(this$13, $bC(122));
    let count$2 = 0;
    let current$2 = this$14.sci_NumericRange__f_start;
    while ((count$2 < this$14.length__I())) {
      const arg1$2 = current$2;
      const i$5$1 = $uC(arg1$2);
      $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_base.u[i$5$1] = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ALPHA;
      const this$15 = this$14.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs$2 = current$2;
      current$2 = new $c_s_math_Integral$IntegralOps(this$15, lhs$2).$plus__O__O(this$14.sci_NumericRange__f_step);
      count$2 = ((1 + count$2) | 0)
    };
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[0] = this.Ltigerpython_parser_lexer_CatCodes$__f_EOF;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[9] = this.Ltigerpython_parser_lexer_CatCodes$__f_WHITESPACE;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[10] = this.Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[13] = this.Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[32] = this.Ltigerpython_parser_lexer_CatCodes$__f_WHITESPACE;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[95] = this.Ltigerpython_parser_lexer_CatCodes$__f_ALPHA;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[44] = this.Ltigerpython_parser_lexer_CatCodes$__f_DELIMITER;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[59] = this.Ltigerpython_parser_lexer_CatCodes$__f_DELIMITER;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[40] = this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[41] = this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[91] = this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[93] = this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[123] = this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[125] = this.Ltigerpython_parser_lexer_CatCodes$__f_BRACKET;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[39] = this.Ltigerpython_parser_lexer_CatCodes$__f_STRING;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[34] = this.Ltigerpython_parser_lexer_CatCodes$__f_STRING;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[43] = this.Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[45] = this.Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[42] = this.Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[47] = this.Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
    this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[46] = this.Ltigerpython_parser_lexer_CatCodes$__f_DOT
  };
  apply__C__s_Enumeration$Value(c) {
    return (((c >= 0) && (c < this.Ltigerpython_parser_lexer_CatCodes$__f_base.u.length)) ? this.Ltigerpython_parser_lexer_CatCodes$__f_base.u[c] : this.Ltigerpython_parser_lexer_CatCodes$__f_UNICODE)
  };
}
const $d_Ltigerpython_parser_lexer_CatCodes$ = new $TypeData().initClass({
  Ltigerpython_parser_lexer_CatCodes$: 0
}, false, "tigerpython.parser.lexer.CatCodes$", {
  Ltigerpython_parser_lexer_CatCodes$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_lexer_CatCodes$.prototype.$classData = $d_Ltigerpython_parser_lexer_CatCodes$;
let $n_Ltigerpython_parser_lexer_CatCodes$ = (void 0);
function $m_Ltigerpython_parser_lexer_CatCodes$() {
  if ((!$n_Ltigerpython_parser_lexer_CatCodes$)) {
    $n_Ltigerpython_parser_lexer_CatCodes$ = new $c_Ltigerpython_parser_lexer_CatCodes$()
  };
  return $n_Ltigerpython_parser_lexer_CatCodes$
}
class $c_Ltigerpython_parser_parsing_BracketPatcher$BracketType$ extends $c_s_Enumeration {
  constructor() {
    super();
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN = null;
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_PARENS = null;
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_BRACKET = null;
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_BRACE = null;
    $ct_s_Enumeration__I__(this, 0);
    $n_Ltigerpython_parser_parsing_BracketPatcher$BracketType$ = this;
    const name = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "UNKNOWN");
    const i = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN = new $c_s_Enumeration$Val(this, i, name);
    const name$1 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "PARENS");
    const i$1 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_PARENS = new $c_s_Enumeration$Val(this, i$1, name$1);
    const name$2 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "BRACKET");
    const i$2 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_BRACKET = new $c_s_Enumeration$Val(this, i$2, name$2);
    const name$3 = (((this.s_Enumeration__f_nextName !== null) && this.s_Enumeration__f_nextName.hasNext__Z()) ? this.s_Enumeration__f_nextName.next__O() : "BRACE");
    const i$3 = this.s_Enumeration__f_nextId;
    this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_BRACE = new $c_s_Enumeration$Val(this, i$3, name$3)
  };
  fromTokenType__Ltigerpython_parser_lexer_TokenType__s_Enumeration$Value(tokenType) {
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    let $$x1;
    if ((x === tokenType)) {
      $$x1 = true
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
      $$x1 = (x$3 === tokenType)
    };
    if ($$x1) {
      return this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_PARENS
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
      let $$x2;
      if ((x$5 === tokenType)) {
        $$x2 = true
      } else {
        const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
        $$x2 = (x$7 === tokenType)
      };
      if ($$x2) {
        return this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_BRACKET
      } else {
        const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        let $$x3;
        if ((x$9 === tokenType)) {
          $$x3 = true
        } else {
          const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
          $$x3 = (x$11 === tokenType)
        };
        if ($$x3) {
          return this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_BRACE
        } else {
          return this.Ltigerpython_parser_parsing_BracketPatcher$BracketType$__f_UNKNOWN
        }
      }
    }
  };
}
const $d_Ltigerpython_parser_parsing_BracketPatcher$BracketType$ = new $TypeData().initClass({
  Ltigerpython_parser_parsing_BracketPatcher$BracketType$: 0
}, false, "tigerpython.parser.parsing.BracketPatcher$BracketType$", {
  Ltigerpython_parser_parsing_BracketPatcher$BracketType$: 1,
  s_Enumeration: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_BracketPatcher$BracketType$.prototype.$classData = $d_Ltigerpython_parser_parsing_BracketPatcher$BracketType$;
let $n_Ltigerpython_parser_parsing_BracketPatcher$BracketType$ = (void 0);
function $m_Ltigerpython_parser_parsing_BracketPatcher$BracketType$() {
  if ((!$n_Ltigerpython_parser_parsing_BracketPatcher$BracketType$)) {
    $n_Ltigerpython_parser_parsing_BracketPatcher$BracketType$ = new $c_Ltigerpython_parser_parsing_BracketPatcher$BracketType$()
  };
  return $n_Ltigerpython_parser_parsing_BracketPatcher$BracketType$
}
class $c_Ltigerpython_parser_types_BuiltinFunction extends $c_Ltigerpython_parser_types_FunctionType {
  constructor(name, params, returnType) {
    super();
    this.Ltigerpython_parser_types_BuiltinFunction__f_name = null;
    this.Ltigerpython_parser_types_BuiltinFunction__f_params = null;
    this.Ltigerpython_parser_types_BuiltinFunction__f_returnType = null;
    this.Ltigerpython_parser_types_BuiltinFunction__f_parent = null;
    this.Ltigerpython_parser_types_BuiltinFunction__f_name = name;
    this.Ltigerpython_parser_types_BuiltinFunction__f_params = params;
    this.Ltigerpython_parser_types_BuiltinFunction__f_returnType = returnType
  };
  name__T() {
    return this.Ltigerpython_parser_types_BuiltinFunction__f_name
  };
  getParamsString__T() {
    const this$1 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_types_BuiltinFunction__f_params);
    return $f_sc_IterableOnceOps__mkString__T__T__T__T(this$1, "", ", ", "")
  };
  getReturnType__Ltigerpython_parser_types_DataType() {
    return this.Ltigerpython_parser_types_BuiltinFunction__f_returnType
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const array = [this.Ltigerpython_parser_types_BuiltinFunction__f_name, this.getParamsString__T()];
    return $$x1.format$extension__T__sci_Seq__T("%s(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
}
function $isArrayOf_Ltigerpython_parser_types_BuiltinFunction(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_BuiltinFunction)))
}
const $d_Ltigerpython_parser_types_BuiltinFunction = new $TypeData().initClass({
  Ltigerpython_parser_types_BuiltinFunction: 0
}, false, "tigerpython.parser.types.BuiltinFunction", {
  Ltigerpython_parser_types_BuiltinFunction: 1,
  Ltigerpython_parser_types_FunctionType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_BuiltinFunction.prototype.$classData = $d_Ltigerpython_parser_types_BuiltinFunction;
const $p_Ltigerpython_parser_types_FutureModule__subModules$lzycompute__sci_Map = (function($thiz) {
  if ((!$thiz.Ltigerpython_parser_types_FutureModule__f_bitmap$0)) {
    const result = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    const xs = $thiz.Ltigerpython_parser_types_FutureModule__f_subModuleNames;
    const f = ((this$2, result$1) => ((subModule$2) => {
      const subModule = subModule$2;
      const mod = $m_Ltigerpython_parser_types_FutureModule$().apply__T__Ltigerpython_parser_scopes_SourceReader__Ltigerpython_parser_types_FutureModule(subModule, this$2.Ltigerpython_parser_types_FutureModule__f_sourceReader);
      const key = mod.Ltigerpython_parser_types_FutureModule__f_name;
      $p_scm_HashMap__put0__O__O__Z__s_Some(result$1, key, mod, false)
    }))($thiz, result);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    $m_s_$less$colon$less$();
    $thiz.Ltigerpython_parser_types_FutureModule__f_subModules = $m_sci_Map$().from__sc_IterableOnce__sci_Map(result);
    $thiz.Ltigerpython_parser_types_FutureModule__f_bitmap$0 = true
  };
  $thiz.Ltigerpython_parser_types_FutureModule__f_subModuleNames = null;
  return $thiz.Ltigerpython_parser_types_FutureModule__f_subModules
});
const $p_Ltigerpython_parser_types_FutureModule__subModules__sci_Map = (function($thiz) {
  return ((!$thiz.Ltigerpython_parser_types_FutureModule__f_bitmap$0) ? $p_Ltigerpython_parser_types_FutureModule__subModules$lzycompute__sci_Map($thiz) : $thiz.Ltigerpython_parser_types_FutureModule__f_subModules)
});
const $p_Ltigerpython_parser_types_FutureModule__loadFields__V = (function($thiz) {
  while (true) {
    if ((!$thiz.Ltigerpython_parser_types_FutureModule__f__fields_loaded)) {
      $thiz.Ltigerpython_parser_types_FutureModule__f__fields_loaded = true;
      const this$1 = $thiz.Ltigerpython_parser_types_FutureModule__f_fields;
      const xs = $p_Ltigerpython_parser_types_FutureModule__subModules__sci_Map($thiz);
      this$1.addAll__sc_IterableOnce__scm_HashMap(xs);
      const text = $thiz.Ltigerpython_parser_types_FutureModule__f_sourceReader.loadTextFile__T__T($thiz.Ltigerpython_parser_types_FutureModule__f_sourcePath);
      if (((text !== null) && (text !== ""))) {
        const parser = new $c_Ltigerpython_parser_parsing_Parser(text, 2, (-1), $m_Ltigerpython_parser_errors_ErrorHandler$SilentErrorHandler$());
        const ast = parser.parse__Ltigerpython_parser_ast_AstNode();
        const moduleScope = new $c_Ltigerpython_parser_scopes_ModuleScope((-1), $thiz, $m_Ltigerpython_parser_scopes_ModuleLoader$().Ltigerpython_parser_scopes_ModuleLoader$__f_defaultModuleLoader);
        const walker = new $c_Ltigerpython_parser_scopes_AstWalker(moduleScope);
        walker.walkNode__Ltigerpython_parser_ast_AstNode__V(ast)
      }
    } else if ($thiz.Ltigerpython_parser_types_FutureModule__f_sourceReader.isFileInvalidated__T__Z($thiz.Ltigerpython_parser_types_FutureModule__f_sourcePath)) {
      $thiz.Ltigerpython_parser_types_FutureModule__f__fields_loaded = false;
      $thiz.Ltigerpython_parser_types_FutureModule__f_fields.clear__V();
      continue
    };
    break
  }
});
class $c_Ltigerpython_parser_types_FutureModule extends $c_Ltigerpython_parser_types_Package {
  constructor(name, sourceReader, sourcePath) {
    super();
    this.Ltigerpython_parser_types_FutureModule__f_subModules = null;
    this.Ltigerpython_parser_types_FutureModule__f_name = null;
    this.Ltigerpython_parser_types_FutureModule__f_sourceReader = null;
    this.Ltigerpython_parser_types_FutureModule__f_sourcePath = null;
    this.Ltigerpython_parser_types_FutureModule__f_subModuleNames = null;
    this.Ltigerpython_parser_types_FutureModule__f__fields_loaded = false;
    this.Ltigerpython_parser_types_FutureModule__f_fields = null;
    this.Ltigerpython_parser_types_FutureModule__f_bitmap$0 = false;
    this.Ltigerpython_parser_types_FutureModule__f_name = name;
    this.Ltigerpython_parser_types_FutureModule__f_sourceReader = sourceReader;
    this.Ltigerpython_parser_types_FutureModule__f_sourcePath = sourcePath;
    let $$x1;
    if ($f_T__endsWith__T__Z(sourcePath, "/__init__.py")) {
      const xs = sourceReader.listFiles__T__T__AT($m_sc_StringOps$().dropRight$extension__T__I__T(sourcePath, 11), ".py");
      const evidence$1 = $m_s_reflect_ClassTag$().apply__jl_Class__s_reflect_ClassTag($objectGetClass(xs).getComponentType__jl_Class());
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      const elementClass = evidence$1.runtimeClass__jl_Class();
      capacity = 0;
      size = 0;
      const isCharArrayBuilder = (elementClass === $d_C.getClassOf());
      jsElems = [];
      let i = 0;
      while ((i < xs.u.length)) {
        const x = xs.u[i];
        const x$1 = x;
        if ((x$1 !== this.Ltigerpython_parser_types_FutureModule__f_sourcePath)) {
          const unboxedElem = (isCharArrayBuilder ? $uC(x) : ((x === null) ? elementClass.jl_Class__f_data.zero : x));
          jsElems.push(unboxedElem)
        };
        i = ((1 + i) | 0)
      };
      const elemRuntimeClass = ((elementClass === $d_V.getClassOf()) ? $d_jl_Void.getClassOf() : (((elementClass === $d_sr_Null$.getClassOf()) || (elementClass === $d_sr_Nothing$.getClassOf())) ? $d_O.getClassOf() : elementClass));
      $$x1 = $makeNativeArrayWrapper(elemRuntimeClass.jl_Class__f_data.getArrayOf(), jsElems)
    } else {
      const xs$1 = $m_sci_Nil$();
      const len = xs$1.length__I();
      const array = $newArrayObject($d_T.getArrayOf(), [len]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i$1 = 0;
      while (iterator.hasNext__Z()) {
        array.u[i$1] = iterator.next__O();
        i$1 = ((1 + i$1) | 0)
      };
      $$x1 = array
    };
    this.Ltigerpython_parser_types_FutureModule__f_subModuleNames = $$x1;
    this.Ltigerpython_parser_types_FutureModule__f__fields_loaded = false;
    this.Ltigerpython_parser_types_FutureModule__f_fields = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$())
  };
  name__T() {
    return this.Ltigerpython_parser_types_FutureModule__f_name
  };
  getFields__sci_Map() {
    $p_Ltigerpython_parser_types_FutureModule__loadFields__V(this);
    const this$2 = this.Ltigerpython_parser_types_FutureModule__f_fields;
    $m_s_$less$colon$less$();
    return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$2)
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    $p_Ltigerpython_parser_types_FutureModule__loadFields__V(this);
    const this$1 = this.Ltigerpython_parser_types_FutureModule__f_fields;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$1, name, dataType, false)
  };
}
const $d_Ltigerpython_parser_types_FutureModule = new $TypeData().initClass({
  Ltigerpython_parser_types_FutureModule: 0
}, false, "tigerpython.parser.types.FutureModule", {
  Ltigerpython_parser_types_FutureModule: 1,
  Ltigerpython_parser_types_Package: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_FutureModule.prototype.$classData = $d_Ltigerpython_parser_types_FutureModule;
class $c_Ltigerpython_parser_types_LambdaFunction extends $c_Ltigerpython_parser_types_FunctionType {
  constructor(params, returnType) {
    super();
    this.Ltigerpython_parser_types_LambdaFunction__f_params = null;
    this.Ltigerpython_parser_types_LambdaFunction__f_returnType = null;
    this.Ltigerpython_parser_types_LambdaFunction__f_name = null;
    this.Ltigerpython_parser_types_LambdaFunction__f_params = params;
    this.Ltigerpython_parser_types_LambdaFunction__f_returnType = returnType;
    this.Ltigerpython_parser_types_LambdaFunction__f_name = "lambda"
  };
  name__T() {
    return this.Ltigerpython_parser_types_LambdaFunction__f_name
  };
  getReturnType__Ltigerpython_parser_types_DataType() {
    return this.Ltigerpython_parser_types_LambdaFunction__f_returnType
  };
}
const $d_Ltigerpython_parser_types_LambdaFunction = new $TypeData().initClass({
  Ltigerpython_parser_types_LambdaFunction: 0
}, false, "tigerpython.parser.types.LambdaFunction", {
  Ltigerpython_parser_types_LambdaFunction: 1,
  Ltigerpython_parser_types_FunctionType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_LambdaFunction.prototype.$classData = $d_Ltigerpython_parser_types_LambdaFunction;
const $ct_Ltigerpython_parser_types_Module__T__ = (function($thiz, name) {
  $thiz.Ltigerpython_parser_types_Module__f_name = name;
  $thiz.Ltigerpython_parser_types_Module__f_fields = new $c_Ltigerpython_parser_types_NameMap();
  $thiz.Ltigerpython_parser_types_Module__f_source = name;
  return $thiz
});
class $c_Ltigerpython_parser_types_Module extends $c_Ltigerpython_parser_types_Package {
  constructor() {
    super();
    this.Ltigerpython_parser_types_Module__f_name = null;
    this.Ltigerpython_parser_types_Module__f_fields = null;
    this.Ltigerpython_parser_types_Module__f_source = null
  };
  name__T() {
    return this.Ltigerpython_parser_types_Module__f_name
  };
  getFullName__T() {
    return this.Ltigerpython_parser_types_Module__f_source
  };
  getFields__sci_Map() {
    const this$1 = this.Ltigerpython_parser_types_Module__f_fields;
    const this$3 = this$1.Ltigerpython_parser_types_NameMap__f_map;
    $m_s_$less$colon$less$();
    return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$3)
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    this.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V(name, dataType)
  };
}
const $d_Ltigerpython_parser_types_Module = new $TypeData().initClass({
  Ltigerpython_parser_types_Module: 0
}, false, "tigerpython.parser.types.Module", {
  Ltigerpython_parser_types_Module: 1,
  Ltigerpython_parser_types_Package: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_Module.prototype.$classData = $d_Ltigerpython_parser_types_Module;
const $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__ = (function($thiz, name, baseType, fields) {
  $thiz.Ltigerpython_parser_types_PrimitiveType__f_name = name;
  $thiz.Ltigerpython_parser_types_PrimitiveType__f_baseType = baseType;
  $thiz.Ltigerpython_parser_types_PrimitiveType__f_fields = fields;
  if ((baseType !== null)) {
    const this$1 = $thiz.Ltigerpython_parser_types_PrimitiveType__f_fields;
    const xs = baseType.Ltigerpython_parser_types_PrimitiveType__f_fields;
    $thiz.Ltigerpython_parser_types_PrimitiveType__f_fields = this$1.concat__sc_IterableOnce__sc_IterableOps(xs)
  };
  return $thiz
});
class $c_Ltigerpython_parser_types_PrimitiveType extends $c_Ltigerpython_parser_types_ClassType {
  constructor() {
    super();
    this.Ltigerpython_parser_types_PrimitiveType__f_name = null;
    this.Ltigerpython_parser_types_PrimitiveType__f_baseType = null;
    this.Ltigerpython_parser_types_PrimitiveType__f_fields = null
  };
  name__T() {
    return this.Ltigerpython_parser_types_PrimitiveType__f_name
  };
  addFields__sci_Seq__V(newFields) {
    const this$4 = this.Ltigerpython_parser_types_PrimitiveType__f_fields;
    const xs = newFields.map__F1__O(new $c_sjsr_AnonFunction1(((this$1) => ((field$2) => {
      const field = field$2;
      const self = field.name__T();
      return $ct_T2__O__O__(new $c_T2(), self, field)
    }))(this)));
    this.Ltigerpython_parser_types_PrimitiveType__f_fields = this$4.concat__sc_IterableOnce__sc_IterableOps(xs);
    newFields.foreach__F1__V(new $c_sjsr_AnonFunction1(((this$2$1) => ((field$3$2) => {
      const field$3 = field$3$2;
      if ((field$3 instanceof $c_Ltigerpython_parser_types_BuiltinFunction)) {
        const x2 = field$3;
        x2.Ltigerpython_parser_types_BuiltinFunction__f_parent = this$2$1
      }
    }))(this)))
  };
  getFields__sci_Map() {
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    return this$1.from__sc_IterableOnce__sci_Map(elems)
  };
  getInstanceFields__sci_Map() {
    return this.Ltigerpython_parser_types_PrimitiveType__f_fields
  };
  isCallable__Z() {
    return true
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    /*<skip>*/
  };
  toString__T() {
    return (this.Ltigerpython_parser_types_PrimitiveType__f_name + "_type")
  };
}
function $isArrayOf_Ltigerpython_parser_types_PrimitiveType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_PrimitiveType)))
}
const $d_Ltigerpython_parser_types_PrimitiveType = new $TypeData().initClass({
  Ltigerpython_parser_types_PrimitiveType: 0
}, false, "tigerpython.parser.types.PrimitiveType", {
  Ltigerpython_parser_types_PrimitiveType: 1,
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_PrimitiveType.prototype.$classData = $d_Ltigerpython_parser_types_PrimitiveType;
class $c_Ltigerpython_parser_types_PythonClass extends $c_Ltigerpython_parser_types_ClassType {
  constructor(name, bases) {
    super();
    this.Ltigerpython_parser_types_PythonClass__f_name = null;
    this.Ltigerpython_parser_types_PythonClass__f_bases = null;
    this.Ltigerpython_parser_types_PythonClass__f_initFunction = null;
    this.Ltigerpython_parser_types_PythonClass__f_source = null;
    this.Ltigerpython_parser_types_PythonClass__f_sourcePos = 0;
    this.Ltigerpython_parser_types_PythonClass__f_classFields = null;
    this.Ltigerpython_parser_types_PythonClass__f_instanceFields = null;
    this.Ltigerpython_parser_types_PythonClass__f_protectedFields = null;
    this.Ltigerpython_parser_types_PythonClass__f_name = name;
    this.Ltigerpython_parser_types_PythonClass__f_bases = bases;
    this.Ltigerpython_parser_types_PythonClass__f_sourcePos = (-1);
    this.Ltigerpython_parser_types_PythonClass__f_classFields = new $c_Ltigerpython_parser_types_NameMap();
    this.Ltigerpython_parser_types_PythonClass__f_instanceFields = new $c_Ltigerpython_parser_types_NameMap();
    this.Ltigerpython_parser_types_PythonClass__f_protectedFields = new $c_Ltigerpython_parser_types_NameMap();
    const f = ((this$2) => ((base$2) => {
      const base = base$2;
      this$2.Ltigerpython_parser_types_PythonClass__f_classFields.$plus$plus$eq__sci_Map__Ltigerpython_parser_types_NameMap(base.getFields__sci_Map());
      this$2.Ltigerpython_parser_types_PythonClass__f_instanceFields.$plus$plus$eq__sci_Map__Ltigerpython_parser_types_NameMap(base.getInstanceFields__sci_Map());
      this$2.Ltigerpython_parser_types_PythonClass__f_protectedFields.$plus$plus$eq__sci_Map__Ltigerpython_parser_types_NameMap(base.getProtectedFields__sci_Map());
      if ((this$2.Ltigerpython_parser_types_PythonClass__f_initFunction !== null)) {
        if ((base instanceof $c_Ltigerpython_parser_types_PythonClass)) {
          const x2 = base;
          this$2.Ltigerpython_parser_types_PythonClass__f_initFunction = x2.Ltigerpython_parser_types_PythonClass__f_initFunction
        }
      }
    }))(this);
    const len = bases.u.length;
    let i = 0;
    if ((bases !== null)) {
      while ((i < len)) {
        const arg1 = bases.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(bases, 1)) {
      const x3 = bases;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(bases, 1)) {
      const x4 = bases;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(bases, 1)) {
      const x5 = bases;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(bases, 1)) {
      const x6 = bases;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(bases, 1)) {
      const x7 = bases;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(bases, 1)) {
      const x8 = bases;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(bases, 1)) {
      const x9 = bases;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(bases, 1)) {
      const x10 = bases;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(bases)
    }
  };
  name__T() {
    return this.Ltigerpython_parser_types_PythonClass__f_name
  };
  getFields__sci_Map() {
    const this$1 = this.Ltigerpython_parser_types_PythonClass__f_classFields;
    const this$3 = this$1.Ltigerpython_parser_types_NameMap__f_map;
    $m_s_$less$colon$less$();
    return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$3)
  };
  getInstanceFields__sci_Map() {
    const this$1 = this.Ltigerpython_parser_types_PythonClass__f_instanceFields;
    const this$3 = this$1.Ltigerpython_parser_types_NameMap__f_map;
    $m_s_$less$colon$less$();
    return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$3)
  };
  getProtectedFields__sci_Map() {
    const this$1 = this.Ltigerpython_parser_types_PythonClass__f_protectedFields;
    const this$3 = this$1.Ltigerpython_parser_types_NameMap__f_map;
    $m_s_$less$colon$less$();
    return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$3)
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    matchEnd5: {
      if ((dataType instanceof $c_Ltigerpython_parser_types_PythonFunction)) {
        const x2 = dataType;
        if (x2.isMethod__Z()) {
          this.Ltigerpython_parser_types_PythonClass__f_instanceFields.update__T__Ltigerpython_parser_types_DataType__V(name, x2);
          if ((name === "__init__")) {
            this.Ltigerpython_parser_types_PythonClass__f_initFunction = x2;
            break matchEnd5
          } else {
            break matchEnd5
          }
        }
      };
      if ((dataType instanceof $c_Ltigerpython_parser_types_FunctionType)) {
        this.Ltigerpython_parser_types_PythonClass__f_classFields.update__T__Ltigerpython_parser_types_DataType__V(name, dataType);
        break matchEnd5
      };
      this.Ltigerpython_parser_types_PythonClass__f_classFields.update__T__Ltigerpython_parser_types_DataType__V(name, dataType);
      this.Ltigerpython_parser_types_PythonClass__f_instanceFields.update__T__Ltigerpython_parser_types_DataType__V(name, dataType)
    }
  };
  setInstanceField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    matchEnd4: {
      if ((dataType instanceof $c_Ltigerpython_parser_types_PythonFunction)) {
        const x2 = dataType;
        if ((name === "__init__")) {
          this.Ltigerpython_parser_types_PythonClass__f_initFunction = x2;
          break matchEnd4
        }
      }
    };
    this.Ltigerpython_parser_types_PythonClass__f_instanceFields.update__T__Ltigerpython_parser_types_DataType__V(name, dataType)
  };
}
function $isArrayOf_Ltigerpython_parser_types_PythonClass(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_PythonClass)))
}
const $d_Ltigerpython_parser_types_PythonClass = new $TypeData().initClass({
  Ltigerpython_parser_types_PythonClass: 0
}, false, "tigerpython.parser.types.PythonClass", {
  Ltigerpython_parser_types_PythonClass: 1,
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_PythonClass.prototype.$classData = $d_Ltigerpython_parser_types_PythonClass;
const $p_Ltigerpython_parser_types_PythonFunction__isMethod$lzycompute__Z = (function($thiz) {
  if ((!$thiz.Ltigerpython_parser_types_PythonFunction__f_bitmap$0)) {
    const xs = $thiz.Ltigerpython_parser_types_PythonFunction__f_params;
    let $$x1;
    if ((xs.u.length !== 0)) {
      const x1 = $thiz.Ltigerpython_parser_types_PythonFunction__f_params.u[0].Ltigerpython_parser_types_Parameter__f_dataType;
      $$x1 = ((x1 instanceof $c_Ltigerpython_parser_types_SelfInstance) || (x1 instanceof $c_Ltigerpython_parser_types_SelfClass))
    } else {
      $$x1 = false
    };
    $thiz.Ltigerpython_parser_types_PythonFunction__f_isMethod = $$x1;
    $thiz.Ltigerpython_parser_types_PythonFunction__f_bitmap$0 = true
  };
  return $thiz.Ltigerpython_parser_types_PythonFunction__f_isMethod
});
class $c_Ltigerpython_parser_types_PythonFunction extends $c_Ltigerpython_parser_types_FunctionType {
  constructor(name, params, paramCount, returnType) {
    super();
    this.Ltigerpython_parser_types_PythonFunction__f_isMethod = false;
    this.Ltigerpython_parser_types_PythonFunction__f_name = null;
    this.Ltigerpython_parser_types_PythonFunction__f_params = null;
    this.Ltigerpython_parser_types_PythonFunction__f_paramCount = 0;
    this.Ltigerpython_parser_types_PythonFunction__f_returnType = null;
    this.Ltigerpython_parser_types_PythonFunction__f_source = null;
    this.Ltigerpython_parser_types_PythonFunction__f_sourcePos = 0;
    this.Ltigerpython_parser_types_PythonFunction__f_fields = null;
    this.Ltigerpython_parser_types_PythonFunction__f_bitmap$0 = false;
    this.Ltigerpython_parser_types_PythonFunction__f_name = name;
    this.Ltigerpython_parser_types_PythonFunction__f_params = params;
    this.Ltigerpython_parser_types_PythonFunction__f_paramCount = paramCount;
    this.Ltigerpython_parser_types_PythonFunction__f_returnType = returnType;
    this.Ltigerpython_parser_types_PythonFunction__f_sourcePos = (-1);
    this.Ltigerpython_parser_types_PythonFunction__f_fields = new $c_Ltigerpython_parser_types_NameMap()
  };
  name__T() {
    return this.Ltigerpython_parser_types_PythonFunction__f_name
  };
  getFields__sci_Map() {
    const this$1 = this.Ltigerpython_parser_types_PythonFunction__f_fields;
    const this$3 = this$1.Ltigerpython_parser_types_NameMap__f_map;
    $m_s_$less$colon$less$();
    return $m_sci_Map$().from__sc_IterableOnce__sci_Map(this$3)
  };
  getReturnType__Ltigerpython_parser_types_DataType() {
    return this.Ltigerpython_parser_types_PythonFunction__f_returnType
  };
  isMethod__Z() {
    return ((!this.Ltigerpython_parser_types_PythonFunction__f_bitmap$0) ? $p_Ltigerpython_parser_types_PythonFunction__isMethod$lzycompute__Z(this) : this.Ltigerpython_parser_types_PythonFunction__f_isMethod)
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    this.Ltigerpython_parser_types_PythonFunction__f_fields.update__T__Ltigerpython_parser_types_DataType__V(name, dataType)
  };
}
function $isArrayOf_Ltigerpython_parser_types_PythonFunction(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_PythonFunction)))
}
const $d_Ltigerpython_parser_types_PythonFunction = new $TypeData().initClass({
  Ltigerpython_parser_types_PythonFunction: 0
}, false, "tigerpython.parser.types.PythonFunction", {
  Ltigerpython_parser_types_PythonFunction: 1,
  Ltigerpython_parser_types_FunctionType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_PythonFunction.prototype.$classData = $d_Ltigerpython_parser_types_PythonFunction;
class $c_Ljava_io_IOException {
}
function $isArrayOf_Ljava_io_IOException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ljava_io_IOException)))
}
class $c_jl_AssertionError extends $c_jl_Error {
  constructor(detailMessage) {
    super();
    const message = ("" + detailMessage);
    let cause;
    if ((detailMessage instanceof $c_jl_Throwable)) {
      const x2 = detailMessage;
      cause = x2
    } else {
      cause = null
    };
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, message, cause, true, true)
  };
}
const $d_jl_AssertionError = new $TypeData().initClass({
  jl_AssertionError: 0
}, false, "java.lang.AssertionError", {
  jl_AssertionError: 1,
  jl_Error: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_AssertionError.prototype.$classData = $d_jl_AssertionError;
const $f_jl_Byte__equals__O__Z = (function($thiz, that) {
  return Object.is($thiz, that)
});
const $f_jl_Byte__hashCode__I = (function($thiz) {
  return ($thiz | 0)
});
const $f_jl_Byte__toString__T = (function($thiz) {
  const b = ($thiz | 0);
  return ("" + b)
});
const $d_jl_Byte = new $TypeData().initClass({
  jl_Byte: 0
}, false, "java.lang.Byte", {
  jl_Byte: 1,
  jl_Number: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => $isByte(x)));
const $f_jl_Double__equals__O__Z = (function($thiz, that) {
  return Object.is($thiz, that)
});
const $f_jl_Double__hashCode__I = (function($thiz) {
  const value = (+$thiz);
  return $m_jl_FloatingPointBits$().numberHashCode__D__I(value)
});
const $f_jl_Double__toString__T = (function($thiz) {
  const d = (+$thiz);
  return ("" + d)
});
function $isArrayOf_jl_Double(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Double)))
}
const $d_jl_Double = new $TypeData().initClass({
  jl_Double: 0
}, false, "java.lang.Double", {
  jl_Double: 1,
  jl_Number: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => ((typeof x) === "number")));
const $f_jl_Float__equals__O__Z = (function($thiz, that) {
  return Object.is($thiz, that)
});
const $f_jl_Float__hashCode__I = (function($thiz) {
  const value = (+$thiz);
  return $m_jl_FloatingPointBits$().numberHashCode__D__I(value)
});
const $f_jl_Float__toString__T = (function($thiz) {
  const f = (+$thiz);
  return ("" + f)
});
const $d_jl_Float = new $TypeData().initClass({
  jl_Float: 0
}, false, "java.lang.Float", {
  jl_Float: 1,
  jl_Number: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => ((typeof x) === "number")));
const $f_jl_Integer__equals__O__Z = (function($thiz, that) {
  return Object.is($thiz, that)
});
const $f_jl_Integer__hashCode__I = (function($thiz) {
  return ($thiz | 0)
});
const $f_jl_Integer__toString__T = (function($thiz) {
  const i = ($thiz | 0);
  return ("" + i)
});
function $isArrayOf_jl_Integer(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Integer)))
}
const $d_jl_Integer = new $TypeData().initClass({
  jl_Integer: 0
}, false, "java.lang.Integer", {
  jl_Integer: 1,
  jl_Number: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => $isInt(x)));
const $f_jl_Long__equals__O__Z = (function($thiz, that) {
  if ((that instanceof $c_RTLong)) {
    const x2 = that;
    const t = $uJ($thiz);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const b = $uJ(x2);
    return ((lo === b.RTLong__f_lo) && (hi === b.RTLong__f_hi))
  } else {
    return false
  }
});
const $f_jl_Long__hashCode__I = (function($thiz) {
  const t = $uJ($thiz);
  const lo = t.RTLong__f_lo;
  const hi = t.RTLong__f_hi;
  return (lo ^ hi)
});
const $f_jl_Long__toString__T = (function($thiz) {
  const t = $uJ($thiz);
  const lo = t.RTLong__f_lo;
  const hi = t.RTLong__f_hi;
  return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toString__I__I__T(lo, hi)
});
function $isArrayOf_jl_Long(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_Long)))
}
const $d_jl_Long = new $TypeData().initClass({
  jl_Long: 0
}, false, "java.lang.Long", {
  jl_Long: 1,
  jl_Number: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => (x instanceof $c_RTLong)));
class $c_jl_RuntimeException extends $c_jl_Exception {
}
const $f_jl_Short__equals__O__Z = (function($thiz, that) {
  return Object.is($thiz, that)
});
const $f_jl_Short__hashCode__I = (function($thiz) {
  return ($thiz | 0)
});
const $f_jl_Short__toString__T = (function($thiz) {
  const s = ($thiz | 0);
  return ("" + s)
});
const $d_jl_Short = new $TypeData().initClass({
  jl_Short: 0
}, false, "java.lang.Short", {
  jl_Short: 1,
  jl_Number: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
}, (void 0), (void 0), ((x) => $isShort(x)));
const $f_T__charAt__I__C = (function($thiz, index) {
  return (65535 & ($thiz.charCodeAt(index) | 0))
});
const $f_T__hashCode__I = (function($thiz) {
  let res = 0;
  let mul = 1;
  let i = (((-1) + ($thiz.length | 0)) | 0);
  while ((i >= 0)) {
    const $$x1 = res;
    const index = i;
    res = (($$x1 + $imul((65535 & ($thiz.charCodeAt(index) | 0)), mul)) | 0);
    mul = $imul(31, mul);
    i = (((-1) + i) | 0)
  };
  return res
});
const $f_T__equals__O__Z = (function($thiz, that) {
  return ($thiz === that)
});
const $f_T__endsWith__T__Z = (function($thiz, suffix) {
  return ($thiz.substring(((($thiz.length | 0) - (suffix.length | 0)) | 0)) === suffix)
});
const $f_T__getChars__I__I__AC__I__V = (function($thiz, srcBegin, srcEnd, dst, dstBegin) {
  if (((((srcEnd > ($thiz.length | 0)) || (srcBegin < 0)) || (srcEnd < 0)) || (srcBegin > srcEnd))) {
    throw $ct_jl_StringIndexOutOfBoundsException__T__(new $c_jl_StringIndexOutOfBoundsException(), "Index out of Bound")
  };
  const offset = ((dstBegin - srcBegin) | 0);
  let i = srcBegin;
  while ((i < srcEnd)) {
    const $$x1 = i;
    const index = i;
    dst.u[(($$x1 + offset) | 0)] = (65535 & ($thiz.charCodeAt(index) | 0));
    i = ((1 + i) | 0)
  }
});
const $f_T__indexOf__I__I = (function($thiz, ch) {
  const str = $m_jl_String$().java$lang$_String$$fromCodePoint__I__T(ch);
  return ($thiz.indexOf(str) | 0)
});
const $f_T__lastIndexOf__I__I = (function($thiz, ch) {
  const str = $m_jl_String$().java$lang$_String$$fromCodePoint__I__T(ch);
  return ($thiz.lastIndexOf(str) | 0)
});
const $f_T__length__I = (function($thiz) {
  return ($thiz.length | 0)
});
const $f_T__split__T__I__AT = (function($thiz, regex, limit) {
  const this$1 = $m_ju_regex_Pattern$();
  return this$1.compile__T__I__ju_regex_Pattern(regex, 0).split__jl_CharSequence__I__AT($thiz, limit)
});
const $f_T__subSequence__I__I__jl_CharSequence = (function($thiz, beginIndex, endIndex) {
  return $thiz.substring(beginIndex, endIndex)
});
const $f_T__toString__T = (function($thiz) {
  return $thiz
});
function $isArrayOf_T(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.T)))
}
const $d_T = new $TypeData().initClass({
  T: 0
}, false, "java.lang.String", {
  T: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1,
  jl_CharSequence: 1
}, (void 0), (void 0), ((x) => ((typeof x) === "string")));
const $ct_jl_StringBuilder__ = (function($thiz) {
  $thiz.jl_StringBuilder__f_java$lang$StringBuilder$$content = "";
  return $thiz
});
const $ct_jl_StringBuilder__T__ = (function($thiz, str) {
  $ct_jl_StringBuilder__($thiz);
  if ((str === null)) {
    throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
  };
  $thiz.jl_StringBuilder__f_java$lang$StringBuilder$$content = str;
  return $thiz
});
const $ct_jl_StringBuilder__I__ = (function($thiz, initialCapacity) {
  $ct_jl_StringBuilder__($thiz);
  if ((initialCapacity < 0)) {
    throw new $c_jl_NegativeArraySizeException()
  };
  return $thiz
});
class $c_jl_StringBuilder extends $c_O {
  constructor() {
    super();
    this.jl_StringBuilder__f_java$lang$StringBuilder$$content = null
  };
  append__AC__jl_StringBuilder(str) {
    const this$1 = $m_jl_String$();
    const count = str.u.length;
    const str$1 = this$1.new__AC__I__I__T(str, 0, count);
    this.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + this.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str$1);
    return this
  };
  toString__T() {
    return this.jl_StringBuilder__f_java$lang$StringBuilder$$content
  };
  length__I() {
    const this$1 = this.jl_StringBuilder__f_java$lang$StringBuilder$$content;
    return (this$1.length | 0)
  };
  charAt__I__C(index) {
    const this$1 = this.jl_StringBuilder__f_java$lang$StringBuilder$$content;
    return (65535 & (this$1.charCodeAt(index) | 0))
  };
  getChars__I__I__AC__I__V(srcBegin, srcEnd, dst, dstBegin) {
    $f_T__getChars__I__I__AC__I__V(this.jl_StringBuilder__f_java$lang$StringBuilder$$content, srcBegin, srcEnd, dst, dstBegin)
  };
  subSequence__I__I__jl_CharSequence(start, end) {
    return this.substring__I__I__T(start, end)
  };
  substring__I__I__T(start, end) {
    const this$1 = this.jl_StringBuilder__f_java$lang$StringBuilder$$content;
    return this$1.substring(start, end)
  };
}
const $d_jl_StringBuilder = new $TypeData().initClass({
  jl_StringBuilder: 0
}, false, "java.lang.StringBuilder", {
  jl_StringBuilder: 1,
  O: 1,
  jl_CharSequence: 1,
  jl_Appendable: 1,
  Ljava_io_Serializable: 1
});
$c_jl_StringBuilder.prototype.$classData = $d_jl_StringBuilder;
const $p_ju_Formatter__sendToDest__T__V = (function($thiz, s) {
  if (($thiz.ju_Formatter__f_dest === null)) {
    $thiz.ju_Formatter__f_stringOutput = (("" + $thiz.ju_Formatter__f_stringOutput) + s)
  } else {
    $p_ju_Formatter__sendToDestSlowPath__sjs_js_Array__V($thiz, [s])
  }
});
const $p_ju_Formatter__sendToDest__T__T__V = (function($thiz, s1, s2) {
  if (($thiz.ju_Formatter__f_dest === null)) {
    $thiz.ju_Formatter__f_stringOutput = ((("" + $thiz.ju_Formatter__f_stringOutput) + s1) + s2)
  } else {
    $p_ju_Formatter__sendToDestSlowPath__sjs_js_Array__V($thiz, [s1, s2])
  }
});
const $p_ju_Formatter__sendToDest__T__T__T__V = (function($thiz, s1, s2, s3) {
  if (($thiz.ju_Formatter__f_dest === null)) {
    $thiz.ju_Formatter__f_stringOutput = (($thiz.ju_Formatter__f_stringOutput + (("" + s1) + s2)) + s3)
  } else {
    $p_ju_Formatter__sendToDestSlowPath__sjs_js_Array__V($thiz, [s1, s2, s3])
  }
});
const $p_ju_Formatter__sendToDestSlowPath__sjs_js_Array__V = (function($thiz, ss) {
  try {
    const len = (ss.length | 0);
    let i = 0;
    while ((i < len)) {
      const arg1 = ss[i];
      const x$1 = arg1;
      const this$3 = $thiz.ju_Formatter__f_dest;
      this$3.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + this$3.jl_StringBuilder__f_java$lang$StringBuilder$$content) + x$1);
      i = ((1 + i) | 0)
    }
  } catch (e) {
    if ((e instanceof $c_Ljava_io_IOException)) {
      const th = e;
      $thiz.ju_Formatter__f_java$util$Formatter$$lastIOException = th
    } else {
      throw e
    }
  }
});
const $p_ju_Formatter__parseFlags__T__C__I = (function($thiz, flags, conversion) {
  let bits = ((conversion <= 90) ? 256 : 0);
  const len = (flags.length | 0);
  let i = 0;
  while ((i !== len)) {
    const index = i;
    const f = (65535 & (flags.charCodeAt(index) | 0));
    let bit;
    switch (f) {
      case 45: {
        bit = 1;
        break
      }
      case 35: {
        bit = 2;
        break
      }
      case 43: {
        bit = 4;
        break
      }
      case 32: {
        bit = 8;
        break
      }
      case 48: {
        bit = 16;
        break
      }
      case 44: {
        bit = 32;
        break
      }
      case 40: {
        bit = 64;
        break
      }
      case 60: {
        bit = 128;
        break
      }
      default: {
        throw new $c_s_MatchError($bC(f))
      }
    };
    if (((bits & bit) !== 0)) {
      throw new $c_ju_DuplicateFormatFlagsException(String.fromCharCode(f))
    };
    bits = (bits | bit);
    i = ((1 + i) | 0)
  };
  return bits
});
const $p_ju_Formatter__parsePositiveIntSilent__sjs_js_$bar__I__I = (function($thiz, capture, default$1) {
  if ((capture === (void 0))) {
    return default$1
  } else {
    const s = capture;
    const x = (+parseInt(s, 10));
    return ((x <= 2.147483647E9) ? $doubleToInt(x) : (-1))
  }
});
const $p_ju_Formatter__formatArg__O__C__I__I__I__V = (function($thiz, arg, conversion, flags, width, precision) {
  switch (conversion) {
    case 98:
    case 66: {
      if (((126 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 126, conversion)
      };
      const str = (((arg === false) || (arg === null)) ? "false" : "true");
      $p_ju_Formatter__formatNonNumericString__I__I__I__T__V($thiz, flags, width, precision, str);
      break
    }
    case 104:
    case 72: {
      if (((126 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 126, conversion)
      };
      let str$2;
      if ((arg === null)) {
        str$2 = "null"
      } else {
        const i = $dp_hashCode__I(arg);
        str$2 = (+(i >>> 0)).toString(16)
      };
      $p_ju_Formatter__formatNonNumericString__I__I__I__T__V($thiz, flags, width, precision, str$2);
      break
    }
    case 115:
    case 83: {
      if ($is_ju_Formattable(arg)) {
        const x2 = arg;
        if (((124 & flags) !== 0)) {
          $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 124, conversion)
        };
        const formattableFlags = (((((1 & flags) !== 0) ? 1 : 0) | (((2 & flags) !== 0) ? 4 : 0)) | (((256 & flags) !== 0) ? 2 : 0));
        x2.formatTo__ju_Formatter__I__I__I__V($thiz, formattableFlags, width, precision)
      } else {
        if (((126 & flags) !== 0)) {
          $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 126, conversion)
        };
        const str$3 = ("" + arg);
        $p_ju_Formatter__formatNonNumericString__I__I__I__T__V($thiz, flags, width, precision, str$3)
      };
      break
    }
    case 99:
    case 67: {
      if (((126 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 126, conversion)
      };
      if ((precision >= 0)) {
        throw new $c_ju_IllegalFormatPrecisionException(precision)
      };
      if ((arg instanceof $Char)) {
        const x2$2 = $uC(arg);
        $p_ju_Formatter__formatNonNumericString__I__I__I__T__V($thiz, flags, width, (-1), String.fromCharCode(x2$2))
      } else if ($isInt(arg)) {
        const x3 = (arg | 0);
        if ((!((x3 >= 0) && (x3 <= 1114111)))) {
          throw new $c_ju_IllegalFormatCodePointException(x3)
        };
        let str$4;
        if ((x3 < 65536)) {
          str$4 = String.fromCharCode(x3)
        } else {
          const $$x1 = String;
          const value = (55296 | (((-64) + (x3 >> 10)) | 0));
          const value$1 = (56320 | (1023 & x3));
          str$4 = $$x1.fromCharCode(value, value$1)
        };
        $p_ju_Formatter__formatNonNumericString__I__I__I__T__V($thiz, flags, width, (-1), str$4)
      } else {
        $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V($thiz, arg, flags, width, precision, conversion)
      };
      break
    }
    case 100: {
      if (((2 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 2, conversion)
      };
      if ((((17 & flags) === 17) || ((12 & flags) === 12))) {
        $p_ju_Formatter__illegalFlags$1__I__E($thiz, flags)
      };
      if ((precision >= 0)) {
        throw new $c_ju_IllegalFormatPrecisionException(precision)
      };
      if ($isInt(arg)) {
        const x2$3 = (arg | 0);
        $thiz.java$util$Formatter$$formatNumericString__I__I__T__V(flags, width, ("" + x2$3))
      } else if ((arg instanceof $c_RTLong)) {
        const t = $uJ(arg);
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        $thiz.java$util$Formatter$$formatNumericString__I__I__T__V(flags, width, $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toString__I__I__T(lo, hi))
      } else {
        $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V($thiz, arg, flags, width, precision, conversion)
      };
      break
    }
    case 111: {
      if (((108 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 108, conversion)
      };
      if (((17 & flags) === 17)) {
        $p_ju_Formatter__illegalFlags$1__I__E($thiz, flags)
      };
      if ((precision >= 0)) {
        throw new $c_ju_IllegalFormatPrecisionException(precision)
      };
      const prefix = (((2 & flags) !== 0) ? "0" : "");
      if ($isInt(arg)) {
        const x2$4 = (arg | 0);
        $p_ju_Formatter__padAndSendToDest__I__I__T__T__V($thiz, flags, width, prefix, (+(x2$4 >>> 0)).toString(8))
      } else if ((arg instanceof $c_RTLong)) {
        const t$1 = $uJ(arg);
        const lo$1 = t$1.RTLong__f_lo;
        const hi$1 = t$1.RTLong__f_hi;
        const this$14 = $m_jl_Long$();
        $p_ju_Formatter__padAndSendToDest__I__I__T__T__V($thiz, flags, width, prefix, this$14.java$lang$Long$$toOctalString__I__I__T(lo$1, hi$1))
      } else {
        $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V($thiz, arg, flags, width, precision, conversion)
      };
      break
    }
    case 120:
    case 88: {
      if (((108 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 108, conversion)
      };
      if (((17 & flags) === 17)) {
        $p_ju_Formatter__illegalFlags$1__I__E($thiz, flags)
      };
      if ((precision >= 0)) {
        throw new $c_ju_IllegalFormatPrecisionException(precision)
      };
      const prefix$2 = (((2 & flags) === 0) ? "" : (((256 & flags) !== 0) ? "0X" : "0x"));
      if ($isInt(arg)) {
        const x2$5 = (arg | 0);
        $p_ju_Formatter__padAndSendToDest__I__I__T__T__V($thiz, flags, width, prefix$2, $p_ju_Formatter__applyUpperCase__I__T__T($thiz, flags, (+(x2$5 >>> 0)).toString(16)))
      } else if ((arg instanceof $c_RTLong)) {
        const t$2 = $uJ(arg);
        const lo$2 = t$2.RTLong__f_lo;
        const hi$2 = t$2.RTLong__f_hi;
        const this$18 = $m_jl_Long$();
        $p_ju_Formatter__padAndSendToDest__I__I__T__T__V($thiz, flags, width, prefix$2, $p_ju_Formatter__applyUpperCase__I__T__T($thiz, flags, this$18.java$lang$Long$$toHexString__I__I__T(lo$2, hi$2)))
      } else {
        $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V($thiz, arg, flags, width, precision, conversion)
      };
      break
    }
    case 101:
    case 69: {
      if (((32 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 32, conversion)
      };
      if ((((17 & flags) === 17) || ((12 & flags) === 12))) {
        $p_ju_Formatter__illegalFlags$1__I__E($thiz, flags)
      };
      if (((typeof arg) === "number")) {
        const x2$1 = (+arg);
        if (((x2$1 !== x2$1) || ((x2$1 === Infinity) || (x2$1 === (-Infinity))))) {
          $thiz.java$util$Formatter$$formatNaNOrInfinite__I__I__D__V(flags, width, x2$1)
        } else {
          const forceDecimalSep = ((2 & flags) !== 0);
          const arg2 = ((precision >= 0) ? precision : 6);
          $thiz.java$util$Formatter$$formatNumericString__I__I__T__V(flags, width, $p_ju_Formatter__computerizedScientificNotation__D__I__Z__T($thiz, x2$1, arg2, forceDecimalSep))
        }
      } else {
        $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V($thiz, arg, flags, width, precision, conversion)
      };
      break
    }
    case 103:
    case 71: {
      if (((2 & flags) !== 0)) {
        $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E($thiz, flags, 2, conversion)
      };
      if ((((17 & flags) === 17) || ((12 & flags) === 12))) {
        $p_ju_Formatter__illegalFlags$1__I__E($thiz, flags)
      };
      if (((typeof arg) === "number")) {
        const x2$6 = (+arg);
        if (((x2$6 !== x2$6) || ((x2$6 === Infinity) || (x2$6 === (-Infinity))))) {
          $thiz.java$util$Formatter$$formatNaNOrInfinite__I__I__D__V(flags, width, x2$6)
        } else {
          const forceDecimalSep$1 = ((2 & flags) !== 0);
          const arg2$1 = ((precision >= 0) ? precision : 6);
          $thiz.java$util$Formatter$$formatNumericString__I__I__T__V(flags, width, $p_ju_Formatter__generalScientificNotation__D__I__Z__T($thiz, x2$6, arg2$1, forceDecimalSep$1))
        }
      } else {
        $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V($thiz, arg, flags, width, precision, conversion)
      };
      break
    }
    case 102: {
      if ((((17 & flags) === 17) || ((12 & flags) === 12))) {
        $p_ju_Formatter__illegalFlags$1__I__E($thiz, flags)
      };
      if (((typeof arg) === "number")) {
        const x2$7 = (+arg);
        if (((x2$7 !== x2$7) || ((x2$7 === Infinity) || (x2$7 === (-Infinity))))) {
          $thiz.java$util$Formatter$$formatNaNOrInfinite__I__I__D__V(flags, width, x2$7)
        } else {
          const forceDecimalSep$2 = ((2 & flags) !== 0);
          const arg2$2 = ((precision >= 0) ? precision : 6);
          $thiz.java$util$Formatter$$formatNumericString__I__I__T__V(flags, width, $p_ju_Formatter__decimalNotation__D__I__Z__T($thiz, x2$7, arg2$2, forceDecimalSep$2))
        }
      } else {
        $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V($thiz, arg, flags, width, precision, conversion)
      };
      break
    }
    case 37: {
      if (((254 & flags) !== 0)) {
        $p_ju_Formatter__illegalFlags$2__I__E($thiz, flags)
      };
      if ((precision >= 0)) {
        throw new $c_ju_IllegalFormatPrecisionException(precision)
      };
      if ((((1 & flags) !== 0) && (width < 0))) {
        throw new $c_ju_MissingFormatWidthException("%-%")
      };
      $p_ju_Formatter__padAndSendToDestNoZeroPad__I__I__T__V($thiz, flags, width, "%");
      break
    }
    case 110: {
      if (((255 & flags) !== 0)) {
        $p_ju_Formatter__illegalFlags$2__I__E($thiz, flags)
      };
      if ((precision >= 0)) {
        throw new $c_ju_IllegalFormatPrecisionException(precision)
      };
      if ((width >= 0)) {
        throw new $c_ju_IllegalFormatWidthException(width)
      };
      $p_ju_Formatter__sendToDest__T__V($thiz, "\n");
      break
    }
    default: {
      throw new $c_ju_UnknownFormatConversionException(String.fromCharCode(conversion))
    }
  }
});
const $p_ju_Formatter__flagsToString__I__T = (function($thiz, flags) {
  return ((((((((((1 & flags) !== 0) ? "-" : "") + (((2 & flags) !== 0) ? "#" : "")) + (((4 & flags) !== 0) ? "+" : "")) + (((8 & flags) !== 0) ? " " : "")) + (((16 & flags) !== 0) ? "0" : "")) + (((32 & flags) !== 0) ? "," : "")) + (((64 & flags) !== 0) ? "(" : "")) + (((128 & flags) !== 0) ? "<" : ""))
});
const $p_ju_Formatter__computerizedScientificNotation__D__I__Z__T = (function($thiz, x, precision, forceDecimalSep) {
  const s1 = x.toExponential(precision);
  const s2 = (((x === 0.0) && ((1.0 / x) < 0.0)) ? ("-" + s1) : s1);
  const len = (s2.length | 0);
  const index = (((-3) + len) | 0);
  let s3;
  if (((65535 & (s2.charCodeAt(index) | 0)) !== 101)) {
    s3 = s2
  } else {
    const endIndex = (((-1) + len) | 0);
    const $$x1 = s2.substring(0, endIndex);
    const beginIndex = (((-1) + len) | 0);
    s3 = (($$x1 + "0") + s2.substring(beginIndex))
  };
  if (((!forceDecimalSep) || ((s3.indexOf(".") | 0) >= 0))) {
    return s3
  } else {
    const pos = (s3.indexOf("e") | 0);
    return ((s3.substring(0, pos) + ".") + s3.substring(pos))
  }
});
const $p_ju_Formatter__generalScientificNotation__D__I__Z__T = (function($thiz, x, precision, forceDecimalSep) {
  const m = (+Math.abs(x));
  const p = ((precision === 0) ? 1 : precision);
  let $$x1;
  if ((m >= 1.0E-4)) {
    const b = p;
    $$x1 = (m < (+Math.pow(10.0, b)))
  } else {
    $$x1 = false
  };
  if ($$x1) {
    const a = (+Math.log10(m));
    const sig0 = $doubleToInt((+Math.ceil(a)));
    const b$1 = sig0;
    let sig;
    if (((+Math.pow(10.0, b$1)) <= m)) {
      sig = ((1 + sig0) | 0)
    } else {
      sig = sig0
    };
    const a$1 = ((p - sig) | 0);
    return $p_ju_Formatter__decimalNotation__D__I__Z__T($thiz, x, ((a$1 > 0) ? a$1 : 0), forceDecimalSep)
  } else {
    return $p_ju_Formatter__computerizedScientificNotation__D__I__Z__T($thiz, x, (((-1) + p) | 0), forceDecimalSep)
  }
});
const $p_ju_Formatter__decimalNotation__D__I__Z__T = (function($thiz, x, precision, forceDecimalSep) {
  const s1 = x.toFixed(precision);
  const s2 = (((x === 0.0) && ((1.0 / x) < 0.0)) ? ("-" + s1) : s1);
  return ((forceDecimalSep && ((s2.indexOf(".") | 0) < 0)) ? (s2 + ".") : s2)
});
const $p_ju_Formatter__formatNonNumericString__I__I__I__T__V = (function($thiz, flags, width, precision, str) {
  const truncatedStr = ((precision < 0) ? str : str.substring(0, precision));
  $p_ju_Formatter__padAndSendToDestNoZeroPad__I__I__T__V($thiz, flags, width, $p_ju_Formatter__applyUpperCase__I__T__T($thiz, flags, truncatedStr))
});
const $p_ju_Formatter__insertGroupingSeps__T__T = (function($thiz, s) {
  const len = (s.length | 0);
  let index = 0;
  while (true) {
    let $$x1;
    if ((index !== len)) {
      const index$1 = index;
      const c = (65535 & (s.charCodeAt(index$1) | 0));
      $$x1 = ((c >= 48) && (c <= 57))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      index = ((1 + index) | 0)
    } else {
      break
    }
  };
  index = (((-3) + index) | 0);
  if ((index <= 0)) {
    return s
  } else {
    const beginIndex = index;
    let result = s.substring(beginIndex);
    while ((index > 3)) {
      const next = (((-3) + index) | 0);
      const endIndex = index;
      result = ((s.substring(next, endIndex) + ",") + result);
      index = next
    };
    const endIndex$1 = index;
    return ((s.substring(0, endIndex$1) + ",") + result)
  }
});
const $p_ju_Formatter__applyUpperCase__I__T__T = (function($thiz, flags, str) {
  return (((256 & flags) !== 0) ? str.toUpperCase() : str)
});
const $p_ju_Formatter__padAndSendToDestNoZeroPad__I__I__T__V = (function($thiz, flags, width, str) {
  const len = (str.length | 0);
  if ((len >= width)) {
    $p_ju_Formatter__sendToDest__T__V($thiz, str)
  } else if (((1 & flags) !== 0)) {
    $p_ju_Formatter__sendToDest__T__T__V($thiz, str, $p_ju_Formatter__strRepeat__T__I__T($thiz, " ", ((width - len) | 0)))
  } else {
    $p_ju_Formatter__sendToDest__T__T__V($thiz, $p_ju_Formatter__strRepeat__T__I__T($thiz, " ", ((width - len) | 0)), str)
  }
});
const $p_ju_Formatter__padAndSendToDest__I__I__T__T__V = (function($thiz, flags, width, prefix, str) {
  const len = (((prefix.length | 0) + (str.length | 0)) | 0);
  if ((len >= width)) {
    $p_ju_Formatter__sendToDest__T__T__V($thiz, prefix, str)
  } else if (((16 & flags) !== 0)) {
    $p_ju_Formatter__sendToDest__T__T__T__V($thiz, prefix, $p_ju_Formatter__strRepeat__T__I__T($thiz, "0", ((width - len) | 0)), str)
  } else if (((1 & flags) !== 0)) {
    $p_ju_Formatter__sendToDest__T__T__T__V($thiz, prefix, str, $p_ju_Formatter__strRepeat__T__I__T($thiz, " ", ((width - len) | 0)))
  } else {
    $p_ju_Formatter__sendToDest__T__T__T__V($thiz, $p_ju_Formatter__strRepeat__T__I__T($thiz, " ", ((width - len) | 0)), prefix, str)
  }
});
const $p_ju_Formatter__strRepeat__T__I__T = (function($thiz, s, times) {
  let result = "";
  let i = 0;
  while ((i !== times)) {
    result = (("" + result) + s);
    i = ((1 + i) | 0)
  };
  return result
});
const $p_ju_Formatter__formatNullOrThrowIllegalFormatConversion$1__O__I__I__I__C__V = (function($thiz, arg$1, flags$1, width$1, precision$1, conversion$1) {
  if ((arg$1 === null)) {
    $p_ju_Formatter__formatNonNumericString__I__I__I__T__V($thiz, flags$1, width$1, precision$1, "null")
  } else {
    throw new $c_ju_IllegalFormatConversionException(conversion$1, $objectGetClass(arg$1))
  }
});
const $p_ju_Formatter__flagsConversionMismatch$1__I__I__C__E = (function($thiz, flags$2, invalidFlags$1, conversion$2) {
  throw new $c_ju_FormatFlagsConversionMismatchException($p_ju_Formatter__flagsToString__I__T($thiz, (flags$2 & invalidFlags$1)), conversion$2)
});
const $p_ju_Formatter__illegalFlags$1__I__E = (function($thiz, flags$2) {
  throw new $c_ju_IllegalFormatFlagsException($p_ju_Formatter__flagsToString__I__T($thiz, flags$2))
});
const $p_ju_Formatter__illegalFlags$2__I__E = (function($thiz, flags$3) {
  throw new $c_ju_IllegalFormatFlagsException($p_ju_Formatter__flagsToString__I__T($thiz, flags$3))
});
const $ct_ju_Formatter__jl_Appendable__ = (function($thiz, dest) {
  $thiz.ju_Formatter__f_dest = dest;
  $thiz.ju_Formatter__f_stringOutput = "";
  $thiz.ju_Formatter__f_java$util$Formatter$$closed = false;
  $thiz.ju_Formatter__f_java$util$Formatter$$lastIOException = null;
  return $thiz
});
const $ct_ju_Formatter__ = (function($thiz) {
  $ct_ju_Formatter__jl_Appendable__($thiz, null);
  return $thiz
});
class $c_ju_Formatter extends $c_O {
  constructor() {
    super();
    this.ju_Formatter__f_dest = null;
    this.ju_Formatter__f_stringOutput = null;
    this.ju_Formatter__f_java$util$Formatter$$closed = false;
    this.ju_Formatter__f_java$util$Formatter$$lastIOException = null
  };
  close__V() {
    if (((!this.ju_Formatter__f_java$util$Formatter$$closed) && (this.ju_Formatter__f_dest !== null))) {
      const x1 = this.ju_Formatter__f_dest;
      if ($is_Ljava_io_Closeable(x1)) {
        try {
          x1.close__V()
        } catch (e) {
          if ((e instanceof $c_Ljava_io_IOException)) {
            const th = e;
            this.ju_Formatter__f_java$util$Formatter$$lastIOException = th
          } else {
            throw e
          }
        }
      }
    };
    this.ju_Formatter__f_java$util$Formatter$$closed = true
  };
  format__T__AO__ju_Formatter(format, args) {
    if (this.ju_Formatter__f_java$util$Formatter$$closed) {
      throw new $c_ju_FormatterClosedException()
    };
    let lastImplicitArgIndex = 0;
    let lastArgIndex = 0;
    const fmtLength = (format.length | 0);
    let fmtIndex = 0;
    while ((fmtIndex !== fmtLength)) {
      const fromIndex = fmtIndex;
      const nextPercentIndex = (format.indexOf("%", fromIndex) | 0);
      if ((nextPercentIndex < 0)) {
        const beginIndex = fmtIndex;
        $p_ju_Formatter__sendToDest__T__V(this, format.substring(beginIndex));
        return this
      };
      const beginIndex$1 = fmtIndex;
      $p_ju_Formatter__sendToDest__T__V(this, format.substring(beginIndex$1, nextPercentIndex));
      const formatSpecifierIndex = ((1 + nextPercentIndex) | 0);
      const re = $m_ju_Formatter$().ju_Formatter$__f_java$util$Formatter$$FormatSpecifier;
      re.lastIndex = formatSpecifierIndex;
      const execResult = re.exec(format);
      if (((execResult === null) || ((execResult.index | 0) !== formatSpecifierIndex))) {
        let conversion;
        if ((formatSpecifierIndex === fmtLength)) {
          conversion = "%"
        } else {
          const endIndex = ((1 + formatSpecifierIndex) | 0);
          conversion = format.substring(formatSpecifierIndex, endIndex)
        };
        throw new $c_ju_UnknownFormatConversionException(conversion)
      };
      fmtIndex = (re.lastIndex | 0);
      const index = (((-1) + fmtIndex) | 0);
      const conversion$2 = (65535 & (format.charCodeAt(index) | 0));
      const flags = $p_ju_Formatter__parseFlags__T__C__I(this, execResult[2], conversion$2);
      const width = $p_ju_Formatter__parsePositiveIntSilent__sjs_js_$bar__I__I(this, execResult[3], (-1));
      const precision = $p_ju_Formatter__parsePositiveIntSilent__sjs_js_$bar__I__I(this, execResult[4], (-1));
      let arg;
      if (((conversion$2 === 37) || (conversion$2 === 110))) {
        arg = null
      } else {
        if ((((1 & flags) !== 0) && (width < 0))) {
          throw new $c_ju_MissingFormatWidthException(("%" + execResult[0]))
        };
        let argIndex;
        if (((128 & flags) !== 0)) {
          argIndex = lastArgIndex
        } else {
          const i = $p_ju_Formatter__parsePositiveIntSilent__sjs_js_$bar__I__I(this, execResult[1], 0);
          if ((i === 0)) {
            lastImplicitArgIndex = ((1 + lastImplicitArgIndex) | 0);
            argIndex = lastImplicitArgIndex
          } else {
            argIndex = ((i < 0) ? lastArgIndex : i)
          }
        };
        if (((argIndex <= 0) || (argIndex > args.u.length))) {
          const conversionStr = String.fromCharCode(conversion$2);
          if ((("bBhHsHcCdoxXeEgGfn%".indexOf(conversionStr) | 0) < 0)) {
            throw new $c_ju_UnknownFormatConversionException(conversionStr)
          } else {
            throw new $c_ju_MissingFormatArgumentException(("%" + execResult[0]))
          }
        };
        lastArgIndex = argIndex;
        arg = args.u[(((-1) + argIndex) | 0)]
      };
      $p_ju_Formatter__formatArg__O__C__I__I__I__V(this, arg, conversion$2, flags, width, precision)
    };
    return this
  };
  java$util$Formatter$$formatNaNOrInfinite__I__I__D__V(flags, width, x) {
    const str = ((x !== x) ? "NaN" : ((x > 0.0) ? (((4 & flags) !== 0) ? "+Infinity" : (((8 & flags) !== 0) ? " Infinity" : "Infinity")) : (((64 & flags) !== 0) ? "(Infinity)" : "-Infinity")));
    $p_ju_Formatter__padAndSendToDestNoZeroPad__I__I__T__V(this, flags, width, $p_ju_Formatter__applyUpperCase__I__T__T(this, flags, str))
  };
  java$util$Formatter$$formatNumericString__I__I__T__V(flags, width, str) {
    if ((((str.length | 0) >= width) && ((108 & flags) === 0))) {
      $p_ju_Formatter__sendToDest__T__V(this, $p_ju_Formatter__applyUpperCase__I__T__T(this, flags, str))
    } else if (((124 & flags) === 0)) {
      $p_ju_Formatter__formatNonNumericString__I__I__I__T__V(this, flags, width, (-1), str)
    } else {
      let x1___1;
      let x1___2;
      if (((65535 & (str.charCodeAt(0) | 0)) !== 45)) {
        if (((4 & flags) !== 0)) {
          const $$x1___1 = "+";
          const $$x1___2 = str;
          x1___1 = $$x1___1;
          x1___2 = $$x1___2
        } else if (((8 & flags) !== 0)) {
          const $$x2___1 = " ";
          const $$x2___2 = str;
          x1___1 = $$x2___1;
          x1___2 = $$x2___2
        } else {
          const $$x3___1 = "";
          const $$x3___2 = str;
          x1___1 = $$x3___1;
          x1___2 = $$x3___2
        }
      } else if (((64 & flags) !== 0)) {
        const _2 = (str.substring(1) + ")");
        const $$x4___1 = "(";
        const $$x4___2 = _2;
        x1___1 = $$x4___1;
        x1___2 = $$x4___2
      } else {
        const _2$1 = str.substring(1);
        const $$x5___1 = "-";
        const $$x5___2 = _2$1;
        x1___1 = $$x5___1;
        x1___2 = $$x5___2
      };
      const prefix = x1___1;
      const rest0 = x1___2;
      const rest = (((32 & flags) !== 0) ? $p_ju_Formatter__insertGroupingSeps__T__T(this, rest0) : rest0);
      $p_ju_Formatter__padAndSendToDest__I__I__T__T__V(this, flags, width, prefix, $p_ju_Formatter__applyUpperCase__I__T__T(this, flags, rest))
    }
  };
  toString__T() {
    if (this.ju_Formatter__f_java$util$Formatter$$closed) {
      throw new $c_ju_FormatterClosedException()
    };
    return ((this.ju_Formatter__f_dest === null) ? this.ju_Formatter__f_stringOutput : this.ju_Formatter__f_dest.jl_StringBuilder__f_java$lang$StringBuilder$$content)
  };
}
const $d_ju_Formatter = new $TypeData().initClass({
  ju_Formatter: 0
}, false, "java.util.Formatter", {
  ju_Formatter: 1,
  O: 1,
  Ljava_io_Closeable: 1,
  jl_AutoCloseable: 1,
  Ljava_io_Flushable: 1
});
$c_ju_Formatter.prototype.$classData = $d_ju_Formatter;
class $c_RTLong extends $c_jl_Number {
  constructor(lo, hi) {
    super();
    this.RTLong__f_lo = 0;
    this.RTLong__f_hi = 0;
    this.RTLong__f_lo = lo;
    this.RTLong__f_hi = hi
  };
  equals__O__Z(that) {
    if ((that instanceof $c_RTLong)) {
      const x2 = that;
      return ((this.RTLong__f_lo === x2.RTLong__f_lo) && (this.RTLong__f_hi === x2.RTLong__f_hi))
    } else {
      return false
    }
  };
  hashCode__I() {
    return (this.RTLong__f_lo ^ this.RTLong__f_hi)
  };
  toString__T() {
    return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toString__I__I__T(this.RTLong__f_lo, this.RTLong__f_hi)
  };
  toInt__I() {
    return this.RTLong__f_lo
  };
  toDouble__D() {
    return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toDouble__I__I__D(this.RTLong__f_lo, this.RTLong__f_hi)
  };
  byteValue__B() {
    return ((this.RTLong__f_lo << 24) >> 24)
  };
  shortValue__S() {
    return ((this.RTLong__f_lo << 16) >> 16)
  };
  intValue__I() {
    return this.RTLong__f_lo
  };
  longValue__J() {
    return $uJ(this)
  };
  floatValue__F() {
    return $fround($m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toDouble__I__I__D(this.RTLong__f_lo, this.RTLong__f_hi))
  };
  doubleValue__D() {
    return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$toDouble__I__I__D(this.RTLong__f_lo, this.RTLong__f_hi)
  };
  compareTo__jl_Long__I(that) {
    return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$compare__I__I__I__I__I(this.RTLong__f_lo, this.RTLong__f_hi, that.RTLong__f_lo, that.RTLong__f_hi)
  };
  equals__RTLong__Z(b) {
    return ((this.RTLong__f_lo === b.RTLong__f_lo) && (this.RTLong__f_hi === b.RTLong__f_hi))
  };
  notEquals__RTLong__Z(b) {
    return (!((this.RTLong__f_lo === b.RTLong__f_lo) && (this.RTLong__f_hi === b.RTLong__f_hi)))
  };
  $less__RTLong__Z(b) {
    const ahi = this.RTLong__f_hi;
    const bhi = b.RTLong__f_hi;
    return ((ahi === bhi) ? (((-2147483648) ^ this.RTLong__f_lo) < ((-2147483648) ^ b.RTLong__f_lo)) : (ahi < bhi))
  };
  $less$eq__RTLong__Z(b) {
    const ahi = this.RTLong__f_hi;
    const bhi = b.RTLong__f_hi;
    return ((ahi === bhi) ? (((-2147483648) ^ this.RTLong__f_lo) <= ((-2147483648) ^ b.RTLong__f_lo)) : (ahi < bhi))
  };
  $greater__RTLong__Z(b) {
    const ahi = this.RTLong__f_hi;
    const bhi = b.RTLong__f_hi;
    return ((ahi === bhi) ? (((-2147483648) ^ this.RTLong__f_lo) > ((-2147483648) ^ b.RTLong__f_lo)) : (ahi > bhi))
  };
  $greater$eq__RTLong__Z(b) {
    const ahi = this.RTLong__f_hi;
    const bhi = b.RTLong__f_hi;
    return ((ahi === bhi) ? (((-2147483648) ^ this.RTLong__f_lo) >= ((-2147483648) ^ b.RTLong__f_lo)) : (ahi > bhi))
  };
  unary_$tilde__RTLong() {
    return new $c_RTLong((~this.RTLong__f_lo), (~this.RTLong__f_hi))
  };
  $bar__RTLong__RTLong(b) {
    return new $c_RTLong((this.RTLong__f_lo | b.RTLong__f_lo), (this.RTLong__f_hi | b.RTLong__f_hi))
  };
  $amp__RTLong__RTLong(b) {
    return new $c_RTLong((this.RTLong__f_lo & b.RTLong__f_lo), (this.RTLong__f_hi & b.RTLong__f_hi))
  };
  $up__RTLong__RTLong(b) {
    return new $c_RTLong((this.RTLong__f_lo ^ b.RTLong__f_lo), (this.RTLong__f_hi ^ b.RTLong__f_hi))
  };
  $less$less__I__RTLong(n) {
    return new $c_RTLong((((32 & n) === 0) ? (this.RTLong__f_lo << n) : 0), (((32 & n) === 0) ? (((((this.RTLong__f_lo >>> 1) | 0) >>> ((31 - n) | 0)) | 0) | (this.RTLong__f_hi << n)) : (this.RTLong__f_lo << n)))
  };
  $greater$greater$greater__I__RTLong(n) {
    return new $c_RTLong((((32 & n) === 0) ? (((this.RTLong__f_lo >>> n) | 0) | ((this.RTLong__f_hi << 1) << ((31 - n) | 0))) : ((this.RTLong__f_hi >>> n) | 0)), (((32 & n) === 0) ? ((this.RTLong__f_hi >>> n) | 0) : 0))
  };
  $greater$greater__I__RTLong(n) {
    return new $c_RTLong((((32 & n) === 0) ? (((this.RTLong__f_lo >>> n) | 0) | ((this.RTLong__f_hi << 1) << ((31 - n) | 0))) : (this.RTLong__f_hi >> n)), (((32 & n) === 0) ? (this.RTLong__f_hi >> n) : (this.RTLong__f_hi >> 31)))
  };
  unary_$minus__RTLong() {
    const lo = this.RTLong__f_lo;
    const hi = this.RTLong__f_hi;
    return new $c_RTLong(((-lo) | 0), ((lo !== 0) ? (~hi) : ((-hi) | 0)))
  };
  $plus__RTLong__RTLong(b) {
    const alo = this.RTLong__f_lo;
    const ahi = this.RTLong__f_hi;
    const bhi = b.RTLong__f_hi;
    const lo = ((alo + b.RTLong__f_lo) | 0);
    return new $c_RTLong(lo, ((((-2147483648) ^ lo) < ((-2147483648) ^ alo)) ? ((1 + ((ahi + bhi) | 0)) | 0) : ((ahi + bhi) | 0)))
  };
  $minus__RTLong__RTLong(b) {
    const alo = this.RTLong__f_lo;
    const ahi = this.RTLong__f_hi;
    const bhi = b.RTLong__f_hi;
    const lo = ((alo - b.RTLong__f_lo) | 0);
    return new $c_RTLong(lo, ((((-2147483648) ^ lo) > ((-2147483648) ^ alo)) ? (((-1) + ((ahi - bhi) | 0)) | 0) : ((ahi - bhi) | 0)))
  };
  $times__RTLong__RTLong(b) {
    const alo = this.RTLong__f_lo;
    const blo = b.RTLong__f_lo;
    const a0 = (65535 & alo);
    const a1 = ((alo >>> 16) | 0);
    const b0 = (65535 & blo);
    const b1 = ((blo >>> 16) | 0);
    const a0b0 = $imul(a0, b0);
    const a1b0 = $imul(a1, b0);
    const a0b1 = $imul(a0, b1);
    const lo = ((a0b0 + (((a1b0 + a0b1) | 0) << 16)) | 0);
    const c1part = ((((a0b0 >>> 16) | 0) + a0b1) | 0);
    const hi = (((((((($imul(alo, b.RTLong__f_hi) + $imul(this.RTLong__f_hi, blo)) | 0) + $imul(a1, b1)) | 0) + ((c1part >>> 16) | 0)) | 0) + (((((65535 & c1part) + a1b0) | 0) >>> 16) | 0)) | 0);
    return new $c_RTLong(lo, hi)
  };
  $div__RTLong__RTLong(b) {
    const this$1 = $m_RTLong$();
    const lo = this$1.divideImpl__I__I__I__I__I(this.RTLong__f_lo, this.RTLong__f_hi, b.RTLong__f_lo, b.RTLong__f_hi);
    return new $c_RTLong(lo, this$1.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn)
  };
  $percent__RTLong__RTLong(b) {
    const this$1 = $m_RTLong$();
    const lo = this$1.remainderImpl__I__I__I__I__I(this.RTLong__f_lo, this.RTLong__f_hi, b.RTLong__f_lo, b.RTLong__f_hi);
    return new $c_RTLong(lo, this$1.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn)
  };
  compareTo__O__I(x$1) {
    const that = x$1;
    return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$compare__I__I__I__I__I(this.RTLong__f_lo, this.RTLong__f_hi, that.RTLong__f_lo, that.RTLong__f_hi)
  };
}
function $isArrayOf_RTLong(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.RTLong)))
}
const $d_RTLong = new $TypeData().initClass({
  RTLong: 0
}, false, "org.scalajs.linker.runtime.RuntimeLong", {
  RTLong: 1,
  jl_Number: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  jl_Comparable: 1
});
$c_RTLong.prototype.$classData = $d_RTLong;
class $c_s_$eq$colon$eq extends $c_s_$less$colon$less {
}
const $ct_s_Enumeration$Value__s_Enumeration__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.s_Enumeration$Value__f_$outer = outer
  };
  $thiz.s_Enumeration$Value__f_scala$Enumeration$$outerEnum = outer;
  return $thiz
});
class $c_s_Enumeration$Value extends $c_O {
  constructor() {
    super();
    this.s_Enumeration$Value__f_scala$Enumeration$$outerEnum = null;
    this.s_Enumeration$Value__f_$outer = null
  };
  compare__s_Enumeration$Value__I(that) {
    return ((this.s_Enumeration$Val__f_i < that.s_Enumeration$Val__f_i) ? (-1) : ((this.s_Enumeration$Val__f_i === that.s_Enumeration$Val__f_i) ? 0 : 1))
  };
  equals__O__Z(other) {
    if ((other instanceof $c_s_Enumeration$Value)) {
      const x2 = other;
      return ((this.s_Enumeration$Value__f_scala$Enumeration$$outerEnum === x2.s_Enumeration$Value__f_scala$Enumeration$$outerEnum) && (this.s_Enumeration$Val__f_i === x2.s_Enumeration$Val__f_i))
    } else {
      return false
    }
  };
  hashCode__I() {
    return this.s_Enumeration$Val__f_i
  };
}
function $isArrayOf_s_Enumeration$Value(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_Enumeration$Value)))
}
const $d_s_Enumeration$Value = new $TypeData().initClass({
  s_Enumeration$Value: 0
}, false, "scala.Enumeration$Value", {
  s_Enumeration$Value: 1,
  O: 1,
  s_math_Ordered: 1,
  jl_Comparable: 1,
  Ljava_io_Serializable: 1
});
$c_s_Enumeration$Value.prototype.$classData = $d_s_Enumeration$Value;
class $c_s_Enumeration$ValueSet$ extends $c_O {
  constructor(outer) {
    super();
    this.s_Enumeration$ValueSet$__f_empty = null;
    this.s_Enumeration$ValueSet$__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.s_Enumeration$ValueSet$__f_$outer = outer
    };
    this.s_Enumeration$ValueSet$__f_empty = new $c_s_Enumeration$ValueSet(outer, $m_sci_BitSet$().sci_BitSet$__f_empty)
  };
  fromSpecific__sc_IterableOnce__s_Enumeration$ValueSet(it) {
    const this$1 = new $c_s_Enumeration$ValueSet$$anon$1(this);
    return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this$1, it).result__O()
  };
}
const $d_s_Enumeration$ValueSet$ = new $TypeData().initClass({
  s_Enumeration$ValueSet$: 0
}, false, "scala.Enumeration$ValueSet$", {
  s_Enumeration$ValueSet$: 1,
  O: 1,
  sc_SpecificIterableFactory: 1,
  sc_Factory: 1,
  Ljava_io_Serializable: 1
});
$c_s_Enumeration$ValueSet$.prototype.$classData = $d_s_Enumeration$ValueSet$;
class $c_s_Enumeration$ValueSet$$anon$1 extends $c_O {
  constructor(outer) {
    super();
    this.s_Enumeration$ValueSet$$anon$1__f_b = null;
    this.s_Enumeration$ValueSet$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.s_Enumeration$ValueSet$$anon$1__f_$outer = outer
    };
    this.s_Enumeration$ValueSet$$anon$1__f_b = $ct_scm_BitSet__(new $c_scm_BitSet())
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs)
  };
  addOne__s_Enumeration$Value__s_Enumeration$ValueSet$$anon$1(x) {
    const this$1 = this.s_Enumeration$ValueSet$$anon$1__f_b;
    const elem = ((x.s_Enumeration$Val__f_i - this.s_Enumeration$ValueSet$$anon$1__f_$outer.s_Enumeration$ValueSet$__f_$outer.s_Enumeration__f_scala$Enumeration$$bottomId) | 0);
    this$1.addOne__I__scm_BitSet(elem);
    return this
  };
  result__s_Enumeration$ValueSet() {
    const $$x1 = this.s_Enumeration$ValueSet$$anon$1__f_$outer.s_Enumeration$ValueSet$__f_$outer;
    const this$1 = this.s_Enumeration$ValueSet$$anon$1__f_b;
    return new $c_s_Enumeration$ValueSet($$x1, $m_sci_BitSet$().fromBitMask__AJ__sci_BitSet(this$1.scm_BitSet__f_elems))
  };
  result__O() {
    return this.result__s_Enumeration$ValueSet()
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__s_Enumeration$Value__s_Enumeration$ValueSet$$anon$1(elem)
  };
}
const $d_s_Enumeration$ValueSet$$anon$1 = new $TypeData().initClass({
  s_Enumeration$ValueSet$$anon$1: 0
}, false, "scala.Enumeration$ValueSet$$anon$1", {
  s_Enumeration$ValueSet$$anon$1: 1,
  O: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_s_Enumeration$ValueSet$$anon$1.prototype.$classData = $d_s_Enumeration$ValueSet$$anon$1;
class $c_sc_AbstractIterator extends $c_O {
  iterator__sc_Iterator() {
    return this
  };
  buffered__sc_BufferedIterator() {
    return new $c_sc_Iterator$$anon$1(this)
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
}
class $c_sc_Iterable$ extends $c_sc_IterableFactory$Delegate {
  constructor() {
    super();
    $ct_sc_IterableFactory$Delegate__sc_IterableFactory__(this, $m_sci_Iterable$())
  };
}
const $d_sc_Iterable$ = new $TypeData().initClass({
  sc_Iterable$: 0
}, false, "scala.collection.Iterable$", {
  sc_Iterable$: 1,
  sc_IterableFactory$Delegate: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sc_Iterable$.prototype.$classData = $d_sc_Iterable$;
let $n_sc_Iterable$ = (void 0);
function $m_sc_Iterable$() {
  if ((!$n_sc_Iterable$)) {
    $n_sc_Iterable$ = new $c_sc_Iterable$()
  };
  return $n_sc_Iterable$
}
class $c_sc_Map$ extends $c_sc_MapFactory$Delegate {
  constructor() {
    super();
    this.sc_Map$__f_scala$collection$Map$$DefaultSentinel = null;
    $ct_sc_MapFactory$Delegate__sc_MapFactory__(this, $m_sci_Map$());
    $n_sc_Map$ = this;
    this.sc_Map$__f_scala$collection$Map$$DefaultSentinel = $ct_O__(new $c_O())
  };
}
const $d_sc_Map$ = new $TypeData().initClass({
  sc_Map$: 0
}, false, "scala.collection.Map$", {
  sc_Map$: 1,
  sc_MapFactory$Delegate: 1,
  O: 1,
  sc_MapFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sc_Map$.prototype.$classData = $d_sc_Map$;
let $n_sc_Map$ = (void 0);
function $m_sc_Map$() {
  if ((!$n_sc_Map$)) {
    $n_sc_Map$ = new $c_sc_Map$()
  };
  return $n_sc_Map$
}
class $c_sc_MapOps$WithFilter extends $c_sc_IterableOps$WithFilter {
  constructor(self, p) {
    super();
    this.sc_MapOps$WithFilter__f_self = null;
    this.sc_MapOps$WithFilter__f_p = null;
    this.sc_MapOps$WithFilter__f_self = self;
    this.sc_MapOps$WithFilter__f_p = p;
    $ct_sc_IterableOps$WithFilter__sc_IterableOps__F1__(this, self, p)
  };
}
const $d_sc_MapOps$WithFilter = new $TypeData().initClass({
  sc_MapOps$WithFilter: 0
}, false, "scala.collection.MapOps$WithFilter", {
  sc_MapOps$WithFilter: 1,
  sc_IterableOps$WithFilter: 1,
  sc_WithFilter: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sc_MapOps$WithFilter.prototype.$classData = $d_sc_MapOps$WithFilter;
const $ct_sc_SeqFactory$Delegate__sc_SeqFactory__ = (function($thiz, delegate) {
  $thiz.sc_SeqFactory$Delegate__f_delegate = delegate;
  return $thiz
});
class $c_sc_SeqFactory$Delegate extends $c_O {
  constructor() {
    super();
    this.sc_SeqFactory$Delegate__f_delegate = null
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_IterableFactory__tabulate__I__F1__O(this, n, f)
  };
  apply__sci_Seq__sc_SeqOps(elems) {
    return this.sc_SeqFactory$Delegate__f_delegate.apply__sci_Seq__O(elems)
  };
  from__sc_IterableOnce__sc_SeqOps(it) {
    return this.sc_SeqFactory$Delegate__f_delegate.from__sc_IterableOnce__O(it)
  };
  newBuilder__scm_Builder() {
    return this.sc_SeqFactory$Delegate__f_delegate.newBuilder__scm_Builder()
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sc_SeqOps(source)
  };
  apply__sci_Seq__O(elems) {
    return this.apply__sci_Seq__sc_SeqOps(elems)
  };
}
const $f_sc_SeqOps__indexOf__O__I__I = (function($thiz, elem, from) {
  return $thiz.indexWhere__F1__I__I(new $c_sjsr_AnonFunction1(((this$1, elem$1) => ((x$1$2) => $m_sr_BoxesRunTime$().equals__O__O__Z(elem$1, x$1$2)))($thiz, elem)), from)
});
const $f_sc_SeqOps__contains__O__Z = (function($thiz, elem) {
  return $thiz.exists__F1__Z(new $c_sjsr_AnonFunction1(((this$1, elem$1) => ((x$3$2) => $m_sr_BoxesRunTime$().equals__O__O__Z(x$3$2, elem$1)))($thiz, elem)))
});
const $f_sc_SeqOps__sorted__s_math_Ordering__O = (function($thiz, ord) {
  const len = $thiz.length__I();
  const b = $thiz.newSpecificBuilder__scm_Builder();
  if ((len === 1)) {
    const elem = $thiz.head__O();
    b.addOne__O__scm_Growable(elem)
  } else if ((len > 1)) {
    b.sizeHint__I__V(len);
    const arr = $newArrayObject($d_O.getArrayOf(), [len]);
    $thiz.copyToArray__O__I__I(arr, 0);
    $m_ju_Arrays$().sort__AO__ju_Comparator__V(arr, ord);
    let i = 0;
    while ((i < len)) {
      const elem$1 = arr.u[i];
      b.addOne__O__scm_Growable(elem$1);
      i = ((1 + i) | 0)
    }
  };
  return b.result__O()
});
const $f_sc_SeqOps__sortBy__F1__s_math_Ordering__O = (function($thiz, f, ord) {
  return $thiz.sorted__s_math_Ordering__O(new $c_s_math_Ordering$$anon$1(ord, f))
});
const $f_sc_SeqOps__isEmpty__Z = (function($thiz) {
  return ($thiz.lengthCompare__I__I(0) === 0)
});
const $f_sc_SeqOps__sameElements__sc_IterableOnce__Z = (function($thiz, that) {
  const thisKnownSize = $thiz.knownSize__I();
  let knownSizeDifference;
  if ((thisKnownSize !== (-1))) {
    const thatKnownSize = that.knownSize__I();
    knownSizeDifference = ((thatKnownSize !== (-1)) && (thisKnownSize !== thatKnownSize))
  } else {
    knownSizeDifference = false
  };
  if ((!knownSizeDifference)) {
    const this$1 = $thiz.iterator__sc_Iterator();
    return $f_sc_Iterator__sameElements__sc_IterableOnce__Z(this$1, that)
  } else {
    return false
  }
});
function $is_sc_SeqOps(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_SeqOps)))
}
function $isArrayOf_sc_SeqOps(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_SeqOps)))
}
const $f_sc_StrictOptimizedIterableOps__map__F1__O = (function($thiz, f) {
  const b = $thiz.iterableFactory__sc_IterableFactory().newBuilder__scm_Builder();
  const it = $thiz.iterator__sc_Iterator();
  while (it.hasNext__Z()) {
    const elem = f.apply__O__O(it.next__O());
    b.addOne__O__scm_Growable(elem)
  };
  return b.result__O()
});
const $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps = (function($thiz, n, f) {
  const b = $thiz.newBuilder__scm_Builder();
  b.sizeHint__I__V(n);
  let i = 0;
  while ((i < n)) {
    const elem = f.apply__O__O(i);
    b.addOne__O__scm_Growable(elem);
    i = ((1 + i) | 0)
  };
  return b.result__O()
});
class $c_sci_BitSet$ extends $c_O {
  constructor() {
    super();
    this.sci_BitSet$__f_empty = null;
    $n_sci_BitSet$ = this;
    this.sci_BitSet$__f_empty = new $c_sci_BitSet$BitSet1($L0)
  };
  fromSpecific__sc_IterableOnce__sci_BitSet(it) {
    if ((it instanceof $c_sci_BitSet)) {
      const x2 = it;
      return x2
    } else {
      const this$1 = this.newBuilder__scm_Builder();
      return this$1.addAll__sc_IterableOnce__scm_Growable(it).result__O()
    }
  };
  newBuilder__scm_Builder() {
    const this$3 = $ct_scm_GrowableBuilder__scm_Growable__(new $c_scm_GrowableBuilder(), $ct_scm_BitSet__(new $c_scm_BitSet()));
    const f = new $c_sjsr_AnonFunction1(((this$2) => ((bs$2) => {
      const bs = bs$2;
      return $m_sci_BitSet$().fromBitMaskNoCopy__AJ__sci_BitSet(bs.scm_BitSet__f_elems)
    }))(this));
    return new $c_scm_Builder$$anon$1(this$3, f)
  };
  scala$collection$immutable$BitSet$$createSmall__J__J__sci_BitSet(a, b) {
    return (((b.RTLong__f_lo === 0) && (b.RTLong__f_hi === 0)) ? new $c_sci_BitSet$BitSet1(a) : new $c_sci_BitSet$BitSet2(a, b))
  };
  fromBitMask__AJ__sci_BitSet(elems) {
    const len = elems.u.length;
    if ((len === 0)) {
      return this.sci_BitSet$__f_empty
    } else if ((len === 1)) {
      return new $c_sci_BitSet$BitSet1(elems.u[0])
    } else if ((len === 2)) {
      return this.scala$collection$immutable$BitSet$$createSmall__J__J__sci_BitSet(elems.u[0], elems.u[1])
    } else {
      const a = $m_ju_Arrays$().copyOf__AJ__I__AJ(elems, len);
      return new $c_sci_BitSet$BitSetN(a)
    }
  };
  fromBitMaskNoCopy__AJ__sci_BitSet(elems) {
    const len = elems.u.length;
    return ((len === 0) ? this.sci_BitSet$__f_empty : ((len === 1) ? new $c_sci_BitSet$BitSet1(elems.u[0]) : ((len === 2) ? this.scala$collection$immutable$BitSet$$createSmall__J__J__sci_BitSet(elems.u[0], elems.u[1]) : new $c_sci_BitSet$BitSetN(elems))))
  };
}
const $d_sci_BitSet$ = new $TypeData().initClass({
  sci_BitSet$: 0
}, false, "scala.collection.immutable.BitSet$", {
  sci_BitSet$: 1,
  O: 1,
  sc_SpecificIterableFactory: 1,
  sc_Factory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_BitSet$.prototype.$classData = $d_sci_BitSet$;
let $n_sci_BitSet$ = (void 0);
function $m_sci_BitSet$() {
  if ((!$n_sci_BitSet$)) {
    $n_sci_BitSet$ = new $c_sci_BitSet$()
  };
  return $n_sci_BitSet$
}
class $c_sci_Iterable$ extends $c_sc_IterableFactory$Delegate {
  constructor() {
    super();
    $ct_sc_IterableFactory$Delegate__sc_IterableFactory__(this, $m_sci_List$())
  };
  from__sc_IterableOnce__sci_Iterable(it) {
    if ($is_sci_Iterable(it)) {
      const x2 = it;
      return x2
    } else {
      return $c_sc_IterableFactory$Delegate.prototype.from__sc_IterableOnce__O.call(this, it)
    }
  };
  from__sc_IterableOnce__O(it) {
    return this.from__sc_IterableOnce__sci_Iterable(it)
  };
}
const $d_sci_Iterable$ = new $TypeData().initClass({
  sci_Iterable$: 0
}, false, "scala.collection.immutable.Iterable$", {
  sci_Iterable$: 1,
  sc_IterableFactory$Delegate: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Iterable$.prototype.$classData = $d_sci_Iterable$;
let $n_sci_Iterable$ = (void 0);
function $m_sci_Iterable$() {
  if ((!$n_sci_Iterable$)) {
    $n_sci_Iterable$ = new $c_sci_Iterable$()
  };
  return $n_sci_Iterable$
}
const $p_sci_LazyList$__at$1__I__I__F1__sci_LazyList = (function($thiz, index, n$4, f$5) {
  if ((index < n$4)) {
    const state = new $c_sjsr_AnonFunction0(((this$1, f$5$1, index$1, n$4$1) => (() => {
      $m_sci_LazyList$();
      const hd = f$5$1.apply__O__O(index$1);
      const tl = $p_sci_LazyList$__at$1__I__I__F1__sci_LazyList(this$1, ((1 + index$1) | 0), n$4$1, f$5$1);
      return new $c_sci_LazyList$State$Cons(hd, tl)
    }))($thiz, f$5, index, n$4));
    return new $c_sci_LazyList(state)
  } else {
    return $thiz.sci_LazyList$__f__empty
  }
});
class $c_sci_LazyList$ extends $c_O {
  constructor() {
    super();
    this.sci_LazyList$__f__empty = null;
    this.sci_LazyList$__f_scala$collection$immutable$LazyList$$anyToMarker = null;
    $n_sci_LazyList$ = this;
    const state = new $c_sjsr_AnonFunction0(((this$1) => (() => $m_sci_LazyList$State$Empty$()))(this));
    this.sci_LazyList$__f__empty = new $c_sci_LazyList(state).force__sci_LazyList();
    this.sci_LazyList$__f_scala$collection$immutable$LazyList$$anyToMarker = new $c_sjsr_AnonFunction1(((this$2) => ((x$10$2) => $m_sr_Statics$PFMarker$()))(this))
  };
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_LazyList(elems)
  };
  scala$collection$immutable$LazyList$$dropImpl__sci_LazyList__I__sci_LazyList(ll, n) {
    const restRef = new $c_sr_ObjectRef(ll);
    const iRef = new $c_sr_IntRef(n);
    const state = new $c_sjsr_AnonFunction0(((this$3, restRef$1, iRef$1) => (() => {
      let rest = restRef$1.sr_ObjectRef__f_elem;
      let i = iRef$1.sr_IntRef__f_elem;
      while (((i > 0) && (!rest.isEmpty__Z()))) {
        const this$4 = rest;
        rest = this$4.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
        restRef$1.sr_ObjectRef__f_elem = rest;
        i = (((-1) + i) | 0);
        iRef$1.sr_IntRef__f_elem = i
      };
      return rest.scala$collection$immutable$LazyList$$state__sci_LazyList$State()
    }))(this, restRef, iRef));
    return new $c_sci_LazyList(state)
  };
  from__sc_IterableOnce__sci_LazyList(coll) {
    if ((coll instanceof $c_sci_LazyList)) {
      const x2 = coll;
      return x2
    } else if ((coll.knownSize__I() === 0)) {
      return this.sci_LazyList$__f__empty
    } else {
      const state = new $c_sjsr_AnonFunction0(((this$1, coll$1) => (() => $m_sci_LazyList$().scala$collection$immutable$LazyList$$stateFromIterator__sc_Iterator__sci_LazyList$State(coll$1.iterator__sc_Iterator())))(this, coll));
      return new $c_sci_LazyList(state)
    }
  };
  scala$collection$immutable$LazyList$$stateFromIteratorConcatSuffix__sc_Iterator__F0__sci_LazyList$State(it, suffix) {
    if (it.hasNext__Z()) {
      const hd = it.next__O();
      const state = new $c_sjsr_AnonFunction0(((this$1, it$1, suffix$1) => (() => $m_sci_LazyList$().scala$collection$immutable$LazyList$$stateFromIteratorConcatSuffix__sc_Iterator__F0__sci_LazyList$State(it$1, suffix$1)))(this, it, suffix));
      const tl = new $c_sci_LazyList(state);
      return new $c_sci_LazyList$State$Cons(hd, tl)
    } else {
      return suffix.apply__O()
    }
  };
  scala$collection$immutable$LazyList$$stateFromIterator__sc_Iterator__sci_LazyList$State(it) {
    if (it.hasNext__Z()) {
      const hd = it.next__O();
      const state = new $c_sjsr_AnonFunction0(((this$1, it$1) => (() => $m_sci_LazyList$().scala$collection$immutable$LazyList$$stateFromIterator__sc_Iterator__sci_LazyList$State(it$1)))(this, it));
      const tl = new $c_sci_LazyList(state);
      return new $c_sci_LazyList$State$Cons(hd, tl)
    } else {
      return $m_sci_LazyList$State$Empty$()
    }
  };
  newBuilder__scm_Builder() {
    return new $c_sci_LazyList$LazyBuilder()
  };
  tabulate__I__F1__O(n, f) {
    return $p_sci_LazyList$__at$1__I__I__F1__sci_LazyList(this, 0, n, f)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_LazyList(source)
  };
}
const $d_sci_LazyList$ = new $TypeData().initClass({
  sci_LazyList$: 0
}, false, "scala.collection.immutable.LazyList$", {
  sci_LazyList$: 1,
  O: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_LazyList$.prototype.$classData = $d_sci_LazyList$;
let $n_sci_LazyList$ = (void 0);
function $m_sci_LazyList$() {
  if ((!$n_sci_LazyList$)) {
    $n_sci_LazyList$ = new $c_sci_LazyList$()
  };
  return $n_sci_LazyList$
}
class $c_sci_Stream$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_Stream(elems)
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_IterableFactory__tabulate__I__F1__O(this, n, f)
  };
  from__sc_IterableOnce__sci_Stream(coll) {
    if ((coll instanceof $c_sci_Stream)) {
      const x2 = coll;
      return x2
    } else {
      return this.fromIterator__sc_Iterator__sci_Stream(coll.iterator__sc_Iterator())
    }
  };
  fromIterator__sc_Iterator__sci_Stream(it) {
    return (it.hasNext__Z() ? new $c_sci_Stream$Cons(it.next__O(), new $c_sjsr_AnonFunction0(((this$1, it$1) => (() => $m_sci_Stream$().fromIterator__sc_Iterator__sci_Stream(it$1)))(this, it))) : $m_sci_Stream$Empty$())
  };
  newBuilder__scm_Builder() {
    const this$3 = new $c_scm_ArrayBuffer$$anon$1();
    const f = new $c_sjsr_AnonFunction1(((this$2) => ((array$2) => {
      const array = array$2;
      return $m_sci_Stream$().from__sc_IterableOnce__sci_Stream(array)
    }))(this));
    return new $c_scm_Builder$$anon$1(this$3, f)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_Stream(source)
  };
}
const $d_sci_Stream$ = new $TypeData().initClass({
  sci_Stream$: 0
}, false, "scala.collection.immutable.Stream$", {
  sci_Stream$: 1,
  O: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Stream$.prototype.$classData = $d_sci_Stream$;
let $n_sci_Stream$ = (void 0);
function $m_sci_Stream$() {
  if ((!$n_sci_Stream$)) {
    $n_sci_Stream$ = new $c_sci_Stream$()
  };
  return $n_sci_Stream$
}
class $c_sci_WrappedString$ extends $c_O {
  constructor() {
    super();
    this.sci_WrappedString$__f_empty = null;
    $n_sci_WrappedString$ = this;
    this.sci_WrappedString$__f_empty = new $c_sci_WrappedString("")
  };
  fromSpecific__sc_IterableOnce__sci_WrappedString(it) {
    const b = this.newBuilder__scm_Builder();
    const s = it.knownSize__I();
    if ((s >= 0)) {
      b.sizeHint__I__V(s)
    };
    b.addAll__sc_IterableOnce__scm_Growable(it);
    return b.result__O()
  };
  newBuilder__scm_Builder() {
    const this$2 = $ct_scm_StringBuilder__(new $c_scm_StringBuilder());
    const f = new $c_sjsr_AnonFunction1(((this$1) => ((x$2) => {
      const x = x$2;
      return new $c_sci_WrappedString(x)
    }))(this));
    return new $c_scm_Builder$$anon$1(this$2, f)
  };
}
const $d_sci_WrappedString$ = new $TypeData().initClass({
  sci_WrappedString$: 0
}, false, "scala.collection.immutable.WrappedString$", {
  sci_WrappedString$: 1,
  O: 1,
  sc_SpecificIterableFactory: 1,
  sc_Factory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_WrappedString$.prototype.$classData = $d_sci_WrappedString$;
let $n_sci_WrappedString$ = (void 0);
function $m_sci_WrappedString$() {
  if ((!$n_sci_WrappedString$)) {
    $n_sci_WrappedString$ = new $c_sci_WrappedString$()
  };
  return $n_sci_WrappedString$
}
class $c_scm_Builder$$anon$1 extends $c_O {
  constructor(outer, f$1) {
    super();
    this.scm_Builder$$anon$1__f_$outer = null;
    this.scm_Builder$$anon$1__f_f$1 = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.scm_Builder$$anon$1__f_$outer = outer
    };
    this.scm_Builder$$anon$1__f_f$1 = f$1
  };
  addOne__O__scm_Builder$$anon$1(x) {
    const this$1 = this.scm_Builder$$anon$1__f_$outer;
    this$1.addOne__O__scm_Growable(x);
    return this
  };
  addAll__sc_IterableOnce__scm_Builder$$anon$1(xs) {
    const this$1 = this.scm_Builder$$anon$1__f_$outer;
    this$1.addAll__sc_IterableOnce__scm_Growable(xs);
    return this
  };
  sizeHint__I__V(size) {
    this.scm_Builder$$anon$1__f_$outer.sizeHint__I__V(size)
  };
  result__O() {
    return this.scm_Builder$$anon$1__f_f$1.apply__O__O(this.scm_Builder$$anon$1__f_$outer.result__O())
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_Builder$$anon$1(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__scm_Builder$$anon$1(elem)
  };
}
const $d_scm_Builder$$anon$1 = new $TypeData().initClass({
  scm_Builder$$anon$1: 0
}, false, "scala.collection.mutable.Builder$$anon$1", {
  scm_Builder$$anon$1: 1,
  O: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_scm_Builder$$anon$1.prototype.$classData = $d_scm_Builder$$anon$1;
const $ct_scm_GrowableBuilder__scm_Growable__ = (function($thiz, elems) {
  $thiz.scm_GrowableBuilder__f_elems = elems;
  return $thiz
});
class $c_scm_GrowableBuilder extends $c_O {
  constructor() {
    super();
    this.scm_GrowableBuilder__f_elems = null
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  addOne__O__scm_GrowableBuilder(elem) {
    const this$1 = this.scm_GrowableBuilder__f_elems;
    this$1.addOne__O__scm_Growable(elem);
    return this
  };
  addAll__sc_IterableOnce__scm_GrowableBuilder(xs) {
    this.scm_GrowableBuilder__f_elems.addAll__sc_IterableOnce__scm_Growable(xs);
    return this
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_GrowableBuilder(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__scm_GrowableBuilder(elem)
  };
  result__O() {
    return this.scm_GrowableBuilder__f_elems
  };
}
const $d_scm_GrowableBuilder = new $TypeData().initClass({
  scm_GrowableBuilder: 0
}, false, "scala.collection.mutable.GrowableBuilder", {
  scm_GrowableBuilder: 1,
  O: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_scm_GrowableBuilder.prototype.$classData = $d_scm_GrowableBuilder;
class $c_scm_Iterable$ extends $c_sc_IterableFactory$Delegate {
  constructor() {
    super();
    $ct_sc_IterableFactory$Delegate__sc_IterableFactory__(this, $m_scm_ArrayBuffer$())
  };
}
const $d_scm_Iterable$ = new $TypeData().initClass({
  scm_Iterable$: 0
}, false, "scala.collection.mutable.Iterable$", {
  scm_Iterable$: 1,
  sc_IterableFactory$Delegate: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_Iterable$.prototype.$classData = $d_scm_Iterable$;
let $n_scm_Iterable$ = (void 0);
function $m_scm_Iterable$() {
  if ((!$n_scm_Iterable$)) {
    $n_scm_Iterable$ = new $c_scm_Iterable$()
  };
  return $n_scm_Iterable$
}
class $c_scm_Map$ extends $c_sc_MapFactory$Delegate {
  constructor() {
    super();
    $ct_sc_MapFactory$Delegate__sc_MapFactory__(this, $m_scm_HashMap$())
  };
}
const $d_scm_Map$ = new $TypeData().initClass({
  scm_Map$: 0
}, false, "scala.collection.mutable.Map$", {
  scm_Map$: 1,
  sc_MapFactory$Delegate: 1,
  O: 1,
  sc_MapFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_Map$.prototype.$classData = $d_scm_Map$;
let $n_scm_Map$ = (void 0);
function $m_scm_Map$() {
  if ((!$n_scm_Map$)) {
    $n_scm_Map$ = new $c_scm_Map$()
  };
  return $n_scm_Map$
}
class $c_scm_Set$ extends $c_sc_IterableFactory$Delegate {
  constructor() {
    super();
    $ct_sc_IterableFactory$Delegate__sc_IterableFactory__(this, $m_scm_HashSet$())
  };
}
const $d_scm_Set$ = new $TypeData().initClass({
  scm_Set$: 0
}, false, "scala.collection.mutable.Set$", {
  scm_Set$: 1,
  sc_IterableFactory$Delegate: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_Set$.prototype.$classData = $d_scm_Set$;
let $n_scm_Set$ = (void 0);
function $m_scm_Set$() {
  if ((!$n_scm_Set$)) {
    $n_scm_Set$ = new $c_scm_Set$()
  };
  return $n_scm_Set$
}
const $ct_sr_NonLocalReturnControl__O__O__ = (function($thiz, key, value) {
  $thiz.sr_NonLocalReturnControl__f_key = key;
  $thiz.sr_NonLocalReturnControl__f_value = value;
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, null, null, false, false);
  return $thiz
});
class $c_sr_NonLocalReturnControl extends $c_s_util_control_ControlThrowable {
  constructor() {
    super();
    this.sr_NonLocalReturnControl__f_key = null;
    this.sr_NonLocalReturnControl__f_value = null
  };
  value__O() {
    return this.sr_NonLocalReturnControl__f_value
  };
  fillInStackTrace__jl_Throwable() {
    return this
  };
  value$mcZ$sp__Z() {
    return (!(!this.value__O()))
  };
  value$mcC$sp__C() {
    return $uC(this.value__O())
  };
  value$mcI$sp__I() {
    return (this.value__O() | 0)
  };
  value$mcV$sp__V() {
    this.value__O()
  };
}
function $isArrayOf_sr_NonLocalReturnControl(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sr_NonLocalReturnControl)))
}
const $d_sr_NonLocalReturnControl = new $TypeData().initClass({
  sr_NonLocalReturnControl: 0
}, false, "scala.runtime.NonLocalReturnControl", {
  sr_NonLocalReturnControl: 1,
  s_util_control_ControlThrowable: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_NonLocalReturnControl.prototype.$classData = $d_sr_NonLocalReturnControl;
const $p_Ltigerpython_inputenc_StringTranslator__prev__C = (function($thiz) {
  if (($thiz.Ltigerpython_inputenc_StringTranslator__f_index > 0)) {
    const x = $thiz.Ltigerpython_inputenc_StringTranslator__f_source;
    const i = (((-1) + $thiz.Ltigerpython_inputenc_StringTranslator__f_index) | 0);
    return (65535 & (x.charCodeAt(i) | 0))
  } else {
    return 0
  }
});
const $p_Ltigerpython_inputenc_StringTranslator__isTriple__Z = (function($thiz) {
  if (($thiz.Ltigerpython_inputenc_StringTranslator__f_index > 2)) {
    const x = $thiz.Ltigerpython_inputenc_StringTranslator__f_source;
    const i = $thiz.Ltigerpython_inputenc_StringTranslator__f_index;
    const ch = (65535 & (x.charCodeAt(i) | 0));
    const x$1 = $thiz.Ltigerpython_inputenc_StringTranslator__f_source;
    const i$1 = (((-2) + $thiz.Ltigerpython_inputenc_StringTranslator__f_index) | 0);
    if (((65535 & (x$1.charCodeAt(i$1) | 0)) === ch)) {
      const x$2 = $thiz.Ltigerpython_inputenc_StringTranslator__f_source;
      const i$2 = (((-1) + $thiz.Ltigerpython_inputenc_StringTranslator__f_index) | 0);
      return ((65535 & (x$2.charCodeAt(i$2) | 0)) === ch)
    } else {
      return false
    }
  } else {
    return false
  }
});
const $p_Ltigerpython_inputenc_StringTranslator__updateStringMode__C__V = (function($thiz, ch) {
  if ((ch === 39)) {
    let rc7 = false;
    let x2 = null;
    const x1 = $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode;
    matchEnd8: {
      const x = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE;
      if (((x === null) ? (x1 === null) : x.equals__O__Z(x1))) {
        rc7 = true;
        x2 = x1;
        if ($p_Ltigerpython_inputenc_StringTranslator__isTriple__Z($thiz)) {
          $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE_TRIPLE;
          break matchEnd8
        }
      };
      if (rc7) {
        $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE;
        break matchEnd8
      };
      const x$3 = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE;
      if (((x$3 === null) ? (x1 === null) : x$3.equals__O__Z(x1))) {
        $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE;
        break matchEnd8
      };
      const x$5 = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_SINGLE_TRIPLE;
      if ((((x$5 === null) ? (x1 === null) : x$5.equals__O__Z(x1)) && $p_Ltigerpython_inputenc_StringTranslator__isTriple__Z($thiz))) {
        $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE;
        break matchEnd8
      }
    }
  } else {
    let rc7$2 = false;
    let x2$2 = null;
    const x1$2 = $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode;
    matchEnd8$2: {
      const x$7 = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE;
      if (((x$7 === null) ? (x1$2 === null) : x$7.equals__O__Z(x1$2))) {
        rc7$2 = true;
        x2$2 = x1$2;
        if ($p_Ltigerpython_inputenc_StringTranslator__isTriple__Z($thiz)) {
          $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE_TRIPLE;
          break matchEnd8$2
        }
      };
      if (rc7$2) {
        $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE;
        break matchEnd8$2
      };
      const x$9 = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE;
      if (((x$9 === null) ? (x1$2 === null) : x$9.equals__O__Z(x1$2))) {
        $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE;
        break matchEnd8$2
      };
      const x$11 = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_DOUBLE_TRIPLE;
      if ((((x$11 === null) ? (x1$2 === null) : x$11.equals__O__Z(x1$2)) && $p_Ltigerpython_inputenc_StringTranslator__isTriple__Z($thiz))) {
        $thiz.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE;
        break matchEnd8$2
      }
    }
  }
});
class $c_Ltigerpython_inputenc_StringTranslator extends $c_O {
  constructor(source) {
    super();
    this.Ltigerpython_inputenc_StringTranslator__f_source = null;
    this.Ltigerpython_inputenc_StringTranslator__f_index = 0;
    this.Ltigerpython_inputenc_StringTranslator__f_stringMode = null;
    this.Ltigerpython_inputenc_StringTranslator__f_source = source;
    this.Ltigerpython_inputenc_StringTranslator__f_index = 0;
    this.Ltigerpython_inputenc_StringTranslator__f_stringMode = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE
  };
  iterator__sc_Iterator() {
    return this
  };
  buffered__sc_BufferedIterator() {
    return new $c_sc_Iterator$$anon$1(this)
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  hasNext__Z() {
    const $$x1 = this.Ltigerpython_inputenc_StringTranslator__f_index;
    const this$1 = this.Ltigerpython_inputenc_StringTranslator__f_source;
    return ($$x1 < (this$1.length | 0))
  };
  next__C() {
    const $$x1 = this.Ltigerpython_inputenc_StringTranslator__f_index;
    const this$1 = this.Ltigerpython_inputenc_StringTranslator__f_source;
    if (($$x1 < (this$1.length | 0))) {
      const x = this.Ltigerpython_inputenc_StringTranslator__f_source;
      const i = this.Ltigerpython_inputenc_StringTranslator__f_index;
      const ch = (65535 & (x.charCodeAt(i) | 0));
      if ((((ch === 34) || (ch === 39)) && ($p_Ltigerpython_inputenc_StringTranslator__prev__C(this) !== 92))) {
        $p_Ltigerpython_inputenc_StringTranslator__updateStringMode__C__V(this, ch)
      };
      this.Ltigerpython_inputenc_StringTranslator__f_index = ((1 + this.Ltigerpython_inputenc_StringTranslator__f_index) | 0);
      const x$1 = this.Ltigerpython_inputenc_StringTranslator__f_stringMode;
      const x$2 = $m_Ltigerpython_inputenc_StringTranslator$StringMode$().Ltigerpython_inputenc_StringTranslator$StringMode$__f_NONE;
      if (((x$1 === null) ? (x$2 === null) : x$1.equals__O__Z(x$2))) {
        return $uC($m_Ltigerpython_inputenc_StringTranslator$().tigerpython$inputenc$StringTranslator$$charMap__sci_Map().getOrElse__O__F0__O($bC(ch), new $c_sjsr_AnonFunction0(((this$4, ch$1) => (() => $bC(ch$1)))(this, ch))))
      } else {
        return ch
      }
    } else {
      return 0
    }
  };
  next__O() {
    return $bC(this.next__C())
  };
}
const $d_Ltigerpython_inputenc_StringTranslator = new $TypeData().initClass({
  Ltigerpython_inputenc_StringTranslator: 0
}, false, "tigerpython.inputenc.StringTranslator", {
  Ltigerpython_inputenc_StringTranslator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_Ltigerpython_inputenc_StringTranslator.prototype.$classData = $d_Ltigerpython_inputenc_StringTranslator;
class $c_Ltigerpython_parser_ErrorInfo extends $c_O {
  constructor(line, offset, msg, code) {
    super();
    this.Ltigerpython_parser_ErrorInfo__f_line = 0;
    this.Ltigerpython_parser_ErrorInfo__f_offset = 0;
    this.Ltigerpython_parser_ErrorInfo__f_msg = null;
    this.Ltigerpython_parser_ErrorInfo__f_code = null;
    this.Ltigerpython_parser_ErrorInfo__f_line = line;
    this.Ltigerpython_parser_ErrorInfo__f_offset = offset;
    this.Ltigerpython_parser_ErrorInfo__f_msg = msg;
    this.Ltigerpython_parser_ErrorInfo__f_code = code
  };
  productPrefix__T() {
    return "ErrorInfo"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ErrorInfo__f_line;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ErrorInfo__f_offset;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ErrorInfo__f_msg;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ErrorInfo__f_code;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ErrorInfo");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ErrorInfo__f_line;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ErrorInfo__f_offset;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ErrorInfo__f_msg;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ErrorInfo__f_code;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ErrorInfo)) {
      const ErrorInfo$1 = x$1;
      return ((((this.Ltigerpython_parser_ErrorInfo__f_line === ErrorInfo$1.Ltigerpython_parser_ErrorInfo__f_line) && (this.Ltigerpython_parser_ErrorInfo__f_offset === ErrorInfo$1.Ltigerpython_parser_ErrorInfo__f_offset)) && (this.Ltigerpython_parser_ErrorInfo__f_msg === ErrorInfo$1.Ltigerpython_parser_ErrorInfo__f_msg)) && (this.Ltigerpython_parser_ErrorInfo__f_code === ErrorInfo$1.Ltigerpython_parser_ErrorInfo__f_code))
    } else {
      return false
    }
  };
  $js$exported$prop$line__O() {
    return this.Ltigerpython_parser_ErrorInfo__f_line
  };
  $js$exported$prop$offset__O() {
    return this.Ltigerpython_parser_ErrorInfo__f_offset
  };
  $js$exported$prop$msg__O() {
    return this.Ltigerpython_parser_ErrorInfo__f_msg
  };
  $js$exported$prop$code__O() {
    return this.Ltigerpython_parser_ErrorInfo__f_code
  };
  get "code"() {
    return this.$js$exported$prop$code__O()
  };
  get "msg"() {
    return this.$js$exported$prop$msg__O()
  };
  get "offset"() {
    return this.$js$exported$prop$offset__O()
  };
  get "line"() {
    return this.$js$exported$prop$line__O()
  };
}
function $isArrayOf_Ltigerpython_parser_ErrorInfo(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ErrorInfo)))
}
const $d_Ltigerpython_parser_ErrorInfo = new $TypeData().initClass({
  Ltigerpython_parser_ErrorInfo: 0
}, false, "tigerpython.parser.ErrorInfo", {
  Ltigerpython_parser_ErrorInfo: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ErrorInfo.prototype.$classData = $d_Ltigerpython_parser_ErrorInfo;
class $c_Ltigerpython_parser_ast_AstNode$Keyword extends $c_O {
  constructor(name, value) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Keyword__f_name = null;
    this.Ltigerpython_parser_ast_AstNode$Keyword__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$Keyword__f_name = name;
    this.Ltigerpython_parser_ast_AstNode$Keyword__f_value = value
  };
  productPrefix__T() {
    return "Keyword"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Keyword__f_name;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Keyword__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Keyword)) {
      const Keyword$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$Keyword__f_name === Keyword$1.Ltigerpython_parser_ast_AstNode$Keyword__f_name)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Keyword__f_value;
        const x$2 = Keyword$1.Ltigerpython_parser_ast_AstNode$Keyword__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Keyword(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Keyword)))
}
const $d_Ltigerpython_parser_ast_AstNode$Keyword = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Keyword: 0
}, false, "tigerpython.parser.ast.AstNode$Keyword", {
  Ltigerpython_parser_ast_AstNode$Keyword: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Keyword.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Keyword;
class $c_Ltigerpython_parser_errors_ExtErrorInfo extends $c_O {
  constructor(position, line, errorCode, errorMessage, params) {
    super();
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_position = 0;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_line = 0;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode = null;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage = null;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_params = null;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_position = position;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_line = line;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode = errorCode;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage = errorMessage;
    this.Ltigerpython_parser_errors_ExtErrorInfo__f_params = params
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const array = [this.Ltigerpython_parser_errors_ExtErrorInfo__f_line, this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode.toString__T(), this.Ltigerpython_parser_errors_ExtErrorInfo__f_position, this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage];
    return $$x1.format$extension__T__sci_Seq__T("[LINE %d] %s(%d): %s", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "ExtErrorInfo"
  };
  productArity__I() {
    return 5
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_errors_ExtErrorInfo__f_position;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_errors_ExtErrorInfo__f_line;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_errors_ExtErrorInfo__f_params;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ExtErrorInfo");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_errors_ExtErrorInfo__f_position;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_errors_ExtErrorInfo__f_line;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_errors_ExtErrorInfo__f_params;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$6, 5)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_errors_ExtErrorInfo)) {
      const ExtErrorInfo$1 = x$1;
      let $$x1;
      if (((this.Ltigerpython_parser_errors_ExtErrorInfo__f_position === ExtErrorInfo$1.Ltigerpython_parser_errors_ExtErrorInfo__f_position) && (this.Ltigerpython_parser_errors_ExtErrorInfo__f_line === ExtErrorInfo$1.Ltigerpython_parser_errors_ExtErrorInfo__f_line))) {
        const x = this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
        const x$2 = ExtErrorInfo$1.Ltigerpython_parser_errors_ExtErrorInfo__f_errorCode;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if (($$x1 && (this.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage === ExtErrorInfo$1.Ltigerpython_parser_errors_ExtErrorInfo__f_errorMessage))) {
        const x$3 = this.Ltigerpython_parser_errors_ExtErrorInfo__f_params;
        const x$4 = ExtErrorInfo$1.Ltigerpython_parser_errors_ExtErrorInfo__f_params;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_errors_ExtErrorInfo(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_errors_ExtErrorInfo)))
}
const $d_Ltigerpython_parser_errors_ExtErrorInfo = new $TypeData().initClass({
  Ltigerpython_parser_errors_ExtErrorInfo: 0
}, false, "tigerpython.parser.errors.ExtErrorInfo", {
  Ltigerpython_parser_errors_ExtErrorInfo: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_errors_ExtErrorInfo.prototype.$classData = $d_Ltigerpython_parser_errors_ExtErrorInfo;
class $c_Ltigerpython_parser_lexer_Token extends $c_O {
  constructor(pos, len, tokenType) {
    super();
    this.Ltigerpython_parser_lexer_Token__f_pos = 0;
    this.Ltigerpython_parser_lexer_Token__f_len = 0;
    this.Ltigerpython_parser_lexer_Token__f_tokenType = null;
    this.Ltigerpython_parser_lexer_Token__f_endPos = 0;
    this.Ltigerpython_parser_lexer_Token__f_value = null;
    this.Ltigerpython_parser_lexer_Token__f_pos = pos;
    this.Ltigerpython_parser_lexer_Token__f_len = len;
    this.Ltigerpython_parser_lexer_Token__f_tokenType = tokenType;
    this.Ltigerpython_parser_lexer_Token__f_endPos = ((pos + len) | 0)
  };
  getStringValue__T() {
    return ((this.Ltigerpython_parser_lexer_Token__f_value !== null) ? this.Ltigerpython_parser_lexer_Token__f_value : this.Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_name)
  };
  isName__T__Z(name) {
    const x = this.Ltigerpython_parser_lexer_Token__f_tokenType;
    const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
    if ((x === x$2)) {
      return (this.Ltigerpython_parser_lexer_Token__f_value === name)
    } else {
      return false
    }
  };
  toString__T() {
    return this.getStringValue__T()
  };
  productPrefix__T() {
    return "Token"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_lexer_Token__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_lexer_Token__f_len;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_lexer_Token__f_tokenType;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Token");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_lexer_Token__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_lexer_Token__f_len;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_lexer_Token__f_tokenType;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_lexer_Token)) {
      const Token$1 = x$1;
      if (((this.Ltigerpython_parser_lexer_Token__f_pos === Token$1.Ltigerpython_parser_lexer_Token__f_pos) && (this.Ltigerpython_parser_lexer_Token__f_len === Token$1.Ltigerpython_parser_lexer_Token__f_len))) {
        const x = this.Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$2 = Token$1.Ltigerpython_parser_lexer_Token__f_tokenType;
        return (x === x$2)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_lexer_Token(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_lexer_Token)))
}
const $d_Ltigerpython_parser_lexer_Token = new $TypeData().initClass({
  Ltigerpython_parser_lexer_Token: 0
}, false, "tigerpython.parser.lexer.Token", {
  Ltigerpython_parser_lexer_Token: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_lexer_Token.prototype.$classData = $d_Ltigerpython_parser_lexer_Token;
class $c_Ltigerpython_parser_parsing_ExtParserUtils$NoValueException extends $c_jl_Exception {
  constructor(outer) {
    super();
    this.Ltigerpython_parser_parsing_ExtParserUtils$NoValueException__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.Ltigerpython_parser_parsing_ExtParserUtils$NoValueException__f_$outer = outer
    };
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
}
const $d_Ltigerpython_parser_parsing_ExtParserUtils$NoValueException = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ExtParserUtils$NoValueException: 0
}, false, "tigerpython.parser.parsing.ExtParserUtils$NoValueException", {
  Ltigerpython_parser_parsing_ExtParserUtils$NoValueException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ExtParserUtils$NoValueException.prototype.$classData = $d_Ltigerpython_parser_parsing_ExtParserUtils$NoValueException;
class $c_Ltigerpython_parser_parsing_LineParser$Line extends $c_O {
  constructor(indent, endPos, tokens) {
    super();
    this.Ltigerpython_parser_parsing_LineParser$Line__f_indent = 0;
    this.Ltigerpython_parser_parsing_LineParser$Line__f_endPos = 0;
    this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens = null;
    this.Ltigerpython_parser_parsing_LineParser$Line__f_indent = indent;
    this.Ltigerpython_parser_parsing_LineParser$Line__f_endPos = endPos;
    this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens = tokens
  };
  pos__I() {
    const $$x1 = $m_sc_ArrayOps$();
    const xs = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    return (($$x1.head$extension__O__O(xs).Ltigerpython_parser_lexer_Token__f_pos - this.Ltigerpython_parser_parsing_LineParser$Line__f_indent) | 0)
  };
  toString__T() {
    const $$x2 = $m_sc_StringOps$();
    const $$x1 = this.Ltigerpython_parser_parsing_LineParser$Line__f_indent;
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens);
    const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", "; ", "")];
    return $$x2.format$extension__T__sci_Seq__T("<LINE indent: %d; tokens: <%s>>", new $c_sjsr_WrappedVarArgs(array))
  };
  endsInOperator__Z() {
    const xs = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
      const this$7 = $$x1.last$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_tokenType;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AND, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_OR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MOD, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS];
      const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
      return $f_sc_SeqOps__contains__O__Z(tokenTypes, this$7)
    } else {
      return false
    }
  };
  endsInAssignment__Z() {
    const xs = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
      return ($$x1.last$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT)
    } else {
      return false
    }
  };
  hasAssignment__Z() {
    const nonLocalReturnKey1 = $ct_O__(new $c_O());
    try {
      const depth = new $c_sr_IntRef(0);
      const xs = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
      const f = ((this$3, depth$1, nonLocalReturnKey1$1) => ((token$2) => {
        const token = token$2;
        const x1 = token.Ltigerpython_parser_lexer_Token__f_tokenType;
        if ((x1 !== null)) {
          const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
          let $$x1;
          if ((x === x1)) {
            $$x1 = true
          } else {
            const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
            if ((x$3 === x1)) {
              $$x1 = true
            } else {
              const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
              $$x1 = (x$5 === x1)
            }
          };
          if ($$x1) {
            depth$1.sr_IntRef__f_elem = ((1 + depth$1.sr_IntRef__f_elem) | 0)
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
            let $$x2;
            if ((x$7 === x1)) {
              $$x2 = true
            } else {
              const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
              if ((x$9 === x1)) {
                $$x2 = true
              } else {
                const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                $$x2 = (x$11 === x1)
              }
            };
            if ($$x2) {
              depth$1.sr_IntRef__f_elem = (((-1) + depth$1.sr_IntRef__f_elem) | 0)
            } else if (((depth$1.sr_IntRef__f_elem === 0) && (x1.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_ASSIGNMENT))) {
              throw new $c_sr_NonLocalReturnControl$mcZ$sp(nonLocalReturnKey1$1, true)
            }
          }
        }
      }))(this, depth, nonLocalReturnKey1);
      const len = xs.u.length;
      let i = 0;
      if ((xs !== null)) {
        while ((i < len)) {
          const arg1 = xs.u[i];
          f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(xs, 1)) {
        const x3 = xs;
        while ((i < len)) {
          const arg1$1 = x3.u[i];
          f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(xs, 1)) {
        const x4 = xs;
        while ((i < len)) {
          const arg1$2 = x4.u[i];
          f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(xs, 1)) {
        const x5 = xs;
        while ((i < len)) {
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(xs, 1)) {
        const x6 = xs;
        while ((i < len)) {
          const arg1$3 = x6.u[i];
          f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(xs, 1)) {
        const x7 = xs;
        while ((i < len)) {
          const arg1$4 = x7.u[i];
          f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(xs, 1)) {
        const x8 = xs;
        while ((i < len)) {
          const arg1$5 = x8.u[i];
          f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(xs, 1)) {
        const x9 = xs;
        while ((i < len)) {
          const arg1$6 = x9.u[i];
          f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(xs, 1)) {
        const x10 = xs;
        while ((i < len)) {
          const arg1$7 = x10.u[i];
          f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs)
      };
      return false
    } catch (e) {
      if ((e instanceof $c_sr_NonLocalReturnControl)) {
        const ex = e;
        if ((ex.sr_NonLocalReturnControl__f_key === nonLocalReturnKey1)) {
          return ex.value$mcZ$sp__Z()
        } else {
          throw ex
        }
      } else {
        throw e
      }
    }
  };
  isExpression__Ltigerpython_parser_parsing_ParserState__Z(parserState) {
    const xs = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    let $$x1;
    if ((xs.u.length !== 0)) {
      const $$x3 = $m_Ltigerpython_parser_parsing_ExpressionParser$();
      const $$x2 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
      $$x1 = $$x3.firstOfTest__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_parsing_ParserState__Z($$x2.head$extension__O__O(xs$1), parserState)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      return (!this.hasAssignment__Z())
    } else {
      return false
    }
  };
  mergeWithLine__Ltigerpython_parser_parsing_LineParser$Line__V(line) {
    const xs = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    const xs$1 = line.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    const this$5 = $m_s_Array$();
    const newLength = ((xs.u.length + xs$1.u.length) | 0);
    let dest$1;
    if ($d_Ltigerpython_parser_lexer_Token.getClassOf().isAssignableFrom__jl_Class__Z($objectGetClass(xs).getComponentType__jl_Class())) {
      dest$1 = ($d_Ltigerpython_parser_lexer_Token.getClassOf().isPrimitive__Z() ? this$5.copyOf__O__I__O(xs, newLength) : $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(xs, newLength, $d_Ltigerpython_parser_lexer_Token.getArrayOf().getClassOf()))
    } else {
      const dest = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [newLength]);
      $m_s_Array$().copy__O__I__O__I__I__V(xs, 0, dest, 0, xs.u.length);
      dest$1 = dest
    };
    $m_s_Array$().copy__O__I__O__I__I__V(xs$1, 0, dest$1, xs.u.length, xs$1.u.length);
    this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens = dest$1
  };
  isIncompleteSingleToken__Z() {
    if ((this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens.u.length === 1)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
      const x1 = $$x1.head$extension__O__O(xs).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF;
      if ((x === x1)) {
        return true
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
        if ((x$3 === x1)) {
          return true
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE;
          if ((x$5 === x1)) {
            return true
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT;
            if ((x$7 === x1)) {
              return true
            } else {
              const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
              return (x$9 === x1)
            }
          }
        }
      }
    } else {
      return false
    }
  };
  productPrefix__T() {
    return "Line"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_LineParser$Line__f_indent;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_LineParser$Line__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Line");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_LineParser$Line__f_indent;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_parsing_LineParser$Line__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_parsing_LineParser$Line)) {
      const Line$1 = x$1;
      return (((this.Ltigerpython_parser_parsing_LineParser$Line__f_indent === Line$1.Ltigerpython_parser_parsing_LineParser$Line__f_indent) && (this.Ltigerpython_parser_parsing_LineParser$Line__f_endPos === Line$1.Ltigerpython_parser_parsing_LineParser$Line__f_endPos)) && (this.Ltigerpython_parser_parsing_LineParser$Line__f_tokens === Line$1.Ltigerpython_parser_parsing_LineParser$Line__f_tokens))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_LineParser$Line(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_LineParser$Line)))
}
const $d_Ltigerpython_parser_parsing_LineParser$Line = new $TypeData().initClass({
  Ltigerpython_parser_parsing_LineParser$Line: 0
}, false, "tigerpython.parser.parsing.LineParser$Line", {
  Ltigerpython_parser_parsing_LineParser$Line: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_LineParser$Line.prototype.$classData = $d_Ltigerpython_parser_parsing_LineParser$Line;
const $p_Ltigerpython_parser_parsing_PreParser$Line__tokenSource$lzycompute__Ltigerpython_parser_lexer_TokenBuffer = (function($thiz) {
  if ((!$thiz.Ltigerpython_parser_parsing_PreParser$Line__f_bitmap$0)) {
    const xs = $thiz.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    $thiz.Ltigerpython_parser_parsing_PreParser$Line__f_tokenSource = new $c_Ltigerpython_parser_lexer_TokenBuffer($m_sc_ArrayOps$().toIndexedSeq$extension__O__sci_IndexedSeq(xs), $thiz.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, $thiz.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler);
    $thiz.Ltigerpython_parser_parsing_PreParser$Line__f_bitmap$0 = true
  };
  return $thiz.Ltigerpython_parser_parsing_PreParser$Line__f_tokenSource
});
class $c_Ltigerpython_parser_parsing_PreParser$Line extends $c_O {
  constructor(startPos, endPos, indentation, tokens, suite, textSource, errorHandler) {
    super();
    this.Ltigerpython_parser_parsing_PreParser$Line__f_tokenSource = null;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_startPos = 0;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_endPos = 0;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_indentation = 0;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens = null;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_suite = null;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_textSource = null;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler = null;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_parentLine = null;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_prevLine = null;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_bitmap$0 = false;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_startPos = startPos;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_endPos = endPos;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_indentation = indentation;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens = tokens;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_suite = suite;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_textSource = textSource;
    this.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler = errorHandler;
    if ((suite !== null)) {
      const p = new $c_sjsr_AnonFunction1(((this$2) => ((s$2) => {
        const s = s$2;
        return (s !== null)
      }))(this));
      const this$4 = new $c_sc_ArrayOps$WithFilter(p, suite);
      const len = $m_sr_ScalaRunTime$().array_length__O__I(this$4.sc_ArrayOps$WithFilter__f_xs);
      let i = 0;
      while ((i < len)) {
        const x = $m_sr_ScalaRunTime$().array_apply__O__I__O(this$4.sc_ArrayOps$WithFilter__f_xs, i);
        if ((!(!this$4.sc_ArrayOps$WithFilter__f_p.apply__O__O(x)))) {
          const s$3 = x;
          s$3.Ltigerpython_parser_parsing_PreParser$Line__f_parentLine = this
        };
        i = ((1 + i) | 0)
      }
    }
  };
  firstTokenPos__I() {
    const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
      const x = $$x1.head$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_pos;
      const that = this.Ltigerpython_parser_parsing_PreParser$Line__f_endPos;
      return ((x < that) ? x : that)
    } else {
      return ((this.Ltigerpython_parser_parsing_PreParser$Line__f_startPos + this.Ltigerpython_parser_parsing_PreParser$Line__f_indentation) | 0)
    }
  };
  tokenSource__Ltigerpython_parser_lexer_TokenBuffer() {
    return ((!this.Ltigerpython_parser_parsing_PreParser$Line__f_bitmap$0) ? $p_Ltigerpython_parser_parsing_PreParser$Line__tokenSource$lzycompute__Ltigerpython_parser_lexer_TokenBuffer(this) : this.Ltigerpython_parser_parsing_PreParser$Line__f_tokenSource)
  };
  hasSuite__Z() {
    if ((this.Ltigerpython_parser_parsing_PreParser$Line__f_suite !== null)) {
      const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
      return (xs.u.length !== 0)
    } else {
      return false
    }
  };
  hasColonAtEnd__Z() {
    const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
      const x = $$x1.last$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      return (x === x$2)
    } else {
      return false
    }
  };
  startsWithDot__Z() {
    let $$x1;
    if ((this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length >= 2)) {
      const x = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const x$3 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      return (x$3 === x$4)
    } else {
      return false
    }
  };
  canHaveDotContinuation__Z() {
    const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
      const this$7 = $$x1.last$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_tokenType;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET];
      const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
      return $f_sc_SeqOps__contains__O__Z(tokenTypes, this$7)
    } else {
      return false
    }
  };
  headTokenType__Ltigerpython_parser_lexer_TokenType() {
    const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
      return $$x1.head$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_tokenType
    } else {
      return null
    }
  };
  replaceToken__I__Ltigerpython_parser_lexer_TokenType__Z(index, newTokenType) {
    if (((index >= 0) && (index < this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length))) {
      const $$x1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
      const srcToken = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[index];
      $$x1.u[index] = new $c_Ltigerpython_parser_lexer_Token(srcToken.Ltigerpython_parser_lexer_Token__f_pos, srcToken.Ltigerpython_parser_lexer_Token__f_len, newTokenType);
      return true
    } else {
      return false
    }
  };
  replaceToken__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_Token__Z(oldToken, newToken) {
    const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    const idx = $m_sc_ArrayOps$().indexOf$extension__O__O__I__I(xs, oldToken, 0);
    if ((idx >= 0)) {
      this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[idx] = newToken;
      return true
    } else {
      return false
    }
  };
  replaceToken__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(oldToken, newTokenType) {
    return this.replaceToken__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_Token__Z(oldToken, new $c_Ltigerpython_parser_lexer_Token(oldToken.Ltigerpython_parser_lexer_Token__f_pos, oldToken.Ltigerpython_parser_lexer_Token__f_len, newTokenType))
  };
  checkForDotSuite__Ltigerpython_parser_parsing_ParserState__Ltigerpython_parser_parsing_PreParser$Line(parserState) {
    let $$x1;
    if ((this.hasSuite__Z() && this.canHaveDotContinuation__Z())) {
      const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
      _return: {
        let i = 0;
        while ((i < xs.u.length)) {
          const arg1 = xs.u[i];
          const x$3 = arg1;
          if ((!x$3.startsWithDot__Z())) {
            $$x1 = false;
            break _return
          };
          i = ((1 + i) | 0)
        };
        $$x1 = true
      }
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const $$x2 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
      const pos = $$x2.last$extension__O__O(xs$1).Ltigerpython_parser_lexer_Token__f_endPos;
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
      const params = $m_sci_Nil$();
      parserState.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      const this$4 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const new_tokens = this$4.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      const xs$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens);
      new_tokens.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$2);
      const xs$3 = this.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
      const f = ((this$2$1, new_tokens$1) => ((line$2) => {
        const line = line$2;
        const xs$4 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(line.Ltigerpython_parser_parsing_PreParser$Line__f_tokens);
        return new_tokens$1.addAll__sc_IterableOnce__scm_ArrayBuffer(xs$4)
      }))(this, new_tokens);
      const len = xs$3.u.length;
      let i$1 = 0;
      if ((xs$3 !== null)) {
        while ((i$1 < len)) {
          const arg1$1 = xs$3.u[i$1];
          f(arg1$1);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_I(xs$3, 1)) {
        const x3 = xs$3;
        while ((i$1 < len)) {
          const arg1$2 = x3.u[i$1];
          f(arg1$2);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_D(xs$3, 1)) {
        const x4 = xs$3;
        while ((i$1 < len)) {
          const arg1$3 = x4.u[i$1];
          f(arg1$3);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_J(xs$3, 1)) {
        const x5 = xs$3;
        while ((i$1 < len)) {
          const t = x5.u[i$1];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          f(new $c_RTLong(lo, hi));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_F(xs$3, 1)) {
        const x6 = xs$3;
        while ((i$1 < len)) {
          const arg1$4 = x6.u[i$1];
          f(arg1$4);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_C(xs$3, 1)) {
        const x7 = xs$3;
        while ((i$1 < len)) {
          const arg1$5 = x7.u[i$1];
          f($bC(arg1$5));
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_B(xs$3, 1)) {
        const x8 = xs$3;
        while ((i$1 < len)) {
          const arg1$6 = x8.u[i$1];
          f(arg1$6);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_S(xs$3, 1)) {
        const x9 = xs$3;
        while ((i$1 < len)) {
          const arg1$7 = x9.u[i$1];
          f(arg1$7);
          i$1 = ((1 + i$1) | 0)
        }
      } else if ($isArrayOf_Z(xs$3, 1)) {
        const x10 = xs$3;
        while ((i$1 < len)) {
          const arg1$8 = x10.u[i$1];
          f(arg1$8);
          i$1 = ((1 + i$1) | 0)
        }
      } else {
        throw new $c_s_MatchError(xs$3)
      };
      const $$x6 = this.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
      const $$x5 = this.Ltigerpython_parser_parsing_PreParser$Line__f_endPos;
      const $$x4 = this.Ltigerpython_parser_parsing_PreParser$Line__f_indentation;
      let $$x3;
      if ((new_tokens.scm_ArrayBuffer__f_size0 >= 0)) {
        const len$1 = new_tokens.scm_ArrayBuffer__f_size0;
        const destination = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$1]);
        new_tokens.copyToArray__O__I__I__I(destination, 0, new_tokens.scm_ArrayBuffer__f_size0);
        $$x3 = destination
      } else {
        let capacity = 0;
        let size = 0;
        let jsElems = null;
        capacity = 0;
        size = 0;
        jsElems = [];
        const this$10 = new $c_scm_ArrayBufferView(new_tokens.scm_ArrayBuffer__f_array, new_tokens.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$10);
        while (it.hasNext__Z()) {
          const elem = it.next__O();
          const unboxedElem = ((elem === null) ? null : elem);
          jsElems.push(unboxedElem)
        };
        $$x3 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems)
      };
      const xs$5 = $m_sci_Nil$();
      const len$2 = xs$5.length__I();
      const array = $newArrayObject($d_Ltigerpython_parser_parsing_PreParser$Line.getArrayOf(), [len$2]);
      const iterator = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
      let i$2 = 0;
      while (iterator.hasNext__Z()) {
        array.u[i$2] = iterator.next__O();
        i$2 = ((1 + i$2) | 0)
      };
      return new $c_Ltigerpython_parser_parsing_PreParser$Line($$x6, $$x5, $$x4, $$x3, array, this.Ltigerpython_parser_parsing_PreParser$Line__f_textSource, this.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler)
    } else {
      return this
    }
  };
  makePrintAName__V() {
    const $$x1 = $m_sc_ArrayOps$();
    const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    const this$2 = $$x1.indices$extension__O__sci_Range(xs);
    if ((!this$2.sci_Range__f_isEmpty)) {
      let i = this$2.sci_Range__f_start;
      while (true) {
        const v1 = i;
        const x = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[v1].Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT;
        if ((x === x$2)) {
          this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[v1] = $m_Ltigerpython_parser_lexer_Token$().createNameToken__I__T__Ltigerpython_parser_lexer_Token(this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[v1].Ltigerpython_parser_lexer_Token__f_pos, "print")
        };
        if ((i === this$2.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
          break
        };
        i = ((i + this$2.sci_Range__f_step) | 0)
      }
    }
  };
  hasExtraLineNumber__Z() {
    let $$x1;
    if ((this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length > 1)) {
      const x = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const this$4 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[1].Ltigerpython_parser_lexer_Token__f_tokenType;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FROM, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IMPORT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE];
      const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
      return $f_sc_SeqOps__contains__O__Z(tokenTypes, this$4)
    } else {
      return false
    }
  };
  isCompoundStatementHeader__Z() {
    let $$x1;
    if ((this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u.length > 2)) {
      const $$x2 = $m_sc_ArrayOps$();
      const xs = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
      const x = $$x2.last$extension__O__O(xs).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const this$5 = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens.u[0].Ltigerpython_parser_lexer_Token__f_tokenType;
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WHILE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TRY, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_REPEAT];
      const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
      return $f_sc_SeqOps__contains__O__Z(tokenTypes, this$5)
    } else {
      return false
    }
  };
  productPrefix__T() {
    return "Line"
  };
  productArity__I() {
    return 7
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_PreParser$Line__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_PreParser$Line__f_indentation;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
        break
      }
      case 5: {
        return this.Ltigerpython_parser_parsing_PreParser$Line__f_textSource;
        break
      }
      case 6: {
        return this.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Line");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_parsing_PreParser$Line__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const data$3 = this.Ltigerpython_parser_parsing_PreParser$Line__f_indentation;
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x = this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_PreParser$Line__f_suite;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    const x$2 = this.Ltigerpython_parser_parsing_PreParser$Line__f_textSource;
    const data$6 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$6, data$6);
    const hash$7 = acc;
    const x$3 = this.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler;
    const data$7 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$7, data$7);
    const hash$8 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$8, 7)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_parsing_PreParser$Line)) {
      const Line$1 = x$1;
      let $$x1;
      if ((((((this.Ltigerpython_parser_parsing_PreParser$Line__f_startPos === Line$1.Ltigerpython_parser_parsing_PreParser$Line__f_startPos) && (this.Ltigerpython_parser_parsing_PreParser$Line__f_endPos === Line$1.Ltigerpython_parser_parsing_PreParser$Line__f_endPos)) && (this.Ltigerpython_parser_parsing_PreParser$Line__f_indentation === Line$1.Ltigerpython_parser_parsing_PreParser$Line__f_indentation)) && (this.Ltigerpython_parser_parsing_PreParser$Line__f_tokens === Line$1.Ltigerpython_parser_parsing_PreParser$Line__f_tokens)) && (this.Ltigerpython_parser_parsing_PreParser$Line__f_suite === Line$1.Ltigerpython_parser_parsing_PreParser$Line__f_suite))) {
        const x = this.Ltigerpython_parser_parsing_PreParser$Line__f_textSource;
        const x$2 = Line$1.Ltigerpython_parser_parsing_PreParser$Line__f_textSource;
        $$x1 = ((x === null) ? (x$2 === null) : $dp_equals__O__Z(x, x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler;
        const x$4 = Line$1.Ltigerpython_parser_parsing_PreParser$Line__f_errorHandler;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_PreParser$Line(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_PreParser$Line)))
}
const $d_Ltigerpython_parser_parsing_PreParser$Line = new $TypeData().initClass({
  Ltigerpython_parser_parsing_PreParser$Line: 0
}, false, "tigerpython.parser.parsing.PreParser$Line", {
  Ltigerpython_parser_parsing_PreParser$Line: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_PreParser$Line.prototype.$classData = $d_Ltigerpython_parser_parsing_PreParser$Line;
class $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$1 extends $c_Ltigerpython_parser_types_Module {
  constructor() {
    super();
    $ct_Ltigerpython_parser_types_Module__T__(this, "math");
    const xs = $m_Ltigerpython_parser_scopes_BuiltinModules$().Ltigerpython_parser_scopes_BuiltinModules$__f_math;
    const f = ((this$2) => ((s$2) => {
      const s = s$2;
      const b = $m_Ltigerpython_parser_types_BuiltinFunction$().fromString__T__Ltigerpython_parser_types_BuiltinFunction(s);
      const name = b.Ltigerpython_parser_types_BuiltinFunction__f_name;
      this$2.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V(name, b)
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    const dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
    this.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V("pi", dataType);
    const dataType$1 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_FLOAT;
    this.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V("e", dataType$1)
  };
}
const $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$1 = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ModuleLoader$$anon$1: 0
}, false, "tigerpython.parser.scopes.ModuleLoader$$anon$1", {
  Ltigerpython_parser_scopes_ModuleLoader$$anon$1: 1,
  Ltigerpython_parser_types_Module: 1,
  Ltigerpython_parser_types_Package: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ModuleLoader$$anon$1.prototype.$classData = $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$1;
class $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$2 extends $c_Ltigerpython_parser_types_Module {
  constructor() {
    super();
    $ct_Ltigerpython_parser_types_Module__T__(this, "os");
    const xs = $m_Ltigerpython_parser_scopes_BuiltinModules$().Ltigerpython_parser_scopes_BuiltinModules$__f_os;
    const f = ((this$2) => ((s$2) => {
      const s = s$2;
      const b = $m_Ltigerpython_parser_types_BuiltinFunction$().fromString__T__Ltigerpython_parser_types_BuiltinFunction(s);
      const name = b.Ltigerpython_parser_types_BuiltinFunction__f_name;
      this$2.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V(name, b)
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    }
  };
}
const $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$2 = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ModuleLoader$$anon$2: 0
}, false, "tigerpython.parser.scopes.ModuleLoader$$anon$2", {
  Ltigerpython_parser_scopes_ModuleLoader$$anon$2: 1,
  Ltigerpython_parser_types_Module: 1,
  Ltigerpython_parser_types_Package: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ModuleLoader$$anon$2.prototype.$classData = $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$2;
class $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$3 extends $c_Ltigerpython_parser_types_Module {
  constructor() {
    super();
    $ct_Ltigerpython_parser_types_Module__T__(this, "sys");
    const xs = $m_Ltigerpython_parser_scopes_BuiltinModules$().Ltigerpython_parser_scopes_BuiltinModules$__f_sys;
    const f = ((this$2) => ((s$2) => {
      const s = s$2;
      const b = $m_Ltigerpython_parser_types_BuiltinFunction$().fromString__T__Ltigerpython_parser_types_BuiltinFunction(s);
      const name = b.Ltigerpython_parser_types_BuiltinFunction__f_name;
      this$2.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V(name, b)
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    const xs$1 = $m_Ltigerpython_parser_scopes_BuiltinModules$().Ltigerpython_parser_scopes_BuiltinModules$__f_sys_vars;
    const f$1 = ((this$2$1) => ((s$3$2) => {
      const s$3 = s$3$2;
      const dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
      this$2$1.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V(s$3, dataType)
    }))(this);
    const len$1 = xs$1.u.length;
    let i$1 = 0;
    if ((xs$1 !== null)) {
      while ((i$1 < len$1)) {
        const arg1$8 = xs$1.u[i$1];
        f$1(arg1$8);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_I(xs$1, 1)) {
      const x3$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$9 = x3$1.u[i$1];
        f$1(arg1$9);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_D(xs$1, 1)) {
      const x4$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$10 = x4$1.u[i$1];
        f$1(arg1$10);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_J(xs$1, 1)) {
      const x5$1 = xs$1;
      while ((i$1 < len$1)) {
        const t$1 = x5$1.u[i$1];
        const lo$1 = t$1.RTLong__f_lo;
        const hi$1 = t$1.RTLong__f_hi;
        f$1(new $c_RTLong(lo$1, hi$1));
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_F(xs$1, 1)) {
      const x6$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$11 = x6$1.u[i$1];
        f$1(arg1$11);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_C(xs$1, 1)) {
      const x7$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$12 = x7$1.u[i$1];
        f$1($bC(arg1$12));
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_B(xs$1, 1)) {
      const x8$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$13 = x8$1.u[i$1];
        f$1(arg1$13);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_S(xs$1, 1)) {
      const x9$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$14 = x9$1.u[i$1];
        f$1(arg1$14);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_Z(xs$1, 1)) {
      const x10$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$15 = x10$1.u[i$1];
        f$1(arg1$15);
        i$1 = ((1 + i$1) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs$1)
    }
  };
}
const $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$3 = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ModuleLoader$$anon$3: 0
}, false, "tigerpython.parser.scopes.ModuleLoader$$anon$3", {
  Ltigerpython_parser_scopes_ModuleLoader$$anon$3: 1,
  Ltigerpython_parser_types_Module: 1,
  Ltigerpython_parser_types_Package: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ModuleLoader$$anon$3.prototype.$classData = $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$3;
class $c_Ltigerpython_parser_scopes_ModuleLoader$$anon$4 extends $c_Ltigerpython_parser_types_Module {
  constructor() {
    super();
    $ct_Ltigerpython_parser_types_Module__T__(this, "time");
    const xs = $m_Ltigerpython_parser_scopes_BuiltinModules$().Ltigerpython_parser_scopes_BuiltinModules$__f_time;
    const f = ((this$2) => ((s$2) => {
      const s = s$2;
      const b = $m_Ltigerpython_parser_types_BuiltinFunction$().fromString__T__Ltigerpython_parser_types_BuiltinFunction(s);
      const name = b.Ltigerpython_parser_types_BuiltinFunction__f_name;
      this$2.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V(name, b)
    }))(this);
    const len = xs.u.length;
    let i = 0;
    if ((xs !== null)) {
      while ((i < len)) {
        const arg1 = xs.u[i];
        f(arg1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_I(xs, 1)) {
      const x3 = xs;
      while ((i < len)) {
        const arg1$1 = x3.u[i];
        f(arg1$1);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_D(xs, 1)) {
      const x4 = xs;
      while ((i < len)) {
        const arg1$2 = x4.u[i];
        f(arg1$2);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_J(xs, 1)) {
      const x5 = xs;
      while ((i < len)) {
        const t = x5.u[i];
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        f(new $c_RTLong(lo, hi));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_F(xs, 1)) {
      const x6 = xs;
      while ((i < len)) {
        const arg1$3 = x6.u[i];
        f(arg1$3);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_C(xs, 1)) {
      const x7 = xs;
      while ((i < len)) {
        const arg1$4 = x7.u[i];
        f($bC(arg1$4));
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_B(xs, 1)) {
      const x8 = xs;
      while ((i < len)) {
        const arg1$5 = x8.u[i];
        f(arg1$5);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_S(xs, 1)) {
      const x9 = xs;
      while ((i < len)) {
        const arg1$6 = x9.u[i];
        f(arg1$6);
        i = ((1 + i) | 0)
      }
    } else if ($isArrayOf_Z(xs, 1)) {
      const x10 = xs;
      while ((i < len)) {
        const arg1$7 = x10.u[i];
        f(arg1$7);
        i = ((1 + i) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs)
    };
    const xs$1 = $m_Ltigerpython_parser_scopes_BuiltinModules$().Ltigerpython_parser_scopes_BuiltinModules$__f_time_vars;
    const f$1 = ((this$2$1) => ((s$3$2) => {
      const s$3 = s$3$2;
      const dataType = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE;
      this$2$1.Ltigerpython_parser_types_Module__f_fields.update__T__Ltigerpython_parser_types_DataType__V(s$3, dataType)
    }))(this);
    const len$1 = xs$1.u.length;
    let i$1 = 0;
    if ((xs$1 !== null)) {
      while ((i$1 < len$1)) {
        const arg1$8 = xs$1.u[i$1];
        f$1(arg1$8);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_I(xs$1, 1)) {
      const x3$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$9 = x3$1.u[i$1];
        f$1(arg1$9);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_D(xs$1, 1)) {
      const x4$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$10 = x4$1.u[i$1];
        f$1(arg1$10);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_J(xs$1, 1)) {
      const x5$1 = xs$1;
      while ((i$1 < len$1)) {
        const t$1 = x5$1.u[i$1];
        const lo$1 = t$1.RTLong__f_lo;
        const hi$1 = t$1.RTLong__f_hi;
        f$1(new $c_RTLong(lo$1, hi$1));
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_F(xs$1, 1)) {
      const x6$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$11 = x6$1.u[i$1];
        f$1(arg1$11);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_C(xs$1, 1)) {
      const x7$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$12 = x7$1.u[i$1];
        f$1($bC(arg1$12));
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_B(xs$1, 1)) {
      const x8$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$13 = x8$1.u[i$1];
        f$1(arg1$13);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_S(xs$1, 1)) {
      const x9$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$14 = x9$1.u[i$1];
        f$1(arg1$14);
        i$1 = ((1 + i$1) | 0)
      }
    } else if ($isArrayOf_Z(xs$1, 1)) {
      const x10$1 = xs$1;
      while ((i$1 < len$1)) {
        const arg1$15 = x10$1.u[i$1];
        f$1(arg1$15);
        i$1 = ((1 + i$1) | 0)
      }
    } else {
      throw new $c_s_MatchError(xs$1)
    }
  };
}
const $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$4 = new $TypeData().initClass({
  Ltigerpython_parser_scopes_ModuleLoader$$anon$4: 0
}, false, "tigerpython.parser.scopes.ModuleLoader$$anon$4", {
  Ltigerpython_parser_scopes_ModuleLoader$$anon$4: 1,
  Ltigerpython_parser_types_Module: 1,
  Ltigerpython_parser_types_Package: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_scopes_ModuleLoader$$anon$4.prototype.$classData = $d_Ltigerpython_parser_scopes_ModuleLoader$$anon$4;
class $c_Ltigerpython_parser_types_BuiltinTypes$$anon$1 extends $c_Ltigerpython_parser_types_PrimitiveType {
  constructor() {
    super();
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(this, "seq", null, this$1.from__sc_IterableOnce__sci_Map(elems))
  };
  getItemType__Ltigerpython_parser_types_DataType() {
    return $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_ANY_TYPE
  };
}
const $d_Ltigerpython_parser_types_BuiltinTypes$$anon$1 = new $TypeData().initClass({
  Ltigerpython_parser_types_BuiltinTypes$$anon$1: 0
}, false, "tigerpython.parser.types.BuiltinTypes$$anon$1", {
  Ltigerpython_parser_types_BuiltinTypes$$anon$1: 1,
  Ltigerpython_parser_types_PrimitiveType: 1,
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_BuiltinTypes$$anon$1.prototype.$classData = $d_Ltigerpython_parser_types_BuiltinTypes$$anon$1;
class $c_Ltigerpython_parser_types_BuiltinTypes$$anon$2 extends $c_Ltigerpython_parser_types_PrimitiveType {
  constructor() {
    super();
    const $$x1 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(this, "unicode", $$x1, this$1.from__sc_IterableOnce__sci_Map(elems))
  };
  getItemType__Ltigerpython_parser_types_DataType() {
    return this
  };
}
const $d_Ltigerpython_parser_types_BuiltinTypes$$anon$2 = new $TypeData().initClass({
  Ltigerpython_parser_types_BuiltinTypes$$anon$2: 0
}, false, "tigerpython.parser.types.BuiltinTypes$$anon$2", {
  Ltigerpython_parser_types_BuiltinTypes$$anon$2: 1,
  Ltigerpython_parser_types_PrimitiveType: 1,
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_BuiltinTypes$$anon$2.prototype.$classData = $d_Ltigerpython_parser_types_BuiltinTypes$$anon$2;
class $c_Ltigerpython_parser_types_BuiltinTypes$$anon$3 extends $c_Ltigerpython_parser_types_PrimitiveType {
  constructor() {
    super();
    const $$x1 = $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_SEQ_TYPE;
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(this, "str", $$x1, this$1.from__sc_IterableOnce__sci_Map(elems))
  };
  getItemType__Ltigerpython_parser_types_DataType() {
    return this
  };
}
const $d_Ltigerpython_parser_types_BuiltinTypes$$anon$3 = new $TypeData().initClass({
  Ltigerpython_parser_types_BuiltinTypes$$anon$3: 0
}, false, "tigerpython.parser.types.BuiltinTypes$$anon$3", {
  Ltigerpython_parser_types_BuiltinTypes$$anon$3: 1,
  Ltigerpython_parser_types_PrimitiveType: 1,
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_BuiltinTypes$$anon$3.prototype.$classData = $d_Ltigerpython_parser_types_BuiltinTypes$$anon$3;
class $c_Ltigerpython_parser_types_ListType extends $c_Ltigerpython_parser_types_PrimitiveType {
  constructor(itemType) {
    super();
    this.Ltigerpython_parser_types_ListType__f_itemType = null;
    this.Ltigerpython_parser_types_ListType__f_itemType = itemType;
    const $$x1 = $m_sc_StringOps$();
    const array = [itemType.name__T()];
    $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(this, $$x1.format$extension__T__sci_Seq__T("list[%s]", new $c_sjsr_WrappedVarArgs(array)), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_LIST_TYPE.Ltigerpython_parser_types_PrimitiveType__f_fields)
  };
  getItemType__Ltigerpython_parser_types_DataType() {
    return this.Ltigerpython_parser_types_ListType__f_itemType
  };
}
function $isArrayOf_Ltigerpython_parser_types_ListType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_ListType)))
}
const $d_Ltigerpython_parser_types_ListType = new $TypeData().initClass({
  Ltigerpython_parser_types_ListType: 0
}, false, "tigerpython.parser.types.ListType", {
  Ltigerpython_parser_types_ListType: 1,
  Ltigerpython_parser_types_PrimitiveType: 1,
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_ListType.prototype.$classData = $d_Ltigerpython_parser_types_ListType;
class $c_Ltigerpython_parser_types_Parameter extends $c_O {
  constructor(name, dataType) {
    super();
    this.Ltigerpython_parser_types_Parameter__f_name = null;
    this.Ltigerpython_parser_types_Parameter__f_dataType = null;
    this.Ltigerpython_parser_types_Parameter__f_name = name;
    this.Ltigerpython_parser_types_Parameter__f_dataType = dataType
  };
  productPrefix__T() {
    return "Parameter"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_types_Parameter__f_name;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_types_Parameter__f_dataType;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_types_Parameter)) {
      const Parameter$1 = x$1;
      if ((this.Ltigerpython_parser_types_Parameter__f_name === Parameter$1.Ltigerpython_parser_types_Parameter__f_name)) {
        const x = this.Ltigerpython_parser_types_Parameter__f_dataType;
        const x$2 = Parameter$1.Ltigerpython_parser_types_Parameter__f_dataType;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_types_Parameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_Parameter)))
}
const $d_Ltigerpython_parser_types_Parameter = new $TypeData().initClass({
  Ltigerpython_parser_types_Parameter: 0
}, false, "tigerpython.parser.types.Parameter", {
  Ltigerpython_parser_types_Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_types_Parameter.prototype.$classData = $d_Ltigerpython_parser_types_Parameter;
class $c_Ltigerpython_parser_types_TupleType extends $c_Ltigerpython_parser_types_PrimitiveType {
  constructor(itemTypes) {
    super();
    this.Ltigerpython_parser_types_TupleType__f_itemTypes = null;
    this.Ltigerpython_parser_types_TupleType__f_itemTypes = itemTypes;
    const $$x11 = $m_sc_StringOps$();
    const $$x10 = $m_s_Predef$();
    const f = ((x$1$2) => {
      const x$1 = x$1$2;
      return x$1.name__T()
    });
    const len = itemTypes.u.length;
    const ys = $newArrayObject($d_T.getArrayOf(), [len]);
    if ((len > 0)) {
      let i = 0;
      if ((itemTypes !== null)) {
        while ((i < len)) {
          const $$x1 = i;
          const arg1 = itemTypes.u[i];
          ys.u[$$x1] = f(arg1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_I(itemTypes, 1)) {
        const x3 = itemTypes;
        while ((i < len)) {
          const $$x2 = i;
          const arg1$1 = x3.u[i];
          ys.u[$$x2] = f(arg1$1);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_D(itemTypes, 1)) {
        const x4 = itemTypes;
        while ((i < len)) {
          const $$x3 = i;
          const arg1$2 = x4.u[i];
          ys.u[$$x3] = f(arg1$2);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_J(itemTypes, 1)) {
        const x5 = itemTypes;
        while ((i < len)) {
          const $$x4 = i;
          const t = x5.u[i];
          const lo = t.RTLong__f_lo;
          const hi = t.RTLong__f_hi;
          ys.u[$$x4] = f(new $c_RTLong(lo, hi));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_F(itemTypes, 1)) {
        const x6 = itemTypes;
        while ((i < len)) {
          const $$x5 = i;
          const arg1$3 = x6.u[i];
          ys.u[$$x5] = f(arg1$3);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_C(itemTypes, 1)) {
        const x7 = itemTypes;
        while ((i < len)) {
          const $$x6 = i;
          const arg1$4 = x7.u[i];
          ys.u[$$x6] = f($bC(arg1$4));
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_B(itemTypes, 1)) {
        const x8 = itemTypes;
        while ((i < len)) {
          const $$x7 = i;
          const arg1$5 = x8.u[i];
          ys.u[$$x7] = f(arg1$5);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_S(itemTypes, 1)) {
        const x9 = itemTypes;
        while ((i < len)) {
          const $$x8 = i;
          const arg1$6 = x9.u[i];
          ys.u[$$x8] = f(arg1$6);
          i = ((1 + i) | 0)
        }
      } else if ($isArrayOf_Z(itemTypes, 1)) {
        const x10 = itemTypes;
        while ((i < len)) {
          const $$x9 = i;
          const arg1$7 = x10.u[i];
          ys.u[$$x9] = f(arg1$7);
          i = ((1 + i) | 0)
        }
      } else {
        throw new $c_s_MatchError(itemTypes)
      }
    };
    const this$5 = $$x10.wrapRefArray__AO__scm_ArraySeq$ofRef(ys);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$5, "", ", ", "")];
    $ct_Ltigerpython_parser_types_PrimitiveType__T__Ltigerpython_parser_types_PrimitiveType__sci_Map__(this, $$x11.format$extension__T__sci_Seq__T("tuple[%s]", new $c_sjsr_WrappedVarArgs(array)), $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE, $m_Ltigerpython_parser_types_BuiltinTypes$().Ltigerpython_parser_types_BuiltinTypes$__f_TUPLE_TYPE.Ltigerpython_parser_types_PrimitiveType__f_fields)
  };
  length__I() {
    return this.Ltigerpython_parser_types_TupleType__f_itemTypes.u.length
  };
}
function $isArrayOf_Ltigerpython_parser_types_TupleType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_TupleType)))
}
const $d_Ltigerpython_parser_types_TupleType = new $TypeData().initClass({
  Ltigerpython_parser_types_TupleType: 0
}, false, "tigerpython.parser.types.TupleType", {
  Ltigerpython_parser_types_TupleType: 1,
  Ltigerpython_parser_types_PrimitiveType: 1,
  Ltigerpython_parser_types_ClassType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1
});
$c_Ltigerpython_parser_types_TupleType.prototype.$classData = $d_Ltigerpython_parser_types_TupleType;
class $c_Ltigerpython_parser_types_TypeAstWalker$Parameter extends $c_O {
  constructor(name, dataType) {
    super();
    this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_name = null;
    this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_dataType = null;
    this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_name = name;
    this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_dataType = dataType
  };
  productPrefix__T() {
    return "Parameter"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_name;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_dataType;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_types_TypeAstWalker$Parameter)) {
      const Parameter$1 = x$1;
      if ((this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_name === Parameter$1.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_name)) {
        const x = this.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_dataType;
        const x$2 = Parameter$1.Ltigerpython_parser_types_TypeAstWalker$Parameter__f_dataType;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_types_TypeAstWalker$Parameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_TypeAstWalker$Parameter)))
}
const $d_Ltigerpython_parser_types_TypeAstWalker$Parameter = new $TypeData().initClass({
  Ltigerpython_parser_types_TypeAstWalker$Parameter: 0
}, false, "tigerpython.parser.types.TypeAstWalker$Parameter", {
  Ltigerpython_parser_types_TypeAstWalker$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_types_TypeAstWalker$Parameter.prototype.$classData = $d_Ltigerpython_parser_types_TypeAstWalker$Parameter;
class $c_jl_ArithmeticException extends $c_jl_RuntimeException {
  constructor(s) {
    super();
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, s, null, true, true)
  };
}
const $d_jl_ArithmeticException = new $TypeData().initClass({
  jl_ArithmeticException: 0
}, false, "java.lang.ArithmeticException", {
  jl_ArithmeticException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_ArithmeticException.prototype.$classData = $d_jl_ArithmeticException;
class $c_jl_ClassCastException {
}
function $isArrayOf_jl_ClassCastException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_ClassCastException)))
}
const $ct_jl_IllegalArgumentException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
const $ct_jl_IllegalArgumentException__ = (function($thiz) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, null, null, true, true);
  return $thiz
});
class $c_jl_IllegalArgumentException extends $c_jl_RuntimeException {
}
const $d_jl_IllegalArgumentException = new $TypeData().initClass({
  jl_IllegalArgumentException: 0
}, false, "java.lang.IllegalArgumentException", {
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_IllegalArgumentException.prototype.$classData = $d_jl_IllegalArgumentException;
const $ct_jl_IllegalStateException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
class $c_jl_IllegalStateException extends $c_jl_RuntimeException {
}
const $d_jl_IllegalStateException = new $TypeData().initClass({
  jl_IllegalStateException: 0
}, false, "java.lang.IllegalStateException", {
  jl_IllegalStateException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_IllegalStateException.prototype.$classData = $d_jl_IllegalStateException;
const $ct_jl_IndexOutOfBoundsException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
class $c_jl_IndexOutOfBoundsException extends $c_jl_RuntimeException {
}
const $d_jl_IndexOutOfBoundsException = new $TypeData().initClass({
  jl_IndexOutOfBoundsException: 0
}, false, "java.lang.IndexOutOfBoundsException", {
  jl_IndexOutOfBoundsException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_IndexOutOfBoundsException.prototype.$classData = $d_jl_IndexOutOfBoundsException;
class $c_jl_NegativeArraySizeException extends $c_jl_RuntimeException {
  constructor() {
    super();
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
}
const $d_jl_NegativeArraySizeException = new $TypeData().initClass({
  jl_NegativeArraySizeException: 0
}, false, "java.lang.NegativeArraySizeException", {
  jl_NegativeArraySizeException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_NegativeArraySizeException.prototype.$classData = $d_jl_NegativeArraySizeException;
const $ct_jl_NullPointerException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
const $ct_jl_NullPointerException__ = (function($thiz) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, null, null, true, true);
  return $thiz
});
class $c_jl_NullPointerException extends $c_jl_RuntimeException {
}
function $isArrayOf_jl_NullPointerException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_NullPointerException)))
}
const $d_jl_NullPointerException = new $TypeData().initClass({
  jl_NullPointerException: 0
}, false, "java.lang.NullPointerException", {
  jl_NullPointerException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_NullPointerException.prototype.$classData = $d_jl_NullPointerException;
class $c_jl_SecurityException {
}
function $isArrayOf_jl_SecurityException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_SecurityException)))
}
const $ct_jl_UnsupportedOperationException__ = (function($thiz) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, null, null, true, true);
  return $thiz
});
const $ct_jl_UnsupportedOperationException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
class $c_jl_UnsupportedOperationException extends $c_jl_RuntimeException {
}
const $d_jl_UnsupportedOperationException = new $TypeData().initClass({
  jl_UnsupportedOperationException: 0
}, false, "java.lang.UnsupportedOperationException", {
  jl_UnsupportedOperationException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_UnsupportedOperationException.prototype.$classData = $d_jl_UnsupportedOperationException;
const $ct_ju_NoSuchElementException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
const $ct_ju_NoSuchElementException__ = (function($thiz) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, null, null, true, true);
  return $thiz
});
class $c_ju_NoSuchElementException extends $c_jl_RuntimeException {
}
function $isArrayOf_ju_NoSuchElementException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.ju_NoSuchElementException)))
}
const $d_ju_NoSuchElementException = new $TypeData().initClass({
  ju_NoSuchElementException: 0
}, false, "java.util.NoSuchElementException", {
  ju_NoSuchElementException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_NoSuchElementException.prototype.$classData = $d_ju_NoSuchElementException;
class $c_s_$less$colon$less$$anon$1 extends $c_s_$eq$colon$eq {
  apply__O__O(x) {
    return x
  };
  toString__T() {
    return "generalized constraint"
  };
}
const $d_s_$less$colon$less$$anon$1 = new $TypeData().initClass({
  s_$less$colon$less$$anon$1: 0
}, false, "scala.$less$colon$less$$anon$1", {
  s_$less$colon$less$$anon$1: 1,
  s_$eq$colon$eq: 1,
  s_$less$colon$less: 1,
  O: 1,
  F1: 1,
  Ljava_io_Serializable: 1
});
$c_s_$less$colon$less$$anon$1.prototype.$classData = $d_s_$less$colon$less$$anon$1;
class $c_s_Enumeration$Val extends $c_s_Enumeration$Value {
  constructor(outer, i, name) {
    super();
    this.s_Enumeration$Val__f_i = 0;
    this.s_Enumeration$Val__f_name = null;
    this.s_Enumeration$Val__f_i = i;
    this.s_Enumeration$Val__f_name = name;
    $ct_s_Enumeration$Value__s_Enumeration__(this, outer);
    const this$1 = outer.s_Enumeration__f_scala$Enumeration$$vmap;
    const assertion = (!this$1.contains__O__Z(i));
    if ((!assertion)) {
      throw new $c_jl_AssertionError((("assertion failed: " + "Duplicate id: ") + this.s_Enumeration$Val__f_i))
    };
    const this$3 = outer.s_Enumeration__f_scala$Enumeration$$vmap;
    $p_scm_HashMap__put0__O__O__Z__s_Some(this$3, i, this, false);
    outer.s_Enumeration__f_scala$Enumeration$$vsetDefined = false;
    outer.s_Enumeration__f_nextId = ((1 + i) | 0);
    if ((outer.s_Enumeration__f_nextId > outer.s_Enumeration__f_scala$Enumeration$$topId)) {
      outer.s_Enumeration__f_scala$Enumeration$$topId = outer.s_Enumeration__f_nextId
    };
    if ((i < outer.s_Enumeration__f_scala$Enumeration$$bottomId)) {
      outer.s_Enumeration__f_scala$Enumeration$$bottomId = i
    }
  };
  toString__T() {
    return ((this.s_Enumeration$Val__f_name !== null) ? this.s_Enumeration$Val__f_name : (((("<Unknown name for enum field #" + this.s_Enumeration$Val__f_i) + " of class ") + $objectGetClass(this)) + ">"))
  };
}
const $d_s_Enumeration$Val = new $TypeData().initClass({
  s_Enumeration$Val: 0
}, false, "scala.Enumeration$Val", {
  s_Enumeration$Val: 1,
  s_Enumeration$Value: 1,
  O: 1,
  s_math_Ordered: 1,
  jl_Comparable: 1,
  Ljava_io_Serializable: 1
});
$c_s_Enumeration$Val.prototype.$classData = $d_s_Enumeration$Val;
const $p_s_MatchError__objString$lzycompute__T = (function($thiz) {
  if ((!$thiz.s_MatchError__f_bitmap$0)) {
    $thiz.s_MatchError__f_objString = (($thiz.s_MatchError__f_obj === null) ? "null" : $p_s_MatchError__liftedTree1$1__T($thiz));
    $thiz.s_MatchError__f_bitmap$0 = true
  };
  return $thiz.s_MatchError__f_objString
});
const $p_s_MatchError__objString__T = (function($thiz) {
  return ((!$thiz.s_MatchError__f_bitmap$0) ? $p_s_MatchError__objString$lzycompute__T($thiz) : $thiz.s_MatchError__f_objString)
});
const $p_s_MatchError__ofClass$1__T = (function($thiz) {
  const this$1 = $thiz.s_MatchError__f_obj;
  return ("of class " + $objectClassName(this$1))
});
const $p_s_MatchError__liftedTree1$1__T = (function($thiz) {
  try {
    return ((($dp_toString__T($thiz.s_MatchError__f_obj) + " (") + $p_s_MatchError__ofClass$1__T($thiz)) + ")")
  } catch (e) {
    const e$2 = $m_sjsr_package$().wrapJavaScriptException__O__jl_Throwable(e);
    if ((e$2 !== null)) {
      return ("an instance " + $p_s_MatchError__ofClass$1__T($thiz))
    } else {
      throw e
    }
  }
});
class $c_s_MatchError extends $c_jl_RuntimeException {
  constructor(obj) {
    super();
    this.s_MatchError__f_objString = null;
    this.s_MatchError__f_obj = null;
    this.s_MatchError__f_bitmap$0 = false;
    this.s_MatchError__f_obj = obj;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
  getMessage__T() {
    return $p_s_MatchError__objString__T(this)
  };
}
const $d_s_MatchError = new $TypeData().initClass({
  s_MatchError: 0
}, false, "scala.MatchError", {
  s_MatchError: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_s_MatchError.prototype.$classData = $d_s_MatchError;
class $c_s_Option extends $c_O {
  isEmpty__Z() {
    return (this === $m_s_None$())
  };
  knownSize__I() {
    return (this.isEmpty__Z() ? 0 : 1)
  };
  iterator__sc_Iterator() {
    if (this.isEmpty__Z()) {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty
    } else {
      $m_sc_Iterator$();
      const a = this.get__O();
      return new $c_sc_Iterator$$anon$20(a)
    }
  };
}
function $isArrayOf_s_Option(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_Option)))
}
class $c_s_Product$$anon$1 extends $c_sc_AbstractIterator {
  constructor(outer) {
    super();
    this.s_Product$$anon$1__f_c = 0;
    this.s_Product$$anon$1__f_cmax = 0;
    this.s_Product$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.s_Product$$anon$1__f_$outer = outer
    };
    this.s_Product$$anon$1__f_c = 0;
    this.s_Product$$anon$1__f_cmax = outer.productArity__I()
  };
  hasNext__Z() {
    return (this.s_Product$$anon$1__f_c < this.s_Product$$anon$1__f_cmax)
  };
  next__O() {
    const result = this.s_Product$$anon$1__f_$outer.productElement__I__O(this.s_Product$$anon$1__f_c);
    this.s_Product$$anon$1__f_c = ((1 + this.s_Product$$anon$1__f_c) | 0);
    return result
  };
}
const $d_s_Product$$anon$1 = new $TypeData().initClass({
  s_Product$$anon$1: 0
}, false, "scala.Product$$anon$1", {
  s_Product$$anon$1: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_s_Product$$anon$1.prototype.$classData = $d_s_Product$$anon$1;
const $ct_T2__O__O__ = (function($thiz, _1, _2) {
  $thiz.T2__f__1 = _1;
  $thiz.T2__f__2 = _2;
  return $thiz
});
class $c_T2 extends $c_O {
  constructor() {
    super();
    this.T2__f__1 = null;
    this.T2__f__2 = null
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(n) {
    return $f_s_Product2__productElement__I__O(this, n)
  };
  _1__O() {
    return this.T2__f__1
  };
  _2__O() {
    return this.T2__f__2
  };
  toString__T() {
    return (((("(" + this._1__O()) + ",") + this._2__O()) + ")")
  };
  productPrefix__T() {
    return "Tuple2"
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_T2)) {
      const Tuple2$1 = x$1;
      return ($m_sr_BoxesRunTime$().equals__O__O__Z(this._1__O(), Tuple2$1._1__O()) && $m_sr_BoxesRunTime$().equals__O__O__Z(this._2__O(), Tuple2$1._2__O()))
    } else {
      return false
    }
  };
  _1$mcI$sp__I() {
    return (this._1__O() | 0)
  };
  _2$mcI$sp__I() {
    return (this._2__O() | 0)
  };
}
function $isArrayOf_T2(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.T2)))
}
const $d_T2 = new $TypeData().initClass({
  T2: 0
}, false, "scala.Tuple2", {
  T2: 1,
  O: 1,
  s_Product2: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_T2.prototype.$classData = $d_T2;
class $c_sc_BitSetOps$$anon$1 extends $c_sc_AbstractIterator {
  constructor(outer, start$1) {
    super();
    this.sc_BitSetOps$$anon$1__f_current = 0;
    this.sc_BitSetOps$$anon$1__f_end = 0;
    this.sc_BitSetOps$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sc_BitSetOps$$anon$1__f_$outer = outer
    };
    this.sc_BitSetOps$$anon$1__f_current = start$1;
    this.sc_BitSetOps$$anon$1__f_end = (outer.nwords__I() << 6)
  };
  hasNext__Z() {
    while (true) {
      let $$x1;
      if ((this.sc_BitSetOps$$anon$1__f_current !== this.sc_BitSetOps$$anon$1__f_end)) {
        const this$1 = this.sc_BitSetOps$$anon$1__f_$outer;
        const elem = this.sc_BitSetOps$$anon$1__f_current;
        $$x1 = (!$f_sc_BitSetOps__contains__I__Z(this$1, elem))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        this.sc_BitSetOps$$anon$1__f_current = ((1 + this.sc_BitSetOps$$anon$1__f_current) | 0)
      } else {
        break
      }
    };
    return (this.sc_BitSetOps$$anon$1__f_current !== this.sc_BitSetOps$$anon$1__f_end)
  };
  next__I() {
    if (this.hasNext__Z()) {
      const r = this.sc_BitSetOps$$anon$1__f_current;
      this.sc_BitSetOps$$anon$1__f_current = ((1 + this.sc_BitSetOps$$anon$1__f_current) | 0);
      return r
    } else {
      return ($m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O() | 0)
    }
  };
  next__O() {
    return this.next__I()
  };
}
const $d_sc_BitSetOps$$anon$1 = new $TypeData().initClass({
  sc_BitSetOps$$anon$1: 0
}, false, "scala.collection.BitSetOps$$anon$1", {
  sc_BitSetOps$$anon$1: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_BitSetOps$$anon$1.prototype.$classData = $d_sc_BitSetOps$$anon$1;
class $c_sc_ClassTagSeqFactory$AnySeqDelegate extends $c_sc_ClassTagIterableFactory$AnyIterableDelegate {
  constructor(delegate) {
    super();
    $ct_sc_ClassTagIterableFactory$AnyIterableDelegate__sc_ClassTagIterableFactory__(this, delegate)
  };
}
const $d_sc_ClassTagSeqFactory$AnySeqDelegate = new $TypeData().initClass({
  sc_ClassTagSeqFactory$AnySeqDelegate: 0
}, false, "scala.collection.ClassTagSeqFactory$AnySeqDelegate", {
  sc_ClassTagSeqFactory$AnySeqDelegate: 1,
  sc_ClassTagIterableFactory$AnyIterableDelegate: 1,
  O: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1,
  sc_SeqFactory: 1
});
$c_sc_ClassTagSeqFactory$AnySeqDelegate.prototype.$classData = $d_sc_ClassTagSeqFactory$AnySeqDelegate;
const $f_sc_IndexedSeqOps__drop__I__O = (function($thiz, n) {
  return $thiz.fromSpecific__sc_IterableOnce__O(new $c_sc_IndexedSeqView$Drop($thiz, n))
});
const $f_sc_IndexedSeqOps__map__F1__O = (function($thiz, f) {
  return $thiz.iterableFactory__sc_IterableFactory().from__sc_IterableOnce__O(new $c_sc_IndexedSeqView$Map($thiz, f))
});
const $f_sc_IndexedSeqOps__last__O = (function($thiz) {
  return $thiz.apply__I__O((((-1) + $thiz.length__I()) | 0))
});
class $c_sc_IndexedSeqOps$$anon$1 extends $c_sc_AbstractIterator {
  constructor(outer) {
    super();
    this.sc_IndexedSeqOps$$anon$1__f_i = 0;
    this.sc_IndexedSeqOps$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sc_IndexedSeqOps$$anon$1__f_$outer = outer
    };
    this.sc_IndexedSeqOps$$anon$1__f_i = outer.length__I()
  };
  hasNext__Z() {
    return (this.sc_IndexedSeqOps$$anon$1__f_i > 0)
  };
  next__O() {
    if ((this.sc_IndexedSeqOps$$anon$1__f_i > 0)) {
      this.sc_IndexedSeqOps$$anon$1__f_i = (((-1) + this.sc_IndexedSeqOps$$anon$1__f_i) | 0);
      return this.sc_IndexedSeqOps$$anon$1__f_$outer.apply__I__O(this.sc_IndexedSeqOps$$anon$1__f_i)
    } else {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    }
  };
}
const $d_sc_IndexedSeqOps$$anon$1 = new $TypeData().initClass({
  sc_IndexedSeqOps$$anon$1: 0
}, false, "scala.collection.IndexedSeqOps$$anon$1", {
  sc_IndexedSeqOps$$anon$1: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_IndexedSeqOps$$anon$1.prototype.$classData = $d_sc_IndexedSeqOps$$anon$1;
const $f_sc_Iterable__toString__T = (function($thiz) {
  const start = ($thiz.className__T() + "(");
  return $f_sc_IterableOnceOps__mkString__T__T__T__T($thiz, start, ", ", ")")
});
function $is_sc_Iterable(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_Iterable)))
}
function $isArrayOf_sc_Iterable(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_Iterable)))
}
class $c_sc_Iterator$$anon$11 extends $c_sc_AbstractIterator {
  constructor(outer, p$2) {
    super();
    this.sc_Iterator$$anon$11__f_hd = null;
    this.sc_Iterator$$anon$11__f_hdDefined = false;
    this.sc_Iterator$$anon$11__f_tail = null;
    this.sc_Iterator$$anon$11__f_p$2 = null;
    this.sc_Iterator$$anon$11__f_p$2 = p$2;
    this.sc_Iterator$$anon$11__f_hdDefined = false;
    this.sc_Iterator$$anon$11__f_tail = outer
  };
  hasNext__Z() {
    if (this.sc_Iterator$$anon$11__f_hdDefined) {
      return true
    } else if (this.sc_Iterator$$anon$11__f_tail.hasNext__Z()) {
      this.sc_Iterator$$anon$11__f_hd = this.sc_Iterator$$anon$11__f_tail.next__O();
      if ((!(!this.sc_Iterator$$anon$11__f_p$2.apply__O__O(this.sc_Iterator$$anon$11__f_hd)))) {
        this.sc_Iterator$$anon$11__f_hdDefined = true
      } else {
        this.sc_Iterator$$anon$11__f_tail = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty
      };
      return this.sc_Iterator$$anon$11__f_hdDefined
    } else {
      return false
    }
  };
  next__O() {
    if (this.hasNext__Z()) {
      this.sc_Iterator$$anon$11__f_hdDefined = false;
      return this.sc_Iterator$$anon$11__f_hd
    } else {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    }
  };
}
const $d_sc_Iterator$$anon$11 = new $TypeData().initClass({
  sc_Iterator$$anon$11: 0
}, false, "scala.collection.Iterator$$anon$11", {
  sc_Iterator$$anon$11: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_Iterator$$anon$11.prototype.$classData = $d_sc_Iterator$$anon$11;
class $c_sc_Iterator$$anon$19 extends $c_sc_AbstractIterator {
  hasNext__Z() {
    return false
  };
  next__E() {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "next on empty iterator")
  };
  knownSize__I() {
    return 0
  };
  next__O() {
    this.next__E()
  };
}
const $d_sc_Iterator$$anon$19 = new $TypeData().initClass({
  sc_Iterator$$anon$19: 0
}, false, "scala.collection.Iterator$$anon$19", {
  sc_Iterator$$anon$19: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_Iterator$$anon$19.prototype.$classData = $d_sc_Iterator$$anon$19;
class $c_sc_Iterator$$anon$20 extends $c_sc_AbstractIterator {
  constructor(a$1) {
    super();
    this.sc_Iterator$$anon$20__f_consumed = false;
    this.sc_Iterator$$anon$20__f_a$1 = null;
    this.sc_Iterator$$anon$20__f_a$1 = a$1;
    this.sc_Iterator$$anon$20__f_consumed = false
  };
  hasNext__Z() {
    return (!this.sc_Iterator$$anon$20__f_consumed)
  };
  next__O() {
    if (this.sc_Iterator$$anon$20__f_consumed) {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    } else {
      this.sc_Iterator$$anon$20__f_consumed = true;
      return this.sc_Iterator$$anon$20__f_a$1
    }
  };
}
const $d_sc_Iterator$$anon$20 = new $TypeData().initClass({
  sc_Iterator$$anon$20: 0
}, false, "scala.collection.Iterator$$anon$20", {
  sc_Iterator$$anon$20: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_Iterator$$anon$20.prototype.$classData = $d_sc_Iterator$$anon$20;
class $c_sc_Iterator$$anon$23 extends $c_sc_AbstractIterator {
  constructor(end$1, f$5) {
    super();
    this.sc_Iterator$$anon$23__f_i = 0;
    this.sc_Iterator$$anon$23__f_end$1 = 0;
    this.sc_Iterator$$anon$23__f_f$5 = null;
    this.sc_Iterator$$anon$23__f_end$1 = end$1;
    this.sc_Iterator$$anon$23__f_f$5 = f$5;
    this.sc_Iterator$$anon$23__f_i = 0
  };
  knownSize__I() {
    const x = ((this.sc_Iterator$$anon$23__f_end$1 - this.sc_Iterator$$anon$23__f_i) | 0);
    return ((x > 0) ? x : 0)
  };
  hasNext__Z() {
    return (this.sc_Iterator$$anon$23__f_i < this.sc_Iterator$$anon$23__f_end$1)
  };
  next__O() {
    if (this.hasNext__Z()) {
      const result = this.sc_Iterator$$anon$23__f_f$5.apply__O__O(this.sc_Iterator$$anon$23__f_i);
      this.sc_Iterator$$anon$23__f_i = ((1 + this.sc_Iterator$$anon$23__f_i) | 0);
      return result
    } else {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    }
  };
}
const $d_sc_Iterator$$anon$23 = new $TypeData().initClass({
  sc_Iterator$$anon$23: 0
}, false, "scala.collection.Iterator$$anon$23", {
  sc_Iterator$$anon$23: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_Iterator$$anon$23.prototype.$classData = $d_sc_Iterator$$anon$23;
class $c_sc_Iterator$$anon$6 extends $c_sc_AbstractIterator {
  constructor(outer, p$1, isFlipped$1) {
    super();
    this.sc_Iterator$$anon$6__f_hd = null;
    this.sc_Iterator$$anon$6__f_hdDefined = false;
    this.sc_Iterator$$anon$6__f_$outer = null;
    this.sc_Iterator$$anon$6__f_p$1 = null;
    this.sc_Iterator$$anon$6__f_isFlipped$1 = false;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sc_Iterator$$anon$6__f_$outer = outer
    };
    this.sc_Iterator$$anon$6__f_p$1 = p$1;
    this.sc_Iterator$$anon$6__f_isFlipped$1 = isFlipped$1;
    this.sc_Iterator$$anon$6__f_hdDefined = false
  };
  hasNext__Z() {
    if (this.sc_Iterator$$anon$6__f_hdDefined) {
      return true
    } else {
      do {
        if ((!this.sc_Iterator$$anon$6__f_$outer.hasNext__Z())) {
          return false
        };
        this.sc_Iterator$$anon$6__f_hd = this.sc_Iterator$$anon$6__f_$outer.next__O()
      } while (((!(!this.sc_Iterator$$anon$6__f_p$1.apply__O__O(this.sc_Iterator$$anon$6__f_hd))) === this.sc_Iterator$$anon$6__f_isFlipped$1));
      this.sc_Iterator$$anon$6__f_hdDefined = true;
      return true
    }
  };
  next__O() {
    if (this.hasNext__Z()) {
      this.sc_Iterator$$anon$6__f_hdDefined = false;
      return this.sc_Iterator$$anon$6__f_hd
    } else {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    }
  };
}
const $d_sc_Iterator$$anon$6 = new $TypeData().initClass({
  sc_Iterator$$anon$6: 0
}, false, "scala.collection.Iterator$$anon$6", {
  sc_Iterator$$anon$6: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_Iterator$$anon$6.prototype.$classData = $d_sc_Iterator$$anon$6;
class $c_sc_Iterator$$anon$9 extends $c_sc_AbstractIterator {
  constructor(outer, f$2) {
    super();
    this.sc_Iterator$$anon$9__f_$outer = null;
    this.sc_Iterator$$anon$9__f_f$2 = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sc_Iterator$$anon$9__f_$outer = outer
    };
    this.sc_Iterator$$anon$9__f_f$2 = f$2
  };
  knownSize__I() {
    return this.sc_Iterator$$anon$9__f_$outer.knownSize__I()
  };
  hasNext__Z() {
    return this.sc_Iterator$$anon$9__f_$outer.hasNext__Z()
  };
  next__O() {
    return this.sc_Iterator$$anon$9__f_f$2.apply__O__O(this.sc_Iterator$$anon$9__f_$outer.next__O())
  };
}
const $d_sc_Iterator$$anon$9 = new $TypeData().initClass({
  sc_Iterator$$anon$9: 0
}, false, "scala.collection.Iterator$$anon$9", {
  sc_Iterator$$anon$9: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_Iterator$$anon$9.prototype.$classData = $d_sc_Iterator$$anon$9;
const $p_sc_Iterator$ConcatIterator__advance__Z = (function($thiz) {
  while (true) {
    if (($thiz.sc_Iterator$ConcatIterator__f_tail === null)) {
      $thiz.sc_Iterator$ConcatIterator__f_current = null;
      $thiz.sc_Iterator$ConcatIterator__f_last = null;
      return false
    } else {
      $thiz.sc_Iterator$ConcatIterator__f_current = $thiz.sc_Iterator$ConcatIterator__f_tail.headIterator__sc_Iterator();
      $thiz.sc_Iterator$ConcatIterator__f_tail = $thiz.sc_Iterator$ConcatIterator__f_tail.sc_Iterator$ConcatIteratorCell__f_tail;
      $p_sc_Iterator$ConcatIterator__merge__V($thiz);
      if ($thiz.sc_Iterator$ConcatIterator__f_currentHasNextChecked) {
        return true
      } else if ((($thiz.sc_Iterator$ConcatIterator__f_current !== null) && $thiz.sc_Iterator$ConcatIterator__f_current.hasNext__Z())) {
        $thiz.sc_Iterator$ConcatIterator__f_currentHasNextChecked = true;
        return true
      }
    }
  }
});
const $p_sc_Iterator$ConcatIterator__merge__V = (function($thiz) {
  while (true) {
    if (($thiz.sc_Iterator$ConcatIterator__f_current instanceof $c_sc_Iterator$ConcatIterator)) {
      const c = $thiz.sc_Iterator$ConcatIterator__f_current;
      $thiz.sc_Iterator$ConcatIterator__f_current = c.sc_Iterator$ConcatIterator__f_current;
      $thiz.sc_Iterator$ConcatIterator__f_currentHasNextChecked = c.sc_Iterator$ConcatIterator__f_currentHasNextChecked;
      if ((c.sc_Iterator$ConcatIterator__f_tail !== null)) {
        c.sc_Iterator$ConcatIterator__f_last.sc_Iterator$ConcatIteratorCell__f_tail = $thiz.sc_Iterator$ConcatIterator__f_tail;
        $thiz.sc_Iterator$ConcatIterator__f_tail = c.sc_Iterator$ConcatIterator__f_tail
      };
      continue
    };
    break
  }
});
class $c_sc_Iterator$ConcatIterator extends $c_sc_AbstractIterator {
  constructor(current) {
    super();
    this.sc_Iterator$ConcatIterator__f_current = null;
    this.sc_Iterator$ConcatIterator__f_tail = null;
    this.sc_Iterator$ConcatIterator__f_last = null;
    this.sc_Iterator$ConcatIterator__f_currentHasNextChecked = false;
    this.sc_Iterator$ConcatIterator__f_current = current;
    this.sc_Iterator$ConcatIterator__f_tail = null;
    this.sc_Iterator$ConcatIterator__f_last = null;
    this.sc_Iterator$ConcatIterator__f_currentHasNextChecked = false
  };
  hasNext__Z() {
    if (this.sc_Iterator$ConcatIterator__f_currentHasNextChecked) {
      return true
    } else if ((this.sc_Iterator$ConcatIterator__f_current !== null)) {
      if (this.sc_Iterator$ConcatIterator__f_current.hasNext__Z()) {
        this.sc_Iterator$ConcatIterator__f_currentHasNextChecked = true;
        return true
      } else {
        return $p_sc_Iterator$ConcatIterator__advance__Z(this)
      }
    } else {
      return false
    }
  };
  next__O() {
    if (this.hasNext__Z()) {
      this.sc_Iterator$ConcatIterator__f_currentHasNextChecked = false;
      return this.sc_Iterator$ConcatIterator__f_current.next__O()
    } else {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    }
  };
  concat__F0__sc_Iterator(that) {
    const c = new $c_sc_Iterator$ConcatIteratorCell(that, null);
    if ((this.sc_Iterator$ConcatIterator__f_tail === null)) {
      this.sc_Iterator$ConcatIterator__f_tail = c;
      this.sc_Iterator$ConcatIterator__f_last = c
    } else {
      this.sc_Iterator$ConcatIterator__f_last.sc_Iterator$ConcatIteratorCell__f_tail = c;
      this.sc_Iterator$ConcatIterator__f_last = c
    };
    if ((this.sc_Iterator$ConcatIterator__f_current === null)) {
      this.sc_Iterator$ConcatIterator__f_current = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty
    };
    return this
  };
}
function $isArrayOf_sc_Iterator$ConcatIterator(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_Iterator$ConcatIterator)))
}
const $d_sc_Iterator$ConcatIterator = new $TypeData().initClass({
  sc_Iterator$ConcatIterator: 0
}, false, "scala.collection.Iterator$ConcatIterator", {
  sc_Iterator$ConcatIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_Iterator$ConcatIterator.prototype.$classData = $d_sc_Iterator$ConcatIterator;
class $c_sc_LinearSeqIterator extends $c_sc_AbstractIterator {
  constructor(coll) {
    super();
    this.sc_LinearSeqIterator__f_coll = null;
    this.sc_LinearSeqIterator__f_these = null;
    this.sc_LinearSeqIterator__f_coll = coll;
    this.sc_LinearSeqIterator__f_these = new $c_sc_LinearSeqIterator$LazyCell(this, new $c_sjsr_AnonFunction0(((this$1) => (() => this$1.sc_LinearSeqIterator__f_coll))(this)))
  };
  hasNext__Z() {
    const this$1 = this.sc_LinearSeqIterator__f_these.v__sc_LinearSeqOps();
    return (!this$1.isEmpty__Z())
  };
  next__O() {
    if ((!this.hasNext__Z())) {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    } else {
      const cur = this.sc_LinearSeqIterator__f_these.v__sc_LinearSeqOps();
      const result = cur.head__O();
      this.sc_LinearSeqIterator__f_these = new $c_sc_LinearSeqIterator$LazyCell(this, new $c_sjsr_AnonFunction0(((this$1, cur$1) => (() => cur$1.tail__O()))(this, cur)));
      return result
    }
  };
}
const $d_sc_LinearSeqIterator = new $TypeData().initClass({
  sc_LinearSeqIterator: 0
}, false, "scala.collection.LinearSeqIterator", {
  sc_LinearSeqIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_LinearSeqIterator.prototype.$classData = $d_sc_LinearSeqIterator;
const $p_sc_LinearSeqOps__loop$1__I__sc_LinearSeq__I__I = (function($thiz, i, xs, len$1) {
  while (true) {
    if ((i === len$1)) {
      return (xs.isEmpty__Z() ? 0 : 1)
    } else if (xs.isEmpty__Z()) {
      return (-1)
    } else {
      const temp$i = ((1 + i) | 0);
      const temp$xs = xs.tail__O();
      i = temp$i;
      xs = temp$xs
    }
  }
});
const $p_sc_LinearSeqOps__linearSeqEq$1__sc_LinearSeq__sc_LinearSeq__Z = (function($thiz, a, b) {
  while (true) {
    if ((a === b)) {
      return true
    } else {
      const this$1 = a;
      let $$x1;
      if ((!this$1.isEmpty__Z())) {
        const this$2 = b;
        $$x1 = (!this$2.isEmpty__Z())
      } else {
        $$x1 = false
      };
      if (($$x1 && $m_sr_BoxesRunTime$().equals__O__O__Z(a.head__O(), b.head__O()))) {
        const temp$a = a.tail__O();
        const temp$b = b.tail__O();
        a = temp$a;
        b = temp$b
      } else {
        return (a.isEmpty__Z() && b.isEmpty__Z())
      }
    }
  }
});
const $f_sc_LinearSeqOps__iterator__sc_Iterator = (function($thiz) {
  return (($thiz.knownSize__I() === 0) ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_sc_LinearSeqIterator($thiz))
});
const $f_sc_LinearSeqOps__length__I = (function($thiz) {
  let these = $thiz;
  let len = 0;
  while (true) {
    const this$1 = these;
    if ((!this$1.isEmpty__Z())) {
      len = ((1 + len) | 0);
      these = these.tail__O()
    } else {
      break
    }
  };
  return len
});
const $f_sc_LinearSeqOps__last__O = (function($thiz) {
  if ($thiz.isEmpty__Z()) {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "LinearSeq.last")
  } else {
    let these = $thiz;
    let scout = $thiz.tail__O();
    while (true) {
      const this$1 = scout;
      if ((!this$1.isEmpty__Z())) {
        these = scout;
        scout = scout.tail__O()
      } else {
        break
      }
    };
    return these.head__O()
  }
});
const $f_sc_LinearSeqOps__lengthCompare__I__I = (function($thiz, len) {
  return ((len < 0) ? 1 : $p_sc_LinearSeqOps__loop$1__I__sc_LinearSeq__I__I($thiz, 0, $thiz, len))
});
const $f_sc_LinearSeqOps__apply__I__O = (function($thiz, n) {
  if ((n < 0)) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), ("" + n))
  };
  const skipped = $thiz.drop__I__O(n);
  if (skipped.isEmpty__Z()) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), ("" + n))
  };
  return skipped.head__O()
});
const $f_sc_LinearSeqOps__exists__F1__Z = (function($thiz, p) {
  let these = $thiz;
  while ((!these.isEmpty__Z())) {
    if ((!(!p.apply__O__O(these.head__O())))) {
      return true
    };
    these = these.tail__O()
  };
  return false
});
const $f_sc_LinearSeqOps__contains__O__Z = (function($thiz, elem) {
  let these = $thiz;
  while ((!these.isEmpty__Z())) {
    if ($m_sr_BoxesRunTime$().equals__O__O__Z(these.head__O(), elem)) {
      return true
    };
    these = these.tail__O()
  };
  return false
});
const $f_sc_LinearSeqOps__sameElements__sc_IterableOnce__Z = (function($thiz, that) {
  if ($is_sc_LinearSeq(that)) {
    const x2 = that;
    return $p_sc_LinearSeqOps__linearSeqEq$1__sc_LinearSeq__sc_LinearSeq__Z($thiz, $thiz, x2)
  } else {
    return $f_sc_SeqOps__sameElements__sc_IterableOnce__Z($thiz, that)
  }
});
const $f_sc_LinearSeqOps__indexWhere__F1__I__I = (function($thiz, p, from) {
  let i = ((from > 0) ? from : 0);
  let these = $thiz.drop__I__O(from);
  while (true) {
    const this$3 = these;
    if ((!this$3.isEmpty__Z())) {
      if ((!(!p.apply__O__O(these.head__O())))) {
        return i
      };
      i = ((1 + i) | 0);
      these = these.tail__O()
    } else {
      break
    }
  };
  return (-1)
});
function $is_sc_LinearSeqOps(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_LinearSeqOps)))
}
function $isArrayOf_sc_LinearSeqOps(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_LinearSeqOps)))
}
class $c_sc_MapOps$$anon$3 extends $c_sc_AbstractIterator {
  constructor(outer) {
    super();
    this.sc_MapOps$$anon$3__f_iter = null;
    this.sc_MapOps$$anon$3__f_iter = outer.iterator__sc_Iterator()
  };
  hasNext__Z() {
    return this.sc_MapOps$$anon$3__f_iter.hasNext__Z()
  };
  next__O() {
    return this.sc_MapOps$$anon$3__f_iter.next__O()._2__O()
  };
}
const $d_sc_MapOps$$anon$3 = new $TypeData().initClass({
  sc_MapOps$$anon$3: 0
}, false, "scala.collection.MapOps$$anon$3", {
  sc_MapOps$$anon$3: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_MapOps$$anon$3.prototype.$classData = $d_sc_MapOps$$anon$3;
const $f_sc_StrictOptimizedClassTagSeqFactory__tabulate__I__F1__s_reflect_ClassTag__sc_SeqOps = (function($thiz, n, f, evidence$35) {
  const b = $thiz.newBuilder__s_reflect_ClassTag__scm_Builder(evidence$35);
  b.sizeHint__I__V(n);
  let i = 0;
  while ((i < n)) {
    const elem = f.apply__O__O(i);
    b.addOne__O__scm_Growable(elem);
    i = ((1 + i) | 0)
  };
  return b.result__O()
});
class $c_sc_StrictOptimizedLinearSeqOps$$anon$1 extends $c_sc_AbstractIterator {
  constructor(outer) {
    super();
    this.sc_StrictOptimizedLinearSeqOps$$anon$1__f_current = null;
    this.sc_StrictOptimizedLinearSeqOps$$anon$1__f_current = outer
  };
  hasNext__Z() {
    return (!this.sc_StrictOptimizedLinearSeqOps$$anon$1__f_current.isEmpty__Z())
  };
  next__O() {
    const r = this.sc_StrictOptimizedLinearSeqOps$$anon$1__f_current.head__O();
    this.sc_StrictOptimizedLinearSeqOps$$anon$1__f_current = this.sc_StrictOptimizedLinearSeqOps$$anon$1__f_current.tail__O();
    return r
  };
}
const $d_sc_StrictOptimizedLinearSeqOps$$anon$1 = new $TypeData().initClass({
  sc_StrictOptimizedLinearSeqOps$$anon$1: 0
}, false, "scala.collection.StrictOptimizedLinearSeqOps$$anon$1", {
  sc_StrictOptimizedLinearSeqOps$$anon$1: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_StrictOptimizedLinearSeqOps$$anon$1.prototype.$classData = $d_sc_StrictOptimizedLinearSeqOps$$anon$1;
const $p_sc_StringOps$$anon$1__advance__T = (function($thiz) {
  const start = $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index;
  while (true) {
    let $$x1;
    if (($thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index < $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len)) {
      const this$ = $thiz.sc_StringOps$$anon$1__f_$this$2;
      const i = $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index;
      const c = (65535 & (this$.charCodeAt(i) | 0));
      $$x1 = (!((c === 13) || (c === 10)))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index = ((1 + $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index) | 0)
    } else {
      break
    }
  };
  let end = $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index;
  if (($thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index < $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len)) {
    const this$$2 = $thiz.sc_StringOps$$anon$1__f_$this$2;
    const i$1 = $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index;
    const c$1 = (65535 & (this$$2.charCodeAt(i$1) | 0));
    $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index = ((1 + $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index) | 0);
    let $$x2;
    if (($thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index < $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len)) {
      const this$$3 = $thiz.sc_StringOps$$anon$1__f_$this$2;
      const i$2 = $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index;
      const c$2 = (65535 & (this$$3.charCodeAt(i$2) | 0));
      $$x2 = ((c$1 === 13) && (c$2 === 10))
    } else {
      $$x2 = false
    };
    if ($$x2) {
      $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index = ((1 + $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index) | 0)
    };
    if ((!$thiz.sc_StringOps$$anon$1__f_stripped$1)) {
      end = $thiz.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index
    }
  };
  const this$6 = $thiz.sc_StringOps$$anon$1__f_$this$2;
  const endIndex = end;
  return this$6.substring(start, endIndex)
});
class $c_sc_StringOps$$anon$1 extends $c_sc_AbstractIterator {
  constructor(\u03b4this$2, stripped$1) {
    super();
    this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len = 0;
    this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index = 0;
    this.sc_StringOps$$anon$1__f_$this$2 = null;
    this.sc_StringOps$$anon$1__f_stripped$1 = false;
    this.sc_StringOps$$anon$1__f_$this$2 = \u03b4this$2;
    this.sc_StringOps$$anon$1__f_stripped$1 = stripped$1;
    this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len = (\u03b4this$2.length | 0);
    this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index = 0
  };
  hasNext__Z() {
    return (this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index < this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len)
  };
  next__T() {
    return ((this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$index >= this.sc_StringOps$$anon$1__f_scala$collection$StringOps$$anon$$len) ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O() : $p_sc_StringOps$$anon$1__advance__T(this))
  };
  next__O() {
    return this.next__T()
  };
}
const $d_sc_StringOps$$anon$1 = new $TypeData().initClass({
  sc_StringOps$$anon$1: 0
}, false, "scala.collection.StringOps$$anon$1", {
  sc_StringOps$$anon$1: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sc_StringOps$$anon$1.prototype.$classData = $d_sc_StringOps$$anon$1;
const $p_sci_HashMapBuilder__isAliased__Z = (function($thiz) {
  return ($thiz.sci_HashMapBuilder__f_aliased !== null)
});
const $p_sci_HashMapBuilder__insertElement__AI__I__I__AI = (function($thiz, as, ix, elem) {
  if ((ix < 0)) {
    throw $ct_jl_ArrayIndexOutOfBoundsException__(new $c_jl_ArrayIndexOutOfBoundsException())
  };
  if ((ix > as.u.length)) {
    throw $ct_jl_ArrayIndexOutOfBoundsException__(new $c_jl_ArrayIndexOutOfBoundsException())
  };
  const result = $newArrayObject($d_I.getArrayOf(), [((1 + as.u.length) | 0)]);
  $systemArraycopy(as, 0, result, 0, ix);
  result.u[ix] = elem;
  const destPos = ((1 + ix) | 0);
  const length = ((as.u.length - ix) | 0);
  $systemArraycopy(as, ix, result, destPos, length);
  return result
});
const $p_sci_HashMapBuilder__insertValue__sci_BitmapIndexedMapNode__I__O__I__I__O__V = (function($thiz, bm, bitpos, key, originalHash, keyHash, value) {
  const dataIx = bm.dataIndex__I__I(bitpos);
  const idx = (dataIx << 1);
  const src = bm.sci_BitmapIndexedMapNode__f_content;
  const dst = $newArrayObject($d_O.getArrayOf(), [((2 + src.u.length) | 0)]);
  $systemArraycopy(src, 0, dst, 0, idx);
  dst.u[idx] = key;
  dst.u[((1 + idx) | 0)] = value;
  const destPos = ((2 + idx) | 0);
  const length = ((src.u.length - idx) | 0);
  $systemArraycopy(src, idx, dst, destPos, length);
  const dstHashes = $p_sci_HashMapBuilder__insertElement__AI__I__I__AI($thiz, bm.sci_BitmapIndexedMapNode__f_originalHashes, dataIx, originalHash);
  bm.sci_BitmapIndexedMapNode__f_dataMap = (bm.sci_BitmapIndexedMapNode__f_dataMap | bitpos);
  bm.sci_BitmapIndexedMapNode__f_content = dst;
  bm.sci_BitmapIndexedMapNode__f_originalHashes = dstHashes;
  bm.sci_BitmapIndexedMapNode__f_size = ((1 + bm.sci_BitmapIndexedMapNode__f_size) | 0);
  bm.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode = ((bm.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode + keyHash) | 0)
});
const $p_sci_HashMapBuilder__ensureUnaliased__V = (function($thiz) {
  if ($p_sci_HashMapBuilder__isAliased__Z($thiz)) {
    $p_sci_HashMapBuilder__copyElems__V($thiz)
  };
  $thiz.sci_HashMapBuilder__f_aliased = null
});
const $p_sci_HashMapBuilder__copyElems__V = (function($thiz) {
  $thiz.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode = $thiz.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode.copy__sci_BitmapIndexedMapNode()
});
class $c_sci_HashMapBuilder extends $c_O {
  constructor() {
    super();
    this.sci_HashMapBuilder__f_aliased = null;
    this.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode = null;
    this.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode = new $c_sci_BitmapIndexedMapNode(0, 0, $m_s_Array$EmptyArrays$().s_Array$EmptyArrays$__f_emptyObjectArray, $m_s_Array$EmptyArrays$().s_Array$EmptyArrays$__f_emptyIntArray, 0, 0)
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  update__sci_MapNode__O__O__I__I__I__V(mapNode, key, value, originalHash, keyHash, shift) {
    if ((mapNode instanceof $c_sci_BitmapIndexedMapNode)) {
      const x2 = mapNode;
      const mask = $m_sci_Node$().maskFrom__I__I__I(keyHash, shift);
      const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
      if (((x2.sci_BitmapIndexedMapNode__f_dataMap & bitpos) !== 0)) {
        const index = $m_sci_Node$().indexFrom__I__I__I__I(x2.sci_BitmapIndexedMapNode__f_dataMap, mask, bitpos);
        const key0 = x2.getKey__I__O(index);
        const key0UnimprovedHash = x2.getHash__I__I(index);
        if (((key0UnimprovedHash === originalHash) && $m_sr_BoxesRunTime$().equals__O__O__Z(key0, key))) {
          x2.sci_BitmapIndexedMapNode__f_content.u[((1 + (index << 1)) | 0)] = value
        } else {
          const value0 = x2.getValue__I__O(index);
          const key0Hash = $m_sc_Hashing$().improve__I__I(key0UnimprovedHash);
          const subNodeNew = x2.mergeTwoKeyValPairs__O__O__I__I__O__O__I__I__I__sci_MapNode(key0, value0, key0UnimprovedHash, key0Hash, key, value, originalHash, keyHash, ((5 + shift) | 0));
          x2.migrateFromInlineToNodeInPlace__I__I__sci_MapNode__sci_BitmapIndexedMapNode(bitpos, key0Hash, subNodeNew)
        }
      } else if (((x2.sci_BitmapIndexedMapNode__f_nodeMap & bitpos) !== 0)) {
        const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(x2.sci_BitmapIndexedMapNode__f_nodeMap, mask, bitpos);
        const subNode = x2.getNode__I__sci_MapNode(index$2);
        const beforeSize = subNode.size__I();
        const beforeHash = subNode.cachedJavaKeySetHashCode__I();
        this.update__sci_MapNode__O__O__I__I__I__V(subNode, key, value, originalHash, keyHash, ((5 + shift) | 0));
        x2.sci_BitmapIndexedMapNode__f_size = ((x2.sci_BitmapIndexedMapNode__f_size + ((subNode.size__I() - beforeSize) | 0)) | 0);
        x2.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode = ((x2.sci_BitmapIndexedMapNode__f_cachedJavaKeySetHashCode + ((subNode.cachedJavaKeySetHashCode__I() - beforeHash) | 0)) | 0)
      } else {
        $p_sci_HashMapBuilder__insertValue__sci_BitmapIndexedMapNode__I__O__I__I__O__V(this, x2, bitpos, key, originalHash, keyHash, value)
      }
    } else if ((mapNode instanceof $c_sci_HashCollisionMapNode)) {
      const x3 = mapNode;
      const index$3 = x3.indexOf__O__I(key);
      if ((index$3 < 0)) {
        x3.sci_HashCollisionMapNode__f_content = x3.sci_HashCollisionMapNode__f_content.appended__O__sci_Vector($ct_T2__O__O__(new $c_T2(), key, value))
      } else {
        const this$1 = x3.sci_HashCollisionMapNode__f_content;
        const elem = $ct_T2__O__O__(new $c_T2(), key, value);
        x3.sci_HashCollisionMapNode__f_content = this$1.updateAt__I__O__sci_Vector(index$3, elem)
      }
    } else {
      throw new $c_s_MatchError(mapNode)
    }
  };
  result__sci_HashMap() {
    if ((this.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode.sci_BitmapIndexedMapNode__f_size === 0)) {
      const this$1 = $m_sci_HashMap$();
      return this$1.sci_HashMap$__f_EmptyMap
    } else if ((this.sci_HashMapBuilder__f_aliased !== null)) {
      return this.sci_HashMapBuilder__f_aliased
    } else {
      this.sci_HashMapBuilder__f_aliased = new $c_sci_HashMap(this.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode);
      return this.sci_HashMapBuilder__f_aliased
    }
  };
  addOne__T2__sci_HashMapBuilder(elem) {
    $p_sci_HashMapBuilder__ensureUnaliased__V(this);
    const x = elem._1__O();
    const h = $m_sr_Statics$().anyHash__O__I(x);
    const im = $m_sc_Hashing$().improve__I__I(h);
    this.update__sci_MapNode__O__O__I__I__I__V(this.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode, elem._1__O(), elem._2__O(), h, im, 0);
    return this
  };
  addOne__O__O__sci_HashMapBuilder(key, value) {
    $p_sci_HashMapBuilder__ensureUnaliased__V(this);
    const originalHash = $m_sr_Statics$().anyHash__O__I(key);
    this.update__sci_MapNode__O__O__I__I__I__V(this.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode, key, value, originalHash, $m_sc_Hashing$().improve__I__I(originalHash), 0);
    return this
  };
  addAll__sc_IterableOnce__sci_HashMapBuilder(xs) {
    $p_sci_HashMapBuilder__ensureUnaliased__V(this);
    if ((xs instanceof $c_sci_HashMap)) {
      const x2 = xs;
      new $c_sci_HashMapBuilder$$anon$2(this, x2)
    } else if ((xs instanceof $c_scm_HashMap)) {
      const x3 = xs;
      const iter = x3.nodeIterator__sc_Iterator();
      while (iter.hasNext__Z()) {
        const next = iter.next__O();
        const improvedHash = next.scm_HashMap$Node__f__hash;
        const originalHash = (improvedHash ^ ((improvedHash >>> 16) | 0));
        const hash = $m_sc_Hashing$().improve__I__I(originalHash);
        this.update__sci_MapNode__O__O__I__I__I__V(this.sci_HashMapBuilder__f_scala$collection$immutable$HashMapBuilder$$rootNode, next.scm_HashMap$Node__f__key, next.scm_HashMap$Node__f__value, originalHash, hash, 0)
      }
    } else {
      const it = xs.iterator__sc_Iterator();
      while (it.hasNext__Z()) {
        this.addOne__T2__sci_HashMapBuilder(it.next__O())
      }
    };
    return this
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__sci_HashMapBuilder(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__T2__sci_HashMapBuilder(elem)
  };
  result__O() {
    return this.result__sci_HashMap()
  };
}
const $d_sci_HashMapBuilder = new $TypeData().initClass({
  sci_HashMapBuilder: 0
}, false, "scala.collection.immutable.HashMapBuilder", {
  sci_HashMapBuilder: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_sci_HashMapBuilder.prototype.$classData = $d_sci_HashMapBuilder;
const $p_sci_HashSetBuilder__isAliased__Z = (function($thiz) {
  return ($thiz.sci_HashSetBuilder__f_aliased !== null)
});
const $p_sci_HashSetBuilder__insertElement__AI__I__I__AI = (function($thiz, as, ix, elem) {
  if ((ix < 0)) {
    throw $ct_jl_ArrayIndexOutOfBoundsException__(new $c_jl_ArrayIndexOutOfBoundsException())
  };
  if ((ix > as.u.length)) {
    throw $ct_jl_ArrayIndexOutOfBoundsException__(new $c_jl_ArrayIndexOutOfBoundsException())
  };
  const result = $newArrayObject($d_I.getArrayOf(), [((1 + as.u.length) | 0)]);
  $systemArraycopy(as, 0, result, 0, ix);
  result.u[ix] = elem;
  const destPos = ((1 + ix) | 0);
  const length = ((as.u.length - ix) | 0);
  $systemArraycopy(as, ix, result, destPos, length);
  return result
});
const $p_sci_HashSetBuilder__insertValue__sci_BitmapIndexedSetNode__I__O__I__I__V = (function($thiz, bm, bitpos, key, originalHash, keyHash) {
  const dataIx = bm.dataIndex__I__I(bitpos);
  const src = bm.sci_BitmapIndexedSetNode__f_content;
  const dst = $newArrayObject($d_O.getArrayOf(), [((1 + src.u.length) | 0)]);
  $systemArraycopy(src, 0, dst, 0, dataIx);
  dst.u[dataIx] = key;
  const destPos = ((1 + dataIx) | 0);
  const length = ((src.u.length - dataIx) | 0);
  $systemArraycopy(src, dataIx, dst, destPos, length);
  const dstHashes = $p_sci_HashSetBuilder__insertElement__AI__I__I__AI($thiz, bm.sci_BitmapIndexedSetNode__f_originalHashes, dataIx, originalHash);
  bm.sci_BitmapIndexedSetNode__f_dataMap = (bm.sci_BitmapIndexedSetNode__f_dataMap | bitpos);
  bm.sci_BitmapIndexedSetNode__f_content = dst;
  bm.sci_BitmapIndexedSetNode__f_originalHashes = dstHashes;
  bm.sci_BitmapIndexedSetNode__f_size = ((1 + bm.sci_BitmapIndexedSetNode__f_size) | 0);
  bm.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode = ((bm.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode + keyHash) | 0)
});
const $p_sci_HashSetBuilder__setValue__sci_BitmapIndexedSetNode__I__O__V = (function($thiz, bm, bitpos, elem) {
  const dataIx = bm.dataIndex__I__I(bitpos);
  bm.sci_BitmapIndexedSetNode__f_content.u[dataIx] = elem
});
const $p_sci_HashSetBuilder__ensureUnaliased__V = (function($thiz) {
  if ($p_sci_HashSetBuilder__isAliased__Z($thiz)) {
    $p_sci_HashSetBuilder__copyElems__V($thiz)
  };
  $thiz.sci_HashSetBuilder__f_aliased = null
});
const $p_sci_HashSetBuilder__copyElems__V = (function($thiz) {
  $thiz.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode = $thiz.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode.copy__sci_BitmapIndexedSetNode()
});
class $c_sci_HashSetBuilder extends $c_O {
  constructor() {
    super();
    this.sci_HashSetBuilder__f_aliased = null;
    this.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode = null;
    this.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode = new $c_sci_BitmapIndexedSetNode(0, 0, $m_s_Array$EmptyArrays$().s_Array$EmptyArrays$__f_emptyObjectArray, $m_s_Array$EmptyArrays$().s_Array$EmptyArrays$__f_emptyIntArray, 0, 0)
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  update__sci_SetNode__O__I__I__I__V(setNode, element, originalHash, elementHash, shift) {
    if ((setNode instanceof $c_sci_BitmapIndexedSetNode)) {
      const x2 = setNode;
      const mask = $m_sci_Node$().maskFrom__I__I__I(elementHash, shift);
      const bitpos = $m_sci_Node$().bitposFrom__I__I(mask);
      if (((x2.sci_BitmapIndexedSetNode__f_dataMap & bitpos) !== 0)) {
        const index = $m_sci_Node$().indexFrom__I__I__I__I(x2.sci_BitmapIndexedSetNode__f_dataMap, mask, bitpos);
        const element0 = x2.getPayload__I__O(index);
        const element0UnimprovedHash = x2.getHash__I__I(index);
        if (((element0UnimprovedHash === originalHash) && $m_sr_BoxesRunTime$().equals__O__O__Z(element0, element))) {
          $p_sci_HashSetBuilder__setValue__sci_BitmapIndexedSetNode__I__O__V(this, x2, bitpos, element0)
        } else {
          const element0Hash = $m_sc_Hashing$().improve__I__I(element0UnimprovedHash);
          const subNodeNew = x2.mergeTwoKeyValPairs__O__I__I__O__I__I__I__sci_SetNode(element0, element0UnimprovedHash, element0Hash, element, originalHash, elementHash, ((5 + shift) | 0));
          x2.migrateFromInlineToNodeInPlace__I__I__sci_SetNode__sci_BitmapIndexedSetNode(bitpos, element0Hash, subNodeNew)
        }
      } else if (((x2.sci_BitmapIndexedSetNode__f_nodeMap & bitpos) !== 0)) {
        const index$2 = $m_sci_Node$().indexFrom__I__I__I__I(x2.sci_BitmapIndexedSetNode__f_nodeMap, mask, bitpos);
        const subNode = x2.getNode__I__sci_SetNode(index$2);
        const beforeSize = subNode.size__I();
        const beforeHashCode = subNode.cachedJavaKeySetHashCode__I();
        this.update__sci_SetNode__O__I__I__I__V(subNode, element, originalHash, elementHash, ((5 + shift) | 0));
        x2.sci_BitmapIndexedSetNode__f_size = ((x2.sci_BitmapIndexedSetNode__f_size + ((subNode.size__I() - beforeSize) | 0)) | 0);
        x2.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode = ((x2.sci_BitmapIndexedSetNode__f_cachedJavaKeySetHashCode + ((subNode.cachedJavaKeySetHashCode__I() - beforeHashCode) | 0)) | 0)
      } else {
        $p_sci_HashSetBuilder__insertValue__sci_BitmapIndexedSetNode__I__O__I__I__V(this, x2, bitpos, element, originalHash, elementHash)
      }
    } else if ((setNode instanceof $c_sci_HashCollisionSetNode)) {
      const x3 = setNode;
      const this$1 = x3.sci_HashCollisionSetNode__f_content;
      const index$3 = $f_sc_SeqOps__indexOf__O__I__I(this$1, element, 0);
      if ((index$3 < 0)) {
        x3.sci_HashCollisionSetNode__f_content = x3.sci_HashCollisionSetNode__f_content.appended__O__sci_Vector(element)
      } else {
        const this$2 = x3.sci_HashCollisionSetNode__f_content;
        x3.sci_HashCollisionSetNode__f_content = this$2.updateAt__I__O__sci_Vector(index$3, element)
      }
    } else {
      throw new $c_s_MatchError(setNode)
    }
  };
  result__sci_HashSet() {
    if ((this.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode.sci_BitmapIndexedSetNode__f_size === 0)) {
      const this$1 = $m_sci_HashSet$();
      return this$1.sci_HashSet$__f_EmptySet
    } else if ((this.sci_HashSetBuilder__f_aliased !== null)) {
      return this.sci_HashSetBuilder__f_aliased
    } else {
      this.sci_HashSetBuilder__f_aliased = new $c_sci_HashSet(this.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode);
      return this.sci_HashSetBuilder__f_aliased
    }
  };
  addOne__O__sci_HashSetBuilder(elem) {
    $p_sci_HashSetBuilder__ensureUnaliased__V(this);
    const h = $m_sr_Statics$().anyHash__O__I(elem);
    const im = $m_sc_Hashing$().improve__I__I(h);
    this.update__sci_SetNode__O__I__I__I__V(this.sci_HashSetBuilder__f_scala$collection$immutable$HashSetBuilder$$rootNode, elem, h, im, 0);
    return this
  };
  addAll__sc_IterableOnce__sci_HashSetBuilder(xs) {
    $p_sci_HashSetBuilder__ensureUnaliased__V(this);
    if ((xs instanceof $c_sci_HashSet)) {
      const x2 = xs;
      new $c_sci_HashSetBuilder$$anon$1(this, x2)
    } else {
      const it = xs.iterator__sc_Iterator();
      while (it.hasNext__Z()) {
        this.addOne__O__sci_HashSetBuilder(it.next__O())
      }
    };
    return this
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__sci_HashSetBuilder(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__sci_HashSetBuilder(elem)
  };
  result__O() {
    return this.result__sci_HashSet()
  };
}
const $d_sci_HashSetBuilder = new $TypeData().initClass({
  sci_HashSetBuilder: 0
}, false, "scala.collection.immutable.HashSetBuilder", {
  sci_HashSetBuilder: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_sci_HashSetBuilder.prototype.$classData = $d_sci_HashSetBuilder;
class $c_sci_IndexedSeq$ extends $c_sc_SeqFactory$Delegate {
  constructor() {
    super();
    $ct_sc_SeqFactory$Delegate__sc_SeqFactory__(this, $m_sci_Vector$())
  };
  from__sc_IterableOnce__sci_IndexedSeq(it) {
    if ($is_sci_IndexedSeq(it)) {
      const x2 = it;
      return x2
    } else {
      return $c_sc_SeqFactory$Delegate.prototype.from__sc_IterableOnce__sc_SeqOps.call(this, it)
    }
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_IndexedSeq(source)
  };
  from__sc_IterableOnce__sc_SeqOps(it) {
    return this.from__sc_IterableOnce__sci_IndexedSeq(it)
  };
}
const $d_sci_IndexedSeq$ = new $TypeData().initClass({
  sci_IndexedSeq$: 0
}, false, "scala.collection.immutable.IndexedSeq$", {
  sci_IndexedSeq$: 1,
  sc_SeqFactory$Delegate: 1,
  O: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_IndexedSeq$.prototype.$classData = $d_sci_IndexedSeq$;
let $n_sci_IndexedSeq$ = (void 0);
function $m_sci_IndexedSeq$() {
  if ((!$n_sci_IndexedSeq$)) {
    $n_sci_IndexedSeq$ = new $c_sci_IndexedSeq$()
  };
  return $n_sci_IndexedSeq$
}
class $c_sci_LazyList$LazyBuilder extends $c_O {
  constructor() {
    super();
    this.sci_LazyList$LazyBuilder__f_next = null;
    this.sci_LazyList$LazyBuilder__f_list = null;
    this.clear__V()
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  clear__V() {
    const deferred = new $c_sci_LazyList$LazyBuilder$DeferredState();
    $m_sci_LazyList$();
    const state = new $c_sjsr_AnonFunction0(((this$1, deferred$1) => (() => deferred$1.eval__sci_LazyList$State()))(this, deferred));
    this.sci_LazyList$LazyBuilder__f_list = new $c_sci_LazyList(state);
    this.sci_LazyList$LazyBuilder__f_next = deferred
  };
  result__sci_LazyList() {
    this.sci_LazyList$LazyBuilder__f_next.init__F0__V(new $c_sjsr_AnonFunction0(((this$1) => (() => $m_sci_LazyList$State$Empty$()))(this)));
    return this.sci_LazyList$LazyBuilder__f_list
  };
  addOne__O__sci_LazyList$LazyBuilder(elem) {
    const deferred = new $c_sci_LazyList$LazyBuilder$DeferredState();
    this.sci_LazyList$LazyBuilder__f_next.init__F0__V(new $c_sjsr_AnonFunction0(((this$1, elem$1, deferred$1) => (() => {
      $m_sci_LazyList$();
      $m_sci_LazyList$();
      const state = new $c_sjsr_AnonFunction0(((this$2, deferred$2) => (() => deferred$2.eval__sci_LazyList$State()))(this$1, deferred$1));
      const tl = new $c_sci_LazyList(state);
      return new $c_sci_LazyList$State$Cons(elem$1, tl)
    }))(this, elem, deferred)));
    this.sci_LazyList$LazyBuilder__f_next = deferred;
    return this
  };
  addAll__sc_IterableOnce__sci_LazyList$LazyBuilder(xs) {
    if ((xs.knownSize__I() !== 0)) {
      const deferred = new $c_sci_LazyList$LazyBuilder$DeferredState();
      this.sci_LazyList$LazyBuilder__f_next.init__F0__V(new $c_sjsr_AnonFunction0(((this$1, xs$1, deferred$1) => (() => $m_sci_LazyList$().scala$collection$immutable$LazyList$$stateFromIteratorConcatSuffix__sc_Iterator__F0__sci_LazyList$State(xs$1.iterator__sc_Iterator(), new $c_sjsr_AnonFunction0(((this$2, deferred$3) => (() => deferred$3.eval__sci_LazyList$State()))(this$1, deferred$1)))))(this, xs, deferred)));
      this.sci_LazyList$LazyBuilder__f_next = deferred
    };
    return this
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__sci_LazyList$LazyBuilder(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__sci_LazyList$LazyBuilder(elem)
  };
  result__O() {
    return this.result__sci_LazyList()
  };
}
const $d_sci_LazyList$LazyBuilder = new $TypeData().initClass({
  sci_LazyList$LazyBuilder: 0
}, false, "scala.collection.immutable.LazyList$LazyBuilder", {
  sci_LazyList$LazyBuilder: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_sci_LazyList$LazyBuilder.prototype.$classData = $d_sci_LazyList$LazyBuilder;
class $c_sci_LazyList$LazyIterator extends $c_sc_AbstractIterator {
  constructor(lazyList) {
    super();
    this.sci_LazyList$LazyIterator__f_lazyList = null;
    this.sci_LazyList$LazyIterator__f_lazyList = lazyList
  };
  hasNext__Z() {
    return (!this.sci_LazyList$LazyIterator__f_lazyList.isEmpty__Z())
  };
  next__O() {
    if (this.sci_LazyList$LazyIterator__f_lazyList.isEmpty__Z()) {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    } else {
      const this$1 = this.sci_LazyList$LazyIterator__f_lazyList;
      const res = this$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O();
      const this$2 = this.sci_LazyList$LazyIterator__f_lazyList;
      this.sci_LazyList$LazyIterator__f_lazyList = this$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
      return res
    }
  };
}
const $d_sci_LazyList$LazyIterator = new $TypeData().initClass({
  sci_LazyList$LazyIterator: 0
}, false, "scala.collection.immutable.LazyList$LazyIterator", {
  sci_LazyList$LazyIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_LazyList$LazyIterator.prototype.$classData = $d_sci_LazyList$LazyIterator;
class $c_sci_List$ extends $c_O {
  constructor() {
    super();
    this.sci_List$__f_partialNotApplied = null;
    $n_sci_List$ = this;
    this.sci_List$__f_partialNotApplied = new $c_sci_List$$anon$1()
  };
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_List(elems)
  };
  from__sc_IterableOnce__sci_List(coll) {
    if ((coll instanceof $c_sci_List)) {
      const x2 = coll;
      return x2
    } else if ((coll.knownSize__I() === 0)) {
      return $m_sci_Nil$()
    } else if ((coll instanceof $c_scm_ListBuffer)) {
      const x3 = coll;
      return x3.toList__sci_List()
    } else {
      const this$2 = new $c_scm_ListBuffer();
      return this$2.addAll__sc_IterableOnce__scm_ListBuffer(coll).toList__sci_List()
    }
  };
  newBuilder__scm_Builder() {
    return new $c_scm_ListBuffer()
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_List(source)
  };
}
const $d_sci_List$ = new $TypeData().initClass({
  sci_List$: 0
}, false, "scala.collection.immutable.List$", {
  sci_List$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_List$.prototype.$classData = $d_sci_List$;
let $n_sci_List$ = (void 0);
function $m_sci_List$() {
  if ((!$n_sci_List$)) {
    $n_sci_List$ = new $c_sci_List$()
  };
  return $n_sci_List$
}
const $ct_sci_Map$Map2$Map2Iterator__sci_Map$Map2__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.sci_Map$Map2$Map2Iterator__f_$outer = outer
  };
  $thiz.sci_Map$Map2$Map2Iterator__f_i = 0;
  return $thiz
});
class $c_sci_Map$Map2$Map2Iterator extends $c_sc_AbstractIterator {
  constructor() {
    super();
    this.sci_Map$Map2$Map2Iterator__f_i = 0;
    this.sci_Map$Map2$Map2Iterator__f_$outer = null
  };
  hasNext__Z() {
    return (this.sci_Map$Map2$Map2Iterator__f_i < 2)
  };
  next__O() {
    const x1 = this.sci_Map$Map2$Map2Iterator__f_i;
    let result;
    switch (x1) {
      case 0: {
        result = this.nextResult__O__O__O(this.sci_Map$Map2$Map2Iterator__f_$outer.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1, this.sci_Map$Map2$Map2Iterator__f_$outer.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1);
        break
      }
      case 1: {
        result = this.nextResult__O__O__O(this.sci_Map$Map2$Map2Iterator__f_$outer.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2, this.sci_Map$Map2$Map2Iterator__f_$outer.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2);
        break
      }
      default: {
        result = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
      }
    };
    this.sci_Map$Map2$Map2Iterator__f_i = ((1 + this.sci_Map$Map2$Map2Iterator__f_i) | 0);
    return result
  };
}
const $ct_sci_Map$Map3$Map3Iterator__sci_Map$Map3__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.sci_Map$Map3$Map3Iterator__f_$outer = outer
  };
  $thiz.sci_Map$Map3$Map3Iterator__f_i = 0;
  return $thiz
});
class $c_sci_Map$Map3$Map3Iterator extends $c_sc_AbstractIterator {
  constructor() {
    super();
    this.sci_Map$Map3$Map3Iterator__f_i = 0;
    this.sci_Map$Map3$Map3Iterator__f_$outer = null
  };
  hasNext__Z() {
    return (this.sci_Map$Map3$Map3Iterator__f_i < 3)
  };
  next__O() {
    const x1 = this.sci_Map$Map3$Map3Iterator__f_i;
    let result;
    switch (x1) {
      case 0: {
        result = this.nextResult__O__O__O(this.sci_Map$Map3$Map3Iterator__f_$outer.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1, this.sci_Map$Map3$Map3Iterator__f_$outer.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1);
        break
      }
      case 1: {
        result = this.nextResult__O__O__O(this.sci_Map$Map3$Map3Iterator__f_$outer.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2, this.sci_Map$Map3$Map3Iterator__f_$outer.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2);
        break
      }
      case 2: {
        result = this.nextResult__O__O__O(this.sci_Map$Map3$Map3Iterator__f_$outer.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3, this.sci_Map$Map3$Map3Iterator__f_$outer.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3);
        break
      }
      default: {
        result = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
      }
    };
    this.sci_Map$Map3$Map3Iterator__f_i = ((1 + this.sci_Map$Map3$Map3Iterator__f_i) | 0);
    return result
  };
}
const $ct_sci_Map$Map4$Map4Iterator__sci_Map$Map4__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.sci_Map$Map4$Map4Iterator__f_$outer = outer
  };
  $thiz.sci_Map$Map4$Map4Iterator__f_i = 0;
  return $thiz
});
class $c_sci_Map$Map4$Map4Iterator extends $c_sc_AbstractIterator {
  constructor() {
    super();
    this.sci_Map$Map4$Map4Iterator__f_i = 0;
    this.sci_Map$Map4$Map4Iterator__f_$outer = null
  };
  hasNext__Z() {
    return (this.sci_Map$Map4$Map4Iterator__f_i < 4)
  };
  next__O() {
    const x1 = this.sci_Map$Map4$Map4Iterator__f_i;
    let result;
    switch (x1) {
      case 0: {
        result = this.nextResult__O__O__O(this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1);
        break
      }
      case 1: {
        result = this.nextResult__O__O__O(this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2);
        break
      }
      case 2: {
        result = this.nextResult__O__O__O(this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3);
        break
      }
      case 3: {
        result = this.nextResult__O__O__O(this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, this.sci_Map$Map4$Map4Iterator__f_$outer.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4);
        break
      }
      default: {
        result = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
      }
    };
    this.sci_Map$Map4$Map4Iterator__f_i = ((1 + this.sci_Map$Map4$Map4Iterator__f_i) | 0);
    return result
  };
}
class $c_sci_MapBuilderImpl extends $c_O {
  constructor() {
    super();
    this.sci_MapBuilderImpl__f_elems = null;
    this.sci_MapBuilderImpl__f_switchedToHashMapBuilder = false;
    this.sci_MapBuilderImpl__f_hashMapBuilder = null;
    this.sci_MapBuilderImpl__f_elems = $m_sci_Map$EmptyMap$();
    this.sci_MapBuilderImpl__f_switchedToHashMapBuilder = false
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  result__sci_Map() {
    return (this.sci_MapBuilderImpl__f_switchedToHashMapBuilder ? this.sci_MapBuilderImpl__f_hashMapBuilder.result__sci_HashMap() : this.sci_MapBuilderImpl__f_elems)
  };
  addOne__O__O__sci_MapBuilderImpl(key, value) {
    if (this.sci_MapBuilderImpl__f_switchedToHashMapBuilder) {
      this.sci_MapBuilderImpl__f_hashMapBuilder.addOne__O__O__sci_HashMapBuilder(key, value)
    } else if ((this.sci_MapBuilderImpl__f_elems.size__I() < 4)) {
      this.sci_MapBuilderImpl__f_elems = this.sci_MapBuilderImpl__f_elems.updated__O__O__sci_MapOps(key, value)
    } else if (this.sci_MapBuilderImpl__f_elems.contains__O__Z(key)) {
      this.sci_MapBuilderImpl__f_elems = this.sci_MapBuilderImpl__f_elems.updated__O__O__sci_MapOps(key, value)
    } else {
      this.sci_MapBuilderImpl__f_switchedToHashMapBuilder = true;
      if ((this.sci_MapBuilderImpl__f_hashMapBuilder === null)) {
        this.sci_MapBuilderImpl__f_hashMapBuilder = new $c_sci_HashMapBuilder()
      };
      this.sci_MapBuilderImpl__f_elems.buildTo__sci_HashMapBuilder__sci_HashMapBuilder(this.sci_MapBuilderImpl__f_hashMapBuilder);
      this.sci_MapBuilderImpl__f_hashMapBuilder.addOne__O__O__sci_HashMapBuilder(key, value)
    };
    return this
  };
  addAll__sc_IterableOnce__sci_MapBuilderImpl(xs) {
    return (this.sci_MapBuilderImpl__f_switchedToHashMapBuilder ? (this.sci_MapBuilderImpl__f_hashMapBuilder.addAll__sc_IterableOnce__sci_HashMapBuilder(xs), this) : $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs))
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__sci_MapBuilderImpl(xs)
  };
  addOne__O__scm_Growable(elem) {
    const elem$1 = elem;
    return this.addOne__O__O__sci_MapBuilderImpl(elem$1._1__O(), elem$1._2__O())
  };
  result__O() {
    return this.result__sci_Map()
  };
}
function $isArrayOf_sci_MapBuilderImpl(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_MapBuilderImpl)))
}
const $d_sci_MapBuilderImpl = new $TypeData().initClass({
  sci_MapBuilderImpl: 0
}, false, "scala.collection.immutable.MapBuilderImpl", {
  sci_MapBuilderImpl: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_sci_MapBuilderImpl.prototype.$classData = $d_sci_MapBuilderImpl;
class $c_sci_MapKeyValueTupleIterator extends $c_sci_ChampBaseIterator {
  constructor(rootNode) {
    super();
    $ct_sci_ChampBaseIterator__sci_Node__(this, rootNode)
  };
  iterator__sc_Iterator() {
    return this
  };
  buffered__sc_BufferedIterator() {
    return new $c_sc_Iterator$$anon$1(this)
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  next__T2() {
    if ((!this.hasNext__Z())) {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    };
    const payload = this.sci_ChampBaseIterator__f_currentValueNode.getPayload__I__T2(this.sci_ChampBaseIterator__f_currentValueCursor);
    this.sci_ChampBaseIterator__f_currentValueCursor = ((1 + this.sci_ChampBaseIterator__f_currentValueCursor) | 0);
    return payload
  };
  next__O() {
    return this.next__T2()
  };
}
const $d_sci_MapKeyValueTupleIterator = new $TypeData().initClass({
  sci_MapKeyValueTupleIterator: 0
}, false, "scala.collection.immutable.MapKeyValueTupleIterator", {
  sci_MapKeyValueTupleIterator: 1,
  sci_ChampBaseIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_MapKeyValueTupleIterator.prototype.$classData = $d_sci_MapKeyValueTupleIterator;
class $c_sci_MapValueIterator extends $c_sci_ChampBaseIterator {
  constructor(rootNode) {
    super();
    $ct_sci_ChampBaseIterator__sci_Node__(this, rootNode)
  };
  iterator__sc_Iterator() {
    return this
  };
  buffered__sc_BufferedIterator() {
    return new $c_sc_Iterator$$anon$1(this)
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  next__O() {
    if ((!this.hasNext__Z())) {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    };
    const value = this.sci_ChampBaseIterator__f_currentValueNode.getValue__I__O(this.sci_ChampBaseIterator__f_currentValueCursor);
    this.sci_ChampBaseIterator__f_currentValueCursor = ((1 + this.sci_ChampBaseIterator__f_currentValueCursor) | 0);
    return value
  };
}
const $d_sci_MapValueIterator = new $TypeData().initClass({
  sci_MapValueIterator: 0
}, false, "scala.collection.immutable.MapValueIterator", {
  sci_MapValueIterator: 1,
  sci_ChampBaseIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_MapValueIterator.prototype.$classData = $d_sci_MapValueIterator;
class $c_sci_Seq$ extends $c_sc_SeqFactory$Delegate {
  constructor() {
    super();
    $ct_sc_SeqFactory$Delegate__sc_SeqFactory__(this, $m_sci_List$())
  };
  from__sc_IterableOnce__sci_Seq(it) {
    if ($is_sci_Seq(it)) {
      const x2 = it;
      return x2
    } else {
      return $c_sc_SeqFactory$Delegate.prototype.from__sc_IterableOnce__sc_SeqOps.call(this, it)
    }
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_Seq(source)
  };
  from__sc_IterableOnce__sc_SeqOps(it) {
    return this.from__sc_IterableOnce__sci_Seq(it)
  };
}
const $d_sci_Seq$ = new $TypeData().initClass({
  sci_Seq$: 0
}, false, "scala.collection.immutable.Seq$", {
  sci_Seq$: 1,
  sc_SeqFactory$Delegate: 1,
  O: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Seq$.prototype.$classData = $d_sci_Seq$;
let $n_sci_Seq$ = (void 0);
function $m_sci_Seq$() {
  if ((!$n_sci_Seq$)) {
    $n_sci_Seq$ = new $c_sci_Seq$()
  };
  return $n_sci_Seq$
}
class $c_sci_SetBuilderImpl extends $c_O {
  constructor() {
    super();
    this.sci_SetBuilderImpl__f_elems = null;
    this.sci_SetBuilderImpl__f_switchedToHashSetBuilder = false;
    this.sci_SetBuilderImpl__f_hashSetBuilder = null;
    this.sci_SetBuilderImpl__f_elems = $m_sci_Set$EmptySet$();
    this.sci_SetBuilderImpl__f_switchedToHashSetBuilder = false
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  result__sci_Set() {
    return (this.sci_SetBuilderImpl__f_switchedToHashSetBuilder ? this.sci_SetBuilderImpl__f_hashSetBuilder.result__sci_HashSet() : this.sci_SetBuilderImpl__f_elems)
  };
  addOne__O__sci_SetBuilderImpl(elem) {
    if (this.sci_SetBuilderImpl__f_switchedToHashSetBuilder) {
      this.sci_SetBuilderImpl__f_hashSetBuilder.addOne__O__sci_HashSetBuilder(elem)
    } else if ((this.sci_SetBuilderImpl__f_elems.size__I() < 4)) {
      const this$1 = this.sci_SetBuilderImpl__f_elems;
      this.sci_SetBuilderImpl__f_elems = this$1.incl__O__sci_SetOps(elem)
    } else if ((!this.sci_SetBuilderImpl__f_elems.contains__O__Z(elem))) {
      this.sci_SetBuilderImpl__f_switchedToHashSetBuilder = true;
      if ((this.sci_SetBuilderImpl__f_hashSetBuilder === null)) {
        this.sci_SetBuilderImpl__f_hashSetBuilder = new $c_sci_HashSetBuilder()
      };
      this.sci_SetBuilderImpl__f_elems.buildTo__scm_Builder__scm_Builder(this.sci_SetBuilderImpl__f_hashSetBuilder);
      this.sci_SetBuilderImpl__f_hashSetBuilder.addOne__O__sci_HashSetBuilder(elem)
    };
    return this
  };
  addAll__sc_IterableOnce__sci_SetBuilderImpl(xs) {
    return (this.sci_SetBuilderImpl__f_switchedToHashSetBuilder ? (this.sci_SetBuilderImpl__f_hashSetBuilder.addAll__sc_IterableOnce__sci_HashSetBuilder(xs), this) : $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs))
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__sci_SetBuilderImpl(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__sci_SetBuilderImpl(elem)
  };
  result__O() {
    return this.result__sci_Set()
  };
}
function $isArrayOf_sci_SetBuilderImpl(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_SetBuilderImpl)))
}
const $d_sci_SetBuilderImpl = new $TypeData().initClass({
  sci_SetBuilderImpl: 0
}, false, "scala.collection.immutable.SetBuilderImpl", {
  sci_SetBuilderImpl: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_sci_SetBuilderImpl.prototype.$classData = $d_sci_SetBuilderImpl;
class $c_sci_SetHashIterator extends $c_sci_ChampBaseIterator {
  constructor(rootNode) {
    super();
    this.sci_SetHashIterator__f_hash = 0;
    $ct_sci_ChampBaseIterator__sci_Node__(this, rootNode);
    this.sci_SetHashIterator__f_hash = 0
  };
  iterator__sc_Iterator() {
    return this
  };
  buffered__sc_BufferedIterator() {
    return new $c_sc_Iterator$$anon$1(this)
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  hashCode__I() {
    return this.sci_SetHashIterator__f_hash
  };
  next__O() {
    if ((!this.hasNext__Z())) {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    };
    this.sci_SetHashIterator__f_hash = this.sci_ChampBaseIterator__f_currentValueNode.getHash__I__I(this.sci_ChampBaseIterator__f_currentValueCursor);
    this.sci_ChampBaseIterator__f_currentValueCursor = ((1 + this.sci_ChampBaseIterator__f_currentValueCursor) | 0);
    return this
  };
}
const $d_sci_SetHashIterator = new $TypeData().initClass({
  sci_SetHashIterator: 0
}, false, "scala.collection.immutable.SetHashIterator", {
  sci_SetHashIterator: 1,
  sci_ChampBaseIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_SetHashIterator.prototype.$classData = $d_sci_SetHashIterator;
class $c_sci_SetIterator extends $c_sci_ChampBaseIterator {
  constructor(rootNode) {
    super();
    $ct_sci_ChampBaseIterator__sci_Node__(this, rootNode)
  };
  iterator__sc_Iterator() {
    return this
  };
  buffered__sc_BufferedIterator() {
    return new $c_sc_Iterator$$anon$1(this)
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  next__O() {
    if ((!this.hasNext__Z())) {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    };
    const payload = this.sci_ChampBaseIterator__f_currentValueNode.getPayload__I__O(this.sci_ChampBaseIterator__f_currentValueCursor);
    this.sci_ChampBaseIterator__f_currentValueCursor = ((1 + this.sci_ChampBaseIterator__f_currentValueCursor) | 0);
    return payload
  };
}
const $d_sci_SetIterator = new $TypeData().initClass({
  sci_SetIterator: 0
}, false, "scala.collection.immutable.SetIterator", {
  sci_SetIterator: 1,
  sci_ChampBaseIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_SetIterator.prototype.$classData = $d_sci_SetIterator;
const $p_sci_Vector$__liftedTree1$1__I = (function($thiz) {
  try {
    const x = $m_jl_System$SystemProperties$().getProperty__T__T__T("scala.collection.immutable.Vector.defaultApplyPreferredMaxLength", "1024");
    const this$4 = $m_jl_Integer$();
    return this$4.parseInt__T__I__I(x, 10)
  } catch (e) {
    if ((e instanceof $c_jl_SecurityException)) {
      return 1024
    } else {
      throw e
    }
  }
});
class $c_sci_Vector$ extends $c_O {
  constructor() {
    super();
    this.sci_Vector$__f_NIL = null;
    this.sci_Vector$__f_scala$collection$immutable$Vector$$defaultApplyPreferredMaxLength = 0;
    $n_sci_Vector$ = this;
    this.sci_Vector$__f_NIL = new $c_sci_Vector(0, 0, 0);
    this.sci_Vector$__f_scala$collection$immutable$Vector$$defaultApplyPreferredMaxLength = $p_sci_Vector$__liftedTree1$1__I(this)
  };
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sci_Vector(elems)
  };
  from__sc_IterableOnce__sci_Vector(it) {
    if ((it instanceof $c_sci_ArraySeq)) {
      const x2 = it;
      if ((x2.length__I() <= 32)) {
        if ($f_sc_SeqOps__isEmpty__Z(x2)) {
          return this.sci_Vector$__f_NIL
        } else {
          const unsafeArray = x2.unsafeArray__O();
          const len = $m_sr_ScalaRunTime$().array_length__O__I(unsafeArray);
          const v = new $c_sci_Vector(0, len, 0);
          const display0 = $newArrayObject($d_O.getArrayOf(), [len]);
          if ($isArrayOf_O(unsafeArray, 1)) {
            $systemArraycopy(unsafeArray, 0, display0, 0, len)
          } else {
            let i = 0;
            while ((i < len)) {
              display0.u[i] = $m_sr_ScalaRunTime$().array_apply__O__I__O(unsafeArray, i);
              i = ((1 + i) | 0)
            }
          };
          v.sci_Vector__f_display0 = display0;
          v.sci_Vector__f_depth = 1;
          return v
        }
      }
    };
    if ((it instanceof $c_sci_Vector)) {
      const x3 = it;
      return x3
    };
    const knownSize = it.knownSize__I();
    if ((knownSize === 0)) {
      return this.sci_Vector$__f_NIL
    } else if (((knownSize > 0) && (knownSize <= 32))) {
      const display0$2 = $newArrayObject($d_O.getArrayOf(), [knownSize]);
      const this$1 = it.iterator__sc_Iterator();
      $f_sc_IterableOnceOps__copyToArray__O__I__I(this$1, display0$2, 0);
      const v$2 = new $c_sci_Vector(0, knownSize, 0);
      v$2.sci_Vector__f_depth = 1;
      v$2.sci_Vector__f_display0 = display0$2;
      return v$2
    } else {
      const this$2 = new $c_sci_VectorBuilder();
      const this$3 = this$2.addAll__sc_IterableOnce__sci_VectorBuilder(it);
      return this$3.result__sci_Vector()
    }
  };
  scala$collection$immutable$Vector$$single__O__sci_Vector(elem) {
    const s = new $c_sci_Vector(0, 1, 0);
    s.sci_Vector__f_depth = 1;
    s.sci_Vector__f_display0 = $makeNativeArrayWrapper($d_O.getArrayOf(), [elem]);
    return s
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  newBuilder__scm_Builder() {
    return new $c_sci_VectorBuilder()
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sci_Vector(source)
  };
}
const $d_sci_Vector$ = new $TypeData().initClass({
  sci_Vector$: 0
}, false, "scala.collection.immutable.Vector$", {
  sci_Vector$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Vector$.prototype.$classData = $d_sci_Vector$;
let $n_sci_Vector$ = (void 0);
function $m_sci_Vector$() {
  if ((!$n_sci_Vector$)) {
    $n_sci_Vector$ = new $c_sci_Vector$()
  };
  return $n_sci_Vector$
}
const $p_scm_ArrayBuffer$__growArray$1__J__I__I__AO__AO = (function($thiz, arrayLength$1, n$1, end$1, array$2) {
  const lo = (arrayLength$1.RTLong__f_lo << 1);
  const hi = (((arrayLength$1.RTLong__f_lo >>> 31) | 0) | (arrayLength$1.RTLong__f_hi << 1));
  const t = (((hi === 0) ? (((-2147483648) ^ lo) > (-2147483632)) : (hi > 0)) ? new $c_RTLong(lo, hi) : new $c_RTLong(16, 0));
  const lo$1 = t.RTLong__f_lo;
  const hi$1 = t.RTLong__f_hi;
  let newSize__lo = lo$1;
  let newSize__hi = hi$1;
  while (true) {
    const hi$2 = (n$1 >> 31);
    const b__lo = newSize__lo;
    const b__hi = newSize__hi;
    const bhi = b__hi;
    if (((hi$2 === bhi) ? (((-2147483648) ^ n$1) > ((-2147483648) ^ b__lo)) : (hi$2 > bhi))) {
      const this$4__lo = newSize__lo;
      const this$4__hi = newSize__hi;
      const lo$2 = (this$4__lo << 1);
      const hi$3 = (((this$4__lo >>> 31) | 0) | (this$4__hi << 1));
      const $$x1__lo = lo$2;
      const $$x1__hi = hi$3;
      newSize__lo = $$x1__lo;
      newSize__hi = $$x1__hi
    } else {
      break
    }
  };
  const this$5__lo = newSize__lo;
  const this$5__hi = newSize__hi;
  const ahi = this$5__hi;
  if (((ahi === 0) ? (((-2147483648) ^ this$5__lo) > (-1)) : (ahi > 0))) {
    if ((end$1 === 2147483647)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O($ct_jl_Exception__T__(new $c_jl_Exception(), "Collections can not have more than 2147483647 elements"))
    };
    const $$x2__lo = 2147483647;
    const $$x2__hi = 0;
    newSize__lo = $$x2__lo;
    newSize__hi = $$x2__hi
  };
  const this$6__lo = newSize__lo;
  const this$6__hi = newSize__hi;
  const newArray = $newArrayObject($d_O.getArrayOf(), [this$6__lo]);
  $m_s_Array$().copy__O__I__O__I__I__V(array$2, 0, newArray, 0, end$1);
  return newArray
});
class $c_scm_ArrayBuffer$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__scm_ArrayBuffer(elems)
  };
  from__sc_IterableOnce__scm_ArrayBuffer(coll) {
    const k = coll.knownSize__I();
    if ((k >= 0)) {
      const array = $newArrayObject($d_O.getArrayOf(), [((k > 16) ? k : 16)]);
      const it = coll.iterator__sc_Iterator();
      const isEmpty = (k <= 0);
      const scala$collection$immutable$Range$$lastElement = (((-1) + k) | 0);
      if ((!isEmpty)) {
        let i = 0;
        while (true) {
          const v1 = i;
          array.u[v1] = it.next__O();
          if ((i === scala$collection$immutable$Range$$lastElement)) {
            break
          };
          i = ((1 + i) | 0)
        }
      };
      return $ct_scm_ArrayBuffer__AO__I__(new $c_scm_ArrayBuffer(), array, k)
    } else {
      const this$10 = $ct_scm_ArrayBuffer__(new $c_scm_ArrayBuffer());
      return this$10.addAll__sc_IterableOnce__scm_ArrayBuffer(coll)
    }
  };
  newBuilder__scm_Builder() {
    return new $c_scm_ArrayBuffer$$anon$1()
  };
  scala$collection$mutable$ArrayBuffer$$ensureSize__AO__I__I__AO(array, end, n) {
    const value = array.u.length;
    const hi = (value >> 31);
    const hi$1 = (n >> 31);
    if (((hi$1 === hi) ? (((-2147483648) ^ n) <= ((-2147483648) ^ value)) : (hi$1 < hi))) {
      return array
    } else {
      return $p_scm_ArrayBuffer$__growArray$1__J__I__I__AO__AO(this, new $c_RTLong(value, hi), n, end, array)
    }
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__scm_ArrayBuffer(source)
  };
}
const $d_scm_ArrayBuffer$ = new $TypeData().initClass({
  scm_ArrayBuffer$: 0
}, false, "scala.collection.mutable.ArrayBuffer$", {
  scm_ArrayBuffer$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArrayBuffer$.prototype.$classData = $d_scm_ArrayBuffer$;
let $n_scm_ArrayBuffer$ = (void 0);
function $m_scm_ArrayBuffer$() {
  if ((!$n_scm_ArrayBuffer$)) {
    $n_scm_ArrayBuffer$ = new $c_scm_ArrayBuffer$()
  };
  return $n_scm_ArrayBuffer$
}
class $c_scm_ArrayBuffer$$anon$1 extends $c_scm_GrowableBuilder {
  constructor() {
    super();
    $ct_scm_GrowableBuilder__scm_Growable__(this, $ct_scm_ArrayBuffer__(new $c_scm_ArrayBuffer()))
  };
  sizeHint__I__V(size) {
    this.scm_GrowableBuilder__f_elems.ensureSize__I__V(size)
  };
}
const $d_scm_ArrayBuffer$$anon$1 = new $TypeData().initClass({
  scm_ArrayBuffer$$anon$1: 0
}, false, "scala.collection.mutable.ArrayBuffer$$anon$1", {
  scm_ArrayBuffer$$anon$1: 1,
  scm_GrowableBuilder: 1,
  O: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_scm_ArrayBuffer$$anon$1.prototype.$classData = $d_scm_ArrayBuffer$$anon$1;
class $c_scm_ArrayDeque$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__scm_ArrayDeque(elems)
  };
  from__sc_IterableOnce__scm_ArrayDeque(coll) {
    const s = coll.knownSize__I();
    if ((s >= 0)) {
      const array = this.alloc__I__AO(s);
      const it = coll.iterator__sc_Iterator();
      let i = 0;
      while (it.hasNext__Z()) {
        array.u[i] = it.next__O();
        i = ((1 + i) | 0)
      };
      return $ct_scm_ArrayDeque__AO__I__I__(new $c_scm_ArrayDeque(), array, 0, s)
    } else {
      const this$1 = $ct_scm_ArrayDeque__I__(new $c_scm_ArrayDeque(), 16);
      return this$1.addAll__sc_IterableOnce__scm_ArrayDeque(coll)
    }
  };
  newBuilder__scm_Builder() {
    return new $c_scm_ArrayDeque$$anon$1()
  };
  alloc__I__AO(len) {
    const requirement = (len >= 0);
    if ((!requirement)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "requirement failed: Non-negative array size required")
    };
    const size = ((((-2147483648) >>> $clz32(len)) | 0) << 1);
    const requirement$1 = (size >= 0);
    if ((!requirement$1)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), (("requirement failed: " + "ArrayDeque too big - cannot allocate ArrayDeque of length ") + len))
    };
    return $newArrayObject($d_O.getArrayOf(), [((size > 16) ? size : 16)])
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__scm_ArrayDeque(source)
  };
}
const $d_scm_ArrayDeque$ = new $TypeData().initClass({
  scm_ArrayDeque$: 0
}, false, "scala.collection.mutable.ArrayDeque$", {
  scm_ArrayDeque$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArrayDeque$.prototype.$classData = $d_scm_ArrayDeque$;
let $n_scm_ArrayDeque$ = (void 0);
function $m_scm_ArrayDeque$() {
  if ((!$n_scm_ArrayDeque$)) {
    $n_scm_ArrayDeque$ = new $c_scm_ArrayDeque$()
  };
  return $n_scm_ArrayDeque$
}
class $c_scm_ArrayDeque$$anon$1 extends $c_scm_GrowableBuilder {
  constructor() {
    super();
    $ct_scm_GrowableBuilder__scm_Growable__(this, $ct_scm_ArrayDeque__I__(new $c_scm_ArrayDeque(), 16))
  };
  sizeHint__I__V(size) {
    const this$1 = this.scm_GrowableBuilder__f_elems;
    const idx = this$1.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    if (((size > (((this$1.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this$1.scm_ArrayDeque__f_array.u.length) | 0))) && (size >= this$1.scm_ArrayDeque__f_array.u.length))) {
      this$1.scala$collection$mutable$ArrayDeque$$resize__I__V(size)
    }
  };
}
const $d_scm_ArrayDeque$$anon$1 = new $TypeData().initClass({
  scm_ArrayDeque$$anon$1: 0
}, false, "scala.collection.mutable.ArrayDeque$$anon$1", {
  scm_ArrayDeque$$anon$1: 1,
  scm_GrowableBuilder: 1,
  O: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_scm_ArrayDeque$$anon$1.prototype.$classData = $d_scm_ArrayDeque$$anon$1;
const $ct_scm_HashMap$HashMapIterator__scm_HashMap__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.scm_HashMap$HashMapIterator__f_$outer = outer
  };
  $thiz.scm_HashMap$HashMapIterator__f_i = 0;
  $thiz.scm_HashMap$HashMapIterator__f_node = null;
  $thiz.scm_HashMap$HashMapIterator__f_len = outer.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length;
  return $thiz
});
class $c_scm_HashMap$HashMapIterator extends $c_sc_AbstractIterator {
  constructor() {
    super();
    this.scm_HashMap$HashMapIterator__f_i = 0;
    this.scm_HashMap$HashMapIterator__f_node = null;
    this.scm_HashMap$HashMapIterator__f_len = 0;
    this.scm_HashMap$HashMapIterator__f_$outer = null
  };
  hasNext__Z() {
    if ((this.scm_HashMap$HashMapIterator__f_node !== null)) {
      return true
    } else {
      while ((this.scm_HashMap$HashMapIterator__f_i < this.scm_HashMap$HashMapIterator__f_len)) {
        const n = this.scm_HashMap$HashMapIterator__f_$outer.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[this.scm_HashMap$HashMapIterator__f_i];
        this.scm_HashMap$HashMapIterator__f_i = ((1 + this.scm_HashMap$HashMapIterator__f_i) | 0);
        if ((n !== null)) {
          this.scm_HashMap$HashMapIterator__f_node = n;
          return true
        }
      };
      return false
    }
  };
  next__O() {
    if ((!this.hasNext__Z())) {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    } else {
      const r = this.extract__scm_HashMap$Node__O(this.scm_HashMap$HashMapIterator__f_node);
      this.scm_HashMap$HashMapIterator__f_node = this.scm_HashMap$HashMapIterator__f_node.scm_HashMap$Node__f__next;
      return r
    }
  };
}
class $c_scm_HashSet$$anon$3 extends $c_scm_GrowableBuilder {
  constructor(initialCapacity$1, loadFactor$1) {
    super();
    $ct_scm_GrowableBuilder__scm_Growable__(this, new $c_scm_HashSet(initialCapacity$1, loadFactor$1))
  };
  sizeHint__I__V(size) {
    this.scm_GrowableBuilder__f_elems.sizeHint__I__V(size)
  };
}
const $d_scm_HashSet$$anon$3 = new $TypeData().initClass({
  scm_HashSet$$anon$3: 0
}, false, "scala.collection.mutable.HashSet$$anon$3", {
  scm_HashSet$$anon$3: 1,
  scm_GrowableBuilder: 1,
  O: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_scm_HashSet$$anon$3.prototype.$classData = $d_scm_HashSet$$anon$3;
const $ct_scm_HashSet$HashSetIterator__scm_HashSet__ = (function($thiz, outer) {
  if ((outer === null)) {
    throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
  } else {
    $thiz.scm_HashSet$HashSetIterator__f_$outer = outer
  };
  $thiz.scm_HashSet$HashSetIterator__f_i = 0;
  $thiz.scm_HashSet$HashSetIterator__f_node = null;
  $thiz.scm_HashSet$HashSetIterator__f_len = outer.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length;
  return $thiz
});
class $c_scm_HashSet$HashSetIterator extends $c_sc_AbstractIterator {
  constructor() {
    super();
    this.scm_HashSet$HashSetIterator__f_i = 0;
    this.scm_HashSet$HashSetIterator__f_node = null;
    this.scm_HashSet$HashSetIterator__f_len = 0;
    this.scm_HashSet$HashSetIterator__f_$outer = null
  };
  hasNext__Z() {
    if ((this.scm_HashSet$HashSetIterator__f_node !== null)) {
      return true
    } else {
      while ((this.scm_HashSet$HashSetIterator__f_i < this.scm_HashSet$HashSetIterator__f_len)) {
        const n = this.scm_HashSet$HashSetIterator__f_$outer.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[this.scm_HashSet$HashSetIterator__f_i];
        this.scm_HashSet$HashSetIterator__f_i = ((1 + this.scm_HashSet$HashSetIterator__f_i) | 0);
        if ((n !== null)) {
          this.scm_HashSet$HashSetIterator__f_node = n;
          return true
        }
      };
      return false
    }
  };
  next__O() {
    if ((!this.hasNext__Z())) {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    } else {
      const r = this.extract__scm_HashSet$Node__O(this.scm_HashSet$HashSetIterator__f_node);
      this.scm_HashSet$HashSetIterator__f_node = this.scm_HashSet$HashSetIterator__f_node.scm_HashSet$Node__f__next;
      return r
    }
  };
}
const $ct_scm_ImmutableBuilder__sc_IterableOnce__ = (function($thiz, empty) {
  $thiz.scm_ImmutableBuilder__f_empty = empty;
  $thiz.scm_ImmutableBuilder__f_elems = empty;
  return $thiz
});
class $c_scm_ImmutableBuilder extends $c_O {
  constructor() {
    super();
    this.scm_ImmutableBuilder__f_empty = null;
    this.scm_ImmutableBuilder__f_elems = null
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs)
  };
  result__O() {
    return this.scm_ImmutableBuilder__f_elems
  };
}
class $c_scm_IndexedSeq$ extends $c_sc_SeqFactory$Delegate {
  constructor() {
    super();
    $ct_sc_SeqFactory$Delegate__sc_SeqFactory__(this, $m_scm_ArrayBuffer$())
  };
}
const $d_scm_IndexedSeq$ = new $TypeData().initClass({
  scm_IndexedSeq$: 0
}, false, "scala.collection.mutable.IndexedSeq$", {
  scm_IndexedSeq$: 1,
  sc_SeqFactory$Delegate: 1,
  O: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_IndexedSeq$.prototype.$classData = $d_scm_IndexedSeq$;
let $n_scm_IndexedSeq$ = (void 0);
function $m_scm_IndexedSeq$() {
  if ((!$n_scm_IndexedSeq$)) {
    $n_scm_IndexedSeq$ = new $c_scm_IndexedSeq$()
  };
  return $n_scm_IndexedSeq$
}
class $c_scm_ListBuffer$ extends $c_O {
  apply__sci_Seq__O(elems) {
    const this$1 = new $c_scm_ListBuffer();
    return this$1.addAll__sc_IterableOnce__scm_ListBuffer(elems)
  };
  newBuilder__scm_Builder() {
    return $ct_scm_GrowableBuilder__scm_Growable__(new $c_scm_GrowableBuilder(), new $c_scm_ListBuffer())
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  from__sc_IterableOnce__O(source) {
    const this$1 = new $c_scm_ListBuffer();
    return this$1.addAll__sc_IterableOnce__scm_ListBuffer(source)
  };
}
const $d_scm_ListBuffer$ = new $TypeData().initClass({
  scm_ListBuffer$: 0
}, false, "scala.collection.mutable.ListBuffer$", {
  scm_ListBuffer$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ListBuffer$.prototype.$classData = $d_scm_ListBuffer$;
let $n_scm_ListBuffer$ = (void 0);
function $m_scm_ListBuffer$() {
  if ((!$n_scm_ListBuffer$)) {
    $n_scm_ListBuffer$ = new $c_scm_ListBuffer$()
  };
  return $n_scm_ListBuffer$
}
class $c_scm_Stack$ extends $c_O {
  apply__sci_Seq__O(elems) {
    const this$1 = new $c_scm_Stack(16);
    return this$1.addAll__sc_IterableOnce__scm_ArrayDeque(elems)
  };
  newBuilder__scm_Builder() {
    return $ct_scm_GrowableBuilder__scm_Growable__(new $c_scm_GrowableBuilder(), new $c_scm_Stack(16))
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  from__sc_IterableOnce__O(source) {
    const this$1 = new $c_scm_Stack(16);
    return this$1.addAll__sc_IterableOnce__scm_ArrayDeque(source)
  };
}
const $d_scm_Stack$ = new $TypeData().initClass({
  scm_Stack$: 0
}, false, "scala.collection.mutable.Stack$", {
  scm_Stack$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_Stack$.prototype.$classData = $d_scm_Stack$;
let $n_scm_Stack$ = (void 0);
function $m_scm_Stack$() {
  if ((!$n_scm_Stack$)) {
    $n_scm_Stack$ = new $c_scm_Stack$()
  };
  return $n_scm_Stack$
}
const $f_s_math_Ordering__lteq__O__O__Z = (function($thiz, x, y) {
  return ($thiz.compare__O__O__I(x, y) <= 0)
});
const $f_s_math_Ordering__gteq__O__O__Z = (function($thiz, x, y) {
  return ($thiz.compare__O__O__I(x, y) >= 0)
});
const $f_s_math_Ordering__lt__O__O__Z = (function($thiz, x, y) {
  return ($thiz.compare__O__O__I(x, y) < 0)
});
const $f_s_math_Ordering__gt__O__O__Z = (function($thiz, x, y) {
  return ($thiz.compare__O__O__I(x, y) > 0)
});
const $f_s_math_Ordering__max__O__O__O = (function($thiz, x, y) {
  return ($thiz.gteq__O__O__Z(x, y) ? x : y)
});
const $f_s_math_Ordering__min__O__O__O = (function($thiz, x, y) {
  return ($thiz.lteq__O__O__Z(x, y) ? x : y)
});
const $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z = (function($thiz, other) {
  if ((other instanceof $c_s_math_Ordering$Reverse)) {
    const x2 = other;
    const x = x2.s_math_Ordering$Reverse__f_outer;
    return ((x !== null) && x.equals__O__Z($thiz))
  } else {
    return false
  }
});
const $p_s_reflect_ClassTag__prettyprint$1__jl_Class__T = (function($thiz, clazz) {
  return (clazz.isArray__Z() ? (("Array[" + $p_s_reflect_ClassTag__prettyprint$1__jl_Class__T($thiz, clazz.getComponentType__jl_Class())) + "]") : clazz.getName__T())
});
const $f_s_reflect_ClassTag__equals__O__Z = (function($thiz, x) {
  if ($is_s_reflect_ClassTag(x)) {
    const x$2 = $thiz.runtimeClass__jl_Class();
    const x$3 = x.runtimeClass__jl_Class();
    return (x$2 === x$3)
  } else {
    return false
  }
});
function $is_s_reflect_ClassTag(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.s_reflect_ClassTag)))
}
function $isArrayOf_s_reflect_ClassTag(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_reflect_ClassTag)))
}
class $c_sr_NonLocalReturnControl$mcC$sp extends $c_sr_NonLocalReturnControl {
  constructor(key, value$mcC$sp) {
    super();
    this.sr_NonLocalReturnControl$mcC$sp__f_value$mcC$sp = 0;
    this.sr_NonLocalReturnControl$mcC$sp__f_value$mcC$sp = value$mcC$sp;
    $ct_sr_NonLocalReturnControl__O__O__(this, key, null)
  };
  value$mcC$sp__C() {
    return this.sr_NonLocalReturnControl$mcC$sp__f_value$mcC$sp
  };
  value__O() {
    return $bC(this.sr_NonLocalReturnControl$mcC$sp__f_value$mcC$sp)
  };
}
const $d_sr_NonLocalReturnControl$mcC$sp = new $TypeData().initClass({
  sr_NonLocalReturnControl$mcC$sp: 0
}, false, "scala.runtime.NonLocalReturnControl$mcC$sp", {
  sr_NonLocalReturnControl$mcC$sp: 1,
  sr_NonLocalReturnControl: 1,
  s_util_control_ControlThrowable: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_NonLocalReturnControl$mcC$sp.prototype.$classData = $d_sr_NonLocalReturnControl$mcC$sp;
class $c_sr_NonLocalReturnControl$mcI$sp extends $c_sr_NonLocalReturnControl {
  constructor(key, value$mcI$sp) {
    super();
    this.sr_NonLocalReturnControl$mcI$sp__f_value$mcI$sp = 0;
    this.sr_NonLocalReturnControl$mcI$sp__f_value$mcI$sp = value$mcI$sp;
    $ct_sr_NonLocalReturnControl__O__O__(this, key, null)
  };
  value$mcI$sp__I() {
    return this.sr_NonLocalReturnControl$mcI$sp__f_value$mcI$sp
  };
  value__O() {
    return this.sr_NonLocalReturnControl$mcI$sp__f_value$mcI$sp
  };
}
const $d_sr_NonLocalReturnControl$mcI$sp = new $TypeData().initClass({
  sr_NonLocalReturnControl$mcI$sp: 0
}, false, "scala.runtime.NonLocalReturnControl$mcI$sp", {
  sr_NonLocalReturnControl$mcI$sp: 1,
  sr_NonLocalReturnControl: 1,
  s_util_control_ControlThrowable: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_NonLocalReturnControl$mcI$sp.prototype.$classData = $d_sr_NonLocalReturnControl$mcI$sp;
class $c_sr_NonLocalReturnControl$mcV$sp extends $c_sr_NonLocalReturnControl {
  constructor(key, value$mcV$sp) {
    super();
    this.sr_NonLocalReturnControl$mcV$sp__f_value$mcV$sp = null;
    this.sr_NonLocalReturnControl$mcV$sp__f_value$mcV$sp = value$mcV$sp;
    $ct_sr_NonLocalReturnControl__O__O__(this, key, (void 0))
  };
  value$mcV$sp__V() {
    /*<skip>*/
  };
  value__O() {
    return (void 0)
  };
}
const $d_sr_NonLocalReturnControl$mcV$sp = new $TypeData().initClass({
  sr_NonLocalReturnControl$mcV$sp: 0
}, false, "scala.runtime.NonLocalReturnControl$mcV$sp", {
  sr_NonLocalReturnControl$mcV$sp: 1,
  sr_NonLocalReturnControl: 1,
  s_util_control_ControlThrowable: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_NonLocalReturnControl$mcV$sp.prototype.$classData = $d_sr_NonLocalReturnControl$mcV$sp;
class $c_sr_NonLocalReturnControl$mcZ$sp extends $c_sr_NonLocalReturnControl {
  constructor(key, value$mcZ$sp) {
    super();
    this.sr_NonLocalReturnControl$mcZ$sp__f_value$mcZ$sp = false;
    this.sr_NonLocalReturnControl$mcZ$sp__f_value$mcZ$sp = value$mcZ$sp;
    $ct_sr_NonLocalReturnControl__O__O__(this, key, null)
  };
  value$mcZ$sp__Z() {
    return this.sr_NonLocalReturnControl$mcZ$sp__f_value$mcZ$sp
  };
  value__O() {
    return this.sr_NonLocalReturnControl$mcZ$sp__f_value$mcZ$sp
  };
}
const $d_sr_NonLocalReturnControl$mcZ$sp = new $TypeData().initClass({
  sr_NonLocalReturnControl$mcZ$sp: 0
}, false, "scala.runtime.NonLocalReturnControl$mcZ$sp", {
  sr_NonLocalReturnControl$mcZ$sp: 1,
  sr_NonLocalReturnControl: 1,
  s_util_control_ControlThrowable: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_sr_NonLocalReturnControl$mcZ$sp.prototype.$classData = $d_sr_NonLocalReturnControl$mcZ$sp;
class $c_sr_ScalaRunTime$$anon$1 extends $c_sc_AbstractIterator {
  constructor(x$2) {
    super();
    this.sr_ScalaRunTime$$anon$1__f_c = 0;
    this.sr_ScalaRunTime$$anon$1__f_cmax = 0;
    this.sr_ScalaRunTime$$anon$1__f_x$2 = null;
    this.sr_ScalaRunTime$$anon$1__f_x$2 = x$2;
    this.sr_ScalaRunTime$$anon$1__f_c = 0;
    this.sr_ScalaRunTime$$anon$1__f_cmax = x$2.productArity__I()
  };
  hasNext__Z() {
    return (this.sr_ScalaRunTime$$anon$1__f_c < this.sr_ScalaRunTime$$anon$1__f_cmax)
  };
  next__O() {
    const result = this.sr_ScalaRunTime$$anon$1__f_x$2.productElement__I__O(this.sr_ScalaRunTime$$anon$1__f_c);
    this.sr_ScalaRunTime$$anon$1__f_c = ((1 + this.sr_ScalaRunTime$$anon$1__f_c) | 0);
    return result
  };
}
const $d_sr_ScalaRunTime$$anon$1 = new $TypeData().initClass({
  sr_ScalaRunTime$$anon$1: 0
}, false, "scala.runtime.ScalaRunTime$$anon$1", {
  sr_ScalaRunTime$$anon$1: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sr_ScalaRunTime$$anon$1.prototype.$classData = $d_sr_ScalaRunTime$$anon$1;
class $c_sjs_js_WrappedArray$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sjs_js_WrappedArray(elems)
  };
  newBuilder__scm_Builder() {
    return $ct_sjs_js_WrappedArray__(new $c_sjs_js_WrappedArray())
  };
  from__sc_IterableOnce__sjs_js_WrappedArray(source) {
    const this$1 = $ct_sjs_js_WrappedArray__(new $c_sjs_js_WrappedArray());
    return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this$1, source).result__O()
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sjs_js_WrappedArray(source)
  };
}
const $d_sjs_js_WrappedArray$ = new $TypeData().initClass({
  sjs_js_WrappedArray$: 0
}, false, "scala.scalajs.js.WrappedArray$", {
  sjs_js_WrappedArray$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sjs_js_WrappedArray$.prototype.$classData = $d_sjs_js_WrappedArray$;
let $n_sjs_js_WrappedArray$ = (void 0);
function $m_sjs_js_WrappedArray$() {
  if ((!$n_sjs_js_WrappedArray$)) {
    $n_sjs_js_WrappedArray$ = new $c_sjs_js_WrappedArray$()
  };
  return $n_sjs_js_WrappedArray$
}
class $c_sjsr_WrappedVarArgs$ extends $c_O {
  apply__sci_Seq__O(elems) {
    return this.from__sc_IterableOnce__sjsr_WrappedVarArgs(elems)
  };
  from__sc_IterableOnce__sjsr_WrappedVarArgs(source) {
    const this$1 = this.newBuilder__scm_Builder();
    return this$1.addAll__sc_IterableOnce__scm_Growable(source).result__O()
  };
  newBuilder__scm_Builder() {
    const array = [];
    const this$4 = $ct_sjs_js_WrappedArray__sjs_js_Array__(new $c_sjs_js_WrappedArray(), array);
    const f = new $c_sjsr_AnonFunction1(((this$2) => ((x$1$2) => {
      const x$1 = x$1$2;
      return new $c_sjsr_WrappedVarArgs(x$1.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array)
    }))(this));
    return new $c_scm_Builder$$anon$1(this$4, f)
  };
  tabulate__I__F1__O(n, f) {
    return $f_sc_StrictOptimizedSeqFactory__tabulate__I__F1__sc_SeqOps(this, n, f)
  };
  from__sc_IterableOnce__O(source) {
    return this.from__sc_IterableOnce__sjsr_WrappedVarArgs(source)
  };
}
const $d_sjsr_WrappedVarArgs$ = new $TypeData().initClass({
  sjsr_WrappedVarArgs$: 0
}, false, "scala.scalajs.runtime.WrappedVarArgs$", {
  sjsr_WrappedVarArgs$: 1,
  O: 1,
  sc_StrictOptimizedSeqFactory: 1,
  sc_SeqFactory: 1,
  sc_IterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sjsr_WrappedVarArgs$.prototype.$classData = $d_sjsr_WrappedVarArgs$;
let $n_sjsr_WrappedVarArgs$ = (void 0);
function $m_sjsr_WrappedVarArgs$() {
  if ((!$n_sjsr_WrappedVarArgs$)) {
    $n_sjsr_WrappedVarArgs$ = new $c_sjsr_WrappedVarArgs$()
  };
  return $n_sjsr_WrappedVarArgs$
}
class $c_Ltigerpython_parser_ast_AstNode$Arguments extends $c_Ltigerpython_parser_ast_AstNode {
  constructor(pos, values, keywords, starArgs, kwArgs) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_values = null;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords = null;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs = null;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs = null;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_values = values;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords = keywords;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs = starArgs;
    this.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs = kwArgs
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Arguments__f_pos
  };
  kind__s_Enumeration$Value() {
    return $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_ARGUMENTS
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const array = [this.Ltigerpython_parser_ast_AstNode$Arguments__f_pos, $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__O__T(this.Ltigerpython_parser_ast_AstNode$Arguments__f_values), $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__O__T(this.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords), $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs), $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs)];
    return $$x1.format$extension__T__sci_Seq__T("Arguments(%d, %s, %s, %s, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Arguments"
  };
  productArity__I() {
    return 5
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Arguments__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Arguments__f_values;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Arguments");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Arguments__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Arguments__f_values;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$3 = this.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$6, 5)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Arguments)) {
      const Arguments$1 = x$1;
      let $$x1;
      if ((((this.Ltigerpython_parser_ast_AstNode$Arguments__f_pos === Arguments$1.Ltigerpython_parser_ast_AstNode$Arguments__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Arguments__f_values === Arguments$1.Ltigerpython_parser_ast_AstNode$Arguments__f_values)) && (this.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords === Arguments$1.Ltigerpython_parser_ast_AstNode$Arguments__f_keywords))) {
        const x = this.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs;
        const x$2 = Arguments$1.Ltigerpython_parser_ast_AstNode$Arguments__f_starArgs;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs;
        const x$4 = Arguments$1.Ltigerpython_parser_ast_AstNode$Arguments__f_kwArgs;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Arguments(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Arguments)))
}
const $d_Ltigerpython_parser_ast_AstNode$Arguments = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Arguments: 0
}, false, "tigerpython.parser.ast.AstNode$Arguments", {
  Ltigerpython_parser_ast_AstNode$Arguments: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Arguments.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Arguments;
class $c_Ltigerpython_parser_ast_AstNode$Comprehension extends $c_Ltigerpython_parser_ast_AstNode {
  constructor(pos, target, iter, ifs) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_target = null;
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter = null;
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs = null;
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_target = target;
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter = iter;
    this.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs = ifs
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos
  };
  kind__s_Enumeration$Value() {
    return $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_COMPREHENSION
  };
  toString__T() {
    try {
      const xs = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs;
      if ((xs.u.length !== 0)) {
        const $$x3 = $m_sc_StringOps$();
        const $$x2 = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_target.toString__T();
        const $$x1 = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter.toString__T();
        const this$4 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs);
        const array = [$$x2, $$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$4, "", ", ", "")];
        return $$x3.format$extension__T__sci_Seq__T("Comprehension(%s, %s; if %s)", new $c_sjsr_WrappedVarArgs(array))
      } else {
        const $$x4 = $m_sc_StringOps$();
        const array$1 = [this.Ltigerpython_parser_ast_AstNode$Comprehension__f_target.toString__T(), this.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter.toString__T()];
        return $$x4.format$extension__T__sci_Seq__T("Comprehension(%s, %s)", new $c_sjsr_WrappedVarArgs(array$1))
      }
    } catch (e) {
      if ((e instanceof $c_jl_NullPointerException)) {
        const $$x5 = $m_sc_StringOps$();
        const array$2 = [this.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos];
        return $$x5.format$extension__T__sci_Seq__T("Comprehension(%d, ???)", new $c_sjsr_WrappedVarArgs(array$2))
      } else {
        throw e
      }
    }
  };
  productPrefix__T() {
    return "Comprehension"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Comprehension__f_target;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Comprehension");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_target;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Comprehension)) {
      const Comprehension$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos === Comprehension$1.Ltigerpython_parser_ast_AstNode$Comprehension__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_target;
        const x$2 = Comprehension$1.Ltigerpython_parser_ast_AstNode$Comprehension__f_target;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter;
        const x$4 = Comprehension$1.Ltigerpython_parser_ast_AstNode$Comprehension__f_iter;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs === Comprehension$1.Ltigerpython_parser_ast_AstNode$Comprehension__f_ifs)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Comprehension(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Comprehension)))
}
const $d_Ltigerpython_parser_ast_AstNode$Comprehension = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Comprehension: 0
}, false, "tigerpython.parser.ast.AstNode$Comprehension", {
  Ltigerpython_parser_ast_AstNode$Comprehension: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Comprehension.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Comprehension;
const $p_Ltigerpython_parser_ast_AstNode$Parameters__hasFirstName__sci_Seq__Z = (function($thiz, names) {
  const xs = $thiz.Ltigerpython_parser_ast_AstNode$Parameters__f_args;
  if ((xs.u.length !== 0)) {
    const x1 = $thiz.Ltigerpython_parser_ast_AstNode$Parameters__f_args.u[0];
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$NameParameter)) {
      const x2 = x1;
      return names.contains__O__Z(x2.Ltigerpython_parser_ast_AstNode$NameParameter__f_name)
    } else {
      return false
    }
  } else {
    return false
  }
});
class $c_Ltigerpython_parser_ast_AstNode$Parameters extends $c_Ltigerpython_parser_ast_AstNode {
  constructor(pos, args, defaults, maxPositionalArgCount, varArgs, kwArgs) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_args = null;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults = null;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount = 0;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs = null;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs = null;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_args = args;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults = defaults;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount = maxPositionalArgCount;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs = varArgs;
    this.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs = kwArgs
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Parameters__f_pos
  };
  kind__s_Enumeration$Value() {
    return $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_PARAMETERS
  };
  hasClassSelf__Z() {
    const array = ["self", "this", "cls", "class", "type", "klass", "metacls", "mcls"];
    return $p_Ltigerpython_parser_ast_AstNode$Parameters__hasFirstName__sci_Seq__Z(this, new $c_sjsr_WrappedVarArgs(array))
  };
  hasSelf__Z() {
    const array = ["self", "this"];
    return $p_Ltigerpython_parser_ast_AstNode$Parameters__hasFirstName__sci_Seq__Z(this, new $c_sjsr_WrappedVarArgs(array))
  };
  toString__T() {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    const argCount1 = ((this.Ltigerpython_parser_ast_AstNode$Parameters__f_args.u.length - this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults.u.length) | 0);
    const isEmpty = (argCount1 <= 0);
    const scala$collection$immutable$Range$$lastElement = (((-1) + argCount1) | 0);
    if ((!isEmpty)) {
      let i = 0;
      while (true) {
        const arg1 = i;
        const elem = this.Ltigerpython_parser_ast_AstNode$Parameters__f_args.u[arg1].toString__T();
        result.addOne__O__scm_ArrayBuffer(elem);
        if ((i === scala$collection$immutable$Range$$lastElement)) {
          break
        };
        i = ((1 + i) | 0)
      }
    };
    const $$x1 = $m_sc_ArrayOps$();
    const xs = this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults;
    const this$8 = $$x1.indices$extension__O__sci_Range(xs);
    if ((!this$8.sci_Range__f_isEmpty)) {
      let i$1 = this$8.sci_Range__f_start;
      while (true) {
        const arg1$1 = i$1;
        const $$x2 = $m_sc_StringOps$();
        const array = [this.Ltigerpython_parser_ast_AstNode$Parameters__f_args.u[((arg1$1 + argCount1) | 0)].toString__T(), this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults.u[arg1$1].toString__T()];
        const elem$1 = $$x2.format$extension__T__sci_Seq__T("%s=%s", new $c_sjsr_WrappedVarArgs(array));
        result.addOne__O__scm_ArrayBuffer(elem$1);
        if ((i$1 === this$8.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
          break
        };
        i$1 = ((i$1 + this$8.sci_Range__f_step) | 0)
      }
    };
    const $$x3 = $m_sc_StringOps$();
    const array$1 = [this.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount];
    const elem$2 = $$x3.format$extension__T__sci_Seq__T("(pos-max: %d)", new $c_sjsr_WrappedVarArgs(array$1));
    result.addOne__O__scm_ArrayBuffer(elem$2);
    if ((this.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs !== null)) {
      const this$17 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs;
      const elem$3 = ("*" + $m_sr_ScalaRunTime$()._toString__s_Product__T(this$17));
      result.addOne__O__scm_ArrayBuffer(elem$3)
    };
    if ((this.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs !== null)) {
      const this$18 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs;
      const elem$4 = ("**" + $m_sr_ScalaRunTime$()._toString__s_Product__T(this$18));
      result.addOne__O__scm_ArrayBuffer(elem$4)
    };
    return (("Parameters(" + $f_sc_IterableOnceOps__mkString__T__T__T__T(result, "", ", ", "")) + ")")
  };
  productPrefix__T() {
    return "Parameters"
  };
  productArity__I() {
    return 6
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Parameters__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Parameters__f_args;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs;
        break
      }
      case 5: {
        return this.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Parameters");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Parameters__f_args;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const data$4 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount;
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    const x$3 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs;
    const data$6 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$6, data$6);
    const hash$7 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$7, 6)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Parameters)) {
      const Parameters$1 = x$1;
      let $$x1;
      if (((((this.Ltigerpython_parser_ast_AstNode$Parameters__f_pos === Parameters$1.Ltigerpython_parser_ast_AstNode$Parameters__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount === Parameters$1.Ltigerpython_parser_ast_AstNode$Parameters__f_maxPositionalArgCount)) && (this.Ltigerpython_parser_ast_AstNode$Parameters__f_args === Parameters$1.Ltigerpython_parser_ast_AstNode$Parameters__f_args)) && (this.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults === Parameters$1.Ltigerpython_parser_ast_AstNode$Parameters__f_defaults))) {
        const x = this.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs;
        const x$2 = Parameters$1.Ltigerpython_parser_ast_AstNode$Parameters__f_varArgs;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs;
        const x$4 = Parameters$1.Ltigerpython_parser_ast_AstNode$Parameters__f_kwArgs;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Parameters(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Parameters)))
}
const $d_Ltigerpython_parser_ast_AstNode$Parameters = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Parameters: 0
}, false, "tigerpython.parser.ast.AstNode$Parameters", {
  Ltigerpython_parser_ast_AstNode$Parameters: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Parameters.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Parameters;
const $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token = (function($thiz, len, tokenType) {
  const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
  let $$x1;
  if ((x === tokenType)) {
    $$x1 = true
  } else {
    const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
    $$x1 = (x$3 === tokenType)
  };
  if ($$x1) {
    const result = new $c_Ltigerpython_parser_lexer_Token($thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(len), len, tokenType);
    result.Ltigerpython_parser_lexer_Token__f_value = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.getString__I__I__T(result.Ltigerpython_parser_lexer_Token__f_pos, len);
    return result
  } else {
    const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
    if ((x$5 === tokenType)) {
      const result$2 = new $c_Ltigerpython_parser_lexer_Token($thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(len), len, tokenType);
      const s = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.getString__I__I__T(result$2.Ltigerpython_parser_lexer_Token__f_pos, len);
      result$2.Ltigerpython_parser_lexer_Token__f_value = s;
      const followChar = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.peekNonWhiteChar__C();
      $thiz.incNameCount__T__C__V(s, followChar);
      const $$x2 = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner;
      const array = [$m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ALPHA, $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DOT, $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DIGIT];
      const total_len = $$x2.suffixLength__I__sci_Seq__I(0, new $c_sjsr_WrappedVarArgs(array));
      if ((total_len > len)) {
        $thiz.incNameCount__T__C__V($thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.getString__I__I__T(((result$2.Ltigerpython_parser_lexer_Token__f_endPos - total_len) | 0), total_len), followChar)
      };
      return result$2
    } else {
      const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
      let $$x3;
      if ((x$7 === tokenType)) {
        $$x3 = true
      } else {
        const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
        $$x3 = (x$9 === tokenType)
      };
      if ($$x3) {
        const result$3 = new $c_Ltigerpython_parser_lexer_Token($thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(len), len, tokenType);
        result$3.Ltigerpython_parser_lexer_Token__f_value = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.getStringLiteral__I__I__T(result$3.Ltigerpython_parser_lexer_Token__f_pos, len);
        return result$3
      } else {
        const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR;
        if ((x$11 === tokenType)) {
          const result$4 = new $c_Ltigerpython_parser_lexer_Token($thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(len), len, tokenType);
          result$4.Ltigerpython_parser_lexer_Token__f_value = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.getString__I__I__T(result$4.Ltigerpython_parser_lexer_Token__f_pos, len);
          const this$7 = $thiz.Ltigerpython_parser_lexer_Lexer__f_parserState;
          const pos = result$4.Ltigerpython_parser_lexer_Token__f_pos;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
          const array$1 = [result$4.Ltigerpython_parser_lexer_Token__f_value];
          const params = new $c_sjsr_WrappedVarArgs(array$1);
          this$7.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
          return result$4
        } else {
          return new $c_Ltigerpython_parser_lexer_Token($thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(len), len, tokenType)
        }
      }
    }
  }
});
const $p_Ltigerpython_parser_lexer_Lexer__getTokenTypeFromPrefix__I__Ltigerpython_parser_lexer_TokenType = (function($thiz, prefixLen) {
  if ((prefixLen > 0)) {
    const elem = (prefixLen > 2);
    let elem$1 = false;
    elem$1 = elem;
    const elem$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
    let elem$3 = null;
    elem$3 = elem$2;
    const isEmpty = (prefixLen <= 0);
    const scala$collection$immutable$Range$$lastElement = (((-1) + prefixLen) | 0);
    if ((!isEmpty)) {
      let i = 0;
      while (true) {
        const v1 = i;
        const x1 = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(v1);
        switch (x1) {
          case 98:
          case 66: {
            if (elem$1) {
              elem$1 = true
            } else {
              const x = elem$3;
              const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
              elem$1 = (!(x === x$2))
            };
            elem$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BYTEARRAY;
            break
          }
          case 117:
          case 85: {
            if (elem$1) {
              elem$1 = true
            } else {
              const x$3 = elem$3;
              const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
              elem$1 = (!(x$3 === x$4))
            };
            elem$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_UNICODE;
            break
          }
          case 114:
          case 82: {
            break
          }
          default: {
            elem$1 = true
          }
        };
        if ((i === scala$collection$immutable$Range$$lastElement)) {
          break
        };
        i = ((1 + i) | 0)
      }
    };
    if (elem$1) {
      elem$1 = true
    } else if ((prefixLen > 1)) {
      const x$1 = elem$3;
      const x$2$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
      elem$1 = (x$1 === x$2$1)
    } else {
      elem$1 = false
    };
    if (elem$1) {
      const this$12 = $thiz.Ltigerpython_parser_lexer_Lexer__f_parserState;
      const this$8 = $thiz.Ltigerpython_parser_lexer_Lexer__f_scanner;
      const pos = this$8.Ltigerpython_parser_lexer_Scanner__f__pos;
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_STRING_PREFIX;
      const array = [$thiz.Ltigerpython_parser_lexer_Lexer__f_scanner.peekString__I__I__T(0, prefixLen)];
      const params = new $c_sjsr_WrappedVarArgs(array);
      this$12.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
    };
    return elem$3
  } else {
    return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR
  }
});
const $p_Ltigerpython_parser_lexer_Lexer__matchBracket$1__C__V = (function($thiz, ch) {
  const this$1 = $thiz.Ltigerpython_parser_lexer_Lexer__f_bracketStack;
  let $$x1;
  if ((!this$1.isEmpty__Z())) {
    const this$2 = $thiz.Ltigerpython_parser_lexer_Lexer__f_bracketStack;
    $$x1 = ($uC(this$2.removeHead__Z__O(false)) === ch)
  } else {
    $$x1 = false
  };
  if ((!$$x1)) {
    $thiz.Ltigerpython_parser_lexer_Lexer__f_bracketError = true;
    $thiz.Ltigerpython_parser_lexer_Lexer__f_bracketStack.clear__V()
  }
});
class $c_Ltigerpython_parser_lexer_Lexer extends $c_O {
  constructor(source, parserState, caretPos) {
    super();
    this.Ltigerpython_parser_lexer_Lexer__f_source = null;
    this.Ltigerpython_parser_lexer_Lexer__f_parserState = null;
    this.Ltigerpython_parser_lexer_Lexer__f_caretPos = 0;
    this.Ltigerpython_parser_lexer_Lexer__f_scanner = null;
    this.Ltigerpython_parser_lexer_Lexer__f_cache = null;
    this.Ltigerpython_parser_lexer_Lexer__f_names = null;
    this.Ltigerpython_parser_lexer_Lexer__f_bracketError = false;
    this.Ltigerpython_parser_lexer_Lexer__f_bracketStack = null;
    this.Ltigerpython_parser_lexer_Lexer__f_lineStart = 0;
    this.Ltigerpython_parser_lexer_Lexer__f_source = source;
    this.Ltigerpython_parser_lexer_Lexer__f_parserState = parserState;
    this.Ltigerpython_parser_lexer_Lexer__f_caretPos = caretPos;
    this.Ltigerpython_parser_lexer_Lexer__f_scanner = new $c_Ltigerpython_parser_lexer_Scanner(source);
    if ((parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion >= 3)) {
      this.Ltigerpython_parser_lexer_Lexer__f_scanner.Ltigerpython_parser_lexer_Scanner__f_catCodes.Ltigerpython_parser_lexer_CatCodes__f_enableUnicodeAlpha = true
    };
    this.Ltigerpython_parser_lexer_Lexer__f_cache = this.nextIndentation__Ltigerpython_parser_lexer_Token();
    this.Ltigerpython_parser_lexer_Lexer__f_names = $m_scm_Map$().apply__sci_Seq__O($m_sci_Nil$());
    this.Ltigerpython_parser_lexer_Lexer__f_bracketError = false;
    const elems = $m_sci_Nil$();
    const this$2 = new $c_scm_Stack(16);
    this.Ltigerpython_parser_lexer_Lexer__f_bracketStack = this$2.addAll__sc_IterableOnce__scm_ArrayDeque(elems);
    this.Ltigerpython_parser_lexer_Lexer__f_lineStart = 0
  };
  buffered__sc_BufferedIterator() {
    return this
  };
  iterator__sc_Iterator() {
    return this
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  hasBracketError__Z() {
    if (this.Ltigerpython_parser_lexer_Lexer__f_bracketError) {
      return true
    } else {
      const this$1 = this.Ltigerpython_parser_lexer_Lexer__f_bracketStack;
      return (!this$1.isEmpty__Z())
    }
  };
  hasNext__Z() {
    return (this.head__Ltigerpython_parser_lexer_Token() !== null)
  };
  head__Ltigerpython_parser_lexer_Token() {
    if ((this.Ltigerpython_parser_lexer_Lexer__f_cache === null)) {
      this.Ltigerpython_parser_lexer_Lexer__f_cache = this.nextToken__Ltigerpython_parser_lexer_Token()
    };
    return this.Ltigerpython_parser_lexer_Lexer__f_cache
  };
  next__Ltigerpython_parser_lexer_Token() {
    const result = this.head__Ltigerpython_parser_lexer_Token();
    let $$x1;
    if ((this.Ltigerpython_parser_lexer_Lexer__f_cache !== null)) {
      const x = this.Ltigerpython_parser_lexer_Lexer__f_cache.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      this.Ltigerpython_parser_lexer_Lexer__f_cache = this.nextIndentation__Ltigerpython_parser_lexer_Token()
    } else {
      this.Ltigerpython_parser_lexer_Lexer__f_cache = this.nextToken__Ltigerpython_parser_lexer_Token()
    };
    return result
  };
  getNameCount__T__I(name) {
    const x1 = this.Ltigerpython_parser_lexer_Lexer__f_names.get__O__s_Option(name);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const nameInfo = x2.s_Some__f_value;
      return nameInfo.Ltigerpython_parser_lexer_Lexer$NameInfo__f_refCount
    } else {
      return 0
    }
  };
  getNameListCount__T__I(name) {
    const x1 = this.Ltigerpython_parser_lexer_Lexer__f_names.get__O__s_Option(name);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const nameInfo = x2.s_Some__f_value;
      return nameInfo.Ltigerpython_parser_lexer_Lexer$NameInfo__f_listCount
    } else {
      return 0
    }
  };
  isLikelyFunctionName__T__Z(name) {
    const x1 = this.Ltigerpython_parser_lexer_Lexer__f_names.get__O__s_Option(name);
    if ((x1 instanceof $c_s_Some)) {
      const x2 = x1;
      const nameInfo = x2.s_Some__f_value;
      return ((nameInfo.Ltigerpython_parser_lexer_Lexer$NameInfo__f_callCount > 0) || $m_Ltigerpython_parser_scopes_BuiltinNames$().hasFunction__T__Z(name))
    } else {
      const x = $m_s_None$();
      if ((x === x1)) {
        return $m_Ltigerpython_parser_scopes_BuiltinNames$().hasFunction__T__Z(name)
      } else {
        throw new $c_s_MatchError(x1)
      }
    }
  };
  incNameCount__T__C__V(name, followChar) {
    let $$x1;
    if ((name !== "")) {
      const c = (65535 & (name.charCodeAt(0) | 0));
      const this$5 = $m_jl_Character$();
      $$x1 = (!this$5.isDigit__I__Z(c))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const this$7 = this.Ltigerpython_parser_lexer_Lexer__f_names;
      const f = ((this$6) => (() => new $c_Ltigerpython_parser_lexer_Lexer$NameInfo()))(this);
      const x = $objectGetClass(this$7);
      let $$x2;
      if ((!(x === $d_scm_HashMap.getClassOf()))) {
        const x1 = this$7.get__O__s_Option(name);
        if ((x1 instanceof $c_s_Some)) {
          const x2 = x1;
          const v = x2.s_Some__f_value;
          $$x2 = v
        } else {
          const x$1 = $m_s_None$();
          if ((!(x$1 === x1))) {
            throw new $c_s_MatchError(x1)
          };
          const d = f();
          $p_scm_HashMap__put0__O__O__Z__s_Some(this$7, name, d, false);
          $$x2 = d
        }
      } else {
        const originalHash = $m_sr_Statics$().anyHash__O__I(name);
        const hash = (originalHash ^ ((originalHash >>> 16) | 0));
        const idx = (hash & (((-1) + this$7.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
        const x1$1 = this$7.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx];
        const nd = ((x1$1 === null) ? null : x1$1.findNode__O__I__scm_HashMap$Node(name, hash));
        if ((nd !== null)) {
          $$x2 = nd.scm_HashMap$Node__f__value
        } else {
          const table0 = this$7.scm_HashMap__f_scala$collection$mutable$HashMap$$table;
          const default$1 = f();
          if ((((1 + this$7.scm_HashMap__f_contentSize) | 0) >= this$7.scm_HashMap__f_threshold)) {
            $p_scm_HashMap__growTable__I__V(this$7, (this$7.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length << 1))
          };
          const newIdx = ((table0 === this$7.scm_HashMap__f_scala$collection$mutable$HashMap$$table) ? idx : (hash & (((-1) + this$7.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0)));
          $p_scm_HashMap__put0__O__O__Z__I__I__s_Some(this$7, name, default$1, false, hash, newIdx);
          $$x2 = default$1
        }
      };
      const info = $$x2;
      info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_refCount = ((1 + info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_refCount) | 0);
      switch (followChar) {
        case 40: {
          info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_callCount = ((1 + info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_callCount) | 0);
          break
        }
        case 91: {
          info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_listCount = ((1 + info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_listCount) | 0);
          break
        }
        case 46: {
          info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_dotCount = ((1 + info.Ltigerpython_parser_lexer_Lexer$NameInfo__f_dotCount) | 0);
          break
        }
      }
    }
  };
  connectNames__T__T__s_Option(s1, s2) {
    if (((this.getNameCount__T__I(s1) <= 1) || (this.getNameCount__T__I(s2) <= 1))) {
      const c1 = this.getNameCount__T__I((("" + s1) + s2));
      const c2 = this.getNameCount__T__I(((s1 + "_") + s2));
      const c = (65535 & (s2.charCodeAt(0) | 0));
      const c3 = this.getNameCount__T__I(((("" + s1) + $bC($m_jl_Character$().toUpperCase__C__C(c))) + $m_sc_StringOps$().slice$extension__T__I__I__T(s2, 1, (s2.length | 0))));
      if ((c3 > c1)) {
        const c$1 = (65535 & (s2.charCodeAt(0) | 0));
        return new $c_s_Some(((("" + s1) + $bC($m_jl_Character$().toUpperCase__C__C(c$1))) + $m_sc_StringOps$().slice$extension__T__I__I__T(s2, 1, (s2.length | 0))))
      } else {
        return ((c1 > c2) ? new $c_s_Some((("" + s1) + s2)) : ((c1 < c2) ? new $c_s_Some(((s1 + "_") + s2)) : $m_s_None$()))
      }
    } else {
      return $m_s_None$()
    }
  };
  handleBracket__C__V(bracket) {
    if ((!this.Ltigerpython_parser_lexer_Lexer__f_bracketError)) {
      switch (bracket) {
        case 40:
        case 91:
        case 123: {
          const this$1 = this.Ltigerpython_parser_lexer_Lexer__f_bracketStack;
          this$1.prepend__O__scm_ArrayDeque($bC(bracket));
          break
        }
        case 41: {
          $p_Ltigerpython_parser_lexer_Lexer__matchBracket$1__C__V(this, 40);
          break
        }
        case 93: {
          $p_Ltigerpython_parser_lexer_Lexer__matchBracket$1__C__V(this, 91);
          break
        }
        case 125: {
          $p_Ltigerpython_parser_lexer_Lexer__matchBracket$1__C__V(this, 123);
          break
        }
      }
    }
  };
  nextToken__Ltigerpython_parser_lexer_Token() {
    if ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.remaining__I() > 0)) {
      const x1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value(this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0));
      const x = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ALPHA;
      if (((x === null) ? (x1 === null) : x.equals__O__Z(x1))) {
        const len = this.Ltigerpython_parser_lexer_Lexer__f_scanner.prefixLength__s_Enumeration$Value__s_Enumeration$Value__I__I($m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ALPHA, $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DIGIT, 0);
        const s = this.Ltigerpython_parser_lexer_Lexer__f_scanner.peekString__I__I__T(0, len);
        const x$3 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value(this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(len));
        const x$4 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_STRING;
        let $$x1;
        if (((!((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))) || (len > 3))) {
          $$x1 = true
        } else {
          const this$1 = $m_Ltigerpython_parser_lexer_TokenType$();
          const this$2 = this$1.Ltigerpython_parser_lexer_TokenType$__f_keywords;
          $$x1 = $f_sc_SeqOps__contains__O__Z(this$2, s)
        };
        if ($$x1) {
          return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, len, this.Ltigerpython_parser_lexer_Lexer__f_parserState.stringToTokenType__T__Ltigerpython_parser_lexer_TokenType(s))
        } else {
          return this.readString__I__Ltigerpython_parser_lexer_Token(len)
        }
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_BRACKET;
        if (((x$5 === null) ? (x1 === null) : x$5.equals__O__Z(x1))) {
          this.handleBracket__C__V(this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0));
          const this$3 = $m_Ltigerpython_parser_lexer_TokenType$();
          const c = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0);
          return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, 1, this$3.fromString__T__Ltigerpython_parser_lexer_TokenType(String.fromCharCode(c)))
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_COMMENT;
          if (((x$7 === null) ? (x1 === null) : x$7.equals__O__Z(x1))) {
            const this$5 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
            const pos = this$5.Ltigerpython_parser_lexer_Scanner__f__pos;
            this.Ltigerpython_parser_lexer_Lexer__f_scanner.skipLine__V();
            return ((pos === this.Ltigerpython_parser_lexer_Lexer__f_caretPos) ? new $c_Ltigerpython_parser_lexer_Token(pos, 0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CARET) : this.nextToken__Ltigerpython_parser_lexer_Token())
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DELIMITER;
            if (((x$9 === null) ? (x1 === null) : x$9.equals__O__Z(x1))) {
              if (((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 58) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1) === 61))) {
                const this$10 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                const this$6 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                const pos$1 = this$6.Ltigerpython_parser_lexer_Scanner__f__pos;
                const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
                const array = [":=", "="];
                const params = new $c_sjsr_WrappedVarArgs(array);
                this$10.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code, params);
                return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, 2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN)
              } else {
                const this$11 = $m_Ltigerpython_parser_lexer_TokenType$();
                const c$1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0);
                return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, 1, this$11.fromString__T__Ltigerpython_parser_lexer_TokenType(String.fromCharCode(c$1)))
              }
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DIGIT;
              if (((x$11 === null) ? (x1 === null) : x$11.equals__O__Z(x1))) {
                const result = this.readNumber__Ltigerpython_parser_lexer_Token();
                const x$13 = result.Ltigerpython_parser_lexer_Token__f_tokenType;
                const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
                let $$x3;
                if ((x$13 === x$14)) {
                  const x$15 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value(this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0));
                  const x$16 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ALPHA;
                  $$x3 = ((x$15 === null) ? (x$16 === null) : x$15.equals__O__Z(x$16))
                } else {
                  $$x3 = false
                };
                let $$x2;
                if ($$x3) {
                  const c$2 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1);
                  const this$15 = $m_jl_Character$();
                  $$x2 = this$15.isDigit__I__Z(c$2)
                } else {
                  $$x2 = false
                };
                if ($$x2) {
                  const this$17 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                  const this$16 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                  const pos$2 = this$16.Ltigerpython_parser_lexer_Scanner__f__pos;
                  const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_NUMBER;
                  const params$1 = $m_sci_Nil$();
                  this$17.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$1, params$1);
                  this.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(1);
                  return this.readNumber__Ltigerpython_parser_lexer_Token()
                } else {
                  return result
                }
              } else {
                const x$17 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_ESCAPE;
                if (((x$17 === null) ? (x1 === null) : x$17.equals__O__Z(x1))) {
                  this.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(1);
                  this.Ltigerpython_parser_lexer_Lexer__f_scanner.consumeLineBreak__Z();
                  return this.nextToken__Ltigerpython_parser_lexer_Token()
                } else {
                  const x$19 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE;
                  if (((x$19 === null) ? (x1 === null) : x$19.equals__O__Z(x1))) {
                    const this$18 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                    const pos$2$1 = this$18.Ltigerpython_parser_lexer_Scanner__f__pos;
                    this.Ltigerpython_parser_lexer_Lexer__f_scanner.consumeLineBreak__Z();
                    return new $c_Ltigerpython_parser_lexer_Token(pos$2$1, 1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE)
                  } else {
                    const x$21 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_OPERATOR;
                    if (((x$21 === null) ? (x1 === null) : x$21.equals__O__Z(x1))) {
                      let max_len = ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1)) ? 2 : 1);
                      if ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(max_len) === 61)) {
                        max_len = ((1 + max_len) | 0)
                      };
                      if ((((max_len === 1) && (((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 45) || (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 61)) || (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 124))) && ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1) === 62) || (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1) === 60)))) {
                        max_len = 2
                      };
                      if (((max_len === 1) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 61))) {
                        const x1$2 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1);
                        switch (x1$2) {
                          case 33:
                          case 47:
                          case 37:
                          case 124:
                          case 38:
                          case 94: {
                            max_len = 2;
                            break
                          }
                          case 42: {
                            if ((this.Ltigerpython_parser_lexer_Lexer__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
                              max_len = 2
                            } else {
                              let j = 2;
                              while ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(j) === 32)) {
                                j = ((1 + j) | 0)
                              };
                              const c$3 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(j);
                              const this$21 = $m_jl_Character$();
                              let $$x4;
                              if (this$21.isDigit__I__Z(c$3)) {
                                $$x4 = true
                              } else if ((j > 2)) {
                                const ch = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(j);
                                const array$1 = [$bC(43), $bC(45)];
                                const chars = new $c_sjsr_WrappedVarArgs(array$1);
                                $$x4 = $f_sc_SeqOps__contains__O__Z(chars, $bC(ch))
                              } else {
                                $$x4 = false
                              };
                              if ($$x4) {
                                max_len = 2
                              }
                            };
                            break
                          }
                        }
                      } else if ((((max_len === 1) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 60)) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1) === 62))) {
                        max_len = 2
                      };
                      let $$x5;
                      if ((((max_len === 1) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1) === 32)) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(2) === 61))) {
                        const ch$1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0);
                        const array$2 = [$bC(61), $bC(60), $bC(62), $bC(43), $bC(45), $bC(42), $bC(47), $bC(37)];
                        const chars$1 = new $c_sjsr_WrappedVarArgs(array$2);
                        $$x5 = $f_sc_SeqOps__contains__O__Z(chars$1, $bC(ch$1))
                      } else {
                        $$x5 = false
                      };
                      let x1$4;
                      if ($$x5) {
                        const $$x7 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                        const this$28 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                        const $$x6 = this$28.Ltigerpython_parser_lexer_Scanner__f__pos;
                        const value = $makeNativeArrayWrapper($d_C.getArrayOf(), [this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0), this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(2)]);
                        const this$29 = $m_jl_String$();
                        const x1$3 = $$x7.findOperator__I__T__T2($$x6, this$29.new__AC__I__I__T(value, 0, value.u.length));
                        if ((x1$3 === null)) {
                          throw new $c_s_MatchError(x1$3)
                        };
                        const l = x1$3._1$mcI$sp__I();
                        const tp = x1$3._2__O();
                        if ((l === 2)) {
                          const this$31 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                          const this$30 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                          const pos$3 = ((1 + this$30.Ltigerpython_parser_lexer_Scanner__f__pos) | 0);
                          const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_SPACE;
                          const params$2 = $m_sci_Nil$();
                          this$31.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$3, (-1), code$2, params$2);
                          x1$4 = $ct_T2__O__O__(new $c_T2(), 3, tp)
                        } else {
                          const $$x8 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                          const this$32 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                          x1$4 = $$x8.findOperator__I__T__T2(this$32.Ltigerpython_parser_lexer_Scanner__f__pos, this.Ltigerpython_parser_lexer_Lexer__f_scanner.peekString__I__I__T(0, max_len))
                        }
                      } else {
                        const $$x9 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                        const this$33 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                        x1$4 = $$x9.findOperator__I__T__T2(this$33.Ltigerpython_parser_lexer_Scanner__f__pos, this.Ltigerpython_parser_lexer_Lexer__f_scanner.peekString__I__I__T(0, max_len))
                      };
                      if ((x1$4 === null)) {
                        throw new $c_s_MatchError(x1$4)
                      };
                      const len$2 = x1$4._1$mcI$sp__I();
                      const t_type = x1$4._2__O();
                      return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, len$2, t_type)
                    } else {
                      const x$23 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_DOT;
                      if (((x$23 === null) ? (x1 === null) : x$23.equals__O__Z(x1))) {
                        const c$4 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1);
                        const this$36 = $m_jl_Character$();
                        if (this$36.isDigit__I__Z(c$4)) {
                          return this.readNumber__Ltigerpython_parser_lexer_Token()
                        } else {
                          return (this.Ltigerpython_parser_lexer_Lexer__f_scanner.isTripleChar__I__Z(0) ? $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, 3, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ELLIPSIS) : $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, 1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT))
                        }
                      } else {
                        const x$25 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_STRING;
                        if (((x$25 === null) ? (x1 === null) : x$25.equals__O__Z(x1))) {
                          return this.readString__I__Ltigerpython_parser_lexer_Token(0)
                        } else {
                          const x$27 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_WHITESPACE;
                          if (((x$27 === null) ? (x1 === null) : x$27.equals__O__Z(x1))) {
                            const this$37 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                            const pos$3$1 = this$37.Ltigerpython_parser_lexer_Scanner__f__pos;
                            this.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(1);
                            return ((pos$3$1 === this.Ltigerpython_parser_lexer_Lexer__f_caretPos) ? new $c_Ltigerpython_parser_lexer_Token(pos$3$1, 0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CARET) : this.nextToken__Ltigerpython_parser_lexer_Token())
                          } else {
                            const x$29 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_IGNORE;
                            if (((x$29 === null) ? (x1 === null) : x$29.equals__O__Z(x1))) {
                              this.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(1);
                              return this.nextToken__Ltigerpython_parser_lexer_Token()
                            } else {
                              if (((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 0) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 0))) {
                                const this$39 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                                const this$38 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                                const pos$4 = this$38.Ltigerpython_parser_lexer_Scanner__f__pos;
                                const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNEXPECTED_END_OF_INPUT;
                                const params$3 = $m_sci_Nil$();
                                this$39.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$4, (-1), code$3, params$3);
                                return null
                              };
                              const this$48 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
                              const this$40 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
                              const pos$5 = this$40.Ltigerpython_parser_lexer_Scanner__f__pos;
                              const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_INPUT_CHARACTER;
                              const $$x10 = $m_sc_StringOps$();
                              const array$3 = [this.Ltigerpython_parser_lexer_Lexer__f_scanner.peekString__I__I__T(0, 1), this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0)];
                              const array$4 = [$$x10.format$extension__T__sci_Seq__T("%s'/'[%d]", new $c_sjsr_WrappedVarArgs(array$3))];
                              const params$4 = new $c_sjsr_WrappedVarArgs(array$4);
                              this$48.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$5, (-1), code$4, params$4);
                              return new $c_Ltigerpython_parser_lexer_Token(this.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(1), 1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      let $$x11;
      if ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.remaining__I() === 0)) {
        const this$49 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        $$x11 = (this$49.Ltigerpython_parser_lexer_Scanner__f__pos === this.Ltigerpython_parser_lexer_Lexer__f_caretPos)
      } else {
        $$x11 = false
      };
      if (($$x11 && this.Ltigerpython_parser_lexer_Lexer__f_scanner.isFollowingIndentation__Z())) {
        return new $c_Ltigerpython_parser_lexer_Token(this.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(1), 0, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CARET)
      } else {
        return null
      }
    }
  };
  nextIndentation__Ltigerpython_parser_lexer_Token() {
    const len = this.Ltigerpython_parser_lexer_Lexer__f_scanner.prefixLength__s_Enumeration$Value__I__I($m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_WHITESPACE, 0);
    const this$1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
    let $$x1;
    if ((this$1.Ltigerpython_parser_lexer_Scanner__f__pos <= this.Ltigerpython_parser_lexer_Lexer__f_caretPos)) {
      const $$x2 = this.Ltigerpython_parser_lexer_Lexer__f_caretPos;
      const this$2 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
      $$x1 = ($$x2 <= ((this$2.Ltigerpython_parser_lexer_Scanner__f__pos + len) | 0))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const $$x3 = this.Ltigerpython_parser_lexer_Lexer__f_caretPos;
      const this$4 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
      const that = (($$x3 - this$4.Ltigerpython_parser_lexer_Scanner__f__pos) | 0);
      return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, ((len < that) ? len : that), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION)
    };
    const x1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.Ltigerpython_parser_lexer_Scanner__f_catCodes.apply__C__s_Enumeration$Value(this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(len));
    const x = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_COMMENT;
    let $$x4;
    if (((x === null) ? (x1 === null) : x.equals__O__Z(x1))) {
      $$x4 = true
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_NEWLINE;
      $$x4 = ((x$3 === null) ? (x1 === null) : x$3.equals__O__Z(x1))
    };
    let result;
    if ($$x4) {
      this.Ltigerpython_parser_lexer_Lexer__f_scanner.skipLine__V();
      this.Ltigerpython_parser_lexer_Lexer__f_scanner.consumeLineBreak__Z();
      result = this.nextIndentation__Ltigerpython_parser_lexer_Token()
    } else {
      const x$5 = $m_Ltigerpython_parser_lexer_CatCodes$().Ltigerpython_parser_lexer_CatCodes$__f_EOF;
      if (((x$5 === null) ? (x1 === null) : x$5.equals__O__Z(x1))) {
        this.Ltigerpython_parser_lexer_Lexer__f_scanner.consume__I__I(this.Ltigerpython_parser_lexer_Lexer__f_scanner.remaining__I());
        result = null
      } else {
        const ch = this.Ltigerpython_parser_lexer_Lexer__f_scanner.getIndentationCharIfConsistent__I__C(len);
        if ((ch === 0)) {
          const this$9 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
          const this$8 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
          const pos = this$8.Ltigerpython_parser_lexer_Scanner__f__pos;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
          const params = $m_sci_Nil$();
          this$9.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
        };
        result = ((ch !== 32) ? $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, (len << 3), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION) : $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, len, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION))
      }
    };
    const this$10 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
    this.Ltigerpython_parser_lexer_Lexer__f_lineStart = this$10.Ltigerpython_parser_lexer_Scanner__f__pos;
    return result
  };
  readNumber__Ltigerpython_parser_lexer_Token() {
    let $$x1;
    if ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(0) === 48)) {
      const c = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1);
      const this$3 = $m_jl_Character$();
      $$x1 = (!(this$3.isDigit__I__Z(c) || (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1) === 46)))
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const x1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(1);
      let len;
      switch (x1) {
        case 98:
        case 66: {
          const this$4 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
          const x = ((2 + this$4.Ltigerpython_parser_lexer_Scanner__f__pos) | 0);
          const start = ((x > 0) ? x : 0);
          let i = start;
          while (true) {
            let $$x2;
            if ((i < $dp_length__I(this$4.Ltigerpython_parser_lexer_Scanner__f_source))) {
              const arg1 = $dp_charAt__I__C(this$4.Ltigerpython_parser_lexer_Scanner__f_source, i);
              $$x2 = ((arg1 === 48) || (arg1 === 49))
            } else {
              $$x2 = false
            };
            if ($$x2) {
              i = ((1 + i) | 0)
            } else {
              break
            }
          };
          len = ((2 + ((i - start) | 0)) | 0);
          break
        }
        case 111:
        case 79: {
          const this$9 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
          const x$1 = ((2 + this$9.Ltigerpython_parser_lexer_Scanner__f__pos) | 0);
          const start$1 = ((x$1 > 0) ? x$1 : 0);
          let i$1 = start$1;
          while (true) {
            let $$x3;
            if ((i$1 < $dp_length__I(this$9.Ltigerpython_parser_lexer_Scanner__f_source))) {
              const arg1$1 = $dp_charAt__I__C(this$9.Ltigerpython_parser_lexer_Scanner__f_source, i$1);
              $$x3 = ((arg1$1 >= 48) && (arg1$1 <= 55))
            } else {
              $$x3 = false
            };
            if ($$x3) {
              i$1 = ((1 + i$1) | 0)
            } else {
              break
            }
          };
          len = ((2 + ((i$1 - start$1) | 0)) | 0);
          break
        }
        case 120:
        case 88: {
          const this$14 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
          const x$2 = ((2 + this$14.Ltigerpython_parser_lexer_Scanner__f__pos) | 0);
          const start$2 = ((x$2 > 0) ? x$2 : 0);
          let i$2 = start$2;
          while (true) {
            let $$x4;
            if ((i$2 < $dp_length__I(this$14.Ltigerpython_parser_lexer_Scanner__f_source))) {
              const arg1$2 = $dp_charAt__I__C(this$14.Ltigerpython_parser_lexer_Scanner__f_source, i$2);
              $m_Ltigerpython_parser_lexer_CatCodes$();
              const this$22 = $m_jl_Character$();
              if ((this$22.isDigit__I__Z(arg1$2) || ((arg1$2 >= 65) && (arg1$2 <= 70)))) {
                $$x4 = true
              } else {
                $$x4 = ((arg1$2 >= 97) && (arg1$2 <= 102))
              }
            } else {
              $$x4 = false
            };
            if ($$x4) {
              i$2 = ((1 + i$2) | 0)
            } else {
              break
            }
          };
          len = ((2 + ((i$2 - start$2) | 0)) | 0);
          break
        }
        default: {
          len = 1
        }
      };
      const $$x5 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
      const array = [$bC(108), $bC(76)];
      if ($$x5.testChar__I__sci_Seq__Z(len, new $c_sjsr_WrappedVarArgs(array))) {
        return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, ((1 + len) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG)
      } else {
        const $$x6 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const array$1 = [$bC(106), $bC(74)];
        if ($$x6.testChar__I__sci_Seq__Z(len, new $c_sjsr_WrappedVarArgs(array$1))) {
          return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, ((1 + len) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMPLEX)
        } else {
          return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, len, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT)
        }
      }
    } else {
      let t_type = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
      const this$29 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
      const x$3 = this$29.Ltigerpython_parser_lexer_Scanner__f__pos;
      const start$3 = ((x$3 > 0) ? x$3 : 0);
      let i$3 = start$3;
      while (true) {
        let $$x7;
        if ((i$3 < $dp_length__I(this$29.Ltigerpython_parser_lexer_Scanner__f_source))) {
          const arg1$3 = $dp_charAt__I__C(this$29.Ltigerpython_parser_lexer_Scanner__f_source, i$3);
          const this$36 = $m_jl_Character$();
          $$x7 = this$36.isDigit__I__Z(arg1$3)
        } else {
          $$x7 = false
        };
        if ($$x7) {
          i$3 = ((1 + i$3) | 0)
        } else {
          break
        }
      };
      let len$2 = ((i$3 - start$3) | 0);
      if ((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(len$2) === 46)) {
        const $$x9 = len$2;
        const this$37 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const startIndex = ((1 + len$2) | 0);
        const x$4 = ((this$37.Ltigerpython_parser_lexer_Scanner__f__pos + startIndex) | 0);
        const start$4 = ((x$4 > 0) ? x$4 : 0);
        let i$4 = start$4;
        while (true) {
          let $$x8;
          if ((i$4 < $dp_length__I(this$37.Ltigerpython_parser_lexer_Scanner__f_source))) {
            const arg1$4 = $dp_charAt__I__C(this$37.Ltigerpython_parser_lexer_Scanner__f_source, i$4);
            const this$44 = $m_jl_Character$();
            $$x8 = this$44.isDigit__I__Z(arg1$4)
          } else {
            $$x8 = false
          };
          if ($$x8) {
            i$4 = ((1 + i$4) | 0)
          } else {
            break
          }
        };
        len$2 = (($$x9 + ((1 + ((i$4 - start$4) | 0)) | 0)) | 0);
        t_type = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT
      };
      if (this.Ltigerpython_parser_lexer_Lexer__f_scanner.isFloatExponent__I__Z(len$2)) {
        const $$x11 = len$2;
        const this$45 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const startIndex$1 = len$2;
        const x$5 = ((this$45.Ltigerpython_parser_lexer_Scanner__f__pos + startIndex$1) | 0);
        const start$5 = ((x$5 > 0) ? x$5 : 0);
        let i$5 = start$5;
        while (true) {
          let $$x10;
          if ((i$5 < $dp_length__I(this$45.Ltigerpython_parser_lexer_Scanner__f_source))) {
            const arg1$5 = $dp_charAt__I__C(this$45.Ltigerpython_parser_lexer_Scanner__f_source, i$5);
            const this$52 = $m_jl_Character$();
            $$x10 = (!this$52.isDigit__I__Z(arg1$5))
          } else {
            $$x10 = false
          };
          if ($$x10) {
            i$5 = ((1 + i$5) | 0)
          } else {
            break
          }
        };
        len$2 = (($$x11 + ((i$5 - start$5) | 0)) | 0);
        const $$x13 = len$2;
        const this$53 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const startIndex$2 = len$2;
        const x$6 = ((this$53.Ltigerpython_parser_lexer_Scanner__f__pos + startIndex$2) | 0);
        const start$6 = ((x$6 > 0) ? x$6 : 0);
        let i$6 = start$6;
        while (true) {
          let $$x12;
          if ((i$6 < $dp_length__I(this$53.Ltigerpython_parser_lexer_Scanner__f_source))) {
            const arg1$6 = $dp_charAt__I__C(this$53.Ltigerpython_parser_lexer_Scanner__f_source, i$6);
            const this$60 = $m_jl_Character$();
            $$x12 = this$60.isDigit__I__Z(arg1$6)
          } else {
            $$x12 = false
          };
          if ($$x12) {
            i$6 = ((1 + i$6) | 0)
          } else {
            break
          }
        };
        len$2 = (($$x13 + ((i$6 - start$6) | 0)) | 0);
        t_type = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT
      };
      const x$7 = t_type;
      const x$2$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
      let $$x14;
      if ((x$7 === x$2$1)) {
        const $$x16 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const $$x15 = len$2;
        const array$2 = [$bC(108), $bC(76)];
        $$x14 = $$x16.testChar__I__sci_Seq__Z($$x15, new $c_sjsr_WrappedVarArgs(array$2))
      } else {
        $$x14 = false
      };
      if ($$x14) {
        return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, ((1 + len$2) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LONG)
      } else {
        const $$x18 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const $$x17 = len$2;
        const array$3 = [$bC(106), $bC(74)];
        if ($$x18.testChar__I__sci_Seq__Z($$x17, new $c_sjsr_WrappedVarArgs(array$3))) {
          return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, ((1 + len$2) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMPLEX)
        } else {
          return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, len$2, t_type)
        }
      }
    }
  };
  readString__I__Ltigerpython_parser_lexer_Token(prefixLen) {
    if (this.Ltigerpython_parser_lexer_Lexer__f_scanner.isTripleChar__I__Z(prefixLen)) {
      const delimiter = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(prefixLen);
      let i = ((3 + prefixLen) | 0);
      while (true) {
        const x1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(i);
        let $$x1;
        if ((x1 === 92)) {
          i = ((1 + i) | 0);
          $$x1 = true
        } else if ((x1 !== 0)) {
          if ((!((delimiter === x1) && this.Ltigerpython_parser_lexer_Lexer__f_scanner.isTripleChar__I__Z(i)))) {
            $$x1 = true
          } else {
            i = ((3 + i) | 0);
            $$x1 = false
          }
        } else {
          $$x1 = false
        };
        if ($$x1) {
          i = ((1 + i) | 0)
        } else {
          break
        }
      };
      if ((((i === ((3 + prefixLen) | 0)) || (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C((((-1) + i) | 0)) !== delimiter)) || (!this.Ltigerpython_parser_lexer_Lexer__f_scanner.isTripleChar__I__Z((((-3) + i) | 0))))) {
        const this$2 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
        const this$1 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const pos = this$1.Ltigerpython_parser_lexer_Scanner__f__pos;
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
        const params = $m_sci_Nil$();
        this$2.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params)
      };
      return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, i, $p_Ltigerpython_parser_lexer_Lexer__getTokenTypeFromPrefix__I__Ltigerpython_parser_lexer_TokenType(this, prefixLen))
    } else {
      const delimiter$2 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(prefixLen);
      let i$2 = ((1 + prefixLen) | 0);
      while (true) {
        const x1$2 = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(i$2);
        let $$x2;
        if ((delimiter$2 === x1$2)) {
          i$2 = ((1 + i$2) | 0);
          $$x2 = false
        } else if ((x1$2 === 92)) {
          if (((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(((1 + i$2) | 0)) === 13) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C(((2 + i$2) | 0)) === 10))) {
            i$2 = ((2 + i$2) | 0)
          } else {
            i$2 = ((1 + i$2) | 0)
          };
          $$x2 = true
        } else {
          $$x2 = ((x1$2 === 9) || (x1$2 >= 32))
        };
        if ($$x2) {
          i$2 = ((1 + i$2) | 0)
        } else {
          break
        }
      };
      if ((i$2 === ((1 + prefixLen) | 0))) {
        const this$4 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
        const this$3 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const pos$1 = this$3.Ltigerpython_parser_lexer_Scanner__f__pos;
        const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
        const params$1 = $m_sci_Nil$();
        this$4.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
      } else if (((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C((((-1) + i$2) | 0)) !== delimiter$2) && (i$2 > ((2 + prefixLen) | 0)))) {
        if (((this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C((((-1) + i$2) | 0)) === 58) && this.Ltigerpython_parser_lexer_Lexer__f_scanner.isCompoundStatement__I__Z(this.Ltigerpython_parser_lexer_Lexer__f_lineStart))) {
          i$2 = (((-1) + i$2) | 0)
        };
        if (this.Ltigerpython_parser_lexer_Lexer__f_bracketError) {
          while (true) {
            let $$x3;
            if ((i$2 > prefixLen)) {
              const ch = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C((((-1) + i$2) | 0));
              const array = [$bC(41), $bC(93), $bC(125)];
              const chars = new $c_sjsr_WrappedVarArgs(array);
              $$x3 = $f_sc_SeqOps__contains__O__Z(chars, $bC(ch))
            } else {
              $$x3 = false
            };
            if ($$x3) {
              i$2 = (((-1) + i$2) | 0)
            } else {
              break
            }
          }
        } else {
          const this$8 = this.Ltigerpython_parser_lexer_Lexer__f_bracketStack;
          if ((!this$8.isEmpty__Z())) {
            let elem = 0;
            elem = 0;
            while (true) {
              let $$x5;
              if ((i$2 > prefixLen)) {
                const $$x6 = elem;
                const this$10 = this.Ltigerpython_parser_lexer_Lexer__f_bracketStack;
                const idx = this$10.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
                $$x5 = ($$x6 < (((this$10.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this$10.scm_ArrayDeque__f_array.u.length) | 0)))
              } else {
                $$x5 = false
              };
              let $$x4;
              if ($$x5) {
                const bracket = this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C((((-1) + i$2) | 0));
                switch (bracket) {
                  case 41: {
                    $$x4 = ($uC(this.Ltigerpython_parser_lexer_Lexer__f_bracketStack.apply__I__O(elem)) === 40);
                    break
                  }
                  case 93: {
                    $$x4 = ($uC(this.Ltigerpython_parser_lexer_Lexer__f_bracketStack.apply__I__O(elem)) === 91);
                    break
                  }
                  case 125: {
                    $$x4 = ($uC(this.Ltigerpython_parser_lexer_Lexer__f_bracketStack.apply__I__O(elem)) === 123);
                    break
                  }
                  default: {
                    $$x4 = false
                  }
                }
              } else {
                $$x4 = false
              };
              if ($$x4) {
                i$2 = (((-1) + i$2) | 0);
                elem = ((1 + elem) | 0)
              } else {
                break
              }
            };
            if (((elem === 0) && (this.Ltigerpython_parser_lexer_Lexer__f_scanner.apply__I__C((((-1) + i$2) | 0)) === 44))) {
              i$2 = (((-1) + i$2) | 0)
            }
          }
        };
        const this$12 = this.Ltigerpython_parser_lexer_Lexer__f_parserState;
        const this$11 = this.Ltigerpython_parser_lexer_Lexer__f_scanner;
        const pos$2 = this$11.Ltigerpython_parser_lexer_Scanner__f__pos;
        const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNTERMINATED_STRING;
        const params$2 = $m_sci_Nil$();
        this$12.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$2, (-1), code$2, params$2)
      };
      return $p_Ltigerpython_parser_lexer_Lexer__makeToken__I__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_Token(this, i$2, $p_Ltigerpython_parser_lexer_Lexer__getTokenTypeFromPrefix__I__Ltigerpython_parser_lexer_TokenType(this, prefixLen))
    }
  };
  next__O() {
    return this.next__Ltigerpython_parser_lexer_Token()
  };
  head__O() {
    return this.head__Ltigerpython_parser_lexer_Token()
  };
}
const $d_Ltigerpython_parser_lexer_Lexer = new $TypeData().initClass({
  Ltigerpython_parser_lexer_Lexer: 0
}, false, "tigerpython.parser.lexer.Lexer", {
  Ltigerpython_parser_lexer_Lexer: 1,
  O: 1,
  sc_BufferedIterator: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_Ltigerpython_parser_lexer_Lexer.prototype.$classData = $d_Ltigerpython_parser_lexer_Lexer;
const $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I = (function($thiz, pos) {
  if (($thiz.Ltigerpython_parser_lexer_TokenBuffer__f_textSource !== null)) {
    let elem = 0;
    elem = 0;
    const isEmpty = (pos <= 0);
    const scala$collection$immutable$Range$$lastElement = (((-1) + pos) | 0);
    if ((!isEmpty)) {
      let i = 0;
      while (true) {
        const v1 = i;
        if (($dp_charAt__I__C($thiz.Ltigerpython_parser_lexer_TokenBuffer__f_textSource, v1) === 10)) {
          elem = ((1 + elem) | 0)
        };
        if ((i === scala$collection$immutable$Range$$lastElement)) {
          break
        };
        i = ((1 + i) | 0)
      }
    };
    return elem
  } else {
    return (-1)
  }
});
class $c_Ltigerpython_parser_lexer_TokenBuffer extends $c_O {
  constructor(tokenSource, textSource, errorHandler) {
    super();
    this.Ltigerpython_parser_lexer_TokenBuffer__f_textSource = null;
    this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler = null;
    this.Ltigerpython_parser_lexer_TokenBuffer__f_source = null;
    this.Ltigerpython_parser_lexer_TokenBuffer__f_index = 0;
    this.Ltigerpython_parser_lexer_TokenBuffer__f_textSource = textSource;
    this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler = errorHandler;
    this.Ltigerpython_parser_lexer_TokenBuffer__f_source = tokenSource;
    this.Ltigerpython_parser_lexer_TokenBuffer__f_index = 0
  };
  buffered__sc_BufferedIterator() {
    return this
  };
  iterator__sc_Iterator() {
    return this
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  hasNext__Z() {
    return (this.Ltigerpython_parser_lexer_TokenBuffer__f_index < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())
  };
  remaining__I() {
    return ((this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I() - this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)
  };
  head__Ltigerpython_parser_lexer_Token() {
    return ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I()) ? this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index) : null)
  };
  next__Ltigerpython_parser_lexer_Token() {
    if (this.hasNext__Z()) {
      const i = this.Ltigerpython_parser_lexer_TokenBuffer__f_index;
      this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((1 + i) | 0);
      return this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i)
    } else {
      return null
    }
  };
  headType__Ltigerpython_parser_lexer_TokenType() {
    return ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I()) ? this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index).Ltigerpython_parser_lexer_Token__f_tokenType : null)
  };
  prev__Ltigerpython_parser_lexer_Token() {
    return ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index > 0) ? this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O((((-1) + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)) : null)
  };
  prevPos__I() {
    return ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index > 0) ? this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O((((-1) + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)).Ltigerpython_parser_lexer_Token__f_pos : (-1))
  };
  prevEndPos__I() {
    return ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index > 0) ? this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O((((-1) + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)).Ltigerpython_parser_lexer_Token__f_endPos : 0)
  };
  back__V() {
    if ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index > 0)) {
      this.Ltigerpython_parser_lexer_TokenBuffer__f_index = (((-1) + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)
    }
  };
  reset__I__V(idx) {
    const x = ((idx > 0) ? idx : 0);
    const that = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I();
    this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((x < that) ? x : that)
  };
  pos__I() {
    if (this.hasNext__Z()) {
      return this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos
    } else {
      const this$1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source;
      if ((!this$1.isEmpty__Z())) {
        return this.Ltigerpython_parser_lexer_TokenBuffer__f_source.last__O().Ltigerpython_parser_lexer_Token__f_endPos
      } else {
        return (-1)
      }
    }
  };
  peek__I__Ltigerpython_parser_lexer_Token(idx) {
    const absIndex = ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index + idx) | 0);
    return (((absIndex >= 0) && (absIndex < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) ? this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(absIndex) : null)
  };
  peekType__I__Ltigerpython_parser_lexer_TokenType(idx) {
    const absIndex = ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index + idx) | 0);
    return (((absIndex >= 0) && (absIndex < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) ? this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(absIndex).Ltigerpython_parser_lexer_Token__f_tokenType : null)
  };
  peekTypeCategory__I__I(idx) {
    const pt = this.peekType__I__Ltigerpython_parser_lexer_TokenType(idx);
    return ((pt !== null) ? pt.Ltigerpython_parser_lexer_TokenType__f_category : (-1))
  };
  hasPeekType__I__sci_Seq__Z(idx, tokenTypes) {
    return tokenTypes.contains__O__Z(this.peekType__I__Ltigerpython_parser_lexer_TokenType(idx))
  };
  hasType__sci_Seq__Z(tokenTypes) {
    return (this.hasNext__Z() && tokenTypes.contains__O__Z(this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType))
  };
  matchType__sci_Seq__Z(tokenTypes) {
    if ((this.hasNext__Z() && tokenTypes.contains__O__Z(this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType))) {
      this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((1 + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0);
      return true
    } else {
      return false
    }
  };
  requireType__Ltigerpython_parser_lexer_TokenType__Z(tokenType) {
    let $$x1;
    if (this.hasNext__Z()) {
      const x = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      $$x1 = (x === tokenType)
    } else {
      $$x1 = false
    };
    if ((!$$x1)) {
      if ((this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler !== null)) {
        if (this.hasNext__Z()) {
          let $$x2;
          if ((tokenType.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD)) {
            const x$3 = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
            $$x2 = (x$3 === x$4)
          } else {
            $$x2 = false
          };
          if (($$x2 && $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(this.head__Ltigerpython_parser_lexer_Token(), tokenType))) {
            const $$x6 = this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
            const $$x5 = this.pos__I();
            const $$x4 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.pos__I());
            const $$x3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_KEYWORD;
            const array = [this.head__Ltigerpython_parser_lexer_Token(), tokenType];
            $$x6.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x5, $$x4, $$x3, new $c_sjsr_WrappedVarArgs(array));
            this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((1 + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0);
            return true
          } else {
            const x$6 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            let $$x7;
            if ((tokenType === x$6)) {
              const x$7 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.last__O().Ltigerpython_parser_lexer_Token__f_tokenType;
              const x$8 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
              $$x7 = (x$7 === x$8)
            } else {
              $$x7 = false
            };
            if ($$x7) {
              const $$x11 = this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
              const $$x10 = this.pos__I();
              const $$x9 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.pos__I());
              const $$x8 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
              const array$1 = [this.head__Ltigerpython_parser_lexer_Token()];
              $$x11.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x10, $$x9, $$x8, new $c_sjsr_WrappedVarArgs(array$1))
            } else {
              const $$x15 = this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
              const $$x14 = this.pos__I();
              const $$x13 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.pos__I());
              const $$x12 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_TOKEN_REQUIRED;
              const array$2 = [tokenType, this.head__Ltigerpython_parser_lexer_Token()];
              $$x15.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x14, $$x13, $$x12, new $c_sjsr_WrappedVarArgs(array$2))
            };
            const x$10 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            let $$x16;
            if (((tokenType === x$10) && (this.remaining__I() === 1))) {
              const this$13 = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
              const array$3 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON];
              const tokenTypes = new $c_sjsr_WrappedVarArgs(array$3);
              $$x16 = $f_sc_SeqOps__contains__O__Z(tokenTypes, this$13)
            } else {
              $$x16 = false
            };
            if ($$x16) {
              this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((1 + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)
            }
          }
        } else {
          const x$12 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
          if ((tokenType === x$12)) {
            this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler.reportError__I__I__s_Enumeration$Value__sci_Seq__N(this.pos__I(), $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.pos__I()), $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_COLON_EXPECTED, $m_sci_Nil$())
          } else {
            const $$x20 = this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
            const $$x19 = this.pos__I();
            const $$x18 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.pos__I());
            const $$x17 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_TOKEN;
            const array$4 = [tokenType];
            $$x20.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x19, $$x18, $$x17, new $c_sjsr_WrappedVarArgs(array$4))
          }
        }
      };
      return false
    } else {
      this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((1 + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0);
      return true
    }
  };
  hasName__T__Z(name) {
    let $$x1;
    if (this.hasNext__Z()) {
      const x = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      return (this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value === name)
    } else {
      return false
    }
  };
  isPossibleKeyword__sci_Seq__Z(tokenTypes) {
    let $$x1;
    if (this.hasNext__Z()) {
      const x = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      $$x1 = (x === x$2)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      return tokenTypes.exists__F1__Z(new $c_sjsr_AnonFunction1(((this$1) => ((x$1$2) => {
        const x$1 = x$1$2;
        return $m_Ltigerpython_parser_lexer_TokenType$().isPossibleKeyword__Ltigerpython_parser_lexer_Token__Ltigerpython_parser_lexer_TokenType__Z(this$1.head__Ltigerpython_parser_lexer_Token(), x$1)
      }))(this)))
    } else {
      return false
    }
  };
  hasColonAtEnd__Z() {
    if (this.hasNext__Z()) {
      const x = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.last__O().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
      return (x === x$2)
    } else {
      return false
    }
  };
  hasAssignment__Z() {
    let i = this.Ltigerpython_parser_lexer_TokenBuffer__f_index;
    while ((i < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
      const x1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN;
      if ((x === x1)) {
        return true
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
        let $$x1;
        if ((x$3 === x1)) {
          $$x1 = true
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
          if ((x$5 === x1)) {
            $$x1 = true
          } else {
            const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
            if ((x$7 === x1)) {
              $$x1 = true
            } else {
              const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
              if ((x$9 === x1)) {
                $$x1 = true
              } else {
                const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BOOL;
                if ((x$11 === x1)) {
                  $$x1 = true
                } else {
                  const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STR;
                  if ((x$13 === x1)) {
                    $$x1 = true
                  } else {
                    const x$15 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT;
                    if ((x$15 === x1)) {
                      $$x1 = true
                    } else {
                      const x$17 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
                      if ((x$17 === x1)) {
                        $$x1 = true
                      } else {
                        const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS;
                        $$x1 = (x$19 === x1)
                      }
                    }
                  }
                }
              }
            }
          }
        };
        if ($$x1) {
          i = ((1 + i) | 0)
        } else {
          return false
        }
      }
    };
    return false
  };
  hasTokenWithName__I__T__Z(startIndex, name) {
    const f = ((this$1, name$1) => ((x$2) => {
      const x = x$2;
      const x$2$1 = x.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x$2$1 === x$3)) {
        return (x.Ltigerpython_parser_lexer_Token__f_value === name$1)
      } else {
        return false
      }
    }))(this, name);
    let i = ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index + startIndex) | 0);
    let depth = 0;
    while (true) {
      let $$x3;
      if ((i < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
        const arg1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i);
        $$x3 = (!((!(!f(arg1))) && (depth === 0)))
      } else {
        $$x3 = false
      };
      if ($$x3) {
        const x1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
        let $$x1;
        if ((x$1 === x1)) {
          $$x1 = true
        } else {
          const x$3$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
          if ((x$3$1 === x1)) {
            $$x1 = true
          } else {
            const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
            $$x1 = (x$5 === x1)
          }
        };
        if ($$x1) {
          depth = ((1 + depth) | 0);
          i = ((1 + i) | 0)
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
          let $$x2;
          if ((x$7 === x1)) {
            $$x2 = true
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
            if ((x$9 === x1)) {
              $$x2 = true
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
              $$x2 = (x$11 === x1)
            }
          };
          if ($$x2) {
            depth = (((-1) + depth) | 0);
            i = ((1 + i) | 0);
            if ((depth < 0)) {
              return false
            }
          } else {
            const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            if (((x$13 === x1) && (depth === 0))) {
              return false
            } else {
              i = ((1 + i) | 0)
            }
          }
        }
      } else {
        break
      }
    };
    if ((i < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
      const arg1$1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i);
      return (!(!f(arg1$1)))
    } else {
      return false
    }
  };
  hasTokenOfType__I__Ltigerpython_parser_lexer_TokenType__Z(startIndex, tokenType) {
    const f = ((this$1, tokenType$1) => ((x$2$2) => {
      const x$2 = x$2$2;
      const x = x$2.Ltigerpython_parser_lexer_Token__f_tokenType;
      return (x === tokenType$1)
    }))(this, tokenType);
    let i = ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index + startIndex) | 0);
    let depth = 0;
    while (true) {
      let $$x3;
      if ((i < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
        const arg1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i);
        $$x3 = (!((!(!f(arg1))) && (depth === 0)))
      } else {
        $$x3 = false
      };
      if ($$x3) {
        const x1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
        let $$x1;
        if ((x$1 === x1)) {
          $$x1 = true
        } else {
          const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
          if ((x$3 === x1)) {
            $$x1 = true
          } else {
            const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
            $$x1 = (x$5 === x1)
          }
        };
        if ($$x1) {
          depth = ((1 + depth) | 0);
          i = ((1 + i) | 0)
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
          let $$x2;
          if ((x$7 === x1)) {
            $$x2 = true
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
            if ((x$9 === x1)) {
              $$x2 = true
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
              $$x2 = (x$11 === x1)
            }
          };
          if ($$x2) {
            depth = (((-1) + depth) | 0);
            i = ((1 + i) | 0);
            if ((depth < 0)) {
              return false
            }
          } else {
            const x$13 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            if (((x$13 === x1) && (depth === 0))) {
              return false
            } else {
              i = ((1 + i) | 0)
            }
          }
        }
      } else {
        break
      }
    };
    if ((i < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
      const arg1$1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i);
      return (!(!f(arg1$1)))
    } else {
      return false
    }
  };
  findNextClosingBracket__I__s_Option(startIndex) {
    let i = ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index + startIndex) | 0);
    let depth = 0;
    while ((i < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
      const x1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(i).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
      let $$x1;
      if ((x === x1)) {
        $$x1 = true
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
        if ((x$3 === x1)) {
          $$x1 = true
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
          $$x1 = (x$5 === x1)
        }
      };
      if ($$x1) {
        depth = ((1 + depth) | 0);
        i = ((1 + i) | 0)
      } else {
        const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
        let $$x2;
        if ((x$7 === x1)) {
          $$x2 = true
        } else {
          const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
          if ((x$9 === x1)) {
            $$x2 = true
          } else {
            const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
            $$x2 = (x$11 === x1)
          }
        };
        if ($$x2) {
          if ((depth === 0)) {
            return new $c_s_Some(((i - this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0))
          };
          depth = (((-1) + depth) | 0);
          i = ((1 + i) | 0)
        } else {
          i = ((1 + i) | 0)
        }
      }
    };
    return $m_s_None$()
  };
  hasKeyword__Z() {
    return (this.hasNext__Z() && (this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD))
  };
  isEndOfList__Z() {
    if ((!this.hasNext__Z())) {
      return true
    } else {
      const $$x1 = $m_sci_Seq$();
      const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE];
      return $$x1.apply__sci_Seq__sc_SeqOps(new $c_sjsr_WrappedVarArgs(array)).contains__O__Z(this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType)
    }
  };
  isName__sci_Seq__Z(names) {
    if (this.hasNext__Z()) {
      const x1 = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x === x1)) {
        return names.contains__O__Z(this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value)
      } else {
        return false
      }
    } else {
      return false
    }
  };
  startPos__I() {
    const this$1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source;
    if ((!this$1.isEmpty__Z())) {
      return this.Ltigerpython_parser_lexer_TokenBuffer__f_source.head__O().Ltigerpython_parser_lexer_Token__f_pos
    } else {
      return (-1)
    }
  };
  endPos__I() {
    const this$1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source;
    if ((!this$1.isEmpty__Z())) {
      return this.Ltigerpython_parser_lexer_TokenBuffer__f_source.last__O().Ltigerpython_parser_lexer_Token__f_endPos
    } else {
      return (-1)
    }
  };
  endPosOfList__I() {
    const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS];
    if (this.hasType__sci_Seq__Z(new $c_sjsr_WrappedVarArgs(array))) {
      return this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_endPos
    } else {
      return (this.hasNext__Z() ? this.pos__I() : this.endPos__I())
    }
  };
  discard__V() {
    if ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
      const x1 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index).Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
      let $$x1;
      if ((x === x1)) {
        $$x1 = true
      } else {
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
        if ((x$3 === x1)) {
          $$x1 = true
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
          $$x1 = (x$5 === x1)
        }
      };
      if ($$x1) {
        const $$x5 = this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
        const $$x4 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index).Ltigerpython_parser_lexer_Token__f_pos;
        const $$x3 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index).Ltigerpython_parser_lexer_Token__f_pos);
        const $$x2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_RIGHT_BRACKET;
        const array = [this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index)];
        $$x5.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x4, $$x3, $$x2, new $c_sjsr_WrappedVarArgs(array))
      } else {
        const $$x9 = this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler;
        const $$x8 = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index).Ltigerpython_parser_lexer_Token__f_pos;
        const $$x7 = $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index).Ltigerpython_parser_lexer_Token__f_pos);
        const $$x6 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN;
        const array$1 = [this.Ltigerpython_parser_lexer_TokenBuffer__f_source.apply__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index)];
        $$x9.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x8, $$x7, $$x6, new $c_sjsr_WrappedVarArgs(array$1))
      };
      this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((1 + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)
    }
  };
  nextSimpleKeyword__Ltigerpython_parser_lexer_Token() {
    const result = this.next__Ltigerpython_parser_lexer_Token();
    const x = this.peekType__I__Ltigerpython_parser_lexer_TokenType(0);
    const x$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
    let $$x1;
    if ((x === x$2)) {
      const x$3 = this.peekType__I__Ltigerpython_parser_lexer_TokenType(1);
      const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
      $$x1 = (x$3 === x$4)
    } else {
      $$x1 = false
    };
    if ($$x1) {
      this.Ltigerpython_parser_lexer_TokenBuffer__f_errorHandler.reportError__I__I__s_Enumeration$Value__sci_Seq__N(this.pos__I(), $p_Ltigerpython_parser_lexer_TokenBuffer__lineFromPos__I__I(this, this.pos__I()), $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_BRACKETS, $m_sci_Nil$());
      this.Ltigerpython_parser_lexer_TokenBuffer__f_index = ((2 + this.Ltigerpython_parser_lexer_TokenBuffer__f_index) | 0)
    };
    return result
  };
  insertToken__Ltigerpython_parser_lexer_TokenType__V(tokenType) {
    this.insertToken__Ltigerpython_parser_lexer_Token__I__V(new $c_Ltigerpython_parser_lexer_Token(this.pos__I(), 0, tokenType), 0)
  };
  insertToken__Ltigerpython_parser_lexer_TokenType__I__V(tokenType, idx) {
    this.insertToken__Ltigerpython_parser_lexer_Token__I__V(new $c_Ltigerpython_parser_lexer_Token(this.pos__I(), 0, tokenType), idx)
  };
  insertToken__Ltigerpython_parser_lexer_Token__I__V(token, idx) {
    if ((token !== null)) {
      const this$1 = $m_scm_ArrayBuffer$();
      const elems = this.Ltigerpython_parser_lexer_TokenBuffer__f_source;
      const newSource = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      newSource.insert__I__O__V(((this.Ltigerpython_parser_lexer_TokenBuffer__f_index + idx) | 0), token);
      this.Ltigerpython_parser_lexer_TokenBuffer__f_source = $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(newSource)
    } else {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  replaceToken__Ltigerpython_parser_lexer_Token__V(token) {
    if ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
      const this$1 = $m_scm_ArrayBuffer$();
      const elems = this.Ltigerpython_parser_lexer_TokenBuffer__f_source;
      const newSource = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      newSource.update__I__O__V(this.Ltigerpython_parser_lexer_TokenBuffer__f_index, token);
      this.Ltigerpython_parser_lexer_TokenBuffer__f_source = $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(newSource)
    } else {
      this.insertToken__Ltigerpython_parser_lexer_Token__I__V(token, 0)
    }
  };
  replaceToken__Ltigerpython_parser_lexer_TokenType__V(tokenType) {
    if ((this.Ltigerpython_parser_lexer_TokenBuffer__f_index < this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I())) {
      const token = new $c_Ltigerpython_parser_lexer_Token(this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_pos, this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_len, tokenType);
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
      if ((x === tokenType)) {
        const x1$2 = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType;
        const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT;
        let $$x1;
        if ((x$3 === x1$2)) {
          $$x1 = true
        } else {
          const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FLOAT;
          $$x1 = (x$5 === x1$2)
        };
        if ($$x1) {
          token.Ltigerpython_parser_lexer_Token__f_value = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_value
        } else {
          token.Ltigerpython_parser_lexer_Token__f_value = this.head__Ltigerpython_parser_lexer_Token().Ltigerpython_parser_lexer_Token__f_tokenType.Ltigerpython_parser_lexer_TokenType__f_name
        }
      };
      this.replaceToken__Ltigerpython_parser_lexer_Token__V(token)
    } else {
      this.insertToken__Ltigerpython_parser_lexer_TokenType__V(tokenType)
    }
  };
  skipToken__V() {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = this.Ltigerpython_parser_lexer_TokenBuffer__f_source;
    const newSource = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    newSource.remove__I__O(this.Ltigerpython_parser_lexer_TokenBuffer__f_index);
    this.Ltigerpython_parser_lexer_TokenBuffer__f_source = $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(newSource)
  };
  skipAll__V() {
    this.Ltigerpython_parser_lexer_TokenBuffer__f_index = this.Ltigerpython_parser_lexer_TokenBuffer__f_source.length__I()
  };
  next__O() {
    return this.next__Ltigerpython_parser_lexer_Token()
  };
  head__O() {
    return this.head__Ltigerpython_parser_lexer_Token()
  };
}
const $d_Ltigerpython_parser_lexer_TokenBuffer = new $TypeData().initClass({
  Ltigerpython_parser_lexer_TokenBuffer: 0
}, false, "tigerpython.parser.lexer.TokenBuffer", {
  Ltigerpython_parser_lexer_TokenBuffer: 1,
  O: 1,
  sc_BufferedIterator: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_Ltigerpython_parser_lexer_TokenBuffer.prototype.$classData = $d_Ltigerpython_parser_lexer_TokenBuffer;
class $c_Ltigerpython_parser_parsing_ArgumentParser$CompArgument extends $c_Ltigerpython_parser_parsing_ArgumentParser$Argument {
  constructor(outer, pos, value) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_value = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_value = value;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Argument__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "CompArgument"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("CompArgument");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_value;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$CompArgument) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer))) {
      const CompArgument$1 = x$1;
      if ((this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_pos === CompArgument$1.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_pos)) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_value;
        const x$2 = CompArgument$1.Ltigerpython_parser_parsing_ArgumentParser$CompArgument__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$CompArgument(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$CompArgument)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$CompArgument = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$CompArgument: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$CompArgument", {
  Ltigerpython_parser_parsing_ArgumentParser$CompArgument: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Argument: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$CompArgument.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$CompArgument;
class $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter extends $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter {
  constructor(outer, pos, name, default$1, annot) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_name = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_default = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_annot = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_name = name;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_default = default$1;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_annot = annot;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "DefaultParameter"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_default;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_annot;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("DefaultParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_default;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_annot;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer))) {
      const DefaultParameter$1 = x$1;
      let $$x1;
      if (((this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_pos === DefaultParameter$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_pos) && (this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_name === DefaultParameter$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_name))) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_default;
        const x$2 = DefaultParameter$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_default;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_annot;
        const x$4 = DefaultParameter$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter__f_annot;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$DefaultParameter", {
  Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$DefaultParameter;
class $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter extends $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter {
  constructor(outer, pos, name, default$1) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_name = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_default = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_name = name;
    this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_default = default$1;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "DefaultTupleParameter"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_default;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("DefaultTupleParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_default;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer))) {
      const DefaultTupleParameter$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_pos === DefaultTupleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_pos)) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_name;
        const x$2 = DefaultTupleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_name;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_default;
        const x$4 = DefaultTupleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter__f_default;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$DefaultTupleParameter", {
  Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$DefaultTupleParameter;
class $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument extends $c_Ltigerpython_parser_parsing_ArgumentParser$Argument {
  constructor(outer, pos, value) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_value = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_value = value;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Argument__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "KeywordArgument"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("KeywordArgument");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_value;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer))) {
      const KeywordArgument$1 = x$1;
      if ((this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_pos === KeywordArgument$1.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_pos)) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_value;
        const x$2 = KeywordArgument$1.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$KeywordArgument", {
  Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Argument: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$KeywordArgument;
class $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter extends $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter {
  constructor(outer, pos, name, annot) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_name = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_annot = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_name = name;
    this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_annot = annot;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "KeywordParameter"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_annot;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("KeywordParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_annot;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer))) {
      const KeywordParameter$1 = x$1;
      if (((this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_pos === KeywordParameter$1.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_pos) && (this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_name === KeywordParameter$1.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_name))) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_annot;
        const x$2 = KeywordParameter$1.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter__f_annot;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$KeywordParameter", {
  Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$KeywordParameter;
class $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument extends $c_Ltigerpython_parser_parsing_ArgumentParser$Argument {
  constructor(outer, pos, name, value) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_name = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_value = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_name = name;
    this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_value = value;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Argument__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "NamedArgument"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("NamedArgument");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_value;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer))) {
      const NamedArgument$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_pos === NamedArgument$1.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_pos)) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_name;
        const x$2 = NamedArgument$1.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_name;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_value;
        const x$4 = NamedArgument$1.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument__f_value;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$NamedArgument)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$NamedArgument: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$NamedArgument", {
  Ltigerpython_parser_parsing_ArgumentParser$NamedArgument: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Argument: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$NamedArgument;
class $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument extends $c_Ltigerpython_parser_parsing_ArgumentParser$Argument {
  constructor(outer, pos, value) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_value = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_value = value;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Argument__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "SimpleArgument"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("SimpleArgument");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_value;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer))) {
      const SimpleArgument$1 = x$1;
      if ((this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_pos === SimpleArgument$1.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_pos)) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_value;
        const x$2 = SimpleArgument$1.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$SimpleArgument", {
  Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Argument: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$SimpleArgument;
class $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter extends $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter {
  constructor(outer, pos, name, annot) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_name = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_annot = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_name = name;
    this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_annot = annot;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "SimpleParameter"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_annot;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("SimpleParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_annot;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer))) {
      const SimpleParameter$1 = x$1;
      if (((this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_pos === SimpleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_pos) && (this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_name === SimpleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_name))) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_annot;
        const x$2 = SimpleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter__f_annot;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$SimpleParameter", {
  Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$SimpleParameter;
class $c_Ltigerpython_parser_parsing_ArgumentParser$StarParameter extends $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter {
  constructor(outer, pos) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$StarParameter__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$StarParameter__f_pos = pos;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "StarParameter"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_parsing_ArgumentParser$StarParameter__f_pos : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("StarParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$StarParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$2, 1)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$StarParameter) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer))) {
      const StarParameter$1 = x$1;
      return (this.Ltigerpython_parser_parsing_ArgumentParser$StarParameter__f_pos === StarParameter$1.Ltigerpython_parser_parsing_ArgumentParser$StarParameter__f_pos)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$StarParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$StarParameter)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$StarParameter = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$StarParameter: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$StarParameter", {
  Ltigerpython_parser_parsing_ArgumentParser$StarParameter: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$StarParameter.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$StarParameter;
class $c_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter extends $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter {
  constructor(outer, pos, dest) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_dest = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_dest = dest;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "TupleParameter"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_dest;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("TupleParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_dest;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer))) {
      const TupleParameter$1 = x$1;
      if ((this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_pos === TupleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_pos)) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_dest;
        const x$2 = TupleParameter$1.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter__f_dest;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$TupleParameter)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$TupleParameter: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$TupleParameter", {
  Ltigerpython_parser_parsing_ArgumentParser$TupleParameter: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$TupleParameter;
class $c_Ltigerpython_parser_parsing_ArgumentParser$VarArgument extends $c_Ltigerpython_parser_parsing_ArgumentParser$Argument {
  constructor(outer, pos, value) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_value = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_value = value;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Argument__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "VarArgument"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("VarArgument");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_value;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$VarArgument) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Argument__f_$outer))) {
      const VarArgument$1 = x$1;
      if ((this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_pos === VarArgument$1.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_pos)) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_value;
        const x$2 = VarArgument$1.Ltigerpython_parser_parsing_ArgumentParser$VarArgument__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$VarArgument(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$VarArgument)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$VarArgument = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$VarArgument: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$VarArgument", {
  Ltigerpython_parser_parsing_ArgumentParser$VarArgument: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Argument: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$VarArgument.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$VarArgument;
class $c_Ltigerpython_parser_parsing_ArgumentParser$VarParameter extends $c_Ltigerpython_parser_parsing_ArgumentParser$Parameter {
  constructor(outer, pos, name, annot) {
    super();
    this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_pos = 0;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_name = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_annot = null;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_pos = pos;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_name = name;
    this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_annot = annot;
    $ct_Ltigerpython_parser_parsing_ArgumentParser$Parameter__Ltigerpython_parser_parsing_ArgumentParser__(this, outer)
  };
  productPrefix__T() {
    return "VarParameter"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_annot;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("VarParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_annot;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if (((x$1 instanceof $c_Ltigerpython_parser_parsing_ArgumentParser$VarParameter) && (x$1.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer === this.Ltigerpython_parser_parsing_ArgumentParser$Parameter__f_$outer))) {
      const VarParameter$1 = x$1;
      if (((this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_pos === VarParameter$1.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_pos) && (this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_name === VarParameter$1.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_name))) {
        const x = this.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_annot;
        const x$2 = VarParameter$1.Ltigerpython_parser_parsing_ArgumentParser$VarParameter__f_annot;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ArgumentParser$VarParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ArgumentParser$VarParameter)))
}
const $d_Ltigerpython_parser_parsing_ArgumentParser$VarParameter = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ArgumentParser$VarParameter: 0
}, false, "tigerpython.parser.parsing.ArgumentParser$VarParameter", {
  Ltigerpython_parser_parsing_ArgumentParser$VarParameter: 1,
  Ltigerpython_parser_parsing_ArgumentParser$Parameter: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ArgumentParser$VarParameter.prototype.$classData = $d_Ltigerpython_parser_parsing_ArgumentParser$VarParameter;
class $c_Ltigerpython_parser_parsing_LineParser extends $c_O {
  constructor(source, lexer, parserState) {
    super();
    this.Ltigerpython_parser_parsing_LineParser__f_source = null;
    this.Ltigerpython_parser_parsing_LineParser__f_lexer = null;
    this.Ltigerpython_parser_parsing_LineParser__f_parserState = null;
    this.Ltigerpython_parser_parsing_LineParser__f_tokens = null;
    this.Ltigerpython_parser_parsing_LineParser__f_tokenSource = null;
    this.Ltigerpython_parser_parsing_LineParser__f_cache = null;
    this.Ltigerpython_parser_parsing_LineParser__f_source = source;
    this.Ltigerpython_parser_parsing_LineParser__f_lexer = lexer;
    this.Ltigerpython_parser_parsing_LineParser__f_parserState = parserState;
    let capacity = 0;
    let size = 0;
    let jsElems = null;
    capacity = 0;
    size = 0;
    jsElems = [];
    while (lexer.hasNext__Z()) {
      const elem = lexer.next__Ltigerpython_parser_lexer_Token();
      const unboxedElem = ((elem === null) ? null : elem);
      jsElems.push(unboxedElem)
    };
    const result = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems);
    this.Ltigerpython_parser_parsing_LineParser__f_tokens = (lexer.hasBracketError__Z() ? this.repairBrackets__ALtigerpython_parser_lexer_Token__ALtigerpython_parser_lexer_Token(result) : result);
    const xs = this.Ltigerpython_parser_parsing_LineParser__f_tokens;
    const source$1 = $m_sc_ArrayOps$().toIndexedSeq$extension__O__sci_IndexedSeq(xs);
    this.Ltigerpython_parser_parsing_LineParser__f_tokenSource = new $c_Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator(source$1)
  };
  buffered__sc_BufferedIterator() {
    return this
  };
  iterator__sc_Iterator() {
    return this
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  head__Ltigerpython_parser_parsing_LineParser$Line() {
    if ((this.Ltigerpython_parser_parsing_LineParser__f_cache === null)) {
      this.Ltigerpython_parser_parsing_LineParser__f_cache = this.nextLine__Ltigerpython_parser_parsing_LineParser$Line()
    };
    return this.Ltigerpython_parser_parsing_LineParser__f_cache
  };
  hasNext__Z() {
    return (this.head__Ltigerpython_parser_parsing_LineParser$Line() !== null)
  };
  next__Ltigerpython_parser_parsing_LineParser$Line() {
    const result = this.head__Ltigerpython_parser_parsing_LineParser$Line();
    this.Ltigerpython_parser_parsing_LineParser__f_cache = null;
    return result
  };
  nextLine__Ltigerpython_parser_parsing_LineParser$Line() {
    const x1 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
    if ((x1 === null)) {
      return null
    };
    if ((x1 !== null)) {
      const indentLen = x1.Ltigerpython_parser_lexer_Token__f_len;
      const p3 = x1.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION;
      if ((x === p3)) {
        const result = this.readNextLine__I__Ltigerpython_parser_parsing_LineParser$Line(indentLen);
        if ((result === null)) {
          const this$1 = this.Ltigerpython_parser_parsing_LineParser__f_parserState;
          const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_UNKNOWN;
          const params = $m_sci_Nil$();
          this$1.reportError__I__I__s_Enumeration$Value__sci_Seq__N(0, (-1), code, params);
          return null
        } else {
          return (result.isIncompleteSingleToken__Z() ? (this.Ltigerpython_parser_parsing_LineParser__f_parserState.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(result.Ltigerpython_parser_parsing_LineParser$Line__f_tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$()), this.nextLine__Ltigerpython_parser_parsing_LineParser$Line()) : result)
        }
      }
    };
    if ((x1 !== null)) {
      const p6 = x1.Ltigerpython_parser_lexer_Token__f_tokenType;
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
      if ((x$3 === p6)) {
        return null
      }
    };
    if ((x1 !== null)) {
      const pos = x1.Ltigerpython_parser_lexer_Token__f_pos;
      const this$5 = this.Ltigerpython_parser_parsing_LineParser__f_parserState;
      const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INVALID_TOKEN_AT_START_OF_LINE;
      const array = [x1];
      const params$1 = new $c_sjsr_WrappedVarArgs(array);
      this$5.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1);
      return null
    };
    throw new $c_s_MatchError(x1)
  };
  readNextLine__I__Ltigerpython_parser_parsing_LineParser$Line(indentLen) {
    const this$1 = $m_scm_ArrayBuffer$();
    const elems = $m_sci_Nil$();
    const result = this$1.from__sc_IterableOnce__scm_ArrayBuffer(elems);
    let bracketStack = $m_sci_Nil$();
    while (this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.hasNext__Z()) {
      const x1 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.head__O().Ltigerpython_parser_lexer_Token__f_tokenType;
      const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
      if ((x === x1)) {
        const pos = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O().Ltigerpython_parser_lexer_Token__f_pos;
        const this$2 = bracketStack;
        if ((!this$2.isEmpty__Z())) {
          const this$3 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
          const this$7 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$3).next__O().Ltigerpython_parser_lexer_Token__f_tokenType;
          const array = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS];
          const tokenTypes = new $c_sjsr_WrappedVarArgs(array);
          let $$x1;
          if ($f_sc_SeqOps__contains__O__Z(tokenTypes, this$7)) {
            const x$3 = $f_sc_IndexedSeqOps__last__O(result).Ltigerpython_parser_lexer_Token__f_tokenType;
            const x$4 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
            $$x1 = (x$3 === x$4)
          } else {
            $$x1 = false
          };
          if (($$x1 && (bracketStack.length__I() === 1))) {
            const this$11 = this.Ltigerpython_parser_parsing_LineParser__f_parserState;
            const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
            const array$1 = [bracketStack.head__O()];
            const params = new $c_sjsr_WrappedVarArgs(array$1);
            this$11.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
            result.insert__I__O__V((((-1) + result.scm_ArrayBuffer__f_size0) | 0), new $c_Ltigerpython_parser_lexer_Token(pos, 0, bracketStack.head__O()));
            bracketStack = bracketStack.tail__O();
            const $$x3 = this.findEndOfLine__I__I(pos);
            let $$x2;
            if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
              const len = result.scm_ArrayBuffer__f_size0;
              const destination = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len]);
              result.copyToArray__O__I__I__I(destination, 0, result.scm_ArrayBuffer__f_size0);
              $$x2 = destination
            } else {
              let capacity = 0;
              let size = 0;
              let jsElems = null;
              capacity = 0;
              size = 0;
              jsElems = [];
              const this$15 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
              const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$15);
              while (it.hasNext__Z()) {
                const elem = it.next__O();
                const unboxedElem = ((elem === null) ? null : elem);
                jsElems.push(unboxedElem)
              };
              $$x2 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems)
            };
            return new $c_Ltigerpython_parser_parsing_LineParser$Line(indentLen, $$x3, $$x2)
          } else {
            const this$19 = $f_sc_IndexedSeqOps__last__O(result).Ltigerpython_parser_lexer_Token__f_tokenType;
            const array$2 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PLUS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASSIGN, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DIV, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT_DIV, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MOD];
            const tokenTypes$1 = new $c_sjsr_WrappedVarArgs(array$2);
            if ((((!$f_sc_SeqOps__contains__O__Z(tokenTypes$1, this$19)) && (this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.peek__I__O(1) !== null)) && (bracketStack.length__I() === 1))) {
              const x1$2 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.peek__I__O(1).Ltigerpython_parser_lexer_Token__f_tokenType;
              const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
              let $$x4;
              if ((x$5 === x1$2)) {
                $$x4 = true
              } else {
                const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_CLASS;
                if ((x$7 === x1$2)) {
                  $$x4 = true
                } else {
                  const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF;
                  if ((x$9 === x1$2)) {
                    $$x4 = true
                  } else {
                    const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_PRINT;
                    $$x4 = (x$11 === x1$2)
                  }
                }
              };
              if ($$x4) {
                const this$23 = this.Ltigerpython_parser_parsing_LineParser__f_parserState;
                const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSING_RIGHT_BRACKET;
                const array$3 = [bracketStack.head__O()];
                const params$1 = new $c_sjsr_WrappedVarArgs(array$3);
                this$23.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1);
                const elem$1 = new $c_Ltigerpython_parser_lexer_Token(pos, 0, bracketStack.head__O());
                result.addOne__O__scm_ArrayBuffer(elem$1);
                bracketStack = bracketStack.tail__O();
                const $$x6 = this.findEndOfLine__I__I(pos);
                let $$x5;
                if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
                  const len$1 = result.scm_ArrayBuffer__f_size0;
                  const destination$1 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$1]);
                  result.copyToArray__O__I__I__I(destination$1, 0, result.scm_ArrayBuffer__f_size0);
                  $$x5 = destination$1
                } else {
                  let capacity$1 = 0;
                  let size$1 = 0;
                  let jsElems$1 = null;
                  capacity$1 = 0;
                  size$1 = 0;
                  jsElems$1 = [];
                  const this$27 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
                  const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$27);
                  while (it$1.hasNext__Z()) {
                    const elem$2 = it$1.next__O();
                    const unboxedElem$1 = ((elem$2 === null) ? null : elem$2);
                    jsElems$1.push(unboxedElem$1)
                  };
                  $$x5 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems$1)
                };
                return new $c_Ltigerpython_parser_parsing_LineParser$Line(indentLen, $$x6, $$x5)
              }
            }
          }
        } else if ((!$f_sc_SeqOps__isEmpty__Z(result))) {
          const $$x8 = this.findEndOfLine__I__I(pos);
          let $$x7;
          if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
            const len$2 = result.scm_ArrayBuffer__f_size0;
            const destination$2 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$2]);
            result.copyToArray__O__I__I__I(destination$2, 0, result.scm_ArrayBuffer__f_size0);
            $$x7 = destination$2
          } else {
            let capacity$2 = 0;
            let size$2 = 0;
            let jsElems$2 = null;
            capacity$2 = 0;
            size$2 = 0;
            jsElems$2 = [];
            const this$31 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
            const it$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$31);
            while (it$2.hasNext__Z()) {
              const elem$3 = it$2.next__O();
              const unboxedElem$2 = ((elem$3 === null) ? null : elem$3);
              jsElems$2.push(unboxedElem$2)
            };
            $$x7 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems$2)
          };
          return new $c_Ltigerpython_parser_parsing_LineParser$Line(indentLen, $$x8, $$x7)
        } else {
          return null
        }
      } else {
        const x$14 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INDENTATION;
        if ((x$14 === x1)) {
          this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O()
        } else {
          const x$16 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS;
          if ((x$16 === x1)) {
            const token = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
            let $$x9;
            if (this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.hasNext__Z()) {
              const x$18 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.head__O().Ltigerpython_parser_lexer_Token__f_tokenType;
              const x$19 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT;
              $$x9 = (x$18 === x$19)
            } else {
              $$x9 = false
            };
            if ($$x9) {
              const elem$4 = new $c_Ltigerpython_parser_lexer_Token(token.Ltigerpython_parser_lexer_Token__f_pos, ((this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O().Ltigerpython_parser_lexer_Token__f_endPos - token.Ltigerpython_parser_lexer_Token__f_pos) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IS_NOT);
              result.addOne__O__scm_ArrayBuffer(elem$4)
            } else {
              result.addOne__O__scm_ArrayBuffer(token)
            }
          } else {
            const x$20 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT;
            if ((x$20 === x1)) {
              const token$2 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
              let $$x10;
              if (this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.hasNext__Z()) {
                const x$22 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.head__O().Ltigerpython_parser_lexer_Token__f_tokenType;
                const x$23 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_IN;
                $$x10 = (x$22 === x$23)
              } else {
                $$x10 = false
              };
              if ($$x10) {
                const elem$5 = new $c_Ltigerpython_parser_lexer_Token(token$2.Ltigerpython_parser_lexer_Token__f_pos, ((this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O().Ltigerpython_parser_lexer_Token__f_endPos - token$2.Ltigerpython_parser_lexer_Token__f_pos) | 0), $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NOT_IN);
                result.addOne__O__scm_ArrayBuffer(elem$5)
              } else {
                result.addOne__O__scm_ArrayBuffer(token$2)
              }
            } else {
              const x$24 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS;
              if ((x$24 === x1)) {
                const rassoc$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
                const this$32 = bracketStack;
                bracketStack = new $c_sci_$colon$colon(rassoc$1, this$32);
                const elem$6 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                result.addOne__O__scm_ArrayBuffer(elem$6)
              } else {
                const x$26 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET;
                if ((x$26 === x1)) {
                  const rassoc$2 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                  const this$33 = bracketStack;
                  bracketStack = new $c_sci_$colon$colon(rassoc$2, this$33);
                  const elem$7 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                  result.addOne__O__scm_ArrayBuffer(elem$7)
                } else {
                  const x$28 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE;
                  if ((x$28 === x1)) {
                    const rassoc$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                    const this$34 = bracketStack;
                    bracketStack = new $c_sci_$colon$colon(rassoc$3, this$34);
                    const elem$8 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                    result.addOne__O__scm_ArrayBuffer(elem$8)
                  } else {
                    const x$30 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_PARENS;
                    let $$x11;
                    if ((x$30 === x1)) {
                      $$x11 = true
                    } else {
                      const x$32 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACKET;
                      if ((x$32 === x1)) {
                        $$x11 = true
                      } else {
                        const x$34 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_RIGHT_BRACE;
                        $$x11 = (x$34 === x1)
                      }
                    };
                    if ($$x11) {
                      if (bracketStack.isEmpty__Z()) {
                        const elem$9 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                        result.addOne__O__scm_ArrayBuffer(elem$9)
                      } else {
                        const x$37 = bracketStack.head__O();
                        if ((!(x1 === x$37))) {
                          const this$38 = this.Ltigerpython_parser_parsing_LineParser__f_parserState;
                          const pos$1 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.head__O().Ltigerpython_parser_lexer_Token__f_pos;
                          const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISMATCHED_CLOSING_BRACKET;
                          const array$4 = [bracketStack.head__O(), x1];
                          const params$2 = new $c_sjsr_WrappedVarArgs(array$4);
                          this$38.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$2, params$2);
                          let $$x12;
                          if ((bracketStack.length__I() > 1)) {
                            const this$39 = bracketStack;
                            const x$38 = $f_sc_LinearSeqOps__apply__I__O(this$39, 1);
                            $$x12 = ((x$38 === null) ? (x1 === null) : $dp_equals__O__Z(x$38, x1))
                          } else {
                            $$x12 = false
                          };
                          if ($$x12) {
                            const elem$10 = new $c_Ltigerpython_parser_lexer_Token(this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.head__O().Ltigerpython_parser_lexer_Token__f_pos, 0, bracketStack.head__O());
                            result.addOne__O__scm_ArrayBuffer(elem$10)
                          } else {
                            const token$3 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                            const elem$11 = new $c_Ltigerpython_parser_lexer_Token(token$3.Ltigerpython_parser_lexer_Token__f_pos, token$3.Ltigerpython_parser_lexer_Token__f_len, bracketStack.head__O());
                            result.addOne__O__scm_ArrayBuffer(elem$11)
                          };
                          bracketStack = bracketStack.tail__O()
                        } else {
                          bracketStack = bracketStack.tail__O();
                          const elem$12 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                          result.addOne__O__scm_ArrayBuffer(elem$12)
                        }
                      }
                    } else {
                      const x$40 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME;
                      if (((x$40 === x1) && (this.Ltigerpython_parser_parsing_LineParser__f_parserState.Ltigerpython_parser_parsing_ParserState__f_pythonVersion >= 3))) {
                        const nameToken = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                        const followType = (this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.hasNext__Z() ? this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.head__O().Ltigerpython_parser_lexer_Token__f_tokenType : $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE);
                        const x1$3 = nameToken.Ltigerpython_parser_lexer_Token__f_value;
                        matchResult: {
                          if ((x1$3 === "async")) {
                            const array$5 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DEF, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_FOR, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_WITH];
                            const tokenTypes$2 = new $c_sjsr_WrappedVarArgs(array$5);
                            if ($f_sc_SeqOps__contains__O__Z(tokenTypes$2, followType)) {
                              const newType = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_ASYNC;
                              const elem$13 = new $c_Ltigerpython_parser_lexer_Token(nameToken.Ltigerpython_parser_lexer_Token__f_pos, nameToken.Ltigerpython_parser_lexer_Token__f_len, newType);
                              result.addOne__O__scm_ArrayBuffer(elem$13);
                              break matchResult
                            }
                          } else if ((x1$3 === "await")) {
                            const array$6 = [$m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INT, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_PARENS, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACKET, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEFT_BRACE];
                            const tokenTypes$3 = new $c_sjsr_WrappedVarArgs(array$6);
                            if ($f_sc_SeqOps__contains__O__Z(tokenTypes$3, followType)) {
                              const newType$1 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AWAIT;
                              const elem$14 = new $c_Ltigerpython_parser_lexer_Token(nameToken.Ltigerpython_parser_lexer_Token__f_pos, nameToken.Ltigerpython_parser_lexer_Token__f_len, newType$1);
                              result.addOne__O__scm_ArrayBuffer(elem$14);
                              break matchResult
                            }
                          };
                          result.addOne__O__scm_ArrayBuffer(nameToken)
                        }
                      } else {
                        const x$42 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_INVALID_CHAR;
                        if ((x$42 === x1)) {
                          this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                          let $$x13;
                          if (($f_sc_SeqOps__isEmpty__Z(result) && this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.hasNext__Z())) {
                            const x$44 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.peek__I__O(0).Ltigerpython_parser_lexer_Token__f_tokenType;
                            const x$45 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NEWLINE;
                            $$x13 = (x$44 === x$45)
                          } else {
                            $$x13 = false
                          };
                          if ($$x13) {
                            this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                            return this.nextLine__Ltigerpython_parser_parsing_LineParser$Line()
                          }
                        } else {
                          const elem$15 = this.Ltigerpython_parser_parsing_LineParser__f_tokenSource.next__O();
                          result.addOne__O__scm_ArrayBuffer(elem$15)
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    if ((!$f_sc_SeqOps__isEmpty__Z(result))) {
      const $$x15 = this.findEndOfLine__I__I($f_sc_IndexedSeqOps__last__O(result).Ltigerpython_parser_lexer_Token__f_endPos);
      let $$x14;
      if ((result.scm_ArrayBuffer__f_size0 >= 0)) {
        const len$3 = result.scm_ArrayBuffer__f_size0;
        const destination$3 = $newArrayObject($d_Ltigerpython_parser_lexer_Token.getArrayOf(), [len$3]);
        result.copyToArray__O__I__I__I(destination$3, 0, result.scm_ArrayBuffer__f_size0);
        $$x14 = destination$3
      } else {
        let capacity$3 = 0;
        let size$3 = 0;
        let jsElems$3 = null;
        capacity$3 = 0;
        size$3 = 0;
        jsElems$3 = [];
        const this$51 = new $c_scm_ArrayBufferView(result.scm_ArrayBuffer__f_array, result.scm_ArrayBuffer__f_size0);
        const it$3 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$51);
        while (it$3.hasNext__Z()) {
          const elem$16 = it$3.next__O();
          const unboxedElem$3 = ((elem$16 === null) ? null : elem$16);
          jsElems$3.push(unboxedElem$3)
        };
        $$x14 = $makeNativeArrayWrapper($d_Ltigerpython_parser_lexer_Token.getArrayOf(), jsElems$3)
      };
      return new $c_Ltigerpython_parser_parsing_LineParser$Line(indentLen, $$x15, $$x14)
    } else {
      return null
    }
  };
  findEndOfLine__I__I(pos) {
    let i = pos;
    while (((i < $dp_length__I(this.Ltigerpython_parser_parsing_LineParser__f_source)) && ($dp_charAt__I__C(this.Ltigerpython_parser_parsing_LineParser__f_source, i) === 32))) {
      i = ((1 + i) | 0)
    };
    return i
  };
  repairBrackets__ALtigerpython_parser_lexer_Token__ALtigerpython_parser_lexer_Token(tokens) {
    const bracketPatcher = new $c_Ltigerpython_parser_parsing_BracketPatcher(this.Ltigerpython_parser_parsing_LineParser__f_lexer, this.Ltigerpython_parser_parsing_LineParser__f_parserState, tokens);
    return bracketPatcher.fix__ALtigerpython_parser_lexer_Token()
  };
  next__O() {
    return this.next__Ltigerpython_parser_parsing_LineParser$Line()
  };
  head__O() {
    return this.head__Ltigerpython_parser_parsing_LineParser$Line()
  };
}
const $d_Ltigerpython_parser_parsing_LineParser = new $TypeData().initClass({
  Ltigerpython_parser_parsing_LineParser: 0
}, false, "tigerpython.parser.parsing.LineParser", {
  Ltigerpython_parser_parsing_LineParser: 1,
  O: 1,
  sc_BufferedIterator: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_Ltigerpython_parser_parsing_LineParser.prototype.$classData = $d_Ltigerpython_parser_parsing_LineParser;
const $p_Ltigerpython_parser_parsing_ParserState___reportError__Ltigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N = (function($thiz, token, msg, params) {
  let result = 0;
  const s = $m_Ltigerpython_parser_errormessages_EnglishMessages$().getMessage__s_Enumeration$Value__T(msg);
  let i = 0;
  while ((i < (s.length | 0))) {
    const i$1 = i;
    if ((((65535 & (s.charCodeAt(i$1) | 0)) === 37) && (((1 + i) | 0) < (s.length | 0)))) {
      const i$2 = ((1 + i) | 0);
      if (((65535 & (s.charCodeAt(i$2) | 0)) === 115)) {
        result = ((1 + result) | 0)
      };
      i = ((2 + i) | 0)
    } else {
      i = ((1 + i) | 0)
    }
  };
  const cnt = result;
  if ((cnt > params.length__I())) {
    if (params.isEmpty__Z()) {
      const $$x1 = token.Ltigerpython_parser_lexer_Token__f_pos;
      const array = [token];
      $thiz.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x1, (-1), msg, new $c_sjsr_WrappedVarArgs(array))
    } else if ((params.length__I() === 1)) {
      const $$x2 = token.Ltigerpython_parser_lexer_Token__f_pos;
      const array$1 = [params.head__O(), token];
      $thiz.reportError__I__I__s_Enumeration$Value__sci_Seq__N($$x2, (-1), msg, new $c_sjsr_WrappedVarArgs(array$1))
    } else {
      try {
        const this$11 = $m_scm_ArrayBuffer$();
        const elems = $m_sci_Nil$();
        const newParams = this$11.from__sc_IterableOnce__scm_ArrayBuffer(elems);
        newParams.addAll__sc_IterableOnce__scm_ArrayBuffer(params);
        newParams.addOne__O__scm_ArrayBuffer(token);
        $thiz.reportError__I__I__s_Enumeration$Value__sci_Seq__N(token.Ltigerpython_parser_lexer_Token__f_pos, (-1), msg, $m_sci_Seq$().from__sc_IterableOnce__sci_Seq(newParams))
      } catch (e) {
        const e$2 = $m_sjsr_package$().wrapJavaScriptException__O__jl_Throwable(e);
        if ((e$2 === null)) {
          throw e
        }
      }
    }
  } else {
    $thiz.reportError__I__I__s_Enumeration$Value__sci_Seq__N(token.Ltigerpython_parser_lexer_Token__f_pos, (-1), msg, params)
  };
  return null
});
class $c_Ltigerpython_parser_parsing_ParserState extends $c_O {
  constructor(source, pythonVersion, errorHandler) {
    super();
    this.Ltigerpython_parser_parsing_ParserState__f_source = null;
    this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion = 0;
    this.Ltigerpython_parser_parsing_ParserState__f_errorHandler = null;
    this.Ltigerpython_parser_parsing_ParserState__f_allowPrintAsName = false;
    this.Ltigerpython_parser_parsing_ParserState__f_checkNames = false;
    this.Ltigerpython_parser_parsing_ParserState__f_evalMode = false;
    this.Ltigerpython_parser_parsing_ParserState__f_flatFunctions = false;
    this.Ltigerpython_parser_parsing_ParserState__f_newDivision = false;
    this.Ltigerpython_parser_parsing_ParserState__f_printStatement = false;
    this.Ltigerpython_parser_parsing_ParserState__f_protectFunctions = false;
    this.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode = false;
    this.Ltigerpython_parser_parsing_ParserState__f_rejectInfiniteLoops = false;
    this.Ltigerpython_parser_parsing_ParserState__f_repeatStatement = false;
    this.Ltigerpython_parser_parsing_ParserState__f_sagePower = false;
    this.Ltigerpython_parser_parsing_ParserState__f_strictCode = false;
    this.Ltigerpython_parser_parsing_ParserState__f_warningsAsErrors = false;
    this.Ltigerpython_parser_parsing_ParserState__f_currentStatementType = null;
    this.Ltigerpython_parser_parsing_ParserState__f_source = source;
    this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion = pythonVersion;
    this.Ltigerpython_parser_parsing_ParserState__f_errorHandler = errorHandler;
    this.Ltigerpython_parser_parsing_ParserState__f_allowPrintAsName = false;
    this.Ltigerpython_parser_parsing_ParserState__f_checkNames = false;
    this.Ltigerpython_parser_parsing_ParserState__f_evalMode = false;
    this.Ltigerpython_parser_parsing_ParserState__f_flatFunctions = false;
    this.Ltigerpython_parser_parsing_ParserState__f_newDivision = true;
    this.Ltigerpython_parser_parsing_ParserState__f_printStatement = (pythonVersion <= 2);
    this.Ltigerpython_parser_parsing_ParserState__f_protectFunctions = false;
    this.Ltigerpython_parser_parsing_ParserState__f_rejectDeadCode = false;
    this.Ltigerpython_parser_parsing_ParserState__f_rejectInfiniteLoops = false;
    this.Ltigerpython_parser_parsing_ParserState__f_repeatStatement = false;
    this.Ltigerpython_parser_parsing_ParserState__f_sagePower = false;
    this.Ltigerpython_parser_parsing_ParserState__f_strictCode = false;
    this.Ltigerpython_parser_parsing_ParserState__f_warningsAsErrors = true
  };
  getAllErrors__ALtigerpython_parser_errors_ExtErrorInfo() {
    return $f_Ltigerpython_parser_errors_ErrorHandler__getAllErrors__ALtigerpython_parser_errors_ExtErrorInfo(this)
  };
  getFirstError__s_Option() {
    return $m_s_None$()
  };
  hasErrorInRange__I__I__Z(start, end) {
    return false
  };
  findOperator__I__T__T2(pos, op) {
    if ((op === "->")) {
      if ((this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().findOperator__T__T2("-")
      }
    } else if ((op === "@=")) {
      if ((this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().findOperator__T__T2("@")
      }
    } else if ((op === "^")) {
      if (this.Ltigerpython_parser_parsing_ParserState__f_sagePower) {
        return $ct_T2__O__O__(new $c_T2(), 1, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_POWER)
      }
    } else if ((op === "^^")) {
      const len = (this.Ltigerpython_parser_parsing_ParserState__f_sagePower ? 2 : 1);
      return $ct_T2__O__O__(new $c_T2(), len, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR)
    } else if ((op === "^=")) {
      if (this.Ltigerpython_parser_parsing_ParserState__f_sagePower) {
        return $ct_T2__O__O__(new $c_T2(), 2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_POWER_ASSIGN)
      }
    } else if ((op === "^^=")) {
      if (this.Ltigerpython_parser_parsing_ParserState__f_sagePower) {
        return $ct_T2__O__O__(new $c_T2(), 3, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_BIN_XOR_ASSIGN)
      }
    } else if ((op === "&&")) {
      const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
      const array = ["&&", "and"];
      const params = new $c_sjsr_WrappedVarArgs(array);
      this.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
      return $ct_T2__O__O__(new $c_T2(), 2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_AND)
    } else if ((op === "||")) {
      const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_FOREIGN_TOKEN;
      const array$1 = ["||", "or"];
      const params$1 = new $c_sjsr_WrappedVarArgs(array$1);
      this.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$1, params$1);
      return $ct_T2__O__O__(new $c_T2(), 2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_OR)
    } else if ((op === "=<")) {
      const code$2 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_MISSPELLED_OPERATOR;
      const array$2 = ["=<", "<="];
      const params$2 = new $c_sjsr_WrappedVarArgs(array$2);
      this.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$2, params$2);
      return $ct_T2__O__O__(new $c_T2(), 2, $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_LEQ)
    } else if (((op === "=!") || ((op === "=/") || ((op === "=*") || ((op === "=+") || ((op === "=-") || ((op === "=%") || ((op === "=|") || ((op === "=&") || (op === "=^")))))))))) {
      const code$3 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
      const this$12 = (65535 & (op.charCodeAt(0) | 0));
      const $$x1 = String.fromCharCode(this$12);
      const this$16 = (65535 & (op.charCodeAt(1) | 0));
      const array$3 = [$$x1, String.fromCharCode(this$16)];
      const params$3 = new $c_sjsr_WrappedVarArgs(array$3);
      this.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$3, params$3);
      const $$x2 = $m_Ltigerpython_parser_lexer_TokenType$();
      const value = $makeNativeArrayWrapper($d_C.getArrayOf(), [(65535 & (op.charCodeAt(1) | 0)), (65535 & (op.charCodeAt(0) | 0))]);
      const this$25 = $m_jl_String$();
      return $$x2.findOperator__T__T2(this$25.new__AC__I__I__T(value, 0, value.u.length))
    } else if ((op === "=**")) {
      const code$4 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_SWAPPED_TOKENS;
      const this$28 = (65535 & (op.charCodeAt(0) | 0));
      const array$4 = [String.fromCharCode(this$28), op.substring(1)];
      const params$4 = new $c_sjsr_WrappedVarArgs(array$4);
      this.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code$4, params$4);
      return $m_Ltigerpython_parser_lexer_TokenType$().findOperator__T__T2((op.substring(1) + "="))
    } else if ((op === "<>")) {
      if ((this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().findOperator__T__T2("!=")
      }
    };
    return $m_Ltigerpython_parser_lexer_TokenType$().findOperator__T__T2(op)
  };
  lineFromPosition__I__I(position) {
    if (((position >= 0) && (position <= $dp_length__I(this.Ltigerpython_parser_parsing_ParserState__f_source)))) {
      let result = 0;
      let i = 0;
      while ((i < position)) {
        if (($dp_charAt__I__C(this.Ltigerpython_parser_parsing_ParserState__f_source, i) === 10)) {
          result = ((1 + result) | 0)
        };
        i = ((1 + i) | 0)
      };
      return result
    } else {
      return 0
    }
  };
  stringToTokenType__T__Ltigerpython_parser_lexer_TokenType(s) {
    if (((s === "async") || (s === "await"))) {
      if ((this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion <= 3)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME
      }
    } else if ((s === "nonlocal")) {
      if ((this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion < 3)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME
      }
    } else if ((s === "exec")) {
      if ((this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion >= 3)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME
      }
    } else if ((s === "print")) {
      if ((!this.Ltigerpython_parser_parsing_ParserState__f_printStatement)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME
      }
    } else if ((s === "repeat")) {
      if ((!this.Ltigerpython_parser_parsing_ParserState__f_repeatStatement)) {
        return $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_NAME
      }
    };
    return $m_Ltigerpython_parser_lexer_TokenType$().fromString__T__Ltigerpython_parser_lexer_TokenType(s)
  };
  setStatementType__Ltigerpython_parser_lexer_TokenType__Ltigerpython_parser_lexer_TokenType(tokenType) {
    if (((tokenType !== null) && (tokenType.Ltigerpython_parser_lexer_TokenType__f_category === $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_TYPE_KEYWORD))) {
      this.Ltigerpython_parser_parsing_ParserState__f_currentStatementType = tokenType
    } else {
      this.Ltigerpython_parser_parsing_ParserState__f_currentStatementType = null
    };
    return tokenType
  };
  reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params) {
    return ((line === (-1)) ? this.Ltigerpython_parser_parsing_ParserState__f_errorHandler.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, this.lineFromPosition__I__I(pos), code, params) : this.Ltigerpython_parser_parsing_ParserState__f_errorHandler.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params))
  };
  reportError__Ltigerpython_parser_lexer_TokenBuffer__s_Enumeration$Value__sci_Seq__N(tokens, msg, params) {
    return (tokens.hasNext__Z() ? $p_Ltigerpython_parser_parsing_ParserState___reportError__Ltigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(this, tokens.head__Ltigerpython_parser_lexer_Token(), msg, params) : this.reportError__I__I__s_Enumeration$Value__sci_Seq__N(tokens.endPos__I(), (-1), msg, params))
  };
  reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(tokens, msg, params) {
    return ((tokens.u.length !== 0) ? $p_Ltigerpython_parser_parsing_ParserState___reportError__Ltigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(this, $m_sc_ArrayOps$().head$extension__O__O(tokens), msg, params) : this.reportError__I__I__s_Enumeration$Value__sci_Seq__N((-1), (-1), msg, params))
  };
  reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params) {
    return (this.Ltigerpython_parser_parsing_ParserState__f_warningsAsErrors ? this.Ltigerpython_parser_parsing_ParserState__f_errorHandler.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params) : ((line === (-1)) ? this.Ltigerpython_parser_parsing_ParserState__f_errorHandler.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, this.lineFromPosition__I__I(pos), code, params) : this.Ltigerpython_parser_parsing_ParserState__f_errorHandler.reportWarning__I__I__s_Enumeration$Value__sci_Seq__N(pos, line, code, params)))
  };
  productPrefix__T() {
    return "ParserState"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_parsing_ParserState__f_source;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_parsing_ParserState__f_errorHandler;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ParserState");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const x = this.Ltigerpython_parser_parsing_ParserState__f_source;
    const data$1 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_parsing_ParserState__f_errorHandler;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_parsing_ParserState)) {
      const ParserState$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_parsing_ParserState__f_pythonVersion === ParserState$1.Ltigerpython_parser_parsing_ParserState__f_pythonVersion)) {
        const x = this.Ltigerpython_parser_parsing_ParserState__f_source;
        const x$2 = ParserState$1.Ltigerpython_parser_parsing_ParserState__f_source;
        $$x1 = ((x === null) ? (x$2 === null) : $dp_equals__O__Z(x, x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_parsing_ParserState__f_errorHandler;
        const x$4 = ParserState$1.Ltigerpython_parser_parsing_ParserState__f_errorHandler;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_parsing_ParserState(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_parsing_ParserState)))
}
const $d_Ltigerpython_parser_parsing_ParserState = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ParserState: 0
}, false, "tigerpython.parser.parsing.ParserState", {
  Ltigerpython_parser_parsing_ParserState: 1,
  O: 1,
  Ltigerpython_parser_errors_ErrorHandler: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_parsing_ParserState.prototype.$classData = $d_Ltigerpython_parser_parsing_ParserState;
const $p_Ltigerpython_parser_parsing_PreParser__lines$lzycompute__ALtigerpython_parser_parsing_LineParser$Line = (function($thiz) {
  if ((!$thiz.Ltigerpython_parser_parsing_PreParser__f_bitmap$0)) {
    const this$2 = $thiz.Ltigerpython_parser_parsing_PreParser__f_lineParser;
    let capacity = 0;
    let size = 0;
    let jsElems = null;
    capacity = 0;
    size = 0;
    jsElems = [];
    while (this$2.hasNext__Z()) {
      const elem = this$2.next__Ltigerpython_parser_parsing_LineParser$Line();
      const unboxedElem = ((elem === null) ? null : elem);
      jsElems.push(unboxedElem)
    };
    $thiz.Ltigerpython_parser_parsing_PreParser__f_lines = $makeNativeArrayWrapper($d_Ltigerpython_parser_parsing_LineParser$Line.getArrayOf(), jsElems);
    $thiz.Ltigerpython_parser_parsing_PreParser__f_bitmap$0 = true
  };
  return $thiz.Ltigerpython_parser_parsing_PreParser__f_lines
});
const $p_Ltigerpython_parser_parsing_PreParser__isSemiEmptyLine__Ltigerpython_parser_parsing_LineParser$Line__Z = (function($thiz, line) {
  if ((line.Ltigerpython_parser_parsing_LineParser$Line__f_tokens.u.length === 1)) {
    const $$x1 = $m_sc_ArrayOps$();
    const xs = line.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    const x1 = $$x1.head$extension__O__O(xs).Ltigerpython_parser_lexer_Token__f_tokenType;
    const x = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COLON;
    if ((x === x1)) {
      return true
    } else {
      const x$3 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_DOT;
      if ((x$3 === x1)) {
        return true
      } else {
        const x$5 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_COMMA;
        if ((x$5 === x1)) {
          return true
        } else {
          const x$7 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_SEMICOLON;
          if ((x$7 === x1)) {
            return true
          } else {
            const x$9 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_STAR;
            if ((x$9 === x1)) {
              return true
            } else {
              const x$11 = $m_Ltigerpython_parser_lexer_TokenType$().Ltigerpython_parser_lexer_TokenType$__f_MINUS;
              return (x$11 === x1)
            }
          }
        }
      }
    }
  } else {
    const xs$1 = line.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
    return (xs$1.u.length === 0)
  }
});
class $c_Ltigerpython_parser_parsing_PreParser extends $c_O {
  constructor(source, lexer, parserState) {
    super();
    this.Ltigerpython_parser_parsing_PreParser__f_lines = null;
    this.Ltigerpython_parser_parsing_PreParser__f_source = null;
    this.Ltigerpython_parser_parsing_PreParser__f_lexer = null;
    this.Ltigerpython_parser_parsing_PreParser__f_parserState = null;
    this.Ltigerpython_parser_parsing_PreParser__f_lineParser = null;
    this.Ltigerpython_parser_parsing_PreParser__f_currentIndex = 0;
    this.Ltigerpython_parser_parsing_PreParser__f_cache = null;
    this.Ltigerpython_parser_parsing_PreParser__f_prevLine = null;
    this.Ltigerpython_parser_parsing_PreParser__f_bitmap$0 = false;
    this.Ltigerpython_parser_parsing_PreParser__f_source = source;
    this.Ltigerpython_parser_parsing_PreParser__f_lexer = lexer;
    this.Ltigerpython_parser_parsing_PreParser__f_parserState = parserState;
    this.Ltigerpython_parser_parsing_PreParser__f_lineParser = new $c_Ltigerpython_parser_parsing_LineParser(source, lexer, parserState);
    this.Ltigerpython_parser_parsing_PreParser__f_currentIndex = 0
  };
  buffered__sc_BufferedIterator() {
    return this
  };
  iterator__sc_Iterator() {
    return this
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  lines__ALtigerpython_parser_parsing_LineParser$Line() {
    return ((!this.Ltigerpython_parser_parsing_PreParser__f_bitmap$0) ? $p_Ltigerpython_parser_parsing_PreParser__lines$lzycompute__ALtigerpython_parser_parsing_LineParser$Line(this) : this.Ltigerpython_parser_parsing_PreParser__f_lines)
  };
  head__Ltigerpython_parser_parsing_PreParser$Line() {
    if ((this.Ltigerpython_parser_parsing_PreParser__f_cache === null)) {
      this.Ltigerpython_parser_parsing_PreParser__f_cache = this.nextLine__Ltigerpython_parser_parsing_PreParser$Line();
      if ((this.Ltigerpython_parser_parsing_PreParser__f_cache !== null)) {
        this.Ltigerpython_parser_parsing_PreParser__f_cache.Ltigerpython_parser_parsing_PreParser$Line__f_prevLine = this.Ltigerpython_parser_parsing_PreParser__f_prevLine
      }
    };
    return this.Ltigerpython_parser_parsing_PreParser__f_cache
  };
  hasNext__Z() {
    return (this.head__Ltigerpython_parser_parsing_PreParser$Line() !== null)
  };
  next__Ltigerpython_parser_parsing_PreParser$Line() {
    const result = this.head__Ltigerpython_parser_parsing_PreParser$Line();
    this.Ltigerpython_parser_parsing_PreParser__f_prevLine = this.Ltigerpython_parser_parsing_PreParser__f_cache;
    this.Ltigerpython_parser_parsing_PreParser__f_cache = null;
    return result
  };
  nextLine__Ltigerpython_parser_parsing_PreParser$Line() {
    if ((this.Ltigerpython_parser_parsing_PreParser__f_currentIndex < this.lines__ALtigerpython_parser_parsing_LineParser$Line().u.length)) {
      const srcLine = this.lines__ALtigerpython_parser_parsing_LineParser$Line().u[this.Ltigerpython_parser_parsing_PreParser__f_currentIndex];
      this.Ltigerpython_parser_parsing_PreParser__f_currentIndex = ((1 + this.Ltigerpython_parser_parsing_PreParser__f_currentIndex) | 0);
      while ((((this.Ltigerpython_parser_parsing_PreParser__f_currentIndex < this.lines__ALtigerpython_parser_parsing_LineParser$Line().u.length) && (srcLine.endsInOperator__Z() || srcLine.endsInAssignment__Z())) && this.lines__ALtigerpython_parser_parsing_LineParser$Line().u[this.Ltigerpython_parser_parsing_PreParser__f_currentIndex].isExpression__Ltigerpython_parser_parsing_ParserState__Z(this.Ltigerpython_parser_parsing_PreParser__f_parserState))) {
        const this$1 = this.Ltigerpython_parser_parsing_PreParser__f_parserState;
        const pos = srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_endPos;
        const code = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_LINEBREAK;
        const params = $m_sci_Nil$();
        this$1.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos, (-1), code, params);
        srcLine.mergeWithLine__Ltigerpython_parser_parsing_LineParser$Line__V(this.lines__ALtigerpython_parser_parsing_LineParser$Line().u[this.Ltigerpython_parser_parsing_PreParser__f_currentIndex]);
        this.Ltigerpython_parser_parsing_PreParser__f_currentIndex = ((1 + this.Ltigerpython_parser_parsing_PreParser__f_currentIndex) | 0)
      };
      const this$2 = $m_scm_ArrayBuffer$();
      const elems = $m_sci_Nil$();
      const suite = this$2.from__sc_IterableOnce__scm_ArrayBuffer(elems);
      if ((((((1 + this.Ltigerpython_parser_parsing_PreParser__f_currentIndex) | 0) < this.lines__ALtigerpython_parser_parsing_LineParser$Line().u.length) && $p_Ltigerpython_parser_parsing_PreParser__isSemiEmptyLine__Ltigerpython_parser_parsing_LineParser$Line__Z(this, this.lines__ALtigerpython_parser_parsing_LineParser$Line().u[this.Ltigerpython_parser_parsing_PreParser__f_currentIndex])) && (this.lines__ALtigerpython_parser_parsing_LineParser$Line().u[((1 + this.Ltigerpython_parser_parsing_PreParser__f_currentIndex) | 0)].Ltigerpython_parser_parsing_LineParser$Line__f_indent > srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_indent))) {
        this.Ltigerpython_parser_parsing_PreParser__f_parserState.reportError__ALtigerpython_parser_lexer_Token__s_Enumeration$Value__sci_Seq__N(this.lines__ALtigerpython_parser_parsing_LineParser$Line().u[this.Ltigerpython_parser_parsing_PreParser__f_currentIndex].Ltigerpython_parser_parsing_LineParser$Line__f_tokens, $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_EXTRA_TOKEN, $m_sci_Nil$());
        this.Ltigerpython_parser_parsing_PreParser__f_currentIndex = ((1 + this.Ltigerpython_parser_parsing_PreParser__f_currentIndex) | 0)
      };
      while (((this.Ltigerpython_parser_parsing_PreParser__f_currentIndex < this.lines__ALtigerpython_parser_parsing_LineParser$Line().u.length) && (this.lines__ALtigerpython_parser_parsing_LineParser$Line().u[this.Ltigerpython_parser_parsing_PreParser__f_currentIndex].Ltigerpython_parser_parsing_LineParser$Line__f_indent > srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_indent))) {
        const elem = this.nextLine__Ltigerpython_parser_parsing_PreParser$Line();
        suite.addOne__O__scm_ArrayBuffer(elem)
      };
      if ((!$f_sc_SeqOps__isEmpty__Z(suite))) {
        const this$3 = new $c_scm_ArrayBufferView(suite.scm_ArrayBuffer__f_array, suite.scm_ArrayBuffer__f_size0);
        const indent = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$3).next__O().Ltigerpython_parser_parsing_PreParser$Line__f_indentation;
        const this$4 = new $c_scm_ArrayBufferView(suite.scm_ArrayBuffer__f_array, suite.scm_ArrayBuffer__f_size0);
        const it = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$4);
        while (it.hasNext__Z()) {
          const arg1 = it.next__O();
          const l = arg1;
          if ((l.Ltigerpython_parser_parsing_PreParser$Line__f_indentation < indent)) {
            const this$5 = this.Ltigerpython_parser_parsing_PreParser__f_parserState;
            const pos$1 = l.Ltigerpython_parser_parsing_PreParser$Line__f_startPos;
            const code$1 = $m_Ltigerpython_parser_errors_ErrorCode$().Ltigerpython_parser_errors_ErrorCode$__f_INCONSISTENT_INDENTATION;
            const params$1 = $m_sci_Nil$();
            this$5.reportError__I__I__s_Enumeration$Value__sci_Seq__N(pos$1, (-1), code$1, params$1)
          }
        };
        const $$x5 = srcLine.pos__I();
        const $$x4 = this.findEndOfLine__I__I($f_sc_IndexedSeqOps__last__O(suite).Ltigerpython_parser_parsing_PreParser$Line__f_endPos);
        const $$x3 = srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_indent;
        const $$x2 = srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_tokens;
        let $$x1;
        if ((suite.scm_ArrayBuffer__f_size0 >= 0)) {
          const len = suite.scm_ArrayBuffer__f_size0;
          const destination = $newArrayObject($d_Ltigerpython_parser_parsing_PreParser$Line.getArrayOf(), [len]);
          suite.copyToArray__O__I__I__I(destination, 0, suite.scm_ArrayBuffer__f_size0);
          $$x1 = destination
        } else {
          let capacity = 0;
          let size = 0;
          let jsElems = null;
          capacity = 0;
          size = 0;
          jsElems = [];
          const this$9 = new $c_scm_ArrayBufferView(suite.scm_ArrayBuffer__f_array, suite.scm_ArrayBuffer__f_size0);
          const it$1 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$9);
          while (it$1.hasNext__Z()) {
            const elem$1 = it$1.next__O();
            const unboxedElem = ((elem$1 === null) ? null : elem$1);
            jsElems.push(unboxedElem)
          };
          $$x1 = $makeNativeArrayWrapper($d_Ltigerpython_parser_parsing_PreParser$Line.getArrayOf(), jsElems)
        };
        return new $c_Ltigerpython_parser_parsing_PreParser$Line($$x5, $$x4, $$x3, $$x2, $$x1, this.Ltigerpython_parser_parsing_PreParser__f_source, this.Ltigerpython_parser_parsing_PreParser__f_parserState)
      } else {
        return new $c_Ltigerpython_parser_parsing_PreParser$Line(srcLine.pos__I(), this.findEndOfLine__I__I(srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_endPos), srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_indent, srcLine.Ltigerpython_parser_parsing_LineParser$Line__f_tokens, null, this.Ltigerpython_parser_parsing_PreParser__f_source, this.Ltigerpython_parser_parsing_PreParser__f_parserState)
      }
    } else {
      return null
    }
  };
  findEndOfLine__I__I(pos) {
    let i = pos;
    while (((i < $dp_length__I(this.Ltigerpython_parser_parsing_PreParser__f_source)) && ($dp_charAt__I__C(this.Ltigerpython_parser_parsing_PreParser__f_source, i) === 32))) {
      i = ((1 + i) | 0)
    };
    return i
  };
  next__O() {
    return this.next__Ltigerpython_parser_parsing_PreParser$Line()
  };
  head__O() {
    return this.head__Ltigerpython_parser_parsing_PreParser$Line()
  };
}
const $d_Ltigerpython_parser_parsing_PreParser = new $TypeData().initClass({
  Ltigerpython_parser_parsing_PreParser: 0
}, false, "tigerpython.parser.parsing.PreParser", {
  Ltigerpython_parser_parsing_PreParser: 1,
  O: 1,
  sc_BufferedIterator: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_Ltigerpython_parser_parsing_PreParser.prototype.$classData = $d_Ltigerpython_parser_parsing_PreParser;
class $c_Ltigerpython_parser_types_AbstractType extends $c_Ltigerpython_parser_types_DataType {
  constructor(name) {
    super();
    this.Ltigerpython_parser_types_AbstractType__f_name = null;
    this.Ltigerpython_parser_types_AbstractType__f_name = name
  };
  name__T() {
    return this.Ltigerpython_parser_types_AbstractType__f_name
  };
  getFields__sci_Map() {
    const this$1 = $m_s_Predef$().s_Predef$__f_Map;
    const elems = $m_sci_Nil$();
    return this$1.from__sc_IterableOnce__sci_Map(elems)
  };
  setField__T__Ltigerpython_parser_types_DataType__V(name, dataType) {
    /*<skip>*/
  };
  productPrefix__T() {
    return "AbstractType"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_types_AbstractType__f_name : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_types_AbstractType)) {
      const AbstractType$1 = x$1;
      return (this.Ltigerpython_parser_types_AbstractType__f_name === AbstractType$1.Ltigerpython_parser_types_AbstractType__f_name)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_types_AbstractType(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_types_AbstractType)))
}
const $d_Ltigerpython_parser_types_AbstractType = new $TypeData().initClass({
  Ltigerpython_parser_types_AbstractType: 0
}, false, "tigerpython.parser.types.AbstractType", {
  Ltigerpython_parser_types_AbstractType: 1,
  Ltigerpython_parser_types_DataType: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_types_AbstractType.prototype.$classData = $d_Ltigerpython_parser_types_AbstractType;
const $ct_jl_ArrayIndexOutOfBoundsException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
const $ct_jl_ArrayIndexOutOfBoundsException__ = (function($thiz) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, null, null, true, true);
  return $thiz
});
class $c_jl_ArrayIndexOutOfBoundsException extends $c_jl_IndexOutOfBoundsException {
}
function $isArrayOf_jl_ArrayIndexOutOfBoundsException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.jl_ArrayIndexOutOfBoundsException)))
}
const $d_jl_ArrayIndexOutOfBoundsException = new $TypeData().initClass({
  jl_ArrayIndexOutOfBoundsException: 0
}, false, "java.lang.ArrayIndexOutOfBoundsException", {
  jl_ArrayIndexOutOfBoundsException: 1,
  jl_IndexOutOfBoundsException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_ArrayIndexOutOfBoundsException.prototype.$classData = $d_jl_ArrayIndexOutOfBoundsException;
class $c_jl_NumberFormatException extends $c_jl_IllegalArgumentException {
  constructor(s) {
    super();
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, s, null, true, true)
  };
}
const $d_jl_NumberFormatException = new $TypeData().initClass({
  jl_NumberFormatException: 0
}, false, "java.lang.NumberFormatException", {
  jl_NumberFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_NumberFormatException.prototype.$classData = $d_jl_NumberFormatException;
const $ct_jl_StringIndexOutOfBoundsException__T__ = (function($thiz, s) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, s, null, true, true);
  return $thiz
});
const $ct_jl_StringIndexOutOfBoundsException__ = (function($thiz) {
  $ct_jl_Throwable__T__jl_Throwable__Z__Z__($thiz, null, null, true, true);
  return $thiz
});
class $c_jl_StringIndexOutOfBoundsException extends $c_jl_IndexOutOfBoundsException {
}
const $d_jl_StringIndexOutOfBoundsException = new $TypeData().initClass({
  jl_StringIndexOutOfBoundsException: 0
}, false, "java.lang.StringIndexOutOfBoundsException", {
  jl_StringIndexOutOfBoundsException: 1,
  jl_IndexOutOfBoundsException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_jl_StringIndexOutOfBoundsException.prototype.$classData = $d_jl_StringIndexOutOfBoundsException;
class $c_ju_Arrays$$anon$3 extends $c_O {
  constructor(cmp$1) {
    super();
    this.ju_Arrays$$anon$3__f_cmp$1 = null;
    this.ju_Arrays$$anon$3__f_cmp$1 = cmp$1
  };
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    return this.ju_Arrays$$anon$3__f_cmp$1.compare__O__O__I(x, y)
  };
}
const $d_ju_Arrays$$anon$3 = new $TypeData().initClass({
  ju_Arrays$$anon$3: 0
}, false, "java.util.Arrays$$anon$3", {
  ju_Arrays$$anon$3: 1,
  O: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_ju_Arrays$$anon$3.prototype.$classData = $d_ju_Arrays$$anon$3;
class $c_ju_FormatterClosedException extends $c_jl_IllegalStateException {
  constructor() {
    super();
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
}
const $d_ju_FormatterClosedException = new $TypeData().initClass({
  ju_FormatterClosedException: 0
}, false, "java.util.FormatterClosedException", {
  ju_FormatterClosedException: 1,
  jl_IllegalStateException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_FormatterClosedException.prototype.$classData = $d_ju_FormatterClosedException;
class $c_ju_IllegalFormatException extends $c_jl_IllegalArgumentException {
}
class $c_s_Enumeration$ValueOrdering$ extends $c_O {
  constructor(outer) {
    super()
  };
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    const x$1 = x;
    const y$1 = y;
    return x$1.compare__s_Enumeration$Value__I(y$1)
  };
}
const $d_s_Enumeration$ValueOrdering$ = new $TypeData().initClass({
  s_Enumeration$ValueOrdering$: 0
}, false, "scala.Enumeration$ValueOrdering$", {
  s_Enumeration$ValueOrdering$: 1,
  O: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_Enumeration$ValueOrdering$.prototype.$classData = $d_s_Enumeration$ValueOrdering$;
class $c_s_None$ extends $c_s_Option {
  get__E() {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "None.get")
  };
  productPrefix__T() {
    return "None"
  };
  productArity__I() {
    return 0
  };
  productElement__I__O(x$1) {
    return $m_sr_Statics$().ioobe__I__O(x$1)
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    return 2433880
  };
  toString__T() {
    return "None"
  };
  get__O() {
    this.get__E()
  };
}
const $d_s_None$ = new $TypeData().initClass({
  s_None$: 0
}, false, "scala.None$", {
  s_None$: 1,
  s_Option: 1,
  O: 1,
  sc_IterableOnce: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_s_None$.prototype.$classData = $d_s_None$;
let $n_s_None$ = (void 0);
function $m_s_None$() {
  if ((!$n_s_None$)) {
    $n_s_None$ = new $c_s_None$()
  };
  return $n_s_None$
}
class $c_s_Some extends $c_s_Option {
  constructor(value) {
    super();
    this.s_Some__f_value = null;
    this.s_Some__f_value = value
  };
  get__O() {
    return this.s_Some__f_value
  };
  productPrefix__T() {
    return "Some"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.s_Some__f_value : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_s_Some)) {
      const Some$1 = x$1;
      return $m_sr_BoxesRunTime$().equals__O__O__Z(this.s_Some__f_value, Some$1.s_Some__f_value)
    } else {
      return false
    }
  };
}
function $isArrayOf_s_Some(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_Some)))
}
const $d_s_Some = new $TypeData().initClass({
  s_Some: 0
}, false, "scala.Some", {
  s_Some: 1,
  s_Option: 1,
  O: 1,
  sc_IterableOnce: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_s_Some.prototype.$classData = $d_s_Some;
class $c_sc_AbstractIterable extends $c_O {
  iterableFactory__sc_IterableFactory() {
    return $m_sc_Iterable$()
  };
  className__T() {
    return this.stringPrefix__T()
  };
  stringPrefix__T() {
    return "Iterable"
  };
  toString__T() {
    return $f_sc_Iterable__toString__T(this)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    return this.iterableFactory__sc_IterableFactory().from__sc_IterableOnce__O(coll)
  };
  newSpecificBuilder__scm_Builder() {
    return this.iterableFactory__sc_IterableFactory().newBuilder__scm_Builder()
  };
  head__O() {
    return this.iterator__sc_Iterator().next__O()
  };
  drop__I__O(n) {
    return $f_sc_IterableOps__drop__I__O(this, n)
  };
  tail__O() {
    return $f_sc_IterableOps__tail__O(this)
  };
  foreach__F1__V(f) {
    $f_sc_IterableOnceOps__foreach__F1__V(this, f)
  };
  forall__F1__Z(p) {
    return $f_sc_IterableOnceOps__forall__F1__Z(this, p)
  };
  exists__F1__Z(p) {
    return $f_sc_IterableOnceOps__exists__F1__Z(this, p)
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  isEmpty__Z() {
    return $f_sc_IterableOnceOps__isEmpty__Z(this)
  };
  size__I() {
    return $f_sc_IterableOnceOps__size__I(this)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  reversed__sc_Iterable() {
    return $f_sc_IterableOnceOps__reversed__sc_Iterable(this)
  };
  knownSize__I() {
    return (-1)
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    return this.fromSpecific__sc_IterableOnce__sc_IterableOps(coll)
  };
}
const $ct_sc_ArrayOps$ArrayIterator__O__ = (function($thiz, xs) {
  $thiz.sc_ArrayOps$ArrayIterator__f_xs = xs;
  $thiz.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = 0;
  $thiz.sc_ArrayOps$ArrayIterator__f_len = $m_sr_ScalaRunTime$().array_length__O__I($thiz.sc_ArrayOps$ArrayIterator__f_xs);
  return $thiz
});
class $c_sc_ArrayOps$ArrayIterator extends $c_sc_AbstractIterator {
  constructor() {
    super();
    this.sc_ArrayOps$ArrayIterator__f_xs = null;
    this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = 0;
    this.sc_ArrayOps$ArrayIterator__f_len = 0
  };
  knownSize__I() {
    return ((this.sc_ArrayOps$ArrayIterator__f_len - this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0)
  };
  hasNext__Z() {
    return (this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos < this.sc_ArrayOps$ArrayIterator__f_len)
  };
  next__O() {
    try {
      const r = $m_sr_ScalaRunTime$().array_apply__O__I__O(this.sc_ArrayOps$ArrayIterator__f_xs, this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos);
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
      } else {
        throw e
      }
    }
  };
  drop__I__sc_Iterator(n) {
    if ((n > 0)) {
      const a = $m_sr_ScalaRunTime$().array_length__O__I(this.sc_ArrayOps$ArrayIterator__f_xs);
      const b = ((this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos + n) | 0);
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((a < b) ? a : b)
    };
    return this
  };
}
const $d_sc_ArrayOps$ArrayIterator = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator: 0
}, false, "scala.collection.ArrayOps$ArrayIterator", {
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator.prototype.$classData = $d_sc_ArrayOps$ArrayIterator;
class $c_sc_IndexedSeqView$IndexedSeqViewIterator extends $c_sc_AbstractIterator {
  constructor(self) {
    super();
    this.sc_IndexedSeqView$IndexedSeqViewIterator__f_self = null;
    this.sc_IndexedSeqView$IndexedSeqViewIterator__f_current = 0;
    this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder = 0;
    this.sc_IndexedSeqView$IndexedSeqViewIterator__f_self = self;
    this.sc_IndexedSeqView$IndexedSeqViewIterator__f_current = 0;
    this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder = self.length__I()
  };
  knownSize__I() {
    return this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder
  };
  hasNext__Z() {
    return (this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder > 0)
  };
  next__O() {
    if (this.hasNext__Z()) {
      const r = this.sc_IndexedSeqView$IndexedSeqViewIterator__f_self.apply__I__O(this.sc_IndexedSeqView$IndexedSeqViewIterator__f_current);
      this.sc_IndexedSeqView$IndexedSeqViewIterator__f_current = ((1 + this.sc_IndexedSeqView$IndexedSeqViewIterator__f_current) | 0);
      this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder = (((-1) + this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder) | 0);
      return r
    } else {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    }
  };
  drop__I__sc_Iterator(n) {
    if ((n > 0)) {
      this.sc_IndexedSeqView$IndexedSeqViewIterator__f_current = ((this.sc_IndexedSeqView$IndexedSeqViewIterator__f_current + n) | 0);
      const b = ((this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder - n) | 0);
      this.sc_IndexedSeqView$IndexedSeqViewIterator__f_remainder = ((b < 0) ? 0 : b)
    };
    return this
  };
}
const $d_sc_IndexedSeqView$IndexedSeqViewIterator = new $TypeData().initClass({
  sc_IndexedSeqView$IndexedSeqViewIterator: 0
}, false, "scala.collection.IndexedSeqView$IndexedSeqViewIterator", {
  sc_IndexedSeqView$IndexedSeqViewIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_IndexedSeqView$IndexedSeqViewIterator.prototype.$classData = $d_sc_IndexedSeqView$IndexedSeqViewIterator;
class $c_sc_IndexedSeqView$IndexedSeqViewReverseIterator extends $c_sc_AbstractIterator {
  constructor(self) {
    super();
    this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_self = null;
    this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos = 0;
    this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_remainder = 0;
    this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_self = self;
    this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos = (((-1) + self.length__I()) | 0);
    this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_remainder = self.length__I()
  };
  hasNext__Z() {
    return (this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_remainder > 0)
  };
  next__O() {
    if ((this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos < 0)) {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    } else {
      const r = this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_self.apply__I__O(this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos);
      this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos = (((-1) + this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos) | 0);
      this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_remainder = (((-1) + this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_remainder) | 0);
      return r
    }
  };
  drop__I__sc_Iterator(n) {
    if ((n > 0)) {
      this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos = ((this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_pos - n) | 0);
      const b = ((this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_remainder - n) | 0);
      this.sc_IndexedSeqView$IndexedSeqViewReverseIterator__f_remainder = ((b < 0) ? 0 : b)
    };
    return this
  };
}
const $d_sc_IndexedSeqView$IndexedSeqViewReverseIterator = new $TypeData().initClass({
  sc_IndexedSeqView$IndexedSeqViewReverseIterator: 0
}, false, "scala.collection.IndexedSeqView$IndexedSeqViewReverseIterator", {
  sc_IndexedSeqView$IndexedSeqViewReverseIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_IndexedSeqView$IndexedSeqViewReverseIterator.prototype.$classData = $d_sc_IndexedSeqView$IndexedSeqViewReverseIterator;
class $c_sc_Iterator$$anon$1 extends $c_sc_AbstractIterator {
  constructor(outer) {
    super();
    this.sc_Iterator$$anon$1__f_hd = null;
    this.sc_Iterator$$anon$1__f_hdDefined = false;
    this.sc_Iterator$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sc_Iterator$$anon$1__f_$outer = outer
    };
    this.sc_Iterator$$anon$1__f_hdDefined = false
  };
  buffered__sc_BufferedIterator() {
    return this
  };
  head__O() {
    if ((!this.sc_Iterator$$anon$1__f_hdDefined)) {
      this.sc_Iterator$$anon$1__f_hd = this.next__O();
      this.sc_Iterator$$anon$1__f_hdDefined = true
    };
    return this.sc_Iterator$$anon$1__f_hd
  };
  knownSize__I() {
    const thisSize = this.sc_Iterator$$anon$1__f_$outer.knownSize__I();
    return (((thisSize >= 0) && this.sc_Iterator$$anon$1__f_hdDefined) ? ((1 + thisSize) | 0) : thisSize)
  };
  hasNext__Z() {
    return (this.sc_Iterator$$anon$1__f_hdDefined || this.sc_Iterator$$anon$1__f_$outer.hasNext__Z())
  };
  next__O() {
    if (this.sc_Iterator$$anon$1__f_hdDefined) {
      this.sc_Iterator$$anon$1__f_hdDefined = false;
      return this.sc_Iterator$$anon$1__f_hd
    } else {
      return this.sc_Iterator$$anon$1__f_$outer.next__O()
    }
  };
}
const $d_sc_Iterator$$anon$1 = new $TypeData().initClass({
  sc_Iterator$$anon$1: 0
}, false, "scala.collection.Iterator$$anon$1", {
  sc_Iterator$$anon$1: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  sc_BufferedIterator: 1
});
$c_sc_Iterator$$anon$1.prototype.$classData = $d_sc_Iterator$$anon$1;
class $c_sc_Iterator$$anon$21 extends $c_scm_ImmutableBuilder {
  constructor() {
    super();
    $ct_scm_ImmutableBuilder__sc_IterableOnce__(this, $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty)
  };
  addOne__O__sc_Iterator$$anon$21(elem) {
    const this$3 = this.scm_ImmutableBuilder__f_elems;
    const xs = new $c_sjsr_AnonFunction0(((this$1, elem$1) => (() => {
      $m_sc_Iterator$();
      return new $c_sc_Iterator$$anon$20(elem$1)
    }))(this, elem));
    this.scm_ImmutableBuilder__f_elems = this$3.concat__F0__sc_Iterator(xs);
    return this
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__sc_Iterator$$anon$21(elem)
  };
}
const $d_sc_Iterator$$anon$21 = new $TypeData().initClass({
  sc_Iterator$$anon$21: 0
}, false, "scala.collection.Iterator$$anon$21", {
  sc_Iterator$$anon$21: 1,
  scm_ImmutableBuilder: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1
});
$c_sc_Iterator$$anon$21.prototype.$classData = $d_sc_Iterator$$anon$21;
const $f_sc_MapOps__getOrElse__O__F0__O = (function($thiz, key, default$1) {
  const x1 = $thiz.get__O__s_Option(key);
  if ((x1 instanceof $c_s_Some)) {
    const x2 = x1;
    const v = x2.s_Some__f_value;
    return v
  } else {
    const x = $m_s_None$();
    if ((x === x1)) {
      return default$1.apply__O()
    } else {
      throw new $c_s_MatchError(x1)
    }
  }
});
const $f_sc_MapOps__default__O__O = (function($thiz, key) {
  throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), ("key not found: " + key))
});
const $f_sc_MapOps__concat__sc_IterableOnce__sc_IterableOps = (function($thiz, suffix) {
  const $$x2 = $thiz.mapFactory__sc_MapFactory();
  let $$x1;
  if ($is_sc_Iterable(suffix)) {
    const x2 = suffix;
    $$x1 = new $c_sc_View$Concat($thiz, x2)
  } else {
    $$x1 = $thiz.iterator__sc_Iterator().concat__F0__sc_Iterator(new $c_sjsr_AnonFunction0(((this$1, suffix$1) => (() => suffix$1.iterator__sc_Iterator()))($thiz, suffix)))
  };
  return $$x2.from__sc_IterableOnce__O($$x1)
});
const $f_sc_MapOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder = (function($thiz, sb, start, sep, end) {
  const this$2 = $thiz.iterator__sc_Iterator();
  const f = new $c_sjsr_AnonFunction1(((this$1) => ((x0$1$2) => {
    const x0$1 = x0$1$2;
    if ((x0$1 !== null)) {
      const k = x0$1._1__O();
      const v = x0$1._2__O();
      return ((k + " -> ") + v)
    } else {
      throw new $c_s_MatchError(x0$1)
    }
  }))($thiz));
  const this$3 = new $c_sc_Iterator$$anon$9(this$2, f);
  return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this$3, sb, start, sep, end)
});
class $c_sci_ArraySeq$ extends $c_O {
  constructor() {
    super();
    this.sci_ArraySeq$__f_emptyImpl = null;
    this.sci_ArraySeq$__f_untagged = null;
    this.sci_ArraySeq$__f_bitmap$0 = false;
    $n_sci_ArraySeq$ = this;
    this.sci_ArraySeq$__f_untagged = new $c_sc_ClassTagSeqFactory$AnySeqDelegate(this)
  };
  from__sc_IterableOnce__s_reflect_ClassTag__sci_ArraySeq(it, tag) {
    if ((it instanceof $c_sci_ArraySeq)) {
      const x2 = it;
      return x2
    } else {
      return this.unsafeWrapArray__O__sci_ArraySeq($m_s_Array$().from__sc_IterableOnce__s_reflect_ClassTag__O(it, tag))
    }
  };
  newBuilder__s_reflect_ClassTag__scm_Builder(evidence$2) {
    const this$3 = new $c_scm_ArrayBuffer$$anon$1();
    const f = new $c_sjsr_AnonFunction1(((this$2, evidence$2$1) => ((b$2) => {
      const b = b$2;
      return $m_sci_ArraySeq$().unsafeWrapArray__O__sci_ArraySeq($f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(b, evidence$2$1))
    }))(this, evidence$2));
    return new $c_scm_Builder$$anon$1(this$3, f)
  };
  tabulate__I__F1__s_reflect_ClassTag__sci_ArraySeq(n, f, evidence$4) {
    const n1 = ((n > 0) ? n : 0);
    const elements = evidence$4.newArray__I__O(n1);
    let i = 0;
    while ((i < n)) {
      $m_sr_ScalaRunTime$().array_update__O__I__O__V(elements, i, f.apply__O__O(i));
      i = ((1 + i) | 0)
    };
    return $m_sci_ArraySeq$().unsafeWrapArray__O__sci_ArraySeq(elements)
  };
  unsafeWrapArray__O__sci_ArraySeq(x) {
    if ((x === null)) {
      return null
    } else if ($isArrayOf_O(x, 1)) {
      const x3 = x;
      return new $c_sci_ArraySeq$ofRef(x3)
    } else if ($isArrayOf_I(x, 1)) {
      const x4 = x;
      return new $c_sci_ArraySeq$ofInt(x4)
    } else if ($isArrayOf_D(x, 1)) {
      const x5 = x;
      return new $c_sci_ArraySeq$ofDouble(x5)
    } else if ($isArrayOf_J(x, 1)) {
      const x6 = x;
      return new $c_sci_ArraySeq$ofLong(x6)
    } else if ($isArrayOf_F(x, 1)) {
      const x7 = x;
      return new $c_sci_ArraySeq$ofFloat(x7)
    } else if ($isArrayOf_C(x, 1)) {
      const x8 = x;
      return new $c_sci_ArraySeq$ofChar(x8)
    } else if ($isArrayOf_B(x, 1)) {
      const x9 = x;
      return new $c_sci_ArraySeq$ofByte(x9)
    } else if ($isArrayOf_S(x, 1)) {
      const x10 = x;
      return new $c_sci_ArraySeq$ofShort(x10)
    } else if ($isArrayOf_Z(x, 1)) {
      const x11 = x;
      return new $c_sci_ArraySeq$ofBoolean(x11)
    } else if ($isArrayOf_jl_Void(x, 1)) {
      const x12 = x;
      return new $c_sci_ArraySeq$ofUnit(x12)
    } else {
      throw new $c_s_MatchError(x)
    }
  };
  tabulate__I__F1__O__O(n, f, evidence$9) {
    return this.tabulate__I__F1__s_reflect_ClassTag__sci_ArraySeq(n, f, evidence$9)
  };
  from__sc_IterableOnce__O__O(it, evidence$5) {
    return this.from__sc_IterableOnce__s_reflect_ClassTag__sci_ArraySeq(it, evidence$5)
  };
}
const $d_sci_ArraySeq$ = new $TypeData().initClass({
  sci_ArraySeq$: 0
}, false, "scala.collection.immutable.ArraySeq$", {
  sci_ArraySeq$: 1,
  O: 1,
  sc_StrictOptimizedClassTagSeqFactory: 1,
  sc_ClassTagSeqFactory: 1,
  sc_ClassTagIterableFactory: 1,
  sc_EvidenceIterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$.prototype.$classData = $d_sci_ArraySeq$;
let $n_sci_ArraySeq$ = (void 0);
function $m_sci_ArraySeq$() {
  if ((!$n_sci_ArraySeq$)) {
    $n_sci_ArraySeq$ = new $c_sci_ArraySeq$()
  };
  return $n_sci_ArraySeq$
}
function $is_sci_Iterable(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sci_Iterable)))
}
function $isArrayOf_sci_Iterable(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Iterable)))
}
class $c_sci_Map$Map2$$anon$1 extends $c_sci_Map$Map2$Map2Iterator {
  constructor(outer) {
    super();
    $ct_sci_Map$Map2$Map2Iterator__sci_Map$Map2__(this, outer)
  };
  nextResult__O__O__O(k, v) {
    return $ct_T2__O__O__(new $c_T2(), k, v)
  };
}
const $d_sci_Map$Map2$$anon$1 = new $TypeData().initClass({
  sci_Map$Map2$$anon$1: 0
}, false, "scala.collection.immutable.Map$Map2$$anon$1", {
  sci_Map$Map2$$anon$1: 1,
  sci_Map$Map2$Map2Iterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_Map$Map2$$anon$1.prototype.$classData = $d_sci_Map$Map2$$anon$1;
class $c_sci_Map$Map2$$anon$3 extends $c_sci_Map$Map2$Map2Iterator {
  constructor(outer) {
    super();
    $ct_sci_Map$Map2$Map2Iterator__sci_Map$Map2__(this, outer)
  };
  nextResult__O__O__O(k, v) {
    return v
  };
}
const $d_sci_Map$Map2$$anon$3 = new $TypeData().initClass({
  sci_Map$Map2$$anon$3: 0
}, false, "scala.collection.immutable.Map$Map2$$anon$3", {
  sci_Map$Map2$$anon$3: 1,
  sci_Map$Map2$Map2Iterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_Map$Map2$$anon$3.prototype.$classData = $d_sci_Map$Map2$$anon$3;
class $c_sci_Map$Map3$$anon$4 extends $c_sci_Map$Map3$Map3Iterator {
  constructor(outer) {
    super();
    $ct_sci_Map$Map3$Map3Iterator__sci_Map$Map3__(this, outer)
  };
  nextResult__O__O__O(k, v) {
    return $ct_T2__O__O__(new $c_T2(), k, v)
  };
}
const $d_sci_Map$Map3$$anon$4 = new $TypeData().initClass({
  sci_Map$Map3$$anon$4: 0
}, false, "scala.collection.immutable.Map$Map3$$anon$4", {
  sci_Map$Map3$$anon$4: 1,
  sci_Map$Map3$Map3Iterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_Map$Map3$$anon$4.prototype.$classData = $d_sci_Map$Map3$$anon$4;
class $c_sci_Map$Map3$$anon$6 extends $c_sci_Map$Map3$Map3Iterator {
  constructor(outer) {
    super();
    $ct_sci_Map$Map3$Map3Iterator__sci_Map$Map3__(this, outer)
  };
  nextResult__O__O__O(k, v) {
    return v
  };
}
const $d_sci_Map$Map3$$anon$6 = new $TypeData().initClass({
  sci_Map$Map3$$anon$6: 0
}, false, "scala.collection.immutable.Map$Map3$$anon$6", {
  sci_Map$Map3$$anon$6: 1,
  sci_Map$Map3$Map3Iterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_Map$Map3$$anon$6.prototype.$classData = $d_sci_Map$Map3$$anon$6;
class $c_sci_Map$Map4$$anon$7 extends $c_sci_Map$Map4$Map4Iterator {
  constructor(outer) {
    super();
    $ct_sci_Map$Map4$Map4Iterator__sci_Map$Map4__(this, outer)
  };
  nextResult__O__O__O(k, v) {
    return $ct_T2__O__O__(new $c_T2(), k, v)
  };
}
const $d_sci_Map$Map4$$anon$7 = new $TypeData().initClass({
  sci_Map$Map4$$anon$7: 0
}, false, "scala.collection.immutable.Map$Map4$$anon$7", {
  sci_Map$Map4$$anon$7: 1,
  sci_Map$Map4$Map4Iterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_Map$Map4$$anon$7.prototype.$classData = $d_sci_Map$Map4$$anon$7;
class $c_sci_Map$Map4$$anon$9 extends $c_sci_Map$Map4$Map4Iterator {
  constructor(outer) {
    super();
    $ct_sci_Map$Map4$Map4Iterator__sci_Map$Map4__(this, outer)
  };
  nextResult__O__O__O(k, v) {
    return v
  };
}
const $d_sci_Map$Map4$$anon$9 = new $TypeData().initClass({
  sci_Map$Map4$$anon$9: 0
}, false, "scala.collection.immutable.Map$Map4$$anon$9", {
  sci_Map$Map4$$anon$9: 1,
  sci_Map$Map4$Map4Iterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_sci_Map$Map4$$anon$9.prototype.$classData = $d_sci_Map$Map4$$anon$9;
class $c_sci_NumericRange$NumericRangeIterator extends $c_sc_AbstractIterator {
  constructor(self, num) {
    super();
    this.sci_NumericRange$NumericRangeIterator__f_self = null;
    this.sci_NumericRange$NumericRangeIterator__f_num = null;
    this.sci_NumericRange$NumericRangeIterator__f__hasNext = false;
    this.sci_NumericRange$NumericRangeIterator__f__next = null;
    this.sci_NumericRange$NumericRangeIterator__f_lastElement = null;
    this.sci_NumericRange$NumericRangeIterator__f_self = self;
    this.sci_NumericRange$NumericRangeIterator__f_num = num;
    this.sci_NumericRange$NumericRangeIterator__f__hasNext = (!self.isEmpty__Z());
    this.sci_NumericRange$NumericRangeIterator__f__next = self.sci_NumericRange__f_start;
    this.sci_NumericRange$NumericRangeIterator__f_lastElement = (this.sci_NumericRange$NumericRangeIterator__f__hasNext ? self.last__O() : self.sci_NumericRange__f_start)
  };
  knownSize__I() {
    if (this.sci_NumericRange$NumericRangeIterator__f__hasNext) {
      const $$x1 = this.sci_NumericRange$NumericRangeIterator__f_num;
      const this$2 = this.sci_NumericRange$NumericRangeIterator__f_num;
      const this$1 = this.sci_NumericRange$NumericRangeIterator__f_num;
      const lhs = this.sci_NumericRange$NumericRangeIterator__f_lastElement;
      const lhs$1 = new $c_s_math_Integral$IntegralOps(this$1, lhs).$minus__O__O(this.sci_NumericRange$NumericRangeIterator__f__next);
      return ((1 + $$x1.toInt__O__I(new $c_s_math_Integral$IntegralOps(this$2, lhs$1).$div__O__O(this.sci_NumericRange$NumericRangeIterator__f_self.sci_NumericRange__f_step))) | 0)
    } else {
      return 0
    }
  };
  hasNext__Z() {
    return this.sci_NumericRange$NumericRangeIterator__f__hasNext
  };
  next__O() {
    if ((!this.sci_NumericRange$NumericRangeIterator__f__hasNext)) {
      $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    };
    const value = this.sci_NumericRange$NumericRangeIterator__f__next;
    this.sci_NumericRange$NumericRangeIterator__f__hasNext = (!$m_sr_BoxesRunTime$().equals__O__O__Z(value, this.sci_NumericRange$NumericRangeIterator__f_lastElement));
    this.sci_NumericRange$NumericRangeIterator__f__next = this.sci_NumericRange$NumericRangeIterator__f_num.plus__O__O__O(value, this.sci_NumericRange$NumericRangeIterator__f_self.sci_NumericRange__f_step);
    return value
  };
}
const $d_sci_NumericRange$NumericRangeIterator = new $TypeData().initClass({
  sci_NumericRange$NumericRangeIterator: 0
}, false, "scala.collection.immutable.NumericRange$NumericRangeIterator", {
  sci_NumericRange$NumericRangeIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_NumericRange$NumericRangeIterator.prototype.$classData = $d_sci_NumericRange$NumericRangeIterator;
class $c_sci_RangeIterator extends $c_sc_AbstractIterator {
  constructor(start, step, lastElement, initiallyEmpty) {
    super();
    this.sci_RangeIterator__f_step = 0;
    this.sci_RangeIterator__f_lastElement = 0;
    this.sci_RangeIterator__f__hasNext = false;
    this.sci_RangeIterator__f__next = 0;
    this.sci_RangeIterator__f_step = step;
    this.sci_RangeIterator__f_lastElement = lastElement;
    this.sci_RangeIterator__f__hasNext = (!initiallyEmpty);
    this.sci_RangeIterator__f__next = start
  };
  knownSize__I() {
    return (this.sci_RangeIterator__f__hasNext ? ((1 + $intDiv(((this.sci_RangeIterator__f_lastElement - this.sci_RangeIterator__f__next) | 0), this.sci_RangeIterator__f_step)) | 0) : 0)
  };
  hasNext__Z() {
    return this.sci_RangeIterator__f__hasNext
  };
  next__I() {
    if ((!this.sci_RangeIterator__f__hasNext)) {
      $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
    };
    const value = this.sci_RangeIterator__f__next;
    this.sci_RangeIterator__f__hasNext = (value !== this.sci_RangeIterator__f_lastElement);
    this.sci_RangeIterator__f__next = ((value + this.sci_RangeIterator__f_step) | 0);
    return value
  };
  drop__I__sc_Iterator(n) {
    if ((n > 0)) {
      const value = this.sci_RangeIterator__f__next;
      const hi = (value >> 31);
      const value$1 = $imul(this.sci_RangeIterator__f_step, n);
      const hi$1 = (value$1 >> 31);
      const lo = ((value + value$1) | 0);
      const hi$2 = ((((-2147483648) ^ lo) < ((-2147483648) ^ value)) ? ((1 + ((hi + hi$1) | 0)) | 0) : ((hi + hi$1) | 0));
      if ((this.sci_RangeIterator__f_step > 0)) {
        const value$2 = this.sci_RangeIterator__f_lastElement;
        const hi$3 = (value$2 >> 31);
        let this$6__lo;
        let this$6__hi;
        if (((hi$3 === hi$2) ? (((-2147483648) ^ value$2) < ((-2147483648) ^ lo)) : (hi$3 < hi$2))) {
          const $$x1__lo = value$2;
          const $$x1__hi = hi$3;
          this$6__lo = $$x1__lo;
          this$6__hi = $$x1__hi
        } else {
          const $$x2__lo = lo;
          const $$x2__hi = hi$2;
          this$6__lo = $$x2__lo;
          this$6__hi = $$x2__hi
        };
        this.sci_RangeIterator__f__next = this$6__lo;
        const value$3 = this.sci_RangeIterator__f_lastElement;
        const hi$4 = (value$3 >> 31);
        this.sci_RangeIterator__f__hasNext = ((hi$2 === hi$4) ? (((-2147483648) ^ lo) <= ((-2147483648) ^ value$3)) : (hi$2 < hi$4))
      } else if ((this.sci_RangeIterator__f_step < 0)) {
        const value$4 = this.sci_RangeIterator__f_lastElement;
        const hi$5 = (value$4 >> 31);
        let this$10__lo;
        let this$10__hi;
        if (((hi$5 === hi$2) ? (((-2147483648) ^ value$4) > ((-2147483648) ^ lo)) : (hi$5 > hi$2))) {
          const $$x3__lo = value$4;
          const $$x3__hi = hi$5;
          this$10__lo = $$x3__lo;
          this$10__hi = $$x3__hi
        } else {
          const $$x4__lo = lo;
          const $$x4__hi = hi$2;
          this$10__lo = $$x4__lo;
          this$10__hi = $$x4__hi
        };
        this.sci_RangeIterator__f__next = this$10__lo;
        const value$5 = this.sci_RangeIterator__f_lastElement;
        const hi$6 = (value$5 >> 31);
        this.sci_RangeIterator__f__hasNext = ((hi$2 === hi$6) ? (((-2147483648) ^ lo) >= ((-2147483648) ^ value$5)) : (hi$2 > hi$6))
      }
    };
    return this
  };
  next__O() {
    return this.next__I()
  };
}
const $d_sci_RangeIterator = new $TypeData().initClass({
  sci_RangeIterator: 0
}, false, "scala.collection.immutable.RangeIterator", {
  sci_RangeIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_RangeIterator.prototype.$classData = $d_sci_RangeIterator;
const $p_sci_VectorBuilder__advanceToNextBlockIfNecessary__V = (function($thiz) {
  if (($thiz.sci_VectorBuilder__f_lo >= $thiz.sci_VectorBuilder__f_display0.u.length)) {
    const newBlockIndex = ((32 + $thiz.sci_VectorBuilder__f_blockIndex) | 0);
    const xor = ($thiz.sci_VectorBuilder__f_blockIndex ^ newBlockIndex);
    $f_sci_VectorPointer__gotoNextBlockStartWritable__I__I__V($thiz, newBlockIndex, xor);
    $thiz.sci_VectorBuilder__f_blockIndex = newBlockIndex;
    $thiz.sci_VectorBuilder__f_lo = 0
  }
});
class $c_sci_VectorBuilder extends $c_O {
  constructor() {
    super();
    this.sci_VectorBuilder__f_blockIndex = 0;
    this.sci_VectorBuilder__f_lo = 0;
    this.sci_VectorBuilder__f_depth = 0;
    this.sci_VectorBuilder__f_display0 = null;
    this.sci_VectorBuilder__f_display1 = null;
    this.sci_VectorBuilder__f_display2 = null;
    this.sci_VectorBuilder__f_display3 = null;
    this.sci_VectorBuilder__f_display4 = null;
    this.sci_VectorBuilder__f_display5 = null;
    this.sci_VectorBuilder__f_display0 = $newArrayObject($d_O.getArrayOf(), [32]);
    this.sci_VectorBuilder__f_depth = 1;
    this.sci_VectorBuilder__f_blockIndex = 0;
    this.sci_VectorBuilder__f_lo = 0
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  depth__I() {
    return this.sci_VectorBuilder__f_depth
  };
  depth_$eq__I__V(x$1) {
    this.sci_VectorBuilder__f_depth = x$1
  };
  display0__AO() {
    return this.sci_VectorBuilder__f_display0
  };
  display0_$eq__AO__V(x$1) {
    this.sci_VectorBuilder__f_display0 = x$1
  };
  display1__AAO() {
    return this.sci_VectorBuilder__f_display1
  };
  display1_$eq__AAO__V(x$1) {
    this.sci_VectorBuilder__f_display1 = x$1
  };
  display2__AAAO() {
    return this.sci_VectorBuilder__f_display2
  };
  display2_$eq__AAAO__V(x$1) {
    this.sci_VectorBuilder__f_display2 = x$1
  };
  display3__AAAAO() {
    return this.sci_VectorBuilder__f_display3
  };
  display3_$eq__AAAAO__V(x$1) {
    this.sci_VectorBuilder__f_display3 = x$1
  };
  display4__AAAAAO() {
    return this.sci_VectorBuilder__f_display4
  };
  display4_$eq__AAAAAO__V(x$1) {
    this.sci_VectorBuilder__f_display4 = x$1
  };
  display5__AAAAAAO() {
    return this.sci_VectorBuilder__f_display5
  };
  display5_$eq__AAAAAAO__V(x$1) {
    this.sci_VectorBuilder__f_display5 = x$1
  };
  size__I() {
    return ((this.sci_VectorBuilder__f_blockIndex + this.sci_VectorBuilder__f_lo) | 0)
  };
  addOne__O__sci_VectorBuilder(elem) {
    $p_sci_VectorBuilder__advanceToNextBlockIfNecessary__V(this);
    this.sci_VectorBuilder__f_display0.u[this.sci_VectorBuilder__f_lo] = elem;
    this.sci_VectorBuilder__f_lo = ((1 + this.sci_VectorBuilder__f_lo) | 0);
    return this
  };
  addAll__sc_IterableOnce__sci_VectorBuilder(xs) {
    const it = xs.iterator__sc_Iterator();
    while (it.hasNext__Z()) {
      $p_sci_VectorBuilder__advanceToNextBlockIfNecessary__V(this);
      this.sci_VectorBuilder__f_lo = ((this.sci_VectorBuilder__f_lo + it.copyToArray__O__I__I__I(this.sci_VectorBuilder__f_display0, this.sci_VectorBuilder__f_lo, ((this.sci_VectorBuilder__f_display0.u.length - this.sci_VectorBuilder__f_lo) | 0))) | 0)
    };
    return this
  };
  result__sci_Vector() {
    const size = this.size__I();
    if ((size === 0)) {
      const this$1 = $m_sci_Vector$();
      return this$1.sci_Vector$__f_NIL
    };
    const s = new $c_sci_Vector(0, size, 0);
    const depth = this.sci_VectorBuilder__f_depth;
    $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s, this, depth);
    if ((this.sci_VectorBuilder__f_depth > 1)) {
      const xor = (((-1) + size) | 0);
      $f_sci_VectorPointer__gotoPos__I__I__V(s, 0, xor)
    };
    return s
  };
  result__O() {
    return this.result__sci_Vector()
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__sci_VectorBuilder(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__sci_VectorBuilder(elem)
  };
}
const $d_sci_VectorBuilder = new $TypeData().initClass({
  sci_VectorBuilder: 0
}, false, "scala.collection.immutable.VectorBuilder", {
  sci_VectorBuilder: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  sci_VectorPointer: 1
});
$c_sci_VectorBuilder.prototype.$classData = $d_sci_VectorBuilder;
const $p_sci_VectorIterator__advanceToNextBlockIfNecessary__V = (function($thiz) {
  if (($thiz.sci_VectorIterator__f_lo === $thiz.sci_VectorIterator__f_endLo)) {
    if (((($thiz.sci_VectorIterator__f_blockIndex + $thiz.sci_VectorIterator__f_lo) | 0) < $thiz.sci_VectorIterator__f_endIndex)) {
      const newBlockIndex = ((32 + $thiz.sci_VectorIterator__f_blockIndex) | 0);
      const xor = ($thiz.sci_VectorIterator__f_blockIndex ^ newBlockIndex);
      $f_sci_VectorPointer__gotoNextBlockStart__I__I__V($thiz, newBlockIndex, xor);
      $thiz.sci_VectorIterator__f_blockIndex = newBlockIndex;
      const a = (($thiz.sci_VectorIterator__f_endIndex - $thiz.sci_VectorIterator__f_blockIndex) | 0);
      $thiz.sci_VectorIterator__f_endLo = ((a < 32) ? a : 32);
      $thiz.sci_VectorIterator__f_lo = 0
    } else {
      $thiz.sci_VectorIterator__f__hasNext = false
    }
  }
});
class $c_sci_VectorIterator extends $c_sc_AbstractIterator {
  constructor(_startIndex, endIndex) {
    super();
    this.sci_VectorIterator__f_endIndex = 0;
    this.sci_VectorIterator__f_blockIndex = 0;
    this.sci_VectorIterator__f_lo = 0;
    this.sci_VectorIterator__f_endLo = 0;
    this.sci_VectorIterator__f__hasNext = false;
    this.sci_VectorIterator__f_depth = 0;
    this.sci_VectorIterator__f_display0 = null;
    this.sci_VectorIterator__f_display1 = null;
    this.sci_VectorIterator__f_display2 = null;
    this.sci_VectorIterator__f_display3 = null;
    this.sci_VectorIterator__f_display4 = null;
    this.sci_VectorIterator__f_display5 = null;
    this.sci_VectorIterator__f_endIndex = endIndex;
    this.sci_VectorIterator__f_blockIndex = ((-32) & _startIndex);
    this.sci_VectorIterator__f_lo = (31 & _startIndex);
    const a = ((this.sci_VectorIterator__f_endIndex - this.sci_VectorIterator__f_blockIndex) | 0);
    this.sci_VectorIterator__f_endLo = ((a < 32) ? a : 32);
    this.sci_VectorIterator__f__hasNext = (((this.sci_VectorIterator__f_blockIndex + this.sci_VectorIterator__f_lo) | 0) < this.sci_VectorIterator__f_endIndex)
  };
  depth__I() {
    return this.sci_VectorIterator__f_depth
  };
  depth_$eq__I__V(x$1) {
    this.sci_VectorIterator__f_depth = x$1
  };
  display0__AO() {
    return this.sci_VectorIterator__f_display0
  };
  display0_$eq__AO__V(x$1) {
    this.sci_VectorIterator__f_display0 = x$1
  };
  display1__AAO() {
    return this.sci_VectorIterator__f_display1
  };
  display1_$eq__AAO__V(x$1) {
    this.sci_VectorIterator__f_display1 = x$1
  };
  display2__AAAO() {
    return this.sci_VectorIterator__f_display2
  };
  display2_$eq__AAAO__V(x$1) {
    this.sci_VectorIterator__f_display2 = x$1
  };
  display3__AAAAO() {
    return this.sci_VectorIterator__f_display3
  };
  display3_$eq__AAAAO__V(x$1) {
    this.sci_VectorIterator__f_display3 = x$1
  };
  display4__AAAAAO() {
    return this.sci_VectorIterator__f_display4
  };
  display4_$eq__AAAAAO__V(x$1) {
    this.sci_VectorIterator__f_display4 = x$1
  };
  display5__AAAAAAO() {
    return this.sci_VectorIterator__f_display5
  };
  display5_$eq__AAAAAAO__V(x$1) {
    this.sci_VectorIterator__f_display5 = x$1
  };
  hasNext__Z() {
    return this.sci_VectorIterator__f__hasNext
  };
  drop__I__sc_Iterator(n) {
    if ((n > 0)) {
      const value = this.sci_VectorIterator__f_lo;
      const hi = (value >> 31);
      const hi$1 = (n >> 31);
      const lo = ((value + n) | 0);
      const hi$2 = ((((-2147483648) ^ lo) < ((-2147483648) ^ value)) ? ((1 + ((hi + hi$1) | 0)) | 0) : ((hi + hi$1) | 0));
      const value$1 = this.sci_VectorIterator__f_blockIndex;
      const hi$3 = (value$1 >> 31);
      const lo$1 = ((value$1 + lo) | 0);
      const hi$4 = ((((-2147483648) ^ lo$1) < ((-2147483648) ^ value$1)) ? ((1 + ((hi$3 + hi$2) | 0)) | 0) : ((hi$3 + hi$2) | 0));
      const value$2 = this.sci_VectorIterator__f_endIndex;
      const hi$5 = (value$2 >> 31);
      if (((hi$4 === hi$5) ? (((-2147483648) ^ lo$1) < ((-2147483648) ^ value$2)) : (hi$4 < hi$5))) {
        this.sci_VectorIterator__f_lo = lo;
        if ((this.sci_VectorIterator__f_lo >= 32)) {
          this.sci_VectorIterator__f_blockIndex = ((-32) & ((this.sci_VectorIterator__f_blockIndex + this.sci_VectorIterator__f_lo) | 0));
          const index = this.sci_VectorIterator__f_blockIndex;
          const depth = this.sci_VectorIterator__f_depth;
          $f_sci_VectorPointer__gotoNewBlockStart__I__I__V(this, index, depth);
          const a = ((this.sci_VectorIterator__f_endIndex - this.sci_VectorIterator__f_blockIndex) | 0);
          this.sci_VectorIterator__f_endLo = ((a < 32) ? a : 32);
          this.sci_VectorIterator__f_lo = (31 & this.sci_VectorIterator__f_lo)
        }
      } else {
        this.sci_VectorIterator__f__hasNext = false;
        this.sci_VectorIterator__f_endIndex = 0
      }
    };
    return this
  };
  next__O() {
    if ((!this.sci_VectorIterator__f__hasNext)) {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "reached iterator end")
    };
    const res = this.sci_VectorIterator__f_display0.u[this.sci_VectorIterator__f_lo];
    this.sci_VectorIterator__f_lo = ((1 + this.sci_VectorIterator__f_lo) | 0);
    $p_sci_VectorIterator__advanceToNextBlockIfNecessary__V(this);
    return res
  };
  copyToArray__O__I__I__I(xs, start, len) {
    const xsLen = $m_sr_ScalaRunTime$().array_length__O__I(xs);
    const srcLen = this.remainingElementCount__I();
    const x = ((len < srcLen) ? len : srcLen);
    const y = ((xsLen - start) | 0);
    const x$1 = ((x < y) ? x : y);
    const totalToBeCopied = ((x$1 > 0) ? x$1 : 0);
    let totalCopied = 0;
    while ((this.sci_VectorIterator__f__hasNext && (totalCopied < totalToBeCopied))) {
      const _start = ((start + totalCopied) | 0);
      const srcLen$1 = ((this.sci_VectorIterator__f_endLo - this.sci_VectorIterator__f_lo) | 0);
      const len$1 = ((len - totalCopied) | 0);
      const x$2 = ((len$1 < srcLen$1) ? len$1 : srcLen$1);
      const y$1 = ((xsLen - _start) | 0);
      const x$3 = ((x$2 < y$1) ? x$2 : y$1);
      const toBeCopied = ((x$3 > 0) ? x$3 : 0);
      $m_s_Array$().copy__O__I__O__I__I__V(this.sci_VectorIterator__f_display0, this.sci_VectorIterator__f_lo, xs, _start, toBeCopied);
      totalCopied = ((totalCopied + toBeCopied) | 0);
      this.sci_VectorIterator__f_lo = ((this.sci_VectorIterator__f_lo + toBeCopied) | 0);
      $p_sci_VectorIterator__advanceToNextBlockIfNecessary__V(this)
    };
    return totalCopied
  };
  remainingElementCount__I() {
    const x = ((this.sci_VectorIterator__f_endIndex - ((this.sci_VectorIterator__f_blockIndex + this.sci_VectorIterator__f_lo) | 0)) | 0);
    return ((x > 0) ? x : 0)
  };
  knownSize__I() {
    return this.remainingElementCount__I()
  };
}
const $d_sci_VectorIterator = new $TypeData().initClass({
  sci_VectorIterator: 0
}, false, "scala.collection.immutable.VectorIterator", {
  sci_VectorIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  sci_VectorPointer: 1
});
$c_sci_VectorIterator.prototype.$classData = $d_sci_VectorIterator;
const $ct_scm_ArrayBuilder__ = (function($thiz) {
  $thiz.scm_ArrayBuilder__f_capacity = 0;
  $thiz.scm_ArrayBuilder__f_size = 0;
  return $thiz
});
class $c_scm_ArrayBuilder extends $c_O {
  constructor() {
    super();
    this.scm_ArrayBuilder__f_capacity = 0;
    this.scm_ArrayBuilder__f_size = 0
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
}
class $c_scm_ArraySeq$ extends $c_O {
  constructor() {
    super();
    this.scm_ArraySeq$__f_untagged = null;
    this.scm_ArraySeq$__f_EmptyArraySeq = null;
    $n_scm_ArraySeq$ = this;
    this.scm_ArraySeq$__f_untagged = new $c_sc_ClassTagSeqFactory$AnySeqDelegate(this);
    this.scm_ArraySeq$__f_EmptyArraySeq = new $c_scm_ArraySeq$ofRef($newArrayObject($d_O.getArrayOf(), [0]))
  };
  from__sc_IterableOnce__s_reflect_ClassTag__scm_ArraySeq(it, evidence$2) {
    const n = it.knownSize__I();
    if ((n > (-1))) {
      const elements = evidence$2.newArray__I__O(n);
      const iterator = it.iterator__sc_Iterator();
      let i = 0;
      while ((i < n)) {
        $m_sr_ScalaRunTime$().array_update__O__I__O__V(elements, i, iterator.next__O());
        i = ((1 + i) | 0)
      };
      return this.make__O__scm_ArraySeq(elements)
    } else {
      const this$2 = $m_scm_ArrayBuffer$().from__sc_IterableOnce__scm_ArrayBuffer(it);
      return this.make__O__scm_ArraySeq($f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this$2, evidence$2))
    }
  };
  newBuilder__s_reflect_ClassTag__scm_Builder(evidence$3) {
    const this$4 = new $c_scm_ArrayBuilder$generic(evidence$3.runtimeClass__jl_Class());
    const f = new $c_sjsr_AnonFunction1(((this$3) => ((x$2) => $m_scm_ArraySeq$().make__O__scm_ArraySeq(x$2)))(this));
    return new $c_scm_Builder$$anon$1(this$4, f)
  };
  make__O__scm_ArraySeq(x) {
    if ((x === null)) {
      return null
    } else if ($isArrayOf_O(x, 1)) {
      const x3 = x;
      return new $c_scm_ArraySeq$ofRef(x3)
    } else if ($isArrayOf_I(x, 1)) {
      const x4 = x;
      return new $c_scm_ArraySeq$ofInt(x4)
    } else if ($isArrayOf_D(x, 1)) {
      const x5 = x;
      return new $c_scm_ArraySeq$ofDouble(x5)
    } else if ($isArrayOf_J(x, 1)) {
      const x6 = x;
      return new $c_scm_ArraySeq$ofLong(x6)
    } else if ($isArrayOf_F(x, 1)) {
      const x7 = x;
      return new $c_scm_ArraySeq$ofFloat(x7)
    } else if ($isArrayOf_C(x, 1)) {
      const x8 = x;
      return new $c_scm_ArraySeq$ofChar(x8)
    } else if ($isArrayOf_B(x, 1)) {
      const x9 = x;
      return new $c_scm_ArraySeq$ofByte(x9)
    } else if ($isArrayOf_S(x, 1)) {
      const x10 = x;
      return new $c_scm_ArraySeq$ofShort(x10)
    } else if ($isArrayOf_Z(x, 1)) {
      const x11 = x;
      return new $c_scm_ArraySeq$ofBoolean(x11)
    } else if ($isArrayOf_jl_Void(x, 1)) {
      const x12 = x;
      return new $c_scm_ArraySeq$ofUnit(x12)
    } else {
      throw new $c_s_MatchError(x)
    }
  };
  tabulate__I__F1__O__O(n, f, evidence$9) {
    const evidence$35 = evidence$9;
    return $f_sc_StrictOptimizedClassTagSeqFactory__tabulate__I__F1__s_reflect_ClassTag__sc_SeqOps(this, n, f, evidence$35)
  };
  from__sc_IterableOnce__O__O(it, evidence$5) {
    return this.from__sc_IterableOnce__s_reflect_ClassTag__scm_ArraySeq(it, evidence$5)
  };
}
const $d_scm_ArraySeq$ = new $TypeData().initClass({
  scm_ArraySeq$: 0
}, false, "scala.collection.mutable.ArraySeq$", {
  scm_ArraySeq$: 1,
  O: 1,
  sc_StrictOptimizedClassTagSeqFactory: 1,
  sc_ClassTagSeqFactory: 1,
  sc_ClassTagIterableFactory: 1,
  sc_EvidenceIterableFactory: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$.prototype.$classData = $d_scm_ArraySeq$;
let $n_scm_ArraySeq$ = (void 0);
function $m_scm_ArraySeq$() {
  if ((!$n_scm_ArraySeq$)) {
    $n_scm_ArraySeq$ = new $c_scm_ArraySeq$()
  };
  return $n_scm_ArraySeq$
}
class $c_scm_HashMap$$anon$1 extends $c_scm_HashMap$HashMapIterator {
  constructor(outer) {
    super();
    $ct_scm_HashMap$HashMapIterator__scm_HashMap__(this, outer)
  };
  extract__scm_HashMap$Node__O(nd) {
    return $ct_T2__O__O__(new $c_T2(), nd.scm_HashMap$Node__f__key, nd.scm_HashMap$Node__f__value)
  };
}
const $d_scm_HashMap$$anon$1 = new $TypeData().initClass({
  scm_HashMap$$anon$1: 0
}, false, "scala.collection.mutable.HashMap$$anon$1", {
  scm_HashMap$$anon$1: 1,
  scm_HashMap$HashMapIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_scm_HashMap$$anon$1.prototype.$classData = $d_scm_HashMap$$anon$1;
class $c_scm_HashMap$$anon$3 extends $c_scm_HashMap$HashMapIterator {
  constructor(outer) {
    super();
    $ct_scm_HashMap$HashMapIterator__scm_HashMap__(this, outer)
  };
  extract__scm_HashMap$Node__O(nd) {
    return nd.scm_HashMap$Node__f__value
  };
}
const $d_scm_HashMap$$anon$3 = new $TypeData().initClass({
  scm_HashMap$$anon$3: 0
}, false, "scala.collection.mutable.HashMap$$anon$3", {
  scm_HashMap$$anon$3: 1,
  scm_HashMap$HashMapIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_scm_HashMap$$anon$3.prototype.$classData = $d_scm_HashMap$$anon$3;
class $c_scm_HashMap$$anon$4 extends $c_scm_HashMap$HashMapIterator {
  constructor(outer) {
    super();
    $ct_scm_HashMap$HashMapIterator__scm_HashMap__(this, outer)
  };
  extract__scm_HashMap$Node__O(nd) {
    return nd
  };
}
const $d_scm_HashMap$$anon$4 = new $TypeData().initClass({
  scm_HashMap$$anon$4: 0
}, false, "scala.collection.mutable.HashMap$$anon$4", {
  scm_HashMap$$anon$4: 1,
  scm_HashMap$HashMapIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_scm_HashMap$$anon$4.prototype.$classData = $d_scm_HashMap$$anon$4;
class $c_scm_HashSet$$anon$1 extends $c_scm_HashSet$HashSetIterator {
  constructor(outer) {
    super();
    $ct_scm_HashSet$HashSetIterator__scm_HashSet__(this, outer)
  };
  extract__scm_HashSet$Node__O(nd) {
    return nd.scm_HashSet$Node__f__key
  };
}
const $d_scm_HashSet$$anon$1 = new $TypeData().initClass({
  scm_HashSet$$anon$1: 0
}, false, "scala.collection.mutable.HashSet$$anon$1", {
  scm_HashSet$$anon$1: 1,
  scm_HashSet$HashSetIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_scm_HashSet$$anon$1.prototype.$classData = $d_scm_HashSet$$anon$1;
class $c_scm_HashSet$$anon$2 extends $c_scm_HashSet$HashSetIterator {
  constructor(outer) {
    super();
    $ct_scm_HashSet$HashSetIterator__scm_HashSet__(this, outer)
  };
  extract__scm_HashSet$Node__O(nd) {
    return nd
  };
}
const $d_scm_HashSet$$anon$2 = new $TypeData().initClass({
  scm_HashSet$$anon$2: 0
}, false, "scala.collection.mutable.HashSet$$anon$2", {
  scm_HashSet$$anon$2: 1,
  scm_HashSet$HashSetIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_scm_HashSet$$anon$2.prototype.$classData = $d_scm_HashSet$$anon$2;
class $c_s_math_Ordering$$anon$1 extends $c_O {
  constructor(outer, f$1) {
    super();
    this.s_math_Ordering$$anon$1__f_$outer = null;
    this.s_math_Ordering$$anon$1__f_f$1 = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.s_math_Ordering$$anon$1__f_$outer = outer
    };
    this.s_math_Ordering$$anon$1__f_f$1 = f$1
  };
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    return this.s_math_Ordering$$anon$1__f_$outer.compare__O__O__I(this.s_math_Ordering$$anon$1__f_f$1.apply__O__O(x), this.s_math_Ordering$$anon$1__f_f$1.apply__O__O(y))
  };
}
const $d_s_math_Ordering$$anon$1 = new $TypeData().initClass({
  s_math_Ordering$$anon$1: 0
}, false, "scala.math.Ordering$$anon$1", {
  s_math_Ordering$$anon$1: 1,
  O: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$$anon$1.prototype.$classData = $d_s_math_Ordering$$anon$1;
const $f_s_math_Ordering$CachedReverse__isReverseOf__s_math_Ordering__Z = (function($thiz, other) {
  return (other === $thiz.s_math_Ordering$Int$__f_scala$math$Ordering$CachedReverse$$_reverse)
});
class $c_s_math_Ordering$Reverse extends $c_O {
  constructor(outer) {
    super();
    this.s_math_Ordering$Reverse__f_outer = null;
    this.s_math_Ordering$Reverse__f_outer = outer
  };
  isReverseOf__s_math_Ordering__Z(other) {
    const x$2 = this.s_math_Ordering$Reverse__f_outer;
    return ((other === null) ? (x$2 === null) : other.equals__O__Z(x$2))
  };
  compare__O__O__I(x, y) {
    return this.s_math_Ordering$Reverse__f_outer.compare__O__O__I(y, x)
  };
  lteq__O__O__Z(x, y) {
    return this.s_math_Ordering$Reverse__f_outer.lteq__O__O__Z(y, x)
  };
  gteq__O__O__Z(x, y) {
    return this.s_math_Ordering$Reverse__f_outer.gteq__O__O__Z(y, x)
  };
  lt__O__O__Z(x, y) {
    return this.s_math_Ordering$Reverse__f_outer.lt__O__O__Z(y, x)
  };
  gt__O__O__Z(x, y) {
    return this.s_math_Ordering$Reverse__f_outer.gt__O__O__Z(y, x)
  };
  max__O__O__O(x, y) {
    return this.s_math_Ordering$Reverse__f_outer.min__O__O__O(x, y)
  };
  min__O__O__O(x, y) {
    return this.s_math_Ordering$Reverse__f_outer.max__O__O__O(x, y)
  };
  equals__O__Z(obj) {
    if ((obj !== null)) {
      if ((this === obj)) {
        return true
      }
    };
    if ((obj instanceof $c_s_math_Ordering$Reverse)) {
      const x3 = obj;
      const x = this.s_math_Ordering$Reverse__f_outer;
      const x$2 = x3.s_math_Ordering$Reverse__f_outer;
      return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
    };
    return false
  };
  hashCode__I() {
    return $imul(41, this.s_math_Ordering$Reverse__f_outer.hashCode__I())
  };
}
function $isArrayOf_s_math_Ordering$Reverse(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_math_Ordering$Reverse)))
}
const $d_s_math_Ordering$Reverse = new $TypeData().initClass({
  s_math_Ordering$Reverse: 0
}, false, "scala.math.Ordering$Reverse", {
  s_math_Ordering$Reverse: 1,
  O: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$Reverse.prototype.$classData = $d_s_math_Ordering$Reverse;
class $c_s_reflect_ClassTag$GenericClassTag extends $c_O {
  constructor(runtimeClass) {
    super();
    this.s_reflect_ClassTag$GenericClassTag__f_runtimeClass = null;
    this.s_reflect_ClassTag$GenericClassTag__f_runtimeClass = runtimeClass
  };
  equals__O__Z(x) {
    return $f_s_reflect_ClassTag__equals__O__Z(this, x)
  };
  hashCode__I() {
    const x = this.s_reflect_ClassTag$GenericClassTag__f_runtimeClass;
    return $m_sr_Statics$().anyHash__O__I(x)
  };
  toString__T() {
    return $p_s_reflect_ClassTag__prettyprint$1__jl_Class__T(this, this.s_reflect_ClassTag$GenericClassTag__f_runtimeClass)
  };
  runtimeClass__jl_Class() {
    return this.s_reflect_ClassTag$GenericClassTag__f_runtimeClass
  };
  newArray__I__O(len) {
    const componentType = this.s_reflect_ClassTag$GenericClassTag__f_runtimeClass;
    return $m_jl_reflect_Array$().newInstance__jl_Class__I__O(componentType, len)
  };
}
const $d_s_reflect_ClassTag$GenericClassTag = new $TypeData().initClass({
  s_reflect_ClassTag$GenericClassTag: 0
}, false, "scala.reflect.ClassTag$GenericClassTag", {
  s_reflect_ClassTag$GenericClassTag: 1,
  O: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ClassTag$GenericClassTag.prototype.$classData = $d_s_reflect_ClassTag$GenericClassTag;
class $c_Ltigerpython_parser_ast_AstNode$Alias extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, name, asName) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Alias__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Alias__f_name = null;
    this.Ltigerpython_parser_ast_AstNode$Alias__f_asName = null;
    this.Ltigerpython_parser_ast_AstNode$Alias__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Alias__f_name = name;
    this.Ltigerpython_parser_ast_AstNode$Alias__f_asName = asName;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_ALIAS)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Alias__f_pos
  };
  toString__T() {
    if ((this.Ltigerpython_parser_ast_AstNode$Alias__f_asName !== null)) {
      const $$x2 = $m_sc_StringOps$();
      const this$2 = this.Ltigerpython_parser_ast_AstNode$Alias__f_name;
      const $$x1 = this$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
      const this$3 = this.Ltigerpython_parser_ast_AstNode$Alias__f_asName;
      const array = [$$x1, this$3.Ltigerpython_parser_ast_AstNode$Name__f_name];
      return $$x2.format$extension__T__sci_Seq__T("%s as %s", new $c_sjsr_WrappedVarArgs(array))
    } else {
      const this$7 = this.Ltigerpython_parser_ast_AstNode$Alias__f_name;
      return this$7.Ltigerpython_parser_ast_AstNode$Name__f_name
    }
  };
  productPrefix__T() {
    return "Alias"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Alias__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Alias__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Alias__f_asName;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Alias");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Alias__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Alias__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Alias__f_asName;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Alias)) {
      const Alias$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$Alias__f_pos === Alias$1.Ltigerpython_parser_ast_AstNode$Alias__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Alias__f_name;
        const x$2 = Alias$1.Ltigerpython_parser_ast_AstNode$Alias__f_name;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Alias__f_asName;
        const x$4 = Alias$1.Ltigerpython_parser_ast_AstNode$Alias__f_asName;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Alias(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Alias)))
}
const $d_Ltigerpython_parser_ast_AstNode$Alias = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Alias: 0
}, false, "tigerpython.parser.ast.AstNode$Alias", {
  Ltigerpython_parser_ast_AstNode$Alias: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Alias.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Alias;
class $c_Ltigerpython_parser_ast_AstNode$Assert extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, test, msg) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Assert__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Assert__f_test = null;
    this.Ltigerpython_parser_ast_AstNode$Assert__f_msg = null;
    this.Ltigerpython_parser_ast_AstNode$Assert__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Assert__f_test = test;
    this.Ltigerpython_parser_ast_AstNode$Assert__f_msg = msg;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_ASSERT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Assert__f_pos
  };
  productPrefix__T() {
    return "Assert"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Assert__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Assert__f_test;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Assert__f_msg;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Assert");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Assert__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Assert__f_test;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Assert__f_msg;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Assert)) {
      const Assert$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$Assert__f_pos === Assert$1.Ltigerpython_parser_ast_AstNode$Assert__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Assert__f_test;
        const x$2 = Assert$1.Ltigerpython_parser_ast_AstNode$Assert__f_test;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Assert__f_msg;
        const x$4 = Assert$1.Ltigerpython_parser_ast_AstNode$Assert__f_msg;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Assert(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Assert)))
}
const $d_Ltigerpython_parser_ast_AstNode$Assert = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Assert: 0
}, false, "tigerpython.parser.ast.AstNode$Assert", {
  Ltigerpython_parser_ast_AstNode$Assert: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Assert.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Assert;
class $c_Ltigerpython_parser_ast_AstNode$Assignment extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, targets, value) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Assignment__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Assignment__f_targets = null;
    this.Ltigerpython_parser_ast_AstNode$Assignment__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$Assignment__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Assignment__f_targets = targets;
    this.Ltigerpython_parser_ast_AstNode$Assignment__f_value = value;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_ASSIGN)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Assignment__f_pos
  };
  toString__T() {
    const this$1 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Assignment__f_targets);
    return (($f_sc_IterableOnceOps__mkString__T__T__T__T(this$1, "", " = ", "") + " = ") + this.Ltigerpython_parser_ast_AstNode$Assignment__f_value.toString__T())
  };
  productPrefix__T() {
    return "Assignment"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Assignment__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Assignment");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Assignment__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Assignment__f_targets;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Assignment)) {
      const Assignment$1 = x$1;
      if (((this.Ltigerpython_parser_ast_AstNode$Assignment__f_pos === Assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Assignment__f_targets === Assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_targets))) {
        const x = this.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
        const x$2 = Assignment$1.Ltigerpython_parser_ast_AstNode$Assignment__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Assignment(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Assignment)))
}
const $d_Ltigerpython_parser_ast_AstNode$Assignment = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Assignment: 0
}, false, "tigerpython.parser.ast.AstNode$Assignment", {
  Ltigerpython_parser_ast_AstNode$Assignment: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Assignment.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Assignment;
class $c_Ltigerpython_parser_ast_AstNode$AugAssign extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, target, op, value) {
    super();
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_target = null;
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_op = null;
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_target = target;
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_op = op;
    this.Ltigerpython_parser_ast_AstNode$AugAssign__f_value = value;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_AUG_ASSIGN)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$AugAssign__f_pos
  };
  productPrefix__T() {
    return "AugAssign"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$AugAssign__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$AugAssign__f_target;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$AugAssign__f_op;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$AugAssign__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("AugAssign");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$AugAssign__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$AugAssign__f_target;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$AugAssign__f_op;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$AugAssign__f_value;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$AugAssign)) {
      const AugAssign$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$AugAssign__f_pos === AugAssign$1.Ltigerpython_parser_ast_AstNode$AugAssign__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$AugAssign__f_target;
        const x$2 = AugAssign$1.Ltigerpython_parser_ast_AstNode$AugAssign__f_target;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$AugAssign__f_op;
        const x$4 = AugAssign$1.Ltigerpython_parser_ast_AstNode$AugAssign__f_op;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$AugAssign__f_value;
        const x$6 = AugAssign$1.Ltigerpython_parser_ast_AstNode$AugAssign__f_value;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$AugAssign(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$AugAssign)))
}
const $d_Ltigerpython_parser_ast_AstNode$AugAssign = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$AugAssign: 0
}, false, "tigerpython.parser.ast.AstNode$AugAssign", {
  Ltigerpython_parser_ast_AstNode$AugAssign: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$AugAssign.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$AugAssign;
class $c_Ltigerpython_parser_ast_AstNode$BooleanValue extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, value) {
    super();
    this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value = false;
    this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value = value;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_CONSTANT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos
  };
  notToString__T() {
    return (this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value ? "False" : "True")
  };
  toString__T() {
    return (this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value ? "True" : "False")
  };
  productPrefix__T() {
    return "BooleanValue"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("BooleanValue");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = (this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value ? 1231 : 1237);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$BooleanValue)) {
      const BooleanValue$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos === BooleanValue$1.Ltigerpython_parser_ast_AstNode$BooleanValue__f_pos) && (this.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value === BooleanValue$1.Ltigerpython_parser_ast_AstNode$BooleanValue__f_value))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$BooleanValue(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$BooleanValue)))
}
const $d_Ltigerpython_parser_ast_AstNode$BooleanValue = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$BooleanValue: 0
}, false, "tigerpython.parser.ast.AstNode$BooleanValue", {
  Ltigerpython_parser_ast_AstNode$BooleanValue: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$BooleanValue.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$BooleanValue;
class $c_Ltigerpython_parser_ast_AstNode$Break extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Break__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Break__f_pos = pos;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_BREAK)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Break__f_pos
  };
  productPrefix__T() {
    return "Break"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_ast_AstNode$Break__f_pos : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Break");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Break__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$2, 1)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Break)) {
      const Break$1 = x$1;
      return (this.Ltigerpython_parser_ast_AstNode$Break__f_pos === Break$1.Ltigerpython_parser_ast_AstNode$Break__f_pos)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Break(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Break)))
}
const $d_Ltigerpython_parser_ast_AstNode$Break = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Break: 0
}, false, "tigerpython.parser.ast.AstNode$Break", {
  Ltigerpython_parser_ast_AstNode$Break: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Break.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Break;
class $c_Ltigerpython_parser_ast_AstNode$Compare extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, left, comparators) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Compare__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Compare__f_left = null;
    this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators = null;
    this.Ltigerpython_parser_ast_AstNode$Compare__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Compare__f_left = left;
    this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators = comparators;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_COMPARE)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Compare__f_pos
  };
  isSimpleEqual__Z() {
    if ((this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 1)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs = this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
      const x = $$x1.head$extension__O__O(xs)._1__O();
      const x$2 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_EQ;
      return ((x === null) ? (x$2 === null) : $dp_equals__O__Z(x, x$2))
    } else {
      return false
    }
  };
  isInclusionTest__Z() {
    if ((this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 1)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs = this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
      const x = $$x1.head$extension__O__O(xs)._1__O();
      const x$2 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_IN;
      return ((x === null) ? (x$2 === null) : $dp_equals__O__Z(x, x$2))
    } else {
      return false
    }
  };
  isRefEqualTest__Z() {
    if ((this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 1)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs = this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
      const x = $$x1.head$extension__O__O(xs)._1__O();
      const x$2 = $m_Ltigerpython_parser_ast_BinOp$().Ltigerpython_parser_ast_BinOp$__f_CMP_IS;
      return ((x === null) ? (x$2 === null) : $dp_equals__O__Z(x, x$2))
    } else {
      return false
    }
  };
  right__Ltigerpython_parser_ast_AstNode$Expression() {
    if ((this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators.u.length === 1)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs = this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
      return $$x1.head$extension__O__O(xs)._2__O()
    } else {
      return null
    }
  };
  toString__T() {
    const xs = this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
    if ((xs.u.length !== 0)) {
      const $$x3 = this.Ltigerpython_parser_ast_AstNode$Compare__f_left.toString__T();
      const $$x2 = $m_s_Predef$();
      const xs$1 = this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
      const p = new $c_sjsr_AnonFunction1(((this$4) => ((check$ifrefutable$1$2) => {
        const check$ifrefutable$1 = check$ifrefutable$1$2;
        return (check$ifrefutable$1 !== null)
      }))(this));
      const this$7 = new $c_sc_ArrayOps$WithFilter(p, xs$1);
      let capacity = 0;
      let size = 0;
      let jsElems = null;
      capacity = 0;
      size = 0;
      jsElems = [];
      let i = 0;
      while ((i < $m_sr_ScalaRunTime$().array_length__O__I(this$7.sc_ArrayOps$WithFilter__f_xs))) {
        const x = $m_sr_ScalaRunTime$().array_apply__O__I__O(this$7.sc_ArrayOps$WithFilter__f_xs, i);
        if ((!(!this$7.sc_ArrayOps$WithFilter__f_p.apply__O__O(x)))) {
          const x$6 = x;
          if ((x$6 === null)) {
            throw new $c_s_MatchError(x$6)
          };
          const op = x$6._1__O();
          const expr = x$6._2__O();
          let elem;
          if (((op !== null) && (expr !== null))) {
            const $$x1 = $m_sc_StringOps$();
            const array = [op.toString__T(), expr.toString__T()];
            elem = $$x1.format$extension__T__sci_Seq__T("%s %s", new $c_sjsr_WrappedVarArgs(array))
          } else {
            elem = "???"
          };
          const unboxedElem = ((elem === null) ? null : elem);
          jsElems.push(unboxedElem)
        };
        i = ((1 + i) | 0)
      };
      const this$14 = $$x2.wrapRefArray__AO__scm_ArraySeq$ofRef($makeNativeArrayWrapper($d_T.getArrayOf(), jsElems));
      return (($$x3 + " ") + $f_sc_IterableOnceOps__mkString__T__T__T__T(this$14, "", " ", ""))
    } else {
      return this.Ltigerpython_parser_ast_AstNode$Compare__f_left.toString__T()
    }
  };
  productPrefix__T() {
    return "Compare"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Compare__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Compare__f_left;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Compare");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Compare__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Compare__f_left;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Compare)) {
      const Compare$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$Compare__f_pos === Compare$1.Ltigerpython_parser_ast_AstNode$Compare__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Compare__f_left;
        const x$2 = Compare$1.Ltigerpython_parser_ast_AstNode$Compare__f_left;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$Compare__f_comparators === Compare$1.Ltigerpython_parser_ast_AstNode$Compare__f_comparators)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Compare(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Compare)))
}
const $d_Ltigerpython_parser_ast_AstNode$Compare = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Compare: 0
}, false, "tigerpython.parser.ast.AstNode$Compare", {
  Ltigerpython_parser_ast_AstNode$Compare: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Compare.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Compare;
class $c_Ltigerpython_parser_ast_AstNode$Continue extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Continue__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Continue__f_pos = pos;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_CONTINUE)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Continue__f_pos
  };
  productPrefix__T() {
    return "Continue"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_ast_AstNode$Continue__f_pos : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Continue");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Continue__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$2, 1)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Continue)) {
      const Continue$1 = x$1;
      return (this.Ltigerpython_parser_ast_AstNode$Continue__f_pos === Continue$1.Ltigerpython_parser_ast_AstNode$Continue__f_pos)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Continue(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Continue)))
}
const $d_Ltigerpython_parser_ast_AstNode$Continue = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Continue: 0
}, false, "tigerpython.parser.ast.AstNode$Continue", {
  Ltigerpython_parser_ast_AstNode$Continue: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Continue.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Continue;
class $c_Ltigerpython_parser_ast_AstNode$Delete extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, targets) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Delete__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Delete__f_targets = null;
    this.Ltigerpython_parser_ast_AstNode$Delete__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Delete__f_targets = targets;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_DELETE)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Delete__f_pos
  };
  productPrefix__T() {
    return "Delete"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Delete__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Delete__f_targets;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Delete");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Delete__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Delete__f_targets;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Delete)) {
      const Delete$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$Delete__f_pos === Delete$1.Ltigerpython_parser_ast_AstNode$Delete__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Delete__f_targets === Delete$1.Ltigerpython_parser_ast_AstNode$Delete__f_targets))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Delete(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Delete)))
}
const $d_Ltigerpython_parser_ast_AstNode$Delete = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Delete: 0
}, false, "tigerpython.parser.ast.AstNode$Delete", {
  Ltigerpython_parser_ast_AstNode$Delete: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Delete.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Delete;
class $c_Ltigerpython_parser_ast_AstNode$Ellipsis extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Ellipsis__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Ellipsis__f_pos = pos;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_CONSTANT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Ellipsis__f_pos
  };
  productPrefix__T() {
    return "Ellipsis"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_ast_AstNode$Ellipsis__f_pos : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Ellipsis");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Ellipsis__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$2, 1)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Ellipsis)) {
      const Ellipsis$1 = x$1;
      return (this.Ltigerpython_parser_ast_AstNode$Ellipsis__f_pos === Ellipsis$1.Ltigerpython_parser_ast_AstNode$Ellipsis__f_pos)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Ellipsis(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Ellipsis)))
}
const $d_Ltigerpython_parser_ast_AstNode$Ellipsis = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Ellipsis: 0
}, false, "tigerpython.parser.ast.AstNode$Ellipsis", {
  Ltigerpython_parser_ast_AstNode$Ellipsis: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Ellipsis.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Ellipsis;
class $c_Ltigerpython_parser_ast_AstNode$EmptyExpression extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos) {
    super();
    this.Ltigerpython_parser_ast_AstNode$EmptyExpression__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$EmptyExpression__f_pos = pos;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_NOTHING)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$EmptyExpression__f_pos
  };
  productPrefix__T() {
    return "EmptyExpression"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_ast_AstNode$EmptyExpression__f_pos : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("EmptyExpression");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$EmptyExpression__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$2, 1)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$EmptyExpression)) {
      const EmptyExpression$1 = x$1;
      return (this.Ltigerpython_parser_ast_AstNode$EmptyExpression__f_pos === EmptyExpression$1.Ltigerpython_parser_ast_AstNode$EmptyExpression__f_pos)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$EmptyExpression(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$EmptyExpression)))
}
const $d_Ltigerpython_parser_ast_AstNode$EmptyExpression = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$EmptyExpression: 0
}, false, "tigerpython.parser.ast.AstNode$EmptyExpression", {
  Ltigerpython_parser_ast_AstNode$EmptyExpression: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$EmptyExpression.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$EmptyExpression;
class $c_Ltigerpython_parser_ast_AstNode$Exec extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, expr, globals, locals) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Exec__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Exec__f_expr = null;
    this.Ltigerpython_parser_ast_AstNode$Exec__f_globals = null;
    this.Ltigerpython_parser_ast_AstNode$Exec__f_locals = null;
    this.Ltigerpython_parser_ast_AstNode$Exec__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Exec__f_expr = expr;
    this.Ltigerpython_parser_ast_AstNode$Exec__f_globals = globals;
    this.Ltigerpython_parser_ast_AstNode$Exec__f_locals = locals;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_EXEC_2)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Exec__f_pos
  };
  productPrefix__T() {
    return "Exec"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Exec__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Exec__f_expr;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Exec__f_globals;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Exec__f_locals;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Exec");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Exec__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Exec__f_expr;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Exec__f_globals;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$Exec__f_locals;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Exec)) {
      const Exec$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$Exec__f_pos === Exec$1.Ltigerpython_parser_ast_AstNode$Exec__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Exec__f_expr;
        const x$2 = Exec$1.Ltigerpython_parser_ast_AstNode$Exec__f_expr;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Exec__f_globals;
        const x$4 = Exec$1.Ltigerpython_parser_ast_AstNode$Exec__f_globals;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$Exec__f_locals;
        const x$6 = Exec$1.Ltigerpython_parser_ast_AstNode$Exec__f_locals;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Exec(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Exec)))
}
const $d_Ltigerpython_parser_ast_AstNode$Exec = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Exec: 0
}, false, "tigerpython.parser.ast.AstNode$Exec", {
  Ltigerpython_parser_ast_AstNode$Exec: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Exec.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Exec;
class $c_Ltigerpython_parser_ast_AstNode$Generator extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, element, generators) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Generator__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Generator__f_element = null;
    this.Ltigerpython_parser_ast_AstNode$Generator__f_generators = null;
    this.Ltigerpython_parser_ast_AstNode$Generator__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Generator__f_element = element;
    this.Ltigerpython_parser_ast_AstNode$Generator__f_generators = generators;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_GENERATOR_EXPR)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Generator__f_pos
  };
  toString__T() {
    const $$x2 = $m_sc_StringOps$();
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$Generator__f_element.toString__T();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Generator__f_generators);
    const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x2.format$extension__T__sci_Seq__T("Generator(%s, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Generator"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Generator__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Generator__f_element;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Generator__f_generators;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Generator");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Generator__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Generator__f_element;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Generator__f_generators;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Generator)) {
      const Generator$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$Generator__f_pos === Generator$1.Ltigerpython_parser_ast_AstNode$Generator__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Generator__f_element;
        const x$2 = Generator$1.Ltigerpython_parser_ast_AstNode$Generator__f_element;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$Generator__f_generators === Generator$1.Ltigerpython_parser_ast_AstNode$Generator__f_generators)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Generator(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Generator)))
}
const $d_Ltigerpython_parser_ast_AstNode$Generator = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Generator: 0
}, false, "tigerpython.parser.ast.AstNode$Generator", {
  Ltigerpython_parser_ast_AstNode$Generator: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Generator.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Generator;
class $c_Ltigerpython_parser_ast_AstNode$Global extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, names) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Global__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Global__f_names = null;
    this.Ltigerpython_parser_ast_AstNode$Global__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Global__f_names = names;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_GLOBAL)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Global__f_pos
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Global__f_names);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("Global(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Global"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Global__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Global__f_names;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Global");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Global__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Global__f_names;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Global)) {
      const Global$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$Global__f_pos === Global$1.Ltigerpython_parser_ast_AstNode$Global__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Global__f_names === Global$1.Ltigerpython_parser_ast_AstNode$Global__f_names))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Global(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Global)))
}
const $d_Ltigerpython_parser_ast_AstNode$Global = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Global: 0
}, false, "tigerpython.parser.ast.AstNode$Global", {
  Ltigerpython_parser_ast_AstNode$Global: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Global.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Global;
class $c_Ltigerpython_parser_ast_AstNode$IfExpr extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, test, body, elseBody) {
    super();
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_test = null;
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody = null;
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_test = test;
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_body = body;
    this.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody = elseBody;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_IF_EXPR)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$IfExpr__f_pos
  };
  productPrefix__T() {
    return "IfExpr"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$IfExpr__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$IfExpr__f_test;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$IfExpr__f_body;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("IfExpr");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$IfExpr__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$IfExpr__f_test;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$IfExpr__f_body;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$IfExpr)) {
      const IfExpr$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$IfExpr__f_pos === IfExpr$1.Ltigerpython_parser_ast_AstNode$IfExpr__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$IfExpr__f_test;
        const x$2 = IfExpr$1.Ltigerpython_parser_ast_AstNode$IfExpr__f_test;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$IfExpr__f_body;
        const x$4 = IfExpr$1.Ltigerpython_parser_ast_AstNode$IfExpr__f_body;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody;
        const x$6 = IfExpr$1.Ltigerpython_parser_ast_AstNode$IfExpr__f_elseBody;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$IfExpr(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$IfExpr)))
}
const $d_Ltigerpython_parser_ast_AstNode$IfExpr = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$IfExpr: 0
}, false, "tigerpython.parser.ast.AstNode$IfExpr", {
  Ltigerpython_parser_ast_AstNode$IfExpr: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$IfExpr.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$IfExpr;
class $c_Ltigerpython_parser_ast_AstNode$Import extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, names) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Import__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Import__f_names = null;
    this.Ltigerpython_parser_ast_AstNode$Import__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Import__f_names = names;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Import__f_pos
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Import__f_names);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("Import(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Import"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Import__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Import__f_names;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Import");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Import__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Import__f_names;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Import)) {
      const Import$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$Import__f_pos === Import$1.Ltigerpython_parser_ast_AstNode$Import__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Import__f_names === Import$1.Ltigerpython_parser_ast_AstNode$Import__f_names))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Import(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Import)))
}
const $d_Ltigerpython_parser_ast_AstNode$Import = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Import: 0
}, false, "tigerpython.parser.ast.AstNode$Import", {
  Ltigerpython_parser_ast_AstNode$Import: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Import.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Import;
class $c_Ltigerpython_parser_ast_AstNode$ImportFrom extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, module, names) {
    super();
    this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module = null;
    this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names = null;
    this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module = module;
    this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names = names;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT_FROM)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_pos
  };
  toString__T() {
    const $$x2 = $m_sc_StringOps$();
    const this$2 = this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module;
    const $$x1 = this$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
    const this$3 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names);
    const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$3, "", ", ", "")];
    return $$x2.format$extension__T__sci_Seq__T("ImportFrom(%s, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "ImportFrom"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ImportFrom");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFrom)) {
      const ImportFrom$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_pos === ImportFrom$1.Ltigerpython_parser_ast_AstNode$ImportFrom__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module;
        const x$2 = ImportFrom$1.Ltigerpython_parser_ast_AstNode$ImportFrom__f_module;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names === ImportFrom$1.Ltigerpython_parser_ast_AstNode$ImportFrom__f_names)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ImportFrom(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ImportFrom)))
}
const $d_Ltigerpython_parser_ast_AstNode$ImportFrom = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$ImportFrom: 0
}, false, "tigerpython.parser.ast.AstNode$ImportFrom", {
  Ltigerpython_parser_ast_AstNode$ImportFrom: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$ImportFrom.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$ImportFrom;
class $c_Ltigerpython_parser_ast_AstNode$ImportFuture extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, names) {
    super();
    this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names = null;
    this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names = names;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos
  };
  toString__T() {
    const $$x2 = $m_sc_StringOps$();
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos;
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names);
    const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x2.format$extension__T__sci_Seq__T("ImportFuture(%d, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "ImportFuture"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ImportFuture");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$ImportFuture)) {
      const ImportFuture$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos === ImportFuture$1.Ltigerpython_parser_ast_AstNode$ImportFuture__f_pos) && (this.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names === ImportFuture$1.Ltigerpython_parser_ast_AstNode$ImportFuture__f_names))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ImportFuture(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ImportFuture)))
}
const $d_Ltigerpython_parser_ast_AstNode$ImportFuture = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$ImportFuture: 0
}, false, "tigerpython.parser.ast.AstNode$ImportFuture", {
  Ltigerpython_parser_ast_AstNode$ImportFuture: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$ImportFuture.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$ImportFuture;
class $c_Ltigerpython_parser_ast_AstNode$ImportStar extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, module) {
    super();
    this.Ltigerpython_parser_ast_AstNode$ImportStar__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$ImportStar__f_module = null;
    this.Ltigerpython_parser_ast_AstNode$ImportStar__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$ImportStar__f_module = module;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_IMPORT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ImportStar__f_pos
  };
  productPrefix__T() {
    return "ImportStar"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$ImportStar__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$ImportStar__f_module;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ImportStar");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$ImportStar__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$ImportStar__f_module;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$ImportStar)) {
      const ImportStar$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$ImportStar__f_pos === ImportStar$1.Ltigerpython_parser_ast_AstNode$ImportStar__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$ImportStar__f_module;
        const x$2 = ImportStar$1.Ltigerpython_parser_ast_AstNode$ImportStar__f_module;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ImportStar(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ImportStar)))
}
const $d_Ltigerpython_parser_ast_AstNode$ImportStar = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$ImportStar: 0
}, false, "tigerpython.parser.ast.AstNode$ImportStar", {
  Ltigerpython_parser_ast_AstNode$ImportStar: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$ImportStar.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$ImportStar;
class $c_Ltigerpython_parser_ast_AstNode$Index extends $c_Ltigerpython_parser_ast_AstNode$Slice {
  constructor(pos, value) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Index__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Index__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$Index__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Index__f_value = value;
    $ct_Ltigerpython_parser_ast_AstNode$Slice__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_INDEX)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Index__f_pos
  };
  productPrefix__T() {
    return "Index"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Index__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Index__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Index");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Index__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Index__f_value;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Index)) {
      const Index$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$Index__f_pos === Index$1.Ltigerpython_parser_ast_AstNode$Index__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Index__f_value;
        const x$2 = Index$1.Ltigerpython_parser_ast_AstNode$Index__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Index(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Index)))
}
const $d_Ltigerpython_parser_ast_AstNode$Index = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Index: 0
}, false, "tigerpython.parser.ast.AstNode$Index", {
  Ltigerpython_parser_ast_AstNode$Index: 1,
  Ltigerpython_parser_ast_AstNode$Slice: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Index.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Index;
class $c_Ltigerpython_parser_ast_AstNode$Lambda extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, args, body) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Lambda__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Lambda__f_args = null;
    this.Ltigerpython_parser_ast_AstNode$Lambda__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$Lambda__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Lambda__f_args = args;
    this.Ltigerpython_parser_ast_AstNode$Lambda__f_body = body;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_LAMBDA)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Lambda__f_pos
  };
  productPrefix__T() {
    return "Lambda"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Lambda__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Lambda__f_args;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Lambda__f_body;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Lambda");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Lambda__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Lambda__f_args;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Lambda__f_body;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Lambda)) {
      const Lambda$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$Lambda__f_pos === Lambda$1.Ltigerpython_parser_ast_AstNode$Lambda__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Lambda__f_args;
        const x$2 = Lambda$1.Ltigerpython_parser_ast_AstNode$Lambda__f_args;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Lambda__f_body;
        const x$4 = Lambda$1.Ltigerpython_parser_ast_AstNode$Lambda__f_body;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Lambda(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Lambda)))
}
const $d_Ltigerpython_parser_ast_AstNode$Lambda = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Lambda: 0
}, false, "tigerpython.parser.ast.AstNode$Lambda", {
  Ltigerpython_parser_ast_AstNode$Lambda: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Lambda.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Lambda;
class $c_Ltigerpython_parser_ast_AstNode$MultiSlice extends $c_Ltigerpython_parser_ast_AstNode$Slice {
  constructor(pos, elements) {
    super();
    this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements = null;
    this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements = elements;
    $ct_Ltigerpython_parser_ast_AstNode$Slice__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_EXT_SLICE)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_pos
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("MultiSlice(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "MultiSlice"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("MultiSlice");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$MultiSlice)) {
      const MultiSlice$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_pos === MultiSlice$1.Ltigerpython_parser_ast_AstNode$MultiSlice__f_pos) && (this.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements === MultiSlice$1.Ltigerpython_parser_ast_AstNode$MultiSlice__f_elements))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$MultiSlice(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$MultiSlice)))
}
const $d_Ltigerpython_parser_ast_AstNode$MultiSlice = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$MultiSlice: 0
}, false, "tigerpython.parser.ast.AstNode$MultiSlice", {
  Ltigerpython_parser_ast_AstNode$MultiSlice: 1,
  Ltigerpython_parser_ast_AstNode$Slice: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$MultiSlice.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$MultiSlice;
class $c_Ltigerpython_parser_ast_AstNode$NameParameter extends $c_Ltigerpython_parser_ast_AstNode$Parameter {
  constructor(pos, name, annotation) {
    super();
    this.Ltigerpython_parser_ast_AstNode$NameParameter__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$NameParameter__f_name = null;
    this.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation = null;
    this.Ltigerpython_parser_ast_AstNode$NameParameter__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$NameParameter__f_name = name;
    this.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation = annotation
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$NameParameter__f_pos
  };
  productPrefix__T() {
    return "NameParameter"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$NameParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$NameParameter__f_name;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("NameParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$NameParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$NameParameter__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$NameParameter)) {
      const NameParameter$1 = x$1;
      if (((this.Ltigerpython_parser_ast_AstNode$NameParameter__f_pos === NameParameter$1.Ltigerpython_parser_ast_AstNode$NameParameter__f_pos) && (this.Ltigerpython_parser_ast_AstNode$NameParameter__f_name === NameParameter$1.Ltigerpython_parser_ast_AstNode$NameParameter__f_name))) {
        const x = this.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation;
        const x$2 = NameParameter$1.Ltigerpython_parser_ast_AstNode$NameParameter__f_annotation;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$NameParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$NameParameter)))
}
const $d_Ltigerpython_parser_ast_AstNode$NameParameter = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$NameParameter: 0
}, false, "tigerpython.parser.ast.AstNode$NameParameter", {
  Ltigerpython_parser_ast_AstNode$NameParameter: 1,
  Ltigerpython_parser_ast_AstNode$Parameter: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$NameParameter.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$NameParameter;
class $c_Ltigerpython_parser_ast_AstNode$NameTuple extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, names) {
    super();
    this.Ltigerpython_parser_ast_AstNode$NameTuple__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$NameTuple__f_names = null;
    this.Ltigerpython_parser_ast_AstNode$NameTuple__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$NameTuple__f_names = names;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_TUPLE)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$NameTuple__f_pos
  };
  isValidAssignTarget__Z() {
    return true
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$NameTuple__f_names);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "NameTuple"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$NameTuple__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$NameTuple__f_names;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("NameTuple");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$NameTuple__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$NameTuple__f_names;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$NameTuple)) {
      const NameTuple$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$NameTuple__f_pos === NameTuple$1.Ltigerpython_parser_ast_AstNode$NameTuple__f_pos) && (this.Ltigerpython_parser_ast_AstNode$NameTuple__f_names === NameTuple$1.Ltigerpython_parser_ast_AstNode$NameTuple__f_names))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$NameTuple(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$NameTuple)))
}
const $d_Ltigerpython_parser_ast_AstNode$NameTuple = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$NameTuple: 0
}, false, "tigerpython.parser.ast.AstNode$NameTuple", {
  Ltigerpython_parser_ast_AstNode$NameTuple: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$NameTuple.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$NameTuple;
class $c_Ltigerpython_parser_ast_AstNode$NonLocal extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, names) {
    super();
    this.Ltigerpython_parser_ast_AstNode$NonLocal__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$NonLocal__f_names = null;
    this.Ltigerpython_parser_ast_AstNode$NonLocal__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$NonLocal__f_names = names;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_NON_LOCAL)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$NonLocal__f_pos
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$NonLocal__f_names);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("NonLocal(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "NonLocal"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$NonLocal__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$NonLocal__f_names;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("NonLocal");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$NonLocal__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$NonLocal__f_names;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$NonLocal)) {
      const NonLocal$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$NonLocal__f_pos === NonLocal$1.Ltigerpython_parser_ast_AstNode$NonLocal__f_pos) && (this.Ltigerpython_parser_ast_AstNode$NonLocal__f_names === NonLocal$1.Ltigerpython_parser_ast_AstNode$NonLocal__f_names))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$NonLocal(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$NonLocal)))
}
const $d_Ltigerpython_parser_ast_AstNode$NonLocal = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$NonLocal: 0
}, false, "tigerpython.parser.ast.AstNode$NonLocal", {
  Ltigerpython_parser_ast_AstNode$NonLocal: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$NonLocal.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$NonLocal;
class $c_Ltigerpython_parser_ast_AstNode$Nothing extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Nothing__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Nothing__f_pos = pos;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_NOTHING)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Nothing__f_pos
  };
  productPrefix__T() {
    return "Nothing"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_ast_AstNode$Nothing__f_pos : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Nothing");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Nothing__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$2, 1)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Nothing)) {
      const Nothing$1 = x$1;
      return (this.Ltigerpython_parser_ast_AstNode$Nothing__f_pos === Nothing$1.Ltigerpython_parser_ast_AstNode$Nothing__f_pos)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Nothing(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Nothing)))
}
const $d_Ltigerpython_parser_ast_AstNode$Nothing = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Nothing: 0
}, false, "tigerpython.parser.ast.AstNode$Nothing", {
  Ltigerpython_parser_ast_AstNode$Nothing: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Nothing.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Nothing;
class $c_Ltigerpython_parser_ast_AstNode$Pass extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Pass__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Pass__f_pos = pos;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_PASS)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Pass__f_pos
  };
  productPrefix__T() {
    return "Pass"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.Ltigerpython_parser_ast_AstNode$Pass__f_pos : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Pass");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Pass__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$2, 1)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Pass)) {
      const Pass$1 = x$1;
      return (this.Ltigerpython_parser_ast_AstNode$Pass__f_pos === Pass$1.Ltigerpython_parser_ast_AstNode$Pass__f_pos)
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Pass(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Pass)))
}
const $d_Ltigerpython_parser_ast_AstNode$Pass = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Pass: 0
}, false, "tigerpython.parser.ast.AstNode$Pass", {
  Ltigerpython_parser_ast_AstNode$Pass: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Pass.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Pass;
class $c_Ltigerpython_parser_ast_AstNode$Print extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, dest, values, newline) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Print__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Print__f_dest = null;
    this.Ltigerpython_parser_ast_AstNode$Print__f_values = null;
    this.Ltigerpython_parser_ast_AstNode$Print__f_newline = false;
    this.Ltigerpython_parser_ast_AstNode$Print__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Print__f_dest = dest;
    this.Ltigerpython_parser_ast_AstNode$Print__f_values = values;
    this.Ltigerpython_parser_ast_AstNode$Print__f_newline = newline;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_PRINT_2)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Print__f_pos
  };
  toString__T() {
    if ((this.Ltigerpython_parser_ast_AstNode$Print__f_dest !== null)) {
      const $$x2 = $m_sc_StringOps$();
      const $$x1 = this.Ltigerpython_parser_ast_AstNode$Print__f_dest.toString__T();
      const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Print__f_values);
      const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", ""), this.Ltigerpython_parser_ast_AstNode$Print__f_newline];
      return $$x2.format$extension__T__sci_Seq__T("print >>(%s) %s nl:%b", new $c_sjsr_WrappedVarArgs(array))
    } else {
      const $$x3 = $m_sc_StringOps$();
      const this$7 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Print__f_values);
      const array$1 = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$7, "", ", ", ""), this.Ltigerpython_parser_ast_AstNode$Print__f_newline];
      return $$x3.format$extension__T__sci_Seq__T("print %s nl:%b", new $c_sjsr_WrappedVarArgs(array$1))
    }
  };
  productPrefix__T() {
    return "Print"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Print__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Print__f_dest;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Print__f_values;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Print__f_newline;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Print");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Print__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Print__f_dest;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Print__f_values;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const data$4 = (this.Ltigerpython_parser_ast_AstNode$Print__f_newline ? 1231 : 1237);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Print)) {
      const Print$1 = x$1;
      let $$x1;
      if (((this.Ltigerpython_parser_ast_AstNode$Print__f_pos === Print$1.Ltigerpython_parser_ast_AstNode$Print__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Print__f_newline === Print$1.Ltigerpython_parser_ast_AstNode$Print__f_newline))) {
        const x = this.Ltigerpython_parser_ast_AstNode$Print__f_dest;
        const x$2 = Print$1.Ltigerpython_parser_ast_AstNode$Print__f_dest;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$Print__f_values === Print$1.Ltigerpython_parser_ast_AstNode$Print__f_values)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Print(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Print)))
}
const $d_Ltigerpython_parser_ast_AstNode$Print = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Print: 0
}, false, "tigerpython.parser.ast.AstNode$Print", {
  Ltigerpython_parser_ast_AstNode$Print: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Print.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Print;
class $c_Ltigerpython_parser_ast_AstNode$Raise2 extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, exType, inst, tBack) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_exType = null;
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_inst = null;
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack = null;
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_exType = exType;
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_inst = inst;
    this.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack = tBack;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_RAISE_2)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Raise2__f_pos
  };
  productPrefix__T() {
    return "Raise2"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Raise2__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Raise2__f_exType;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Raise2__f_inst;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Raise2");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Raise2__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Raise2__f_exType;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Raise2__f_inst;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Raise2)) {
      const Raise2$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$Raise2__f_pos === Raise2$1.Ltigerpython_parser_ast_AstNode$Raise2__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Raise2__f_exType;
        const x$2 = Raise2$1.Ltigerpython_parser_ast_AstNode$Raise2__f_exType;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Raise2__f_inst;
        const x$4 = Raise2$1.Ltigerpython_parser_ast_AstNode$Raise2__f_inst;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack;
        const x$6 = Raise2$1.Ltigerpython_parser_ast_AstNode$Raise2__f_tBack;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Raise2(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Raise2)))
}
const $d_Ltigerpython_parser_ast_AstNode$Raise2 = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Raise2: 0
}, false, "tigerpython.parser.ast.AstNode$Raise2", {
  Ltigerpython_parser_ast_AstNode$Raise2: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Raise2.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Raise2;
class $c_Ltigerpython_parser_ast_AstNode$Raise3 extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, ex, cause) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Raise3__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Raise3__f_ex = null;
    this.Ltigerpython_parser_ast_AstNode$Raise3__f_cause = null;
    this.Ltigerpython_parser_ast_AstNode$Raise3__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Raise3__f_ex = ex;
    this.Ltigerpython_parser_ast_AstNode$Raise3__f_cause = cause;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_RAISE)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Raise3__f_pos
  };
  productPrefix__T() {
    return "Raise3"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Raise3__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Raise3__f_ex;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Raise3__f_cause;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Raise3");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Raise3__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Raise3__f_ex;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Raise3__f_cause;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Raise3)) {
      const Raise3$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$Raise3__f_pos === Raise3$1.Ltigerpython_parser_ast_AstNode$Raise3__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Raise3__f_ex;
        const x$2 = Raise3$1.Ltigerpython_parser_ast_AstNode$Raise3__f_ex;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Raise3__f_cause;
        const x$4 = Raise3$1.Ltigerpython_parser_ast_AstNode$Raise3__f_cause;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Raise3(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Raise3)))
}
const $d_Ltigerpython_parser_ast_AstNode$Raise3 = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Raise3: 0
}, false, "tigerpython.parser.ast.AstNode$Raise3", {
  Ltigerpython_parser_ast_AstNode$Raise3: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Raise3.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Raise3;
class $c_Ltigerpython_parser_ast_AstNode$Return extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, value) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Return__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Return__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$Return__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Return__f_value = value;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_RETURN)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Return__f_pos
  };
  productPrefix__T() {
    return "Return"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Return__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Return__f_value;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Return");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Return__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Return__f_value;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Return)) {
      const Return$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$Return__f_pos === Return$1.Ltigerpython_parser_ast_AstNode$Return__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Return__f_value;
        const x$2 = Return$1.Ltigerpython_parser_ast_AstNode$Return__f_value;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Return(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Return)))
}
const $d_Ltigerpython_parser_ast_AstNode$Return = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Return: 0
}, false, "tigerpython.parser.ast.AstNode$Return", {
  Ltigerpython_parser_ast_AstNode$Return: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Return.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Return;
class $c_Ltigerpython_parser_ast_AstNode$SetComp extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, elements, generators) {
    super();
    this.Ltigerpython_parser_ast_AstNode$SetComp__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$SetComp__f_elements = null;
    this.Ltigerpython_parser_ast_AstNode$SetComp__f_generators = null;
    this.Ltigerpython_parser_ast_AstNode$SetComp__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$SetComp__f_elements = elements;
    this.Ltigerpython_parser_ast_AstNode$SetComp__f_generators = generators;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_SET_COMP)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$SetComp__f_pos
  };
  toString__T() {
    const $$x2 = $m_sc_StringOps$();
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$SetComp__f_elements.toString__T();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$SetComp__f_generators);
    const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x2.format$extension__T__sci_Seq__T("SetComp(%s, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "SetComp"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$SetComp__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$SetComp__f_elements;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$SetComp__f_generators;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("SetComp");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$SetComp__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$SetComp__f_elements;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$SetComp__f_generators;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$SetComp)) {
      const SetComp$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$SetComp__f_pos === SetComp$1.Ltigerpython_parser_ast_AstNode$SetComp__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$SetComp__f_elements;
        const x$2 = SetComp$1.Ltigerpython_parser_ast_AstNode$SetComp__f_elements;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$SetComp__f_generators === SetComp$1.Ltigerpython_parser_ast_AstNode$SetComp__f_generators)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$SetComp(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$SetComp)))
}
const $d_Ltigerpython_parser_ast_AstNode$SetComp = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$SetComp: 0
}, false, "tigerpython.parser.ast.AstNode$SetComp", {
  Ltigerpython_parser_ast_AstNode$SetComp: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$SetComp.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$SetComp;
class $c_Ltigerpython_parser_ast_AstNode$SliceRange extends $c_Ltigerpython_parser_ast_AstNode$Slice {
  constructor(pos, lower, upper, step) {
    super();
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower = null;
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper = null;
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_step = null;
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower = lower;
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper = upper;
    this.Ltigerpython_parser_ast_AstNode$SliceRange__f_step = step;
    $ct_Ltigerpython_parser_ast_AstNode$Slice__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_SLICE)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$SliceRange__f_pos
  };
  productPrefix__T() {
    return "SliceRange"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$SliceRange__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$SliceRange__f_step;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("SliceRange");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$SliceRange__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$SliceRange__f_step;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$SliceRange)) {
      const SliceRange$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$SliceRange__f_pos === SliceRange$1.Ltigerpython_parser_ast_AstNode$SliceRange__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower;
        const x$2 = SliceRange$1.Ltigerpython_parser_ast_AstNode$SliceRange__f_lower;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper;
        const x$4 = SliceRange$1.Ltigerpython_parser_ast_AstNode$SliceRange__f_upper;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$SliceRange__f_step;
        const x$6 = SliceRange$1.Ltigerpython_parser_ast_AstNode$SliceRange__f_step;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$SliceRange(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$SliceRange)))
}
const $d_Ltigerpython_parser_ast_AstNode$SliceRange = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$SliceRange: 0
}, false, "tigerpython.parser.ast.AstNode$SliceRange", {
  Ltigerpython_parser_ast_AstNode$SliceRange: 1,
  Ltigerpython_parser_ast_AstNode$Slice: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$SliceRange.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$SliceRange;
class $c_Ltigerpython_parser_ast_AstNode$Suite extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, statements) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Suite__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Suite__f_statements = null;
    this.Ltigerpython_parser_ast_AstNode$Suite__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Suite__f_statements = statements;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_NOTHING)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Suite__f_pos
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Suite__f_statements);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", "; ", "")];
    return $$x1.format$extension__T__sci_Seq__T("Suite({%s})", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Suite"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Suite__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Suite");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Suite__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Suite__f_statements;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Suite)) {
      const Suite$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$Suite__f_pos === Suite$1.Ltigerpython_parser_ast_AstNode$Suite__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Suite__f_statements === Suite$1.Ltigerpython_parser_ast_AstNode$Suite__f_statements))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Suite(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Suite)))
}
const $d_Ltigerpython_parser_ast_AstNode$Suite = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Suite: 0
}, false, "tigerpython.parser.ast.AstNode$Suite", {
  Ltigerpython_parser_ast_AstNode$Suite: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Suite.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Suite;
class $c_Ltigerpython_parser_ast_AstNode$TupleParameter extends $c_Ltigerpython_parser_ast_AstNode$Parameter {
  constructor(pos, tuple) {
    super();
    this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_tuple = null;
    this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_tuple = tuple
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_pos
  };
  productPrefix__T() {
    return "TupleParameter"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_tuple;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("TupleParameter");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_tuple;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$TupleParameter)) {
      const TupleParameter$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_pos === TupleParameter$1.Ltigerpython_parser_ast_AstNode$TupleParameter__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$TupleParameter__f_tuple;
        const x$2 = TupleParameter$1.Ltigerpython_parser_ast_AstNode$TupleParameter__f_tuple;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$TupleParameter(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$TupleParameter)))
}
const $d_Ltigerpython_parser_ast_AstNode$TupleParameter = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$TupleParameter: 0
}, false, "tigerpython.parser.ast.AstNode$TupleParameter", {
  Ltigerpython_parser_ast_AstNode$TupleParameter: 1,
  Ltigerpython_parser_ast_AstNode$Parameter: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$TupleParameter.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$TupleParameter;
class $c_Ltigerpython_parser_ast_AstNode$Value extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, valueType) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Value__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Value__f_valueType = null;
    this.Ltigerpython_parser_ast_AstNode$Value__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$Value__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Value__f_valueType = valueType;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_CONSTANT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Value__f_pos
  };
  isZero__Z() {
    let $$x1;
    if (((this.Ltigerpython_parser_ast_AstNode$Value__f_value !== null) && (this.Ltigerpython_parser_ast_AstNode$Value__f_value !== ""))) {
      const x = this.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
      const x$2 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_INTEGER;
      if (((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))) {
        $$x1 = true
      } else {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
        const x$4 = $m_Ltigerpython_parser_ast_ValueType$().Ltigerpython_parser_ast_ValueType$__f_FLOAT;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      }
    } else {
      $$x1 = false
    };
    if ($$x1) {
      const x$1 = this.Ltigerpython_parser_ast_AstNode$Value__f_value;
      return ($fround($m_jl_Double$().parseDouble__T__D(x$1)) === 0.0)
    } else {
      return false
    }
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const array = [this.Ltigerpython_parser_ast_AstNode$Value__f_valueType.toString__T()];
    return $$x1.format$extension__T__sci_Seq__T("<%s>", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Value"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Value__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Value");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Value__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Value)) {
      const Value$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$Value__f_pos === Value$1.Ltigerpython_parser_ast_AstNode$Value__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
        const x$2 = Value$1.Ltigerpython_parser_ast_AstNode$Value__f_valueType;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Value(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Value)))
}
const $d_Ltigerpython_parser_ast_AstNode$Value = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Value: 0
}, false, "tigerpython.parser.ast.AstNode$Value", {
  Ltigerpython_parser_ast_AstNode$Value: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Value.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Value;
class $c_Ltigerpython_parser_ast_AstNode$YieldFrom extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, source) {
    super();
    this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source = null;
    this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source = source;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_YIELD_FROM)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_pos
  };
  productPrefix__T() {
    return "YieldFrom"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("YieldFrom");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$YieldFrom)) {
      const YieldFrom$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_pos === YieldFrom$1.Ltigerpython_parser_ast_AstNode$YieldFrom__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source;
        const x$2 = YieldFrom$1.Ltigerpython_parser_ast_AstNode$YieldFrom__f_source;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$YieldFrom(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$YieldFrom)))
}
const $d_Ltigerpython_parser_ast_AstNode$YieldFrom = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$YieldFrom: 0
}, false, "tigerpython.parser.ast.AstNode$YieldFrom", {
  Ltigerpython_parser_ast_AstNode$YieldFrom: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$YieldFrom.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$YieldFrom;
class $c_Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator extends $c_O {
  constructor(source) {
    super();
    this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source = null;
    this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index = 0;
    this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source = source;
    this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index = 0
  };
  buffered__sc_BufferedIterator() {
    return this
  };
  iterator__sc_Iterator() {
    return this
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  hasNext__Z() {
    return (this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index < this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source.length__I())
  };
  head__O() {
    return ((this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index < this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source.length__I()) ? this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source.apply__I__O(this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index) : null)
  };
  next__O() {
    if ((this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index < this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source.length__I())) {
      const result = this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source.apply__I__O(this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index);
      this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index = ((1 + this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index) | 0);
      return result
    } else {
      return null
    }
  };
  peek__I__O(index) {
    const idx = ((this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f__index + index) | 0);
    return (((idx >= 0) && (idx < this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source.length__I())) ? this.Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator__f_source.apply__I__O(idx) : null)
  };
}
const $d_Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator = new $TypeData().initClass({
  Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator: 0
}, false, "tigerpython.parser.parsing.ExtBufferedIterator$SequenceIterator", {
  Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator: 1,
  O: 1,
  Ltigerpython_parser_parsing_ExtBufferedIterator: 1,
  sc_BufferedIterator: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1
});
$c_Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator.prototype.$classData = $d_Ltigerpython_parser_parsing_ExtBufferedIterator$SequenceIterator;
class $c_ju_DuplicateFormatFlagsException extends $c_ju_IllegalFormatException {
  constructor(f) {
    super();
    this.ju_DuplicateFormatFlagsException__f_f = null;
    this.ju_DuplicateFormatFlagsException__f_f = f;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true);
    if ((f === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  getMessage__T() {
    return (("Flags = '" + this.ju_DuplicateFormatFlagsException__f_f) + "'")
  };
}
const $d_ju_DuplicateFormatFlagsException = new $TypeData().initClass({
  ju_DuplicateFormatFlagsException: 0
}, false, "java.util.DuplicateFormatFlagsException", {
  ju_DuplicateFormatFlagsException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_DuplicateFormatFlagsException.prototype.$classData = $d_ju_DuplicateFormatFlagsException;
class $c_ju_FormatFlagsConversionMismatchException extends $c_ju_IllegalFormatException {
  constructor(f, c) {
    super();
    this.ju_FormatFlagsConversionMismatchException__f_f = null;
    this.ju_FormatFlagsConversionMismatchException__f_c = 0;
    this.ju_FormatFlagsConversionMismatchException__f_f = f;
    this.ju_FormatFlagsConversionMismatchException__f_c = c;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true);
    if ((f === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  getMessage__T() {
    return ((("Conversion = " + $bC(this.ju_FormatFlagsConversionMismatchException__f_c)) + ", Flags = ") + this.ju_FormatFlagsConversionMismatchException__f_f)
  };
}
const $d_ju_FormatFlagsConversionMismatchException = new $TypeData().initClass({
  ju_FormatFlagsConversionMismatchException: 0
}, false, "java.util.FormatFlagsConversionMismatchException", {
  ju_FormatFlagsConversionMismatchException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_FormatFlagsConversionMismatchException.prototype.$classData = $d_ju_FormatFlagsConversionMismatchException;
class $c_ju_IllegalFormatCodePointException extends $c_ju_IllegalFormatException {
  constructor(c) {
    super();
    this.ju_IllegalFormatCodePointException__f_c = 0;
    this.ju_IllegalFormatCodePointException__f_c = c;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
  getMessage__T() {
    const i = this.ju_IllegalFormatCodePointException__f_c;
    return ("Code point = 0x" + (+(i >>> 0)).toString(16))
  };
}
const $d_ju_IllegalFormatCodePointException = new $TypeData().initClass({
  ju_IllegalFormatCodePointException: 0
}, false, "java.util.IllegalFormatCodePointException", {
  ju_IllegalFormatCodePointException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_IllegalFormatCodePointException.prototype.$classData = $d_ju_IllegalFormatCodePointException;
class $c_ju_IllegalFormatConversionException extends $c_ju_IllegalFormatException {
  constructor(c, arg) {
    super();
    this.ju_IllegalFormatConversionException__f_c = 0;
    this.ju_IllegalFormatConversionException__f_arg = null;
    this.ju_IllegalFormatConversionException__f_c = c;
    this.ju_IllegalFormatConversionException__f_arg = arg;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true);
    if ((arg === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  getMessage__T() {
    const this$1 = this.ju_IllegalFormatConversionException__f_c;
    return ((String.fromCharCode(this$1) + " != ") + this.ju_IllegalFormatConversionException__f_arg.getName__T())
  };
}
const $d_ju_IllegalFormatConversionException = new $TypeData().initClass({
  ju_IllegalFormatConversionException: 0
}, false, "java.util.IllegalFormatConversionException", {
  ju_IllegalFormatConversionException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_IllegalFormatConversionException.prototype.$classData = $d_ju_IllegalFormatConversionException;
class $c_ju_IllegalFormatFlagsException extends $c_ju_IllegalFormatException {
  constructor(f) {
    super();
    this.ju_IllegalFormatFlagsException__f_f = null;
    this.ju_IllegalFormatFlagsException__f_f = f;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true);
    if ((f === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  getMessage__T() {
    return (("Flags = '" + this.ju_IllegalFormatFlagsException__f_f) + "'")
  };
}
const $d_ju_IllegalFormatFlagsException = new $TypeData().initClass({
  ju_IllegalFormatFlagsException: 0
}, false, "java.util.IllegalFormatFlagsException", {
  ju_IllegalFormatFlagsException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_IllegalFormatFlagsException.prototype.$classData = $d_ju_IllegalFormatFlagsException;
class $c_ju_IllegalFormatPrecisionException extends $c_ju_IllegalFormatException {
  constructor(p) {
    super();
    this.ju_IllegalFormatPrecisionException__f_p = 0;
    this.ju_IllegalFormatPrecisionException__f_p = p;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
  getMessage__T() {
    const i = this.ju_IllegalFormatPrecisionException__f_p;
    return ("" + i)
  };
}
const $d_ju_IllegalFormatPrecisionException = new $TypeData().initClass({
  ju_IllegalFormatPrecisionException: 0
}, false, "java.util.IllegalFormatPrecisionException", {
  ju_IllegalFormatPrecisionException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_IllegalFormatPrecisionException.prototype.$classData = $d_ju_IllegalFormatPrecisionException;
class $c_ju_IllegalFormatWidthException extends $c_ju_IllegalFormatException {
  constructor(w) {
    super();
    this.ju_IllegalFormatWidthException__f_w = 0;
    this.ju_IllegalFormatWidthException__f_w = w;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
  getMessage__T() {
    const i = this.ju_IllegalFormatWidthException__f_w;
    return ("" + i)
  };
}
const $d_ju_IllegalFormatWidthException = new $TypeData().initClass({
  ju_IllegalFormatWidthException: 0
}, false, "java.util.IllegalFormatWidthException", {
  ju_IllegalFormatWidthException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_IllegalFormatWidthException.prototype.$classData = $d_ju_IllegalFormatWidthException;
class $c_ju_MissingFormatArgumentException extends $c_ju_IllegalFormatException {
  constructor(s) {
    super();
    this.ju_MissingFormatArgumentException__f_s = null;
    this.ju_MissingFormatArgumentException__f_s = s;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true);
    if ((s === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  getMessage__T() {
    return (("Format specifier '" + this.ju_MissingFormatArgumentException__f_s) + "'")
  };
}
function $isArrayOf_ju_MissingFormatArgumentException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.ju_MissingFormatArgumentException)))
}
const $d_ju_MissingFormatArgumentException = new $TypeData().initClass({
  ju_MissingFormatArgumentException: 0
}, false, "java.util.MissingFormatArgumentException", {
  ju_MissingFormatArgumentException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_MissingFormatArgumentException.prototype.$classData = $d_ju_MissingFormatArgumentException;
class $c_ju_MissingFormatWidthException extends $c_ju_IllegalFormatException {
  constructor(s) {
    super();
    this.ju_MissingFormatWidthException__f_s = null;
    this.ju_MissingFormatWidthException__f_s = s;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true);
    if ((s === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  getMessage__T() {
    return this.ju_MissingFormatWidthException__f_s
  };
}
const $d_ju_MissingFormatWidthException = new $TypeData().initClass({
  ju_MissingFormatWidthException: 0
}, false, "java.util.MissingFormatWidthException", {
  ju_MissingFormatWidthException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_MissingFormatWidthException.prototype.$classData = $d_ju_MissingFormatWidthException;
class $c_ju_UnknownFormatConversionException extends $c_ju_IllegalFormatException {
  constructor(s) {
    super();
    this.ju_UnknownFormatConversionException__f_s = null;
    this.ju_UnknownFormatConversionException__f_s = s;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true);
    if ((s === null)) {
      throw $ct_jl_NullPointerException__(new $c_jl_NullPointerException())
    }
  };
  getMessage__T() {
    return (("Conversion = '" + this.ju_UnknownFormatConversionException__f_s) + "'")
  };
}
const $d_ju_UnknownFormatConversionException = new $TypeData().initClass({
  ju_UnknownFormatConversionException: 0
}, false, "java.util.UnknownFormatConversionException", {
  ju_UnknownFormatConversionException: 1,
  ju_IllegalFormatException: 1,
  jl_IllegalArgumentException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1
});
$c_ju_UnknownFormatConversionException.prototype.$classData = $d_ju_UnknownFormatConversionException;
class $c_T2$mcII$sp extends $c_T2 {
  constructor(_1$mcI$sp, _2$mcI$sp) {
    super();
    this.T2$mcII$sp__f__1$mcI$sp = 0;
    this.T2$mcII$sp__f__2$mcI$sp = 0;
    this.T2$mcII$sp__f__1$mcI$sp = _1$mcI$sp;
    this.T2$mcII$sp__f__2$mcI$sp = _2$mcI$sp;
    $ct_T2__O__O__(this, null, null)
  };
  _1$mcI$sp__I() {
    return this.T2$mcII$sp__f__1$mcI$sp
  };
  _2$mcI$sp__I() {
    return this.T2$mcII$sp__f__2$mcI$sp
  };
  _2__O() {
    return this.T2$mcII$sp__f__2$mcI$sp
  };
  _1__O() {
    return this.T2$mcII$sp__f__1$mcI$sp
  };
}
const $d_T2$mcII$sp = new $TypeData().initClass({
  T2$mcII$sp: 0
}, false, "scala.Tuple2$mcII$sp", {
  T2$mcII$sp: 1,
  T2: 1,
  O: 1,
  s_Product2: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1,
  s_Product2$mcII$sp: 1
});
$c_T2$mcII$sp.prototype.$classData = $d_T2$mcII$sp;
class $c_sc_ArrayOps$ArrayIterator$mcB$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcB$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcB$sp__f_xs$mcB$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcB$sp__f_xs$mcB$sp = xs$mcB$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcB$sp)
  };
  next$mcB$sp__B() {
    try {
      const r = this.sc_ArrayOps$ArrayIterator$mcB$sp__f_xs$mcB$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return ($m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O() | 0)
      } else {
        throw e
      }
    }
  };
  next__O() {
    return this.next$mcB$sp__B()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcB$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcB$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcB$sp", {
  sc_ArrayOps$ArrayIterator$mcB$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcB$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcB$sp;
class $c_sc_ArrayOps$ArrayIterator$mcC$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcC$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcC$sp__f_xs$mcC$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcC$sp__f_xs$mcC$sp = xs$mcC$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcC$sp)
  };
  next$mcC$sp__C() {
    try {
      const r = this.sc_ArrayOps$ArrayIterator$mcC$sp__f_xs$mcC$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return $uC($m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O())
      } else {
        throw e
      }
    }
  };
  next__O() {
    return $bC(this.next$mcC$sp__C())
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcC$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcC$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcC$sp", {
  sc_ArrayOps$ArrayIterator$mcC$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcC$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcC$sp;
class $c_sc_ArrayOps$ArrayIterator$mcD$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcD$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcD$sp__f_xs$mcD$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcD$sp__f_xs$mcD$sp = xs$mcD$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcD$sp)
  };
  next$mcD$sp__D() {
    try {
      const r = this.sc_ArrayOps$ArrayIterator$mcD$sp__f_xs$mcD$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return (+$m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O())
      } else {
        throw e
      }
    }
  };
  next__O() {
    return this.next$mcD$sp__D()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcD$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcD$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcD$sp", {
  sc_ArrayOps$ArrayIterator$mcD$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcD$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcD$sp;
class $c_sc_ArrayOps$ArrayIterator$mcF$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcF$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcF$sp__f_xs$mcF$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcF$sp__f_xs$mcF$sp = xs$mcF$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcF$sp)
  };
  next$mcF$sp__F() {
    try {
      const r = this.sc_ArrayOps$ArrayIterator$mcF$sp__f_xs$mcF$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return (+$m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O())
      } else {
        throw e
      }
    }
  };
  next__O() {
    return this.next$mcF$sp__F()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcF$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcF$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcF$sp", {
  sc_ArrayOps$ArrayIterator$mcF$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcF$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcF$sp;
class $c_sc_ArrayOps$ArrayIterator$mcI$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcI$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcI$sp__f_xs$mcI$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcI$sp__f_xs$mcI$sp = xs$mcI$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcI$sp)
  };
  next$mcI$sp__I() {
    try {
      const r = this.sc_ArrayOps$ArrayIterator$mcI$sp__f_xs$mcI$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return ($m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O() | 0)
      } else {
        throw e
      }
    }
  };
  next__O() {
    return this.next$mcI$sp__I()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcI$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcI$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcI$sp", {
  sc_ArrayOps$ArrayIterator$mcI$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcI$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcI$sp;
class $c_sc_ArrayOps$ArrayIterator$mcJ$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcJ$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcJ$sp__f_xs$mcJ$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcJ$sp__f_xs$mcJ$sp = xs$mcJ$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcJ$sp)
  };
  next$mcJ$sp__J() {
    try {
      const t = this.sc_ArrayOps$ArrayIterator$mcJ$sp__f_xs$mcJ$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      const lo = t.RTLong__f_lo;
      const hi = t.RTLong__f_hi;
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return new $c_RTLong(lo, hi)
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return $uJ($m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O())
      } else {
        throw e
      }
    }
  };
  next__O() {
    return this.next$mcJ$sp__J()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcJ$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcJ$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcJ$sp", {
  sc_ArrayOps$ArrayIterator$mcJ$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcJ$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcJ$sp;
class $c_sc_ArrayOps$ArrayIterator$mcS$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcS$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcS$sp__f_xs$mcS$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcS$sp__f_xs$mcS$sp = xs$mcS$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcS$sp)
  };
  next$mcS$sp__S() {
    try {
      const r = this.sc_ArrayOps$ArrayIterator$mcS$sp__f_xs$mcS$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return ($m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O() | 0)
      } else {
        throw e
      }
    }
  };
  next__O() {
    return this.next$mcS$sp__S()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcS$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcS$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcS$sp", {
  sc_ArrayOps$ArrayIterator$mcS$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcS$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcS$sp;
class $c_sc_ArrayOps$ArrayIterator$mcV$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcV$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcV$sp__f_xs$mcV$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcV$sp__f_xs$mcV$sp = xs$mcV$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcV$sp)
  };
  next$mcV$sp__V() {
    try {
      this.sc_ArrayOps$ArrayIterator$mcV$sp__f_xs$mcV$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0)
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()
      } else {
        throw e
      }
    }
  };
  next__O() {
    this.next$mcV$sp__V()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcV$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcV$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcV$sp", {
  sc_ArrayOps$ArrayIterator$mcV$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcV$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcV$sp;
class $c_sc_ArrayOps$ArrayIterator$mcZ$sp extends $c_sc_ArrayOps$ArrayIterator {
  constructor(xs$mcZ$sp) {
    super();
    this.sc_ArrayOps$ArrayIterator$mcZ$sp__f_xs$mcZ$sp = null;
    this.sc_ArrayOps$ArrayIterator$mcZ$sp__f_xs$mcZ$sp = xs$mcZ$sp;
    $ct_sc_ArrayOps$ArrayIterator__O__(this, xs$mcZ$sp)
  };
  next$mcZ$sp__Z() {
    try {
      const r = this.sc_ArrayOps$ArrayIterator$mcZ$sp__f_xs$mcZ$sp.u[this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos];
      this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos = ((1 + this.sc_ArrayOps$ArrayIterator__f_scala$collection$ArrayOps$ArrayIterator$$pos) | 0);
      return r
    } catch (e) {
      if ((e instanceof $c_jl_ArrayIndexOutOfBoundsException)) {
        return (!(!$m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty.next__O()))
      } else {
        throw e
      }
    }
  };
  next__O() {
    return this.next$mcZ$sp__Z()
  };
}
const $d_sc_ArrayOps$ArrayIterator$mcZ$sp = new $TypeData().initClass({
  sc_ArrayOps$ArrayIterator$mcZ$sp: 0
}, false, "scala.collection.ArrayOps$ArrayIterator$mcZ$sp", {
  sc_ArrayOps$ArrayIterator$mcZ$sp: 1,
  sc_ArrayOps$ArrayIterator: 1,
  sc_AbstractIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  Ljava_io_Serializable: 1
});
$c_sc_ArrayOps$ArrayIterator$mcZ$sp.prototype.$classData = $d_sc_ArrayOps$ArrayIterator$mcZ$sp;
const $f_sc_View__toString__T = (function($thiz) {
  return ($thiz.className__T() + "(<not computed>)")
});
function $is_sc_View(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_View)))
}
function $isArrayOf_sc_View(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_View)))
}
class $c_scm_ArrayBuilder$generic extends $c_scm_ArrayBuilder {
  constructor(elementClass) {
    super();
    this.scm_ArrayBuilder$generic__f_elementClass = null;
    this.scm_ArrayBuilder$generic__f_isCharArrayBuilder = false;
    this.scm_ArrayBuilder$generic__f_jsElems = null;
    this.scm_ArrayBuilder$generic__f_elementClass = elementClass;
    $ct_scm_ArrayBuilder__(this);
    this.scm_ArrayBuilder$generic__f_isCharArrayBuilder = (elementClass === $d_C.getClassOf());
    this.scm_ArrayBuilder$generic__f_jsElems = []
  };
  addOne__O__scm_ArrayBuilder$generic(elem) {
    const unboxedElem = (this.scm_ArrayBuilder$generic__f_isCharArrayBuilder ? $uC(elem) : ((elem === null) ? this.scm_ArrayBuilder$generic__f_elementClass.jl_Class__f_data.zero : elem));
    this.scm_ArrayBuilder$generic__f_jsElems.push(unboxedElem);
    return this
  };
  addAll__sc_IterableOnce__scm_ArrayBuilder$generic(xs) {
    const it = xs.iterator__sc_Iterator();
    while (it.hasNext__Z()) {
      const elem = it.next__O();
      this.addOne__O__scm_ArrayBuilder$generic(elem)
    };
    return this
  };
  result__O() {
    const x$2 = this.scm_ArrayBuilder$generic__f_elementClass;
    let elemRuntimeClass;
    if ((x$2 === $d_V.getClassOf())) {
      elemRuntimeClass = $d_jl_Void.getClassOf()
    } else {
      const x$4 = this.scm_ArrayBuilder$generic__f_elementClass;
      let $$x1;
      if ((x$4 === $d_sr_Null$.getClassOf())) {
        $$x1 = true
      } else {
        const x$6 = this.scm_ArrayBuilder$generic__f_elementClass;
        $$x1 = (x$6 === $d_sr_Nothing$.getClassOf())
      };
      if ($$x1) {
        elemRuntimeClass = $d_O.getClassOf()
      } else {
        elemRuntimeClass = this.scm_ArrayBuilder$generic__f_elementClass
      }
    };
    return $makeNativeArrayWrapper(elemRuntimeClass.jl_Class__f_data.getArrayOf(), this.scm_ArrayBuilder$generic__f_jsElems)
  };
  toString__T() {
    return "ArrayBuilder.generic"
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_ArrayBuilder$generic(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__scm_ArrayBuilder$generic(elem)
  };
}
const $d_scm_ArrayBuilder$generic = new $TypeData().initClass({
  scm_ArrayBuilder$generic: 0
}, false, "scala.collection.mutable.ArrayBuilder$generic", {
  scm_ArrayBuilder$generic: 1,
  scm_ArrayBuilder: 1,
  O: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArrayBuilder$generic.prototype.$classData = $d_scm_ArrayBuilder$generic;
const $f_scm_ArrayDequeOps__copySliceToArray__I__O__I__I__O = (function($thiz, srcStart, dest, destStart, maxItems) {
  const until = ((1 + $m_sr_ScalaRunTime$().array_length__O__I(dest)) | 0);
  if (((destStart < 0) || (destStart >= until))) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((destStart + " is out of bounds (min 0, max ") + (((-1) + until) | 0)) + ")"))
  };
  const idx = $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
  const a = ((((($thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + $thiz.scm_ArrayDeque__f_array.u.length) | 0)) - srcStart) | 0);
  const b = (($m_sr_ScalaRunTime$().array_length__O__I(dest) - destStart) | 0);
  const b$1 = ((a < b) ? a : b);
  const toCopy = ((maxItems < b$1) ? maxItems : b$1);
  if ((toCopy > 0)) {
    const idx$1 = $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    const until$1 = ((($thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx$1) | 0) & (((-1) + $thiz.scm_ArrayDeque__f_array.u.length) | 0));
    if (((srcStart < 0) || (srcStart >= until$1))) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((srcStart + " is out of bounds (min 0, max ") + (((-1) + until$1) | 0)) + ")"))
    };
    const startIdx = ((($thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start + srcStart) | 0) & (((-1) + $thiz.scm_ArrayDeque__f_array.u.length) | 0));
    const b$2 = (($thiz.scm_ArrayDeque__f_array.u.length - startIdx) | 0);
    const block1 = ((toCopy < b$2) ? toCopy : b$2);
    $m_s_Array$().copy__O__I__O__I__I__V($thiz.scm_ArrayDeque__f_array, startIdx, dest, destStart, block1);
    const block2 = ((toCopy - block1) | 0);
    if ((block2 > 0)) {
      $m_s_Array$().copy__O__I__O__I__I__V($thiz.scm_ArrayDeque__f_array, 0, dest, ((destStart + block1) | 0), block2)
    }
  };
  return dest
});
function $is_s_math_Integral(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.s_math_Integral)))
}
function $isArrayOf_s_math_Integral(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_math_Integral)))
}
class $c_s_math_Ordering$Boolean$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    const x$1 = (!(!x));
    const y$1 = (!(!y));
    return ((x$1 === y$1) ? 0 : (x$1 ? 1 : (-1)))
  };
}
const $d_s_math_Ordering$Boolean$ = new $TypeData().initClass({
  s_math_Ordering$Boolean$: 0
}, false, "scala.math.Ordering$Boolean$", {
  s_math_Ordering$Boolean$: 1,
  O: 1,
  s_math_Ordering$BooleanOrdering: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$Boolean$.prototype.$classData = $d_s_math_Ordering$Boolean$;
let $n_s_math_Ordering$Boolean$ = (void 0);
function $m_s_math_Ordering$Boolean$() {
  if ((!$n_s_math_Ordering$Boolean$)) {
    $n_s_math_Ordering$Boolean$ = new $c_s_math_Ordering$Boolean$()
  };
  return $n_s_math_Ordering$Boolean$
}
class $c_s_math_Ordering$Byte$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return ((x$1 - y$1) | 0)
  };
}
const $d_s_math_Ordering$Byte$ = new $TypeData().initClass({
  s_math_Ordering$Byte$: 0
}, false, "scala.math.Ordering$Byte$", {
  s_math_Ordering$Byte$: 1,
  O: 1,
  s_math_Ordering$ByteOrdering: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$Byte$.prototype.$classData = $d_s_math_Ordering$Byte$;
let $n_s_math_Ordering$Byte$ = (void 0);
function $m_s_math_Ordering$Byte$() {
  if ((!$n_s_math_Ordering$Byte$)) {
    $n_s_math_Ordering$Byte$ = new $c_s_math_Ordering$Byte$()
  };
  return $n_s_math_Ordering$Byte$
}
class $c_s_math_Ordering$Char$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    const x$1 = $uC(x);
    const y$1 = $uC(y);
    return ((x$1 - y$1) | 0)
  };
}
const $d_s_math_Ordering$Char$ = new $TypeData().initClass({
  s_math_Ordering$Char$: 0
}, false, "scala.math.Ordering$Char$", {
  s_math_Ordering$Char$: 1,
  O: 1,
  s_math_Ordering$CharOrdering: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$Char$.prototype.$classData = $d_s_math_Ordering$Char$;
let $n_s_math_Ordering$Char$ = (void 0);
function $m_s_math_Ordering$Char$() {
  if ((!$n_s_math_Ordering$Char$)) {
    $n_s_math_Ordering$Char$ = new $c_s_math_Ordering$Char$()
  };
  return $n_s_math_Ordering$Char$
}
class $c_s_math_Ordering$Long$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const t$1 = $uJ(y);
    const lo$1 = t$1.RTLong__f_lo;
    const hi$1 = t$1.RTLong__f_hi;
    return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$compare__I__I__I__I__I(lo, hi, lo$1, hi$1)
  };
}
const $d_s_math_Ordering$Long$ = new $TypeData().initClass({
  s_math_Ordering$Long$: 0
}, false, "scala.math.Ordering$Long$", {
  s_math_Ordering$Long$: 1,
  O: 1,
  s_math_Ordering$LongOrdering: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$Long$.prototype.$classData = $d_s_math_Ordering$Long$;
let $n_s_math_Ordering$Long$ = (void 0);
function $m_s_math_Ordering$Long$() {
  if ((!$n_s_math_Ordering$Long$)) {
    $n_s_math_Ordering$Long$ = new $c_s_math_Ordering$Long$()
  };
  return $n_s_math_Ordering$Long$
}
class $c_s_math_Ordering$Short$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  compare__O__O__I(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return ((x$1 - y$1) | 0)
  };
}
const $d_s_math_Ordering$Short$ = new $TypeData().initClass({
  s_math_Ordering$Short$: 0
}, false, "scala.math.Ordering$Short$", {
  s_math_Ordering$Short$: 1,
  O: 1,
  s_math_Ordering$ShortOrdering: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1
});
$c_s_math_Ordering$Short$.prototype.$classData = $d_s_math_Ordering$Short$;
let $n_s_math_Ordering$Short$ = (void 0);
function $m_s_math_Ordering$Short$() {
  if ((!$n_s_math_Ordering$Short$)) {
    $n_s_math_Ordering$Short$ = new $c_s_math_Ordering$Short$()
  };
  return $n_s_math_Ordering$Short$
}
class $c_s_reflect_AnyValManifest extends $c_O {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = null;
    this.s_reflect_AnyValManifest__f_hashCode = 0
  };
  toString__T() {
    return this.s_reflect_AnyValManifest__f_toString
  };
  equals__O__Z(that) {
    return (this === that)
  };
  hashCode__I() {
    return this.s_reflect_AnyValManifest__f_hashCode
  };
}
class $c_s_reflect_ManifestFactory$ClassTypeManifest extends $c_O {
  constructor() {
    super();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_prefix = null;
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_runtimeClass1 = null;
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_typeArguments = null
  };
}
class $c_sjs_js_JavaScriptException extends $c_jl_RuntimeException {
  constructor(exception) {
    super();
    this.sjs_js_JavaScriptException__f_exception = null;
    this.sjs_js_JavaScriptException__f_exception = exception;
    $ct_jl_Throwable__T__jl_Throwable__Z__Z__(this, null, null, true, true)
  };
  getMessage__T() {
    return $dp_toString__T(this.sjs_js_JavaScriptException__f_exception)
  };
  fillInStackTrace__jl_Throwable() {
    this.setStackTraceStateInternal__O__(this.sjs_js_JavaScriptException__f_exception);
    return this
  };
  productPrefix__T() {
    return "JavaScriptException"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.sjs_js_JavaScriptException__f_exception : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_sjs_js_JavaScriptException)) {
      const JavaScriptException$1 = x$1;
      const x = this.sjs_js_JavaScriptException__f_exception;
      const y = JavaScriptException$1.sjs_js_JavaScriptException__f_exception;
      return $m_sr_BoxesRunTime$().equals__O__O__Z(x, y)
    } else {
      return false
    }
  };
  setStackTraceStateInternal__O__(e) {
    this.jl_Throwable__f_stackTraceStateInternal = e
  };
}
function $isArrayOf_sjs_js_JavaScriptException(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sjs_js_JavaScriptException)))
}
const $d_sjs_js_JavaScriptException = new $TypeData().initClass({
  sjs_js_JavaScriptException: 0
}, false, "scala.scalajs.js.JavaScriptException", {
  sjs_js_JavaScriptException: 1,
  jl_RuntimeException: 1,
  jl_Exception: 1,
  jl_Throwable: 1,
  O: 1,
  Ljava_io_Serializable: 1,
  s_Product: 1,
  s_Equals: 1
});
$c_sjs_js_JavaScriptException.prototype.$classData = $d_sjs_js_JavaScriptException;
class $c_Ltigerpython_parser_ast_AstNode$Await extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, expr) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Await__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Await__f_expr = null;
    this.Ltigerpython_parser_ast_AstNode$Await__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Await__f_expr = expr;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_AWAIT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Await__f_pos
  };
  expr__Ltigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$Await__f_expr
  };
  productPrefix__T() {
    return "Await"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Await__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Await__f_expr;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Await");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Await__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Await__f_expr;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Await)) {
      const Await$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$Await__f_pos === Await$1.Ltigerpython_parser_ast_AstNode$Await__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Await__f_expr;
        const x$2 = Await$1.Ltigerpython_parser_ast_AstNode$Await__f_expr;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Await(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Await)))
}
const $d_Ltigerpython_parser_ast_AstNode$Await = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Await: 0
}, false, "tigerpython.parser.ast.AstNode$Await", {
  Ltigerpython_parser_ast_AstNode$Await: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$ExprWrapper: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Await.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Await;
class $c_Ltigerpython_parser_ast_AstNode$BinaryOp extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, op, left, right) {
    super();
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op = null;
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left = null;
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right = null;
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op = op;
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left = left;
    this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right = right;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_BIN_OP)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos
  };
  endPos__I() {
    const x1 = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
    return ((x1 === null) ? this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos : ($is_Ltigerpython_parser_ast_AstNode$Span(x1) ? x1.endPos__I() : x1.pos__I()))
  };
  toString__T() {
    try {
      const l = ((this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left !== null) ? this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left.toString__T() : "?");
      const r = ((this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right !== null) ? this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right.toString__T() : "?");
      const $$x1 = $m_sc_StringOps$();
      const array = [l, this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op.toString__T(), r];
      return $$x1.format$extension__T__sci_Seq__T("%s %s %s", new $c_sjsr_WrappedVarArgs(array))
    } catch (e) {
      const e$2 = $m_sjsr_package$().wrapJavaScriptException__O__jl_Throwable(e);
      if ((e$2 !== null)) {
        return $c_O.prototype.toString__T.call(this)
      } else {
        throw e
      }
    }
  };
  productPrefix__T() {
    return "BinaryOp"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("BinaryOp");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$BinaryOp)) {
      const BinaryOp$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos === BinaryOp$1.Ltigerpython_parser_ast_AstNode$BinaryOp__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
        const x$2 = BinaryOp$1.Ltigerpython_parser_ast_AstNode$BinaryOp__f_op;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
        const x$4 = BinaryOp$1.Ltigerpython_parser_ast_AstNode$BinaryOp__f_left;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
        const x$6 = BinaryOp$1.Ltigerpython_parser_ast_AstNode$BinaryOp__f_right;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$BinaryOp(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$BinaryOp)))
}
const $d_Ltigerpython_parser_ast_AstNode$BinaryOp = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$BinaryOp: 0
}, false, "tigerpython.parser.ast.AstNode$BinaryOp", {
  Ltigerpython_parser_ast_AstNode$BinaryOp: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$BinaryOp.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$BinaryOp;
class $c_Ltigerpython_parser_ast_AstNode$Call extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, endPos, function$1, args, keywords, starArg, kwArg) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Call__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Call__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$Call__f_function = null;
    this.Ltigerpython_parser_ast_AstNode$Call__f_args = null;
    this.Ltigerpython_parser_ast_AstNode$Call__f_keywords = null;
    this.Ltigerpython_parser_ast_AstNode$Call__f_starArg = null;
    this.Ltigerpython_parser_ast_AstNode$Call__f_kwArg = null;
    this.Ltigerpython_parser_ast_AstNode$Call__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Call__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$Call__f_function = function$1;
    this.Ltigerpython_parser_ast_AstNode$Call__f_args = args;
    this.Ltigerpython_parser_ast_AstNode$Call__f_keywords = keywords;
    this.Ltigerpython_parser_ast_AstNode$Call__f_starArg = starArg;
    this.Ltigerpython_parser_ast_AstNode$Call__f_kwArg = kwArg;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_CALL)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Call__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Call__f_endPos
  };
  getFirstArgAsName__T() {
    const xs = this.Ltigerpython_parser_ast_AstNode$Call__f_args;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_ast_AstNode$Call__f_args;
      const x1 = $$x1.head$extension__O__O(xs$1);
      if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
        const x2 = x1;
        const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
        return name
      } else {
        return null
      }
    } else {
      return null
    }
  };
  getFunctionName__T() {
    const x1 = this.Ltigerpython_parser_ast_AstNode$Call__f_function;
    if ((x1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const x2 = x1;
      const name = x2.Ltigerpython_parser_ast_AstNode$Name__f_name;
      return name
    } else {
      return null
    }
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const array = [this.Ltigerpython_parser_ast_AstNode$Call__f_pos, this.Ltigerpython_parser_ast_AstNode$Call__f_function, $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__O__T(this.Ltigerpython_parser_ast_AstNode$Call__f_args), $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__O__T(this.Ltigerpython_parser_ast_AstNode$Call__f_keywords), $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$Call__f_starArg), $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$Call__f_kwArg)];
    return $$x1.format$extension__T__sci_Seq__T("Call(%d, %s, args: %s, kw: %s, %s, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Call"
  };
  productArity__I() {
    return 7
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Call__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Call__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Call__f_function;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Call__f_args;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$Call__f_keywords;
        break
      }
      case 5: {
        return this.Ltigerpython_parser_ast_AstNode$Call__f_starArg;
        break
      }
      case 6: {
        return this.Ltigerpython_parser_ast_AstNode$Call__f_kwArg;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Call");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Call__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$Call__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Call__f_function;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Call__f_args;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$Call__f_keywords;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    const x$3 = this.Ltigerpython_parser_ast_AstNode$Call__f_starArg;
    const data$6 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$6, data$6);
    const hash$7 = acc;
    const x$4 = this.Ltigerpython_parser_ast_AstNode$Call__f_kwArg;
    const data$7 = $m_sr_Statics$().anyHash__O__I(x$4);
    acc = $m_sr_Statics$().mix__I__I__I(hash$7, data$7);
    const hash$8 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$8, 7)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Call)) {
      const Call$1 = x$1;
      let $$x2;
      if (((this.Ltigerpython_parser_ast_AstNode$Call__f_pos === Call$1.Ltigerpython_parser_ast_AstNode$Call__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Call__f_endPos === Call$1.Ltigerpython_parser_ast_AstNode$Call__f_endPos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$Call__f_function;
        const x$2 = Call$1.Ltigerpython_parser_ast_AstNode$Call__f_function;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ((($$x2 && (this.Ltigerpython_parser_ast_AstNode$Call__f_args === Call$1.Ltigerpython_parser_ast_AstNode$Call__f_args)) && (this.Ltigerpython_parser_ast_AstNode$Call__f_keywords === Call$1.Ltigerpython_parser_ast_AstNode$Call__f_keywords))) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Call__f_starArg;
        const x$4 = Call$1.Ltigerpython_parser_ast_AstNode$Call__f_starArg;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$Call__f_kwArg;
        const x$6 = Call$1.Ltigerpython_parser_ast_AstNode$Call__f_kwArg;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Call(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Call)))
}
const $d_Ltigerpython_parser_ast_AstNode$Call = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Call: 0
}, false, "tigerpython.parser.ast.AstNode$Call", {
  Ltigerpython_parser_ast_AstNode$Call: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Call.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Call;
class $c_Ltigerpython_parser_ast_AstNode$Dict extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, endPos, keys, values) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Dict__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Dict__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$Dict__f_keys = null;
    this.Ltigerpython_parser_ast_AstNode$Dict__f_values = null;
    this.Ltigerpython_parser_ast_AstNode$Dict__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Dict__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$Dict__f_keys = keys;
    this.Ltigerpython_parser_ast_AstNode$Dict__f_values = values;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_DICT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Dict__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Dict__f_endPos
  };
  toString__T() {
    const $$x2 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Dict__f_keys);
    const $$x1 = $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "");
    const this$3 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Dict__f_values);
    const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$3, "", ", ", "")];
    return $$x2.format$extension__T__sci_Seq__T("Dict(keys: %s; values: %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Dict"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Dict__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Dict__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Dict__f_keys;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Dict__f_values;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Dict");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Dict__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$Dict__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Dict__f_keys;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Dict__f_values;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Dict)) {
      const Dict$1 = x$1;
      return ((((this.Ltigerpython_parser_ast_AstNode$Dict__f_pos === Dict$1.Ltigerpython_parser_ast_AstNode$Dict__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Dict__f_endPos === Dict$1.Ltigerpython_parser_ast_AstNode$Dict__f_endPos)) && (this.Ltigerpython_parser_ast_AstNode$Dict__f_keys === Dict$1.Ltigerpython_parser_ast_AstNode$Dict__f_keys)) && (this.Ltigerpython_parser_ast_AstNode$Dict__f_values === Dict$1.Ltigerpython_parser_ast_AstNode$Dict__f_values))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Dict(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Dict)))
}
const $d_Ltigerpython_parser_ast_AstNode$Dict = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Dict: 0
}, false, "tigerpython.parser.ast.AstNode$Dict", {
  Ltigerpython_parser_ast_AstNode$Dict: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Dict.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Dict;
class $c_Ltigerpython_parser_ast_AstNode$DictComp extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, endPos, key, value, generators) {
    super();
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_key = null;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_generators = null;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_key = key;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_value = value;
    this.Ltigerpython_parser_ast_AstNode$DictComp__f_generators = generators;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_DICT_COMP)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$DictComp__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$DictComp__f_endPos
  };
  toString__T() {
    const $$x3 = $m_sc_StringOps$();
    const $$x2 = this.Ltigerpython_parser_ast_AstNode$DictComp__f_key.toString__T();
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$DictComp__f_value.toString__T();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$DictComp__f_generators);
    const array = [$$x2, $$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x3.format$extension__T__sci_Seq__T("DictComp(%s:%s, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "DictComp"
  };
  productArity__I() {
    return 5
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$DictComp__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$DictComp__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$DictComp__f_key;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$DictComp__f_value;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$DictComp__f_generators;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("DictComp");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$DictComp__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$DictComp__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$DictComp__f_key;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$DictComp__f_value;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$DictComp__f_generators;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$6, 5)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$DictComp)) {
      const DictComp$1 = x$1;
      let $$x2;
      if (((this.Ltigerpython_parser_ast_AstNode$DictComp__f_pos === DictComp$1.Ltigerpython_parser_ast_AstNode$DictComp__f_pos) && (this.Ltigerpython_parser_ast_AstNode$DictComp__f_endPos === DictComp$1.Ltigerpython_parser_ast_AstNode$DictComp__f_endPos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$DictComp__f_key;
        const x$2 = DictComp$1.Ltigerpython_parser_ast_AstNode$DictComp__f_key;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$DictComp__f_value;
        const x$4 = DictComp$1.Ltigerpython_parser_ast_AstNode$DictComp__f_value;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$DictComp__f_generators === DictComp$1.Ltigerpython_parser_ast_AstNode$DictComp__f_generators)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$DictComp(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$DictComp)))
}
const $d_Ltigerpython_parser_ast_AstNode$DictComp = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$DictComp: 0
}, false, "tigerpython.parser.ast.AstNode$DictComp", {
  Ltigerpython_parser_ast_AstNode$DictComp: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$DictComp.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$DictComp;
class $c_Ltigerpython_parser_ast_AstNode$ExceptHandler extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, exType, name, body) {
    super();
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_exType = null;
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_name = null;
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_exType = exType;
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_name = name;
    this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body = body;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_EXCEPT_HANDLER)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_pos
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    if ((key === "body")) {
      this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body = value
    } else {
      throw new $c_s_MatchError(key)
    }
  };
  productPrefix__T() {
    return "ExceptHandler"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_exType;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_name;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ExceptHandler");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_exType;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_name;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$ExceptHandler)) {
      const ExceptHandler$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_pos === ExceptHandler$1.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_exType;
        const x$2 = ExceptHandler$1.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_exType;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_name;
        const x$4 = ExceptHandler$1.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_name;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body;
        const x$6 = ExceptHandler$1.Ltigerpython_parser_ast_AstNode$ExceptHandler__f_body;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ExceptHandler(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ExceptHandler)))
}
const $d_Ltigerpython_parser_ast_AstNode$ExceptHandler = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$ExceptHandler: 0
}, false, "tigerpython.parser.ast.AstNode$ExceptHandler", {
  Ltigerpython_parser_ast_AstNode$ExceptHandler: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$ExceptHandler.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$ExceptHandler;
class $c_Ltigerpython_parser_ast_AstNode$ExprStatement extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, expression) {
    super();
    this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression = null;
    this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression = expression;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_EXPR)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos
  };
  endPos__I() {
    const x1 = this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
    return ($is_Ltigerpython_parser_ast_AstNode$Span(x1) ? x1.endPos__I() : this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos)
  };
  isSingleName__Z() {
    return (this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression instanceof $c_Ltigerpython_parser_ast_AstNode$Name)
  };
  productPrefix__T() {
    return "ExprStatement"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ExprStatement");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$ExprStatement)) {
      const ExprStatement$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos === ExprStatement$1.Ltigerpython_parser_ast_AstNode$ExprStatement__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
        const x$2 = ExprStatement$1.Ltigerpython_parser_ast_AstNode$ExprStatement__f_expression;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ExprStatement(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ExprStatement)))
}
const $d_Ltigerpython_parser_ast_AstNode$ExprStatement = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$ExprStatement: 0
}, false, "tigerpython.parser.ast.AstNode$ExprStatement", {
  Ltigerpython_parser_ast_AstNode$ExprStatement: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$ExprStatement.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$ExprStatement;
class $c_Ltigerpython_parser_ast_AstNode$ListComp extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, endPos, elements, generators) {
    super();
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_elements = null;
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_generators = null;
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_elements = elements;
    this.Ltigerpython_parser_ast_AstNode$ListComp__f_generators = generators;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_LIST_COMP)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ListComp__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ListComp__f_endPos
  };
  toString__T() {
    const $$x2 = $m_sc_StringOps$();
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$ListComp__f_elements.toString__T();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$ListComp__f_generators);
    const array = [$$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x2.format$extension__T__sci_Seq__T("ListComp(%s, %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "ListComp"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$ListComp__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$ListComp__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$ListComp__f_elements;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$ListComp__f_generators;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ListComp");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$ListComp__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$ListComp__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$ListComp__f_elements;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$ListComp__f_generators;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$ListComp)) {
      const ListComp$1 = x$1;
      let $$x1;
      if (((this.Ltigerpython_parser_ast_AstNode$ListComp__f_pos === ListComp$1.Ltigerpython_parser_ast_AstNode$ListComp__f_pos) && (this.Ltigerpython_parser_ast_AstNode$ListComp__f_endPos === ListComp$1.Ltigerpython_parser_ast_AstNode$ListComp__f_endPos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$ListComp__f_elements;
        const x$2 = ListComp$1.Ltigerpython_parser_ast_AstNode$ListComp__f_elements;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        return (this.Ltigerpython_parser_ast_AstNode$ListComp__f_generators === ListComp$1.Ltigerpython_parser_ast_AstNode$ListComp__f_generators)
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ListComp(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ListComp)))
}
const $d_Ltigerpython_parser_ast_AstNode$ListComp = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$ListComp: 0
}, false, "tigerpython.parser.ast.AstNode$ListComp", {
  Ltigerpython_parser_ast_AstNode$ListComp: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$ListComp.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$ListComp;
class $c_Ltigerpython_parser_ast_AstNode$Set extends $c_Ltigerpython_parser_ast_AstNode$SequenceExpression {
  constructor(pos, elements) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Set__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Set__f_elements = null;
    this.Ltigerpython_parser_ast_AstNode$Set__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Set__f_elements = elements;
    const _kind = $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_SET;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, _kind)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Set__f_pos
  };
  elements__ALtigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$Set__f_elements
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Set__f_elements);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("Set(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Set"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Set__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Set__f_elements;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Set");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Set__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Set__f_elements;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Set)) {
      const Set$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$Set__f_pos === Set$1.Ltigerpython_parser_ast_AstNode$Set__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Set__f_elements === Set$1.Ltigerpython_parser_ast_AstNode$Set__f_elements))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Set(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Set)))
}
const $d_Ltigerpython_parser_ast_AstNode$Set = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Set: 0
}, false, "tigerpython.parser.ast.AstNode$Set", {
  Ltigerpython_parser_ast_AstNode$Set: 1,
  Ltigerpython_parser_ast_AstNode$SequenceExpression: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Set.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Set;
class $c_Ltigerpython_parser_ast_AstNode$StringValue extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, endPos, value, isUnicode) {
    super();
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_value = null;
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_isUnicode = false;
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_value = value;
    this.Ltigerpython_parser_ast_AstNode$StringValue__f_isUnicode = isUnicode;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_CONSTANT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$StringValue__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$StringValue__f_endPos
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const x = this.Ltigerpython_parser_ast_AstNode$StringValue__f_value;
    const len = (x.length | 0);
    const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), len);
    let i = 0;
    while ((i < len)) {
      const index = i;
      const x$1 = (65535 & (x.charCodeAt(index) | 0));
      if ((x$1 >= 32)) {
        const str = String.fromCharCode(x$1);
        sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
      };
      i = ((1 + i) | 0)
    };
    const array = [((len === sb.length__I()) ? x : sb.jl_StringBuilder__f_java$lang$StringBuilder$$content)];
    return $$x1.format$extension__T__sci_Seq__T("\"%s\"", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "StringValue"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$StringValue__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$StringValue__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$StringValue__f_value;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$StringValue__f_isUnicode;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("StringValue");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$StringValue__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$StringValue__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$StringValue__f_value;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const data$4 = (this.Ltigerpython_parser_ast_AstNode$StringValue__f_isUnicode ? 1231 : 1237);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$StringValue)) {
      const StringValue$1 = x$1;
      return ((((this.Ltigerpython_parser_ast_AstNode$StringValue__f_pos === StringValue$1.Ltigerpython_parser_ast_AstNode$StringValue__f_pos) && (this.Ltigerpython_parser_ast_AstNode$StringValue__f_endPos === StringValue$1.Ltigerpython_parser_ast_AstNode$StringValue__f_endPos)) && (this.Ltigerpython_parser_ast_AstNode$StringValue__f_isUnicode === StringValue$1.Ltigerpython_parser_ast_AstNode$StringValue__f_isUnicode)) && (this.Ltigerpython_parser_ast_AstNode$StringValue__f_value === StringValue$1.Ltigerpython_parser_ast_AstNode$StringValue__f_value))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$StringValue(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$StringValue)))
}
const $d_Ltigerpython_parser_ast_AstNode$StringValue = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$StringValue: 0
}, false, "tigerpython.parser.ast.AstNode$StringValue", {
  Ltigerpython_parser_ast_AstNode$StringValue: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$StringValue.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$StringValue;
class $c_Ltigerpython_parser_ast_AstNode$Subscript extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, endPos, base, slice) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_base = null;
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_slice = null;
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_base = base;
    this.Ltigerpython_parser_ast_AstNode$Subscript__f_slice = slice;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_SUBSCRIPT)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Subscript__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Subscript__f_endPos
  };
  isValidAssignTarget__Z() {
    return true
  };
  productPrefix__T() {
    return "Subscript"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Subscript__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Subscript__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Subscript__f_base;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Subscript__f_slice;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Subscript");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Subscript__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$Subscript__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Subscript__f_base;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Subscript__f_slice;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Subscript)) {
      const Subscript$1 = x$1;
      let $$x1;
      if (((this.Ltigerpython_parser_ast_AstNode$Subscript__f_pos === Subscript$1.Ltigerpython_parser_ast_AstNode$Subscript__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Subscript__f_endPos === Subscript$1.Ltigerpython_parser_ast_AstNode$Subscript__f_endPos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$Subscript__f_base;
        const x$2 = Subscript$1.Ltigerpython_parser_ast_AstNode$Subscript__f_base;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Subscript__f_slice;
        const x$4 = Subscript$1.Ltigerpython_parser_ast_AstNode$Subscript__f_slice;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Subscript(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Subscript)))
}
const $d_Ltigerpython_parser_ast_AstNode$Subscript = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Subscript: 0
}, false, "tigerpython.parser.ast.AstNode$Subscript", {
  Ltigerpython_parser_ast_AstNode$Subscript: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Subscript.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Subscript;
class $c_Ltigerpython_parser_ast_AstNode$Try extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, body, handlers, elseBody, finalBody) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Try__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Try__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$Try__f_handlers = null;
    this.Ltigerpython_parser_ast_AstNode$Try__f_elseBody = null;
    this.Ltigerpython_parser_ast_AstNode$Try__f_finalBody = null;
    this.Ltigerpython_parser_ast_AstNode$Try__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Try__f_body = body;
    this.Ltigerpython_parser_ast_AstNode$Try__f_handlers = handlers;
    this.Ltigerpython_parser_ast_AstNode$Try__f_elseBody = elseBody;
    this.Ltigerpython_parser_ast_AstNode$Try__f_finalBody = finalBody;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_TRY)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Try__f_pos
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    if ((key === "body")) {
      this.Ltigerpython_parser_ast_AstNode$Try__f_body = value
    } else if (((key === "else") || ((key === "elsebody") || (key === "elseBody")))) {
      this.Ltigerpython_parser_ast_AstNode$Try__f_elseBody = value
    } else if (((key === "final") || ((key === "finalbody") || (key === "finalBody")))) {
      this.Ltigerpython_parser_ast_AstNode$Try__f_finalBody = value
    } else {
      throw new $c_s_MatchError(key)
    }
  };
  toString__T() {
    const $$x3 = $m_sc_StringOps$();
    const $$x2 = this.Ltigerpython_parser_ast_AstNode$Try__f_pos;
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$Try__f_body;
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Try__f_handlers);
    const array = [$$x2, $$x1, $f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", ""), this.Ltigerpython_parser_ast_AstNode$Try__f_elseBody, this.Ltigerpython_parser_ast_AstNode$Try__f_finalBody];
    return $$x3.format$extension__T__sci_Seq__T("Try(%d,%s,[%s],%s,%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "Try"
  };
  productArity__I() {
    return 5
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Try__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Try__f_body;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Try__f_elseBody;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$Try__f_finalBody;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Try");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Try__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Try__f_body;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Try__f_handlers;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$Try__f_elseBody;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$3 = this.Ltigerpython_parser_ast_AstNode$Try__f_finalBody;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$6, 5)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Try)) {
      const Try$1 = x$1;
      let $$x2;
      if ((this.Ltigerpython_parser_ast_AstNode$Try__f_pos === Try$1.Ltigerpython_parser_ast_AstNode$Try__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Try__f_body;
        const x$2 = Try$1.Ltigerpython_parser_ast_AstNode$Try__f_body;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if (($$x2 && (this.Ltigerpython_parser_ast_AstNode$Try__f_handlers === Try$1.Ltigerpython_parser_ast_AstNode$Try__f_handlers))) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Try__f_elseBody;
        const x$4 = Try$1.Ltigerpython_parser_ast_AstNode$Try__f_elseBody;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$Try__f_finalBody;
        const x$6 = Try$1.Ltigerpython_parser_ast_AstNode$Try__f_finalBody;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Try(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Try)))
}
const $d_Ltigerpython_parser_ast_AstNode$Try = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Try: 0
}, false, "tigerpython.parser.ast.AstNode$Try", {
  Ltigerpython_parser_ast_AstNode$Try: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Try.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Try;
class $c_Ltigerpython_parser_ast_AstNode$UnaryOp extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, op, expr) {
    super();
    this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op = null;
    this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr = null;
    this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op = op;
    this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr = expr;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_UNARY_OP)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_pos
  };
  expr__Ltigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr
  };
  productPrefix__T() {
    return "UnaryOp"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("UnaryOp");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$UnaryOp)) {
      const UnaryOp$1 = x$1;
      let $$x1;
      if ((this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_pos === UnaryOp$1.Ltigerpython_parser_ast_AstNode$UnaryOp__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
        const x$2 = UnaryOp$1.Ltigerpython_parser_ast_AstNode$UnaryOp__f_op;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
        const x$4 = UnaryOp$1.Ltigerpython_parser_ast_AstNode$UnaryOp__f_expr;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$UnaryOp(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$UnaryOp)))
}
const $d_Ltigerpython_parser_ast_AstNode$UnaryOp = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$UnaryOp: 0
}, false, "tigerpython.parser.ast.AstNode$UnaryOp", {
  Ltigerpython_parser_ast_AstNode$UnaryOp: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$ExprWrapper: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$UnaryOp.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$UnaryOp;
class $c_Ltigerpython_parser_ast_AstNode$Yield extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, expr) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Yield__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Yield__f_expr = null;
    this.Ltigerpython_parser_ast_AstNode$Yield__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Yield__f_expr = expr;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_YIELD)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Yield__f_pos
  };
  expr__Ltigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$Yield__f_expr
  };
  productPrefix__T() {
    return "Yield"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Yield__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Yield__f_expr;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Yield");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Yield__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Yield__f_expr;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Yield)) {
      const Yield$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$Yield__f_pos === Yield$1.Ltigerpython_parser_ast_AstNode$Yield__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Yield__f_expr;
        const x$2 = Yield$1.Ltigerpython_parser_ast_AstNode$Yield__f_expr;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Yield(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Yield)))
}
const $d_Ltigerpython_parser_ast_AstNode$Yield = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Yield: 0
}, false, "tigerpython.parser.ast.AstNode$Yield", {
  Ltigerpython_parser_ast_AstNode$Yield: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$ExprWrapper: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Yield.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Yield;
const $f_sc_BitSetOps__contains__I__Z = (function($thiz, elem) {
  if ((elem >= 0)) {
    const t = $thiz.word__I__J((elem >> 6));
    const lo$1 = t.RTLong__f_lo;
    const hi$1 = t.RTLong__f_hi;
    const lo = (((32 & elem) === 0) ? (1 << elem) : 0);
    const hi = (((32 & elem) === 0) ? 0 : (1 << elem));
    const lo$2 = (lo$1 & lo);
    const hi$2 = (hi$1 & hi);
    return (!((lo$2 === 0) && (hi$2 === 0)))
  } else {
    return false
  }
});
const $f_sc_BitSetOps__size__I = (function($thiz) {
  let s = 0;
  let i = $thiz.nwords__I();
  while ((i > 0)) {
    i = (((-1) + i) | 0);
    const $$x1 = s;
    const t = $thiz.word__I__J(i);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    s = (($$x1 + (($m_jl_Integer$().bitCount__I__I(lo) + $m_jl_Integer$().bitCount__I__I(hi)) | 0)) | 0)
  };
  return s
});
const $f_sc_BitSetOps__isEmpty__Z = (function($thiz) {
  const end = $thiz.nwords__I();
  const isEmpty = (end <= 0);
  const scala$collection$immutable$Range$$lastElement = (((-1) + end) | 0);
  let res = true;
  const it = new $c_sci_RangeIterator(0, 1, scala$collection$immutable$Range$$lastElement, isEmpty);
  while ((res && it.sci_RangeIterator__f__hasNext)) {
    const arg1 = it.next__I();
    const t = $thiz.word__I__J(arg1);
    const lo = t.RTLong__f_lo;
    const hi$2 = t.RTLong__f_hi;
    res = ((lo === 0) && (hi$2 === 0))
  };
  return res
});
const $f_sc_BitSetOps__foreach__F1__V = (function($thiz, f) {
  let i = 0;
  while ((i < $thiz.nwords__I())) {
    const t = $thiz.word__I__J(i);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    let w__lo = lo;
    let w__hi = hi;
    let j = (i << 6);
    while (true) {
      const this$1__lo = w__lo;
      const this$1__hi = w__hi;
      if ((!((this$1__lo === 0) && (this$1__hi === 0)))) {
        const b__lo = w__lo;
        const b__hi = w__hi;
        const lo$1 = (1 & b__lo);
        if ((lo$1 === 1)) {
          f.apply__O__O(j)
        };
        const this$2__lo = w__lo;
        const this$2__hi = w__hi;
        const lo$2 = (((this$2__lo >>> 1) | 0) | (this$2__hi << 31));
        const hi$1 = ((this$2__hi >>> 1) | 0);
        const $$x1__lo = lo$2;
        const $$x1__hi = hi$1;
        w__lo = $$x1__lo;
        w__hi = $$x1__hi;
        j = ((1 + j) | 0)
      } else {
        break
      }
    };
    i = ((1 + i) | 0)
  }
});
const $p_sc_StrictOptimizedLinearSeqOps__loop$2__I__sc_LinearSeq__sc_LinearSeq = (function($thiz, n, s) {
  while (true) {
    if (((n <= 0) || s.isEmpty__Z())) {
      return s
    } else {
      const temp$n = (((-1) + n) | 0);
      const temp$s = s.tail__O();
      n = temp$n;
      s = temp$s
    }
  }
});
class $c_sci_MapKeyValueTupleHashIterator extends $c_sci_ChampBaseReverseIterator {
  constructor(rootNode) {
    super();
    this.sci_MapKeyValueTupleHashIterator__f_scala$collection$immutable$MapKeyValueTupleHashIterator$$hash = 0;
    this.sci_MapKeyValueTupleHashIterator__f_value = null;
    this.sci_MapKeyValueTupleHashIterator__f_key = null;
    $ct_sci_ChampBaseReverseIterator__sci_Node__(this, rootNode);
    this.sci_MapKeyValueTupleHashIterator__f_scala$collection$immutable$MapKeyValueTupleHashIterator$$hash = 0;
    this.sci_MapKeyValueTupleHashIterator__f_key = new $c_sci_MapKeyValueTupleHashIterator$$anon$1(this)
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(n) {
    return $f_s_Product2__productElement__I__O(this, n)
  };
  productIterator__sc_Iterator() {
    return new $c_s_Product$$anon$1(this)
  };
  iterator__sc_Iterator() {
    return this
  };
  buffered__sc_BufferedIterator() {
    return new $c_sc_Iterator$$anon$1(this)
  };
  isEmpty__Z() {
    return (!this.hasNext__Z())
  };
  concat__F0__sc_Iterator(xs) {
    return $f_sc_Iterator__concat__F0__sc_Iterator(this, xs)
  };
  drop__I__sc_Iterator(n) {
    return $f_sc_Iterator__drop__I__sc_Iterator(this, n)
  };
  toString__T() {
    return "<iterator>"
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  knownSize__I() {
    return (-1)
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    return this$1.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  _1__O() {
    return this.sci_MapKeyValueTupleHashIterator__f_key
  };
  _2__O() {
    return this.sci_MapKeyValueTupleHashIterator__f_value
  };
  productPrefix__T() {
    return "Tuple2"
  };
  next__sci_MapKeyValueTupleHashIterator() {
    if ((!this.hasNext__Z())) {
      throw $ct_ju_NoSuchElementException__(new $c_ju_NoSuchElementException())
    };
    this.sci_MapKeyValueTupleHashIterator__f_scala$collection$immutable$MapKeyValueTupleHashIterator$$hash = this.sci_ChampBaseReverseIterator__f_currentValueNode.getHash__I__I(this.sci_ChampBaseReverseIterator__f_currentValueCursor);
    this.sci_MapKeyValueTupleHashIterator__f_value = this.sci_ChampBaseReverseIterator__f_currentValueNode.getValue__I__O(this.sci_ChampBaseReverseIterator__f_currentValueCursor);
    this.sci_ChampBaseReverseIterator__f_currentValueCursor = (((-1) + this.sci_ChampBaseReverseIterator__f_currentValueCursor) | 0);
    return this
  };
  next__O() {
    return this.next__sci_MapKeyValueTupleHashIterator()
  };
}
const $d_sci_MapKeyValueTupleHashIterator = new $TypeData().initClass({
  sci_MapKeyValueTupleHashIterator: 0
}, false, "scala.collection.immutable.MapKeyValueTupleHashIterator", {
  sci_MapKeyValueTupleHashIterator: 1,
  sci_ChampBaseReverseIterator: 1,
  O: 1,
  sc_Iterator: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  s_Product2: 1,
  s_Product: 1,
  s_Equals: 1
});
$c_sci_MapKeyValueTupleHashIterator.prototype.$classData = $d_sci_MapKeyValueTupleHashIterator;
class $c_s_math_BigDecimal {
}
function $isArrayOf_s_math_BigDecimal(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_math_BigDecimal)))
}
const $f_s_math_Numeric$ByteIsIntegral__plus__B__B__B = (function($thiz, x, y) {
  return ((((x + y) | 0) << 24) >> 24)
});
const $f_s_math_Numeric$ByteIsIntegral__minus__B__B__B = (function($thiz, x, y) {
  return ((((x - y) | 0) << 24) >> 24)
});
const $f_s_math_Numeric$ByteIsIntegral__times__B__B__B = (function($thiz, x, y) {
  return (($imul(x, y) << 24) >> 24)
});
const $f_s_math_Numeric$ByteIsIntegral__quot__B__B__B = (function($thiz, x, y) {
  return (($intDiv(x, y) << 24) >> 24)
});
const $f_s_math_Numeric$ByteIsIntegral__rem__B__B__B = (function($thiz, x, y) {
  return (($intMod(x, y) << 24) >> 24)
});
const $f_s_math_Numeric$ByteIsIntegral__sign__B__B = (function($thiz, x) {
  const x$1 = x;
  return ((((x$1 === 0) ? 0 : ((x$1 < 0) ? (-1) : 1)) << 24) >> 24)
});
const $f_s_math_Numeric$CharIsIntegral__plus__C__C__C = (function($thiz, x, y) {
  return (65535 & ((x + y) | 0))
});
const $f_s_math_Numeric$CharIsIntegral__minus__C__C__C = (function($thiz, x, y) {
  return (65535 & ((x - y) | 0))
});
const $f_s_math_Numeric$CharIsIntegral__times__C__C__C = (function($thiz, x, y) {
  return (65535 & $imul(x, y))
});
const $f_s_math_Numeric$CharIsIntegral__quot__C__C__C = (function($thiz, x, y) {
  return (65535 & $intDiv(x, y))
});
const $f_s_math_Numeric$CharIsIntegral__rem__C__C__C = (function($thiz, x, y) {
  return (65535 & $intMod(x, y))
});
const $f_s_math_Numeric$CharIsIntegral__sign__C__C = (function($thiz, x) {
  const x$1 = x;
  return (65535 & ((x$1 === 0) ? 0 : ((x$1 < 0) ? (-1) : 1)))
});
const $f_s_math_Numeric$IntIsIntegral__plus__I__I__I = (function($thiz, x, y) {
  return ((x + y) | 0)
});
const $f_s_math_Numeric$IntIsIntegral__minus__I__I__I = (function($thiz, x, y) {
  return ((x - y) | 0)
});
const $f_s_math_Numeric$IntIsIntegral__times__I__I__I = (function($thiz, x, y) {
  return $imul(x, y)
});
const $f_s_math_Numeric$IntIsIntegral__quot__I__I__I = (function($thiz, x, y) {
  return $intDiv(x, y)
});
const $f_s_math_Numeric$IntIsIntegral__rem__I__I__I = (function($thiz, x, y) {
  return $intMod(x, y)
});
const $f_s_math_Numeric$LongIsIntegral__plus__J__J__J = (function($thiz, x, y) {
  const alo = x.RTLong__f_lo;
  const ahi = x.RTLong__f_hi;
  const bhi = y.RTLong__f_hi;
  const lo = ((alo + y.RTLong__f_lo) | 0);
  const hi = ((((-2147483648) ^ lo) < ((-2147483648) ^ alo)) ? ((1 + ((ahi + bhi) | 0)) | 0) : ((ahi + bhi) | 0));
  return new $c_RTLong(lo, hi)
});
const $f_s_math_Numeric$LongIsIntegral__minus__J__J__J = (function($thiz, x, y) {
  const alo = x.RTLong__f_lo;
  const ahi = x.RTLong__f_hi;
  const bhi = y.RTLong__f_hi;
  const lo = ((alo - y.RTLong__f_lo) | 0);
  const hi = ((((-2147483648) ^ lo) > ((-2147483648) ^ alo)) ? (((-1) + ((ahi - bhi) | 0)) | 0) : ((ahi - bhi) | 0));
  return new $c_RTLong(lo, hi)
});
const $f_s_math_Numeric$LongIsIntegral__times__J__J__J = (function($thiz, x, y) {
  const alo = x.RTLong__f_lo;
  const blo = y.RTLong__f_lo;
  const a0 = (65535 & alo);
  const a1 = ((alo >>> 16) | 0);
  const b0 = (65535 & blo);
  const b1 = ((blo >>> 16) | 0);
  const a0b0 = $imul(a0, b0);
  const a1b0 = $imul(a1, b0);
  const a0b1 = $imul(a0, b1);
  const lo = ((a0b0 + (((a1b0 + a0b1) | 0) << 16)) | 0);
  const c1part = ((((a0b0 >>> 16) | 0) + a0b1) | 0);
  const hi = (((((((($imul(alo, y.RTLong__f_hi) + $imul(x.RTLong__f_hi, blo)) | 0) + $imul(a1, b1)) | 0) + ((c1part >>> 16) | 0)) | 0) + (((((65535 & c1part) + a1b0) | 0) >>> 16) | 0)) | 0);
  return new $c_RTLong(lo, hi)
});
const $f_s_math_Numeric$LongIsIntegral__quot__J__J__J = (function($thiz, x, y) {
  const this$1 = $m_RTLong$();
  const lo = this$1.divideImpl__I__I__I__I__I(x.RTLong__f_lo, x.RTLong__f_hi, y.RTLong__f_lo, y.RTLong__f_hi);
  const hi = this$1.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
  return new $c_RTLong(lo, hi)
});
const $f_s_math_Numeric$LongIsIntegral__rem__J__J__J = (function($thiz, x, y) {
  const this$1 = $m_RTLong$();
  const lo = this$1.remainderImpl__I__I__I__I__I(x.RTLong__f_lo, x.RTLong__f_hi, y.RTLong__f_lo, y.RTLong__f_hi);
  const hi = this$1.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
  return new $c_RTLong(lo, hi)
});
const $f_s_math_Numeric$ShortIsIntegral__plus__S__S__S = (function($thiz, x, y) {
  return ((((x + y) | 0) << 16) >> 16)
});
const $f_s_math_Numeric$ShortIsIntegral__minus__S__S__S = (function($thiz, x, y) {
  return ((((x - y) | 0) << 16) >> 16)
});
const $f_s_math_Numeric$ShortIsIntegral__times__S__S__S = (function($thiz, x, y) {
  return (($imul(x, y) << 16) >> 16)
});
const $f_s_math_Numeric$ShortIsIntegral__quot__S__S__S = (function($thiz, x, y) {
  return (($intDiv(x, y) << 16) >> 16)
});
const $f_s_math_Numeric$ShortIsIntegral__rem__S__S__S = (function($thiz, x, y) {
  return (($intMod(x, y) << 16) >> 16)
});
const $f_s_math_Numeric$ShortIsIntegral__sign__S__S = (function($thiz, x) {
  const x$1 = x;
  return ((((x$1 === 0) ? 0 : ((x$1 < 0) ? (-1) : 1)) << 16) >> 16)
});
class $c_s_math_Ordering$Int$ extends $c_O {
  constructor() {
    super();
    this.s_math_Ordering$Int$__f_scala$math$Ordering$CachedReverse$$_reverse = null;
    $n_s_math_Ordering$Int$ = this;
    this.s_math_Ordering$Int$__f_scala$math$Ordering$CachedReverse$$_reverse = new $c_s_math_Ordering$Reverse(this)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering$CachedReverse__isReverseOf__s_math_Ordering__Z(this, other)
  };
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  compare__O__O__I(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return ((x$1 === y$1) ? 0 : ((x$1 < y$1) ? (-1) : 1))
  };
}
const $d_s_math_Ordering$Int$ = new $TypeData().initClass({
  s_math_Ordering$Int$: 0
}, false, "scala.math.Ordering$Int$", {
  s_math_Ordering$Int$: 1,
  O: 1,
  s_math_Ordering$IntOrdering: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1,
  s_math_Ordering$CachedReverse: 1
});
$c_s_math_Ordering$Int$.prototype.$classData = $d_s_math_Ordering$Int$;
let $n_s_math_Ordering$Int$ = (void 0);
function $m_s_math_Ordering$Int$() {
  if ((!$n_s_math_Ordering$Int$)) {
    $n_s_math_Ordering$Int$ = new $c_s_math_Ordering$Int$()
  };
  return $n_s_math_Ordering$Int$
}
class $c_s_reflect_ManifestFactory$BooleanManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_Z.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_Z.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$ByteManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_B.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_B.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$CharManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_C.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_C.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$DoubleManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_D.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_D.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$FloatManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_F.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_F.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$IntManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_I.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_I.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$LongManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_J.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_J.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$PhantomManifest extends $c_s_reflect_ManifestFactory$ClassTypeManifest {
  constructor() {
    super();
    this.s_reflect_ManifestFactory$PhantomManifest__f_toString = null;
    this.s_reflect_ManifestFactory$PhantomManifest__f_hashCode = 0
  };
  toString__T() {
    return this.s_reflect_ManifestFactory$PhantomManifest__f_toString
  };
  equals__O__Z(that) {
    return (this === that)
  };
  hashCode__I() {
    return this.s_reflect_ManifestFactory$PhantomManifest__f_hashCode
  };
}
class $c_s_reflect_ManifestFactory$ShortManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_S.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_S.getArrayOf(), [len])
  };
}
class $c_s_reflect_ManifestFactory$UnitManifest extends $c_s_reflect_AnyValManifest {
  runtimeClass__jl_Class() {
    return $d_V.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_jl_Void.getArrayOf(), [len])
  };
}
class $c_Ltigerpython_parser_ast_AstNode$Attribute extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, endPos, base, attr) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_base = null;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_attr = null;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_expr_context = null;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_base = base;
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_attr = attr;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_ATTRIBUTE);
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_expr_context = $m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_LOAD
  };
  expr_context_$eq__s_Enumeration$Value__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$Attribute__f_expr_context = x$1
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Attribute__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Attribute__f_endPos
  };
  getAttributeName__T() {
    return ((this.Ltigerpython_parser_ast_AstNode$Attribute__f_attr !== null) ? this.Ltigerpython_parser_ast_AstNode$Attribute__f_attr.Ltigerpython_parser_ast_AstNode$Name__f_name : null)
  };
  isValidAssignTarget__Z() {
    return true
  };
  productPrefix__T() {
    return "Attribute"
  };
  productArity__I() {
    return 4
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Attribute__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Attribute__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$Attribute__f_attr;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Attribute");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Attribute__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$Attribute__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$Attribute__f_attr;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$5, 4)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Attribute)) {
      const Attribute$1 = x$1;
      let $$x1;
      if (((this.Ltigerpython_parser_ast_AstNode$Attribute__f_pos === Attribute$1.Ltigerpython_parser_ast_AstNode$Attribute__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Attribute__f_endPos === Attribute$1.Ltigerpython_parser_ast_AstNode$Attribute__f_endPos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
        const x$2 = Attribute$1.Ltigerpython_parser_ast_AstNode$Attribute__f_base;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$Attribute__f_attr;
        const x$4 = Attribute$1.Ltigerpython_parser_ast_AstNode$Attribute__f_attr;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Attribute(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Attribute)))
}
const $d_Ltigerpython_parser_ast_AstNode$Attribute = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Attribute: 0
}, false, "tigerpython.parser.ast.AstNode$Attribute", {
  Ltigerpython_parser_ast_AstNode$Attribute: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  Ltigerpython_parser_ast_AstNode$ContextExpression: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Attribute.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Attribute;
class $c_Ltigerpython_parser_ast_AstNode$If extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, elsePos, test, body, elseBody) {
    super();
    this.Ltigerpython_parser_ast_AstNode$If__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$If__f_elsePos = 0;
    this.Ltigerpython_parser_ast_AstNode$If__f_test = null;
    this.Ltigerpython_parser_ast_AstNode$If__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$If__f_elseBody = null;
    this.Ltigerpython_parser_ast_AstNode$If__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$If__f_elsePos = elsePos;
    this.Ltigerpython_parser_ast_AstNode$If__f_test = test;
    this.Ltigerpython_parser_ast_AstNode$If__f_body = body;
    this.Ltigerpython_parser_ast_AstNode$If__f_elseBody = elseBody;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_IF)
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    $f_Ltigerpython_parser_ast_AstNode$Body__update__T__Ltigerpython_parser_ast_AstNode$Statement__V(this, key, value)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$If__f_pos
  };
  body__Ltigerpython_parser_ast_AstNode$Statement() {
    return this.Ltigerpython_parser_ast_AstNode$If__f_body
  };
  body_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$If__f_body = x$1
  };
  elseBody__Ltigerpython_parser_ast_AstNode$Statement() {
    return this.Ltigerpython_parser_ast_AstNode$If__f_elseBody
  };
  elseBody_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$If__f_elseBody = x$1
  };
  productPrefix__T() {
    return "If"
  };
  productArity__I() {
    return 5
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$If__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$If__f_elsePos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$If__f_test;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$If__f_body;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$If__f_elseBody;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("If");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$If__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$If__f_elsePos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$If__f_test;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$If__f_body;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$If__f_elseBody;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$6, 5)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$If)) {
      const If$1 = x$1;
      let $$x2;
      if (((this.Ltigerpython_parser_ast_AstNode$If__f_pos === If$1.Ltigerpython_parser_ast_AstNode$If__f_pos) && (this.Ltigerpython_parser_ast_AstNode$If__f_elsePos === If$1.Ltigerpython_parser_ast_AstNode$If__f_elsePos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$If__f_test;
        const x$2 = If$1.Ltigerpython_parser_ast_AstNode$If__f_test;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$If__f_body;
        const x$4 = If$1.Ltigerpython_parser_ast_AstNode$If__f_body;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$If__f_elseBody;
        const x$6 = If$1.Ltigerpython_parser_ast_AstNode$If__f_elseBody;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$If(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$If)))
}
const $d_Ltigerpython_parser_ast_AstNode$If = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$If: 0
}, false, "tigerpython.parser.ast.AstNode$If", {
  Ltigerpython_parser_ast_AstNode$If: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Body: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$If.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$If;
class $c_Ltigerpython_parser_ast_AstNode$Name extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, name) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Name__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Name__f_name = null;
    this.Ltigerpython_parser_ast_AstNode$Name__f_extExprContext = null;
    this.Ltigerpython_parser_ast_AstNode$Name__f_expr_context = null;
    this.Ltigerpython_parser_ast_AstNode$Name__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Name__f_name = name;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_NAME);
    this.Ltigerpython_parser_ast_AstNode$Name__f_expr_context = $m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_LOAD;
    this.Ltigerpython_parser_ast_AstNode$Name__f_extExprContext = $m_Ltigerpython_parser_ast_ExtExprContext$().Ltigerpython_parser_ast_ExtExprContext$__f_PLAIN
  };
  expr_context_$eq__s_Enumeration$Value__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$Name__f_expr_context = x$1
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Name__f_pos
  };
  endPos__I() {
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$Name__f_pos;
    const this$1 = this.Ltigerpython_parser_ast_AstNode$Name__f_name;
    return (($$x1 + (this$1.length | 0)) | 0)
  };
  isSingleName__Z() {
    return true
  };
  isValidAssignTarget__Z() {
    return true
  };
  toString__T() {
    return this.Ltigerpython_parser_ast_AstNode$Name__f_name
  };
  productPrefix__T() {
    return "Name"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Name__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Name__f_name;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Name");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Name__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Name__f_name;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Name)) {
      const Name$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$Name__f_pos === Name$1.Ltigerpython_parser_ast_AstNode$Name__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Name__f_name === Name$1.Ltigerpython_parser_ast_AstNode$Name__f_name))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Name(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Name)))
}
const $d_Ltigerpython_parser_ast_AstNode$Name = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Name: 0
}, false, "tigerpython.parser.ast.AstNode$Name", {
  Ltigerpython_parser_ast_AstNode$Name: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  Ltigerpython_parser_ast_AstNode$ContextExpression: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Name.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Name;
class $c_Ltigerpython_parser_ast_AstNode$Starred extends $c_Ltigerpython_parser_ast_AstNode$Expression {
  constructor(pos, expr) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Starred__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Starred__f_expr = null;
    this.Ltigerpython_parser_ast_AstNode$Starred__f_expr_context = null;
    this.Ltigerpython_parser_ast_AstNode$Starred__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Starred__f_expr = expr;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_STARRED);
    this.Ltigerpython_parser_ast_AstNode$Starred__f_expr_context = $m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_LOAD
  };
  expr_context_$eq__s_Enumeration$Value__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$Starred__f_expr_context = x$1
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Starred__f_pos
  };
  expr__Ltigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$Starred__f_expr
  };
  isValidAssignTarget__Z() {
    return true
  };
  productPrefix__T() {
    return "Starred"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Starred__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Starred__f_expr;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Starred");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Starred__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Starred__f_expr;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Starred)) {
      const Starred$1 = x$1;
      if ((this.Ltigerpython_parser_ast_AstNode$Starred__f_pos === Starred$1.Ltigerpython_parser_ast_AstNode$Starred__f_pos)) {
        const x = this.Ltigerpython_parser_ast_AstNode$Starred__f_expr;
        const x$2 = Starred$1.Ltigerpython_parser_ast_AstNode$Starred__f_expr;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Starred(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Starred)))
}
const $d_Ltigerpython_parser_ast_AstNode$Starred = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Starred: 0
}, false, "tigerpython.parser.ast.AstNode$Starred", {
  Ltigerpython_parser_ast_AstNode$Starred: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$ExprWrapper: 1,
  Ltigerpython_parser_ast_AstNode$ContextExpression: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Starred.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Starred;
class $c_Ltigerpython_parser_ast_AstNode$With extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, endPos, context, opt_vars, body, isAsync) {
    super();
    this.Ltigerpython_parser_ast_AstNode$With__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$With__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$With__f_context = null;
    this.Ltigerpython_parser_ast_AstNode$With__f_opt_vars = null;
    this.Ltigerpython_parser_ast_AstNode$With__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$With__f_isAsync = false;
    this.Ltigerpython_parser_ast_AstNode$With__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$With__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$With__f_context = context;
    this.Ltigerpython_parser_ast_AstNode$With__f_opt_vars = opt_vars;
    this.Ltigerpython_parser_ast_AstNode$With__f_body = body;
    this.Ltigerpython_parser_ast_AstNode$With__f_isAsync = isAsync;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_WITH)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$With__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$With__f_endPos
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    if ((key === "body")) {
      this.Ltigerpython_parser_ast_AstNode$With__f_body = value
    } else {
      throw new $c_s_MatchError(key)
    }
  };
  productPrefix__T() {
    return "With"
  };
  productArity__I() {
    return 6
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$With__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$With__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$With__f_context;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$With__f_opt_vars;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$With__f_body;
        break
      }
      case 5: {
        return this.Ltigerpython_parser_ast_AstNode$With__f_isAsync;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("With");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$With__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$With__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$With__f_context;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$With__f_opt_vars;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$With__f_body;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    const data$6 = (this.Ltigerpython_parser_ast_AstNode$With__f_isAsync ? 1231 : 1237);
    acc = $m_sr_Statics$().mix__I__I__I(hash$6, data$6);
    const hash$7 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$7, 6)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$With)) {
      const With$1 = x$1;
      let $$x2;
      if ((((this.Ltigerpython_parser_ast_AstNode$With__f_pos === With$1.Ltigerpython_parser_ast_AstNode$With__f_pos) && (this.Ltigerpython_parser_ast_AstNode$With__f_endPos === With$1.Ltigerpython_parser_ast_AstNode$With__f_endPos)) && (this.Ltigerpython_parser_ast_AstNode$With__f_isAsync === With$1.Ltigerpython_parser_ast_AstNode$With__f_isAsync))) {
        const x = this.Ltigerpython_parser_ast_AstNode$With__f_context;
        const x$2 = With$1.Ltigerpython_parser_ast_AstNode$With__f_context;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$With__f_opt_vars;
        const x$4 = With$1.Ltigerpython_parser_ast_AstNode$With__f_opt_vars;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$With__f_body;
        const x$6 = With$1.Ltigerpython_parser_ast_AstNode$With__f_body;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$With(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$With)))
}
const $d_Ltigerpython_parser_ast_AstNode$With = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$With: 0
}, false, "tigerpython.parser.ast.AstNode$With", {
  Ltigerpython_parser_ast_AstNode$With: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$With.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$With;
class $c_sc_AbstractView extends $c_sc_AbstractIterable {
  iterableFactory__sc_IterableFactory() {
    return $m_sc_View$()
  };
  toString__T() {
    return $f_sc_View__toString__T(this)
  };
  stringPrefix__T() {
    return "View"
  };
}
class $c_sc_MapOps$$anon$1 extends $c_sc_AbstractIterable {
  constructor(outer) {
    super();
    this.sc_MapOps$$anon$1__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sc_MapOps$$anon$1__f_$outer = outer
    }
  };
  knownSize__I() {
    return this.sc_MapOps$$anon$1__f_$outer.knownSize__I()
  };
  iterator__sc_Iterator() {
    return this.sc_MapOps$$anon$1__f_$outer.valuesIterator__sc_Iterator()
  };
}
const $d_sc_MapOps$$anon$1 = new $TypeData().initClass({
  sc_MapOps$$anon$1: 0
}, false, "scala.collection.MapOps$$anon$1", {
  sc_MapOps$$anon$1: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_sc_MapOps$$anon$1.prototype.$classData = $d_sc_MapOps$$anon$1;
const $f_sc_Set__equals__O__Z = (function($thiz, that) {
  if ($is_sc_Set(that)) {
    const x2 = that;
    return (($thiz === x2) || (($thiz.size__I() === x2.size__I()) && $thiz.subsetOf__sc_Set__Z(x2)))
  } else {
    return false
  }
});
function $is_sc_Set(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_Set)))
}
function $isArrayOf_sc_Set(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_Set)))
}
function $is_s_math_Numeric$BigDecimalAsIfIntegral(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.s_math_Numeric$BigDecimalAsIfIntegral)))
}
function $isArrayOf_s_math_Numeric$BigDecimalAsIfIntegral(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_math_Numeric$BigDecimalAsIfIntegral)))
}
class $c_s_reflect_ManifestFactory$AnyManifest$ extends $c_s_reflect_ManifestFactory$PhantomManifest {
  constructor() {
    super();
    this.s_reflect_ManifestFactory$PhantomManifest__f_toString = "Any";
    const prefix = $m_s_None$();
    const typeArguments = $m_sci_Nil$();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_prefix = prefix;
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_runtimeClass1 = $d_O.getClassOf();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_typeArguments = typeArguments;
    this.s_reflect_ManifestFactory$PhantomManifest__f_hashCode = $systemIdentityHashCode(this)
  };
  runtimeClass__jl_Class() {
    return $d_O.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_O.getArrayOf(), [len])
  };
}
const $d_s_reflect_ManifestFactory$AnyManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$AnyManifest$: 0
}, false, "scala.reflect.ManifestFactory$AnyManifest$", {
  s_reflect_ManifestFactory$AnyManifest$: 1,
  s_reflect_ManifestFactory$PhantomManifest: 1,
  s_reflect_ManifestFactory$ClassTypeManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$AnyManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$AnyManifest$;
let $n_s_reflect_ManifestFactory$AnyManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$AnyManifest$() {
  if ((!$n_s_reflect_ManifestFactory$AnyManifest$)) {
    $n_s_reflect_ManifestFactory$AnyManifest$ = new $c_s_reflect_ManifestFactory$AnyManifest$()
  };
  return $n_s_reflect_ManifestFactory$AnyManifest$
}
class $c_s_reflect_ManifestFactory$BooleanManifest$ extends $c_s_reflect_ManifestFactory$BooleanManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Boolean";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$BooleanManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$BooleanManifest$: 0
}, false, "scala.reflect.ManifestFactory$BooleanManifest$", {
  s_reflect_ManifestFactory$BooleanManifest$: 1,
  s_reflect_ManifestFactory$BooleanManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$BooleanManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$BooleanManifest$;
let $n_s_reflect_ManifestFactory$BooleanManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$BooleanManifest$() {
  if ((!$n_s_reflect_ManifestFactory$BooleanManifest$)) {
    $n_s_reflect_ManifestFactory$BooleanManifest$ = new $c_s_reflect_ManifestFactory$BooleanManifest$()
  };
  return $n_s_reflect_ManifestFactory$BooleanManifest$
}
class $c_s_reflect_ManifestFactory$ByteManifest$ extends $c_s_reflect_ManifestFactory$ByteManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Byte";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$ByteManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$ByteManifest$: 0
}, false, "scala.reflect.ManifestFactory$ByteManifest$", {
  s_reflect_ManifestFactory$ByteManifest$: 1,
  s_reflect_ManifestFactory$ByteManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$ByteManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$ByteManifest$;
let $n_s_reflect_ManifestFactory$ByteManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$ByteManifest$() {
  if ((!$n_s_reflect_ManifestFactory$ByteManifest$)) {
    $n_s_reflect_ManifestFactory$ByteManifest$ = new $c_s_reflect_ManifestFactory$ByteManifest$()
  };
  return $n_s_reflect_ManifestFactory$ByteManifest$
}
class $c_s_reflect_ManifestFactory$CharManifest$ extends $c_s_reflect_ManifestFactory$CharManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Char";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$CharManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$CharManifest$: 0
}, false, "scala.reflect.ManifestFactory$CharManifest$", {
  s_reflect_ManifestFactory$CharManifest$: 1,
  s_reflect_ManifestFactory$CharManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$CharManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$CharManifest$;
let $n_s_reflect_ManifestFactory$CharManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$CharManifest$() {
  if ((!$n_s_reflect_ManifestFactory$CharManifest$)) {
    $n_s_reflect_ManifestFactory$CharManifest$ = new $c_s_reflect_ManifestFactory$CharManifest$()
  };
  return $n_s_reflect_ManifestFactory$CharManifest$
}
class $c_s_reflect_ManifestFactory$DoubleManifest$ extends $c_s_reflect_ManifestFactory$DoubleManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Double";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$DoubleManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$DoubleManifest$: 0
}, false, "scala.reflect.ManifestFactory$DoubleManifest$", {
  s_reflect_ManifestFactory$DoubleManifest$: 1,
  s_reflect_ManifestFactory$DoubleManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$DoubleManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$DoubleManifest$;
let $n_s_reflect_ManifestFactory$DoubleManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$DoubleManifest$() {
  if ((!$n_s_reflect_ManifestFactory$DoubleManifest$)) {
    $n_s_reflect_ManifestFactory$DoubleManifest$ = new $c_s_reflect_ManifestFactory$DoubleManifest$()
  };
  return $n_s_reflect_ManifestFactory$DoubleManifest$
}
class $c_s_reflect_ManifestFactory$FloatManifest$ extends $c_s_reflect_ManifestFactory$FloatManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Float";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$FloatManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$FloatManifest$: 0
}, false, "scala.reflect.ManifestFactory$FloatManifest$", {
  s_reflect_ManifestFactory$FloatManifest$: 1,
  s_reflect_ManifestFactory$FloatManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$FloatManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$FloatManifest$;
let $n_s_reflect_ManifestFactory$FloatManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$FloatManifest$() {
  if ((!$n_s_reflect_ManifestFactory$FloatManifest$)) {
    $n_s_reflect_ManifestFactory$FloatManifest$ = new $c_s_reflect_ManifestFactory$FloatManifest$()
  };
  return $n_s_reflect_ManifestFactory$FloatManifest$
}
class $c_s_reflect_ManifestFactory$IntManifest$ extends $c_s_reflect_ManifestFactory$IntManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Int";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$IntManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$IntManifest$: 0
}, false, "scala.reflect.ManifestFactory$IntManifest$", {
  s_reflect_ManifestFactory$IntManifest$: 1,
  s_reflect_ManifestFactory$IntManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$IntManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$IntManifest$;
let $n_s_reflect_ManifestFactory$IntManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$IntManifest$() {
  if ((!$n_s_reflect_ManifestFactory$IntManifest$)) {
    $n_s_reflect_ManifestFactory$IntManifest$ = new $c_s_reflect_ManifestFactory$IntManifest$()
  };
  return $n_s_reflect_ManifestFactory$IntManifest$
}
class $c_s_reflect_ManifestFactory$LongManifest$ extends $c_s_reflect_ManifestFactory$LongManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Long";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$LongManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$LongManifest$: 0
}, false, "scala.reflect.ManifestFactory$LongManifest$", {
  s_reflect_ManifestFactory$LongManifest$: 1,
  s_reflect_ManifestFactory$LongManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$LongManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$LongManifest$;
let $n_s_reflect_ManifestFactory$LongManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$LongManifest$() {
  if ((!$n_s_reflect_ManifestFactory$LongManifest$)) {
    $n_s_reflect_ManifestFactory$LongManifest$ = new $c_s_reflect_ManifestFactory$LongManifest$()
  };
  return $n_s_reflect_ManifestFactory$LongManifest$
}
class $c_s_reflect_ManifestFactory$NothingManifest$ extends $c_s_reflect_ManifestFactory$PhantomManifest {
  constructor() {
    super();
    this.s_reflect_ManifestFactory$PhantomManifest__f_toString = "Nothing";
    const prefix = $m_s_None$();
    const typeArguments = $m_sci_Nil$();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_prefix = prefix;
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_runtimeClass1 = $d_sr_Nothing$.getClassOf();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_typeArguments = typeArguments;
    this.s_reflect_ManifestFactory$PhantomManifest__f_hashCode = $systemIdentityHashCode(this)
  };
  runtimeClass__jl_Class() {
    return $d_sr_Nothing$.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_O.getArrayOf(), [len])
  };
}
const $d_s_reflect_ManifestFactory$NothingManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$NothingManifest$: 0
}, false, "scala.reflect.ManifestFactory$NothingManifest$", {
  s_reflect_ManifestFactory$NothingManifest$: 1,
  s_reflect_ManifestFactory$PhantomManifest: 1,
  s_reflect_ManifestFactory$ClassTypeManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$NothingManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$NothingManifest$;
let $n_s_reflect_ManifestFactory$NothingManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$NothingManifest$() {
  if ((!$n_s_reflect_ManifestFactory$NothingManifest$)) {
    $n_s_reflect_ManifestFactory$NothingManifest$ = new $c_s_reflect_ManifestFactory$NothingManifest$()
  };
  return $n_s_reflect_ManifestFactory$NothingManifest$
}
class $c_s_reflect_ManifestFactory$NullManifest$ extends $c_s_reflect_ManifestFactory$PhantomManifest {
  constructor() {
    super();
    this.s_reflect_ManifestFactory$PhantomManifest__f_toString = "Null";
    const prefix = $m_s_None$();
    const typeArguments = $m_sci_Nil$();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_prefix = prefix;
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_runtimeClass1 = $d_sr_Null$.getClassOf();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_typeArguments = typeArguments;
    this.s_reflect_ManifestFactory$PhantomManifest__f_hashCode = $systemIdentityHashCode(this)
  };
  runtimeClass__jl_Class() {
    return $d_sr_Null$.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_O.getArrayOf(), [len])
  };
}
const $d_s_reflect_ManifestFactory$NullManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$NullManifest$: 0
}, false, "scala.reflect.ManifestFactory$NullManifest$", {
  s_reflect_ManifestFactory$NullManifest$: 1,
  s_reflect_ManifestFactory$PhantomManifest: 1,
  s_reflect_ManifestFactory$ClassTypeManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$NullManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$NullManifest$;
let $n_s_reflect_ManifestFactory$NullManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$NullManifest$() {
  if ((!$n_s_reflect_ManifestFactory$NullManifest$)) {
    $n_s_reflect_ManifestFactory$NullManifest$ = new $c_s_reflect_ManifestFactory$NullManifest$()
  };
  return $n_s_reflect_ManifestFactory$NullManifest$
}
class $c_s_reflect_ManifestFactory$ObjectManifest$ extends $c_s_reflect_ManifestFactory$PhantomManifest {
  constructor() {
    super();
    this.s_reflect_ManifestFactory$PhantomManifest__f_toString = "Object";
    const prefix = $m_s_None$();
    const typeArguments = $m_sci_Nil$();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_prefix = prefix;
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_runtimeClass1 = $d_O.getClassOf();
    this.s_reflect_ManifestFactory$ClassTypeManifest__f_typeArguments = typeArguments;
    this.s_reflect_ManifestFactory$PhantomManifest__f_hashCode = $systemIdentityHashCode(this)
  };
  runtimeClass__jl_Class() {
    return $d_O.getClassOf()
  };
  newArray__I__O(len) {
    return $newArrayObject($d_O.getArrayOf(), [len])
  };
}
const $d_s_reflect_ManifestFactory$ObjectManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$ObjectManifest$: 0
}, false, "scala.reflect.ManifestFactory$ObjectManifest$", {
  s_reflect_ManifestFactory$ObjectManifest$: 1,
  s_reflect_ManifestFactory$PhantomManifest: 1,
  s_reflect_ManifestFactory$ClassTypeManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$ObjectManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$ObjectManifest$;
let $n_s_reflect_ManifestFactory$ObjectManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$ObjectManifest$() {
  if ((!$n_s_reflect_ManifestFactory$ObjectManifest$)) {
    $n_s_reflect_ManifestFactory$ObjectManifest$ = new $c_s_reflect_ManifestFactory$ObjectManifest$()
  };
  return $n_s_reflect_ManifestFactory$ObjectManifest$
}
class $c_s_reflect_ManifestFactory$ShortManifest$ extends $c_s_reflect_ManifestFactory$ShortManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Short";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$ShortManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$ShortManifest$: 0
}, false, "scala.reflect.ManifestFactory$ShortManifest$", {
  s_reflect_ManifestFactory$ShortManifest$: 1,
  s_reflect_ManifestFactory$ShortManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$ShortManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$ShortManifest$;
let $n_s_reflect_ManifestFactory$ShortManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$ShortManifest$() {
  if ((!$n_s_reflect_ManifestFactory$ShortManifest$)) {
    $n_s_reflect_ManifestFactory$ShortManifest$ = new $c_s_reflect_ManifestFactory$ShortManifest$()
  };
  return $n_s_reflect_ManifestFactory$ShortManifest$
}
class $c_s_reflect_ManifestFactory$UnitManifest$ extends $c_s_reflect_ManifestFactory$UnitManifest {
  constructor() {
    super();
    this.s_reflect_AnyValManifest__f_toString = "Unit";
    this.s_reflect_AnyValManifest__f_hashCode = $systemIdentityHashCode(this)
  };
}
const $d_s_reflect_ManifestFactory$UnitManifest$ = new $TypeData().initClass({
  s_reflect_ManifestFactory$UnitManifest$: 0
}, false, "scala.reflect.ManifestFactory$UnitManifest$", {
  s_reflect_ManifestFactory$UnitManifest$: 1,
  s_reflect_ManifestFactory$UnitManifest: 1,
  s_reflect_AnyValManifest: 1,
  O: 1,
  s_reflect_Manifest: 1,
  s_reflect_ClassTag: 1,
  s_reflect_ClassManifestDeprecatedApis: 1,
  s_reflect_OptManifest: 1,
  Ljava_io_Serializable: 1,
  s_Equals: 1
});
$c_s_reflect_ManifestFactory$UnitManifest$.prototype.$classData = $d_s_reflect_ManifestFactory$UnitManifest$;
let $n_s_reflect_ManifestFactory$UnitManifest$ = (void 0);
function $m_s_reflect_ManifestFactory$UnitManifest$() {
  if ((!$n_s_reflect_ManifestFactory$UnitManifest$)) {
    $n_s_reflect_ManifestFactory$UnitManifest$ = new $c_s_reflect_ManifestFactory$UnitManifest$()
  };
  return $n_s_reflect_ManifestFactory$UnitManifest$
}
class $c_Ltigerpython_parser_ast_AstNode$ClassDef extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, endPos, name, bases, keywords, body) {
    super();
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_name = null;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases = null;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords = null;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_docString = null;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_decoratorList = null;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_name = name;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases = bases;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords = keywords;
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body = body;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_CLASS_DEF);
    $f_Ltigerpython_parser_ast_AstNode$Decoratable__$init$__V(this);
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_docString = $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$extractDocString__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body)
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    $f_Ltigerpython_parser_ast_AstNode$Decoratable__update__T__Ltigerpython_parser_ast_AstNode$Statement__V(this, key, value)
  };
  decoratorList__ALtigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_decoratorList
  };
  decoratorList_$eq__ALtigerpython_parser_ast_AstNode$Expression__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_decoratorList = x$1
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos
  };
  body_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body = x$1
  };
  getName__T() {
    return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_name.Ltigerpython_parser_ast_AstNode$Name__f_name
  };
  toString__T() {
    const $$x5 = $m_sc_StringOps$();
    const $$x4 = $f_Ltigerpython_parser_ast_AstNode$Decoratable__getDecoratorString__T(this);
    const this$2 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_name;
    const $$x3 = this$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
    const this$3 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases);
    const $$x2 = $f_sc_IterableOnceOps__mkString__T__T__T__T(this$3, "", ", ", "");
    const $$x1 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body.toString__T();
    const x = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_docString;
    const len = (x.length | 0);
    const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), len);
    let i = 0;
    while ((i < len)) {
      const index = i;
      const x$1 = (65535 & (x.charCodeAt(index) | 0));
      if ((x$1 >= 32)) {
        const str = String.fromCharCode(x$1);
        sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
      };
      i = ((1 + i) | 0)
    };
    const array = [$$x4, $$x3, $$x2, $$x1, ((len === sb.length__I()) ? x : sb.jl_StringBuilder__f_java$lang$StringBuilder$$content)];
    return $$x5.format$extension__T__sci_Seq__T("%sClassDef(%s, (%s), body: %s, doc: %s)", new $c_sjsr_WrappedVarArgs(array))
  };
  updateDocString__V() {
    this.Ltigerpython_parser_ast_AstNode$ClassDef__f_docString = $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$extractDocString__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body)
  };
  productPrefix__T() {
    return "ClassDef"
  };
  productArity__I() {
    return 6
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_name;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords;
        break
      }
      case 5: {
        return this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("ClassDef");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_name;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    const x$3 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body;
    const data$6 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$6, data$6);
    const hash$7 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$7, 6)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$ClassDef)) {
      const ClassDef$1 = x$1;
      let $$x1;
      if (((this.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos === ClassDef$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_pos) && (this.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos === ClassDef$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_endPos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_name;
        const x$2 = ClassDef$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_name;
        $$x1 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x1 = false
      };
      if ((($$x1 && (this.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases === ClassDef$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_bases)) && (this.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords === ClassDef$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_keywords))) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$ClassDef__f_body;
        const x$4 = ClassDef$1.Ltigerpython_parser_ast_AstNode$ClassDef__f_body;
        return ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$ClassDef(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$ClassDef)))
}
const $d_Ltigerpython_parser_ast_AstNode$ClassDef = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$ClassDef: 0
}, false, "tigerpython.parser.ast.AstNode$ClassDef", {
  Ltigerpython_parser_ast_AstNode$ClassDef: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Decoratable: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$ClassDef.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$ClassDef;
class $c_Ltigerpython_parser_ast_AstNode$For extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, endPos, target, iter, body, elseBody, isAsync) {
    super();
    this.Ltigerpython_parser_ast_AstNode$For__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$For__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$For__f_target = null;
    this.Ltigerpython_parser_ast_AstNode$For__f_iter = null;
    this.Ltigerpython_parser_ast_AstNode$For__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$For__f_elseBody = null;
    this.Ltigerpython_parser_ast_AstNode$For__f_isAsync = false;
    this.Ltigerpython_parser_ast_AstNode$For__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$For__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$For__f_target = target;
    this.Ltigerpython_parser_ast_AstNode$For__f_iter = iter;
    this.Ltigerpython_parser_ast_AstNode$For__f_body = body;
    this.Ltigerpython_parser_ast_AstNode$For__f_elseBody = elseBody;
    this.Ltigerpython_parser_ast_AstNode$For__f_isAsync = isAsync;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_FOR)
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    $f_Ltigerpython_parser_ast_AstNode$Body__update__T__Ltigerpython_parser_ast_AstNode$Statement__V(this, key, value)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$For__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$For__f_endPos
  };
  body__Ltigerpython_parser_ast_AstNode$Statement() {
    return this.Ltigerpython_parser_ast_AstNode$For__f_body
  };
  body_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$For__f_body = x$1
  };
  elseBody__Ltigerpython_parser_ast_AstNode$Statement() {
    return this.Ltigerpython_parser_ast_AstNode$For__f_elseBody
  };
  elseBody_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$For__f_elseBody = x$1
  };
  kind__s_Enumeration$Value() {
    return (this.Ltigerpython_parser_ast_AstNode$For__f_isAsync ? $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_FOR : $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_FOR)
  };
  productPrefix__T() {
    return "For"
  };
  productArity__I() {
    return 7
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$For__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$For__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$For__f_target;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$For__f_iter;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$For__f_body;
        break
      }
      case 5: {
        return this.Ltigerpython_parser_ast_AstNode$For__f_elseBody;
        break
      }
      case 6: {
        return this.Ltigerpython_parser_ast_AstNode$For__f_isAsync;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("For");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$For__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$For__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$For__f_target;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$For__f_iter;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$For__f_body;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    const x$3 = this.Ltigerpython_parser_ast_AstNode$For__f_elseBody;
    const data$6 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$6, data$6);
    const hash$7 = acc;
    const data$7 = (this.Ltigerpython_parser_ast_AstNode$For__f_isAsync ? 1231 : 1237);
    acc = $m_sr_Statics$().mix__I__I__I(hash$7, data$7);
    const hash$8 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$8, 7)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$For)) {
      const For$1 = x$1;
      let $$x3;
      if ((((this.Ltigerpython_parser_ast_AstNode$For__f_pos === For$1.Ltigerpython_parser_ast_AstNode$For__f_pos) && (this.Ltigerpython_parser_ast_AstNode$For__f_endPos === For$1.Ltigerpython_parser_ast_AstNode$For__f_endPos)) && (this.Ltigerpython_parser_ast_AstNode$For__f_isAsync === For$1.Ltigerpython_parser_ast_AstNode$For__f_isAsync))) {
        const x = this.Ltigerpython_parser_ast_AstNode$For__f_target;
        const x$2 = For$1.Ltigerpython_parser_ast_AstNode$For__f_target;
        $$x3 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x3 = false
      };
      let $$x2;
      if ($$x3) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$For__f_iter;
        const x$4 = For$1.Ltigerpython_parser_ast_AstNode$For__f_iter;
        $$x2 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$For__f_body;
        const x$6 = For$1.Ltigerpython_parser_ast_AstNode$For__f_body;
        $$x1 = ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$7 = this.Ltigerpython_parser_ast_AstNode$For__f_elseBody;
        const x$8 = For$1.Ltigerpython_parser_ast_AstNode$For__f_elseBody;
        return ((x$7 === null) ? (x$8 === null) : x$7.equals__O__Z(x$8))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$For(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$For)))
}
const $d_Ltigerpython_parser_ast_AstNode$For = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$For: 0
}, false, "tigerpython.parser.ast.AstNode$For", {
  Ltigerpython_parser_ast_AstNode$For: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Body: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$For.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$For;
class $c_Ltigerpython_parser_ast_AstNode$FunctionDef extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, endPos, name, params, body, returns, isAsync) {
    super();
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name = null;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params = null;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns = null;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_isAsync = false;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_docString = null;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_decoratorList = null;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name = name;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params = params;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body = body;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns = returns;
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_isAsync = isAsync;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_FUNCTION_DEF);
    $f_Ltigerpython_parser_ast_AstNode$Decoratable__$init$__V(this);
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_docString = $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$extractDocString__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body)
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    $f_Ltigerpython_parser_ast_AstNode$Decoratable__update__T__Ltigerpython_parser_ast_AstNode$Statement__V(this, key, value)
  };
  decoratorList__ALtigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_decoratorList
  };
  decoratorList_$eq__ALtigerpython_parser_ast_AstNode$Expression__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_decoratorList = x$1
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos
  };
  body_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body = x$1
  };
  getName__T() {
    return ((this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name !== null) ? this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name.Ltigerpython_parser_ast_AstNode$Name__f_name : "")
  };
  kind__s_Enumeration$Value() {
    return (this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_isAsync ? $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_ASYNC_FUNCTION_DEF : $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_FUNCTION_DEF)
  };
  toString__T() {
    if (((this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name !== null) && (this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params !== null))) {
      const $$x5 = $m_sc_StringOps$();
      const $$x4 = $f_Ltigerpython_parser_ast_AstNode$Decoratable__getDecoratorString__T(this);
      const this$2 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name;
      const $$x3 = this$2.Ltigerpython_parser_ast_AstNode$Name__f_name;
      const $$x2 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params.toString__T();
      const $$x1 = $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$str__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body);
      const x = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_docString;
      const len = (x.length | 0);
      const sb = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), len);
      let i = 0;
      while ((i < len)) {
        const index = i;
        const x$1 = (65535 & (x.charCodeAt(index) | 0));
        if ((x$1 >= 32)) {
          const str = String.fromCharCode(x$1);
          sb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + sb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
        };
        i = ((1 + i) | 0)
      };
      const array = [$$x4, $$x3, $$x2, $$x1, ((len === sb.length__I()) ? x : sb.jl_StringBuilder__f_java$lang$StringBuilder$$content)];
      return $$x5.format$extension__T__sci_Seq__T("%sFunctionDef(%s, (%s), body: %s, doc: %s)", new $c_sjsr_WrappedVarArgs(array))
    } else if ((this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name !== null)) {
      const $$x6 = $m_sc_StringOps$();
      const this$10 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name;
      const array$1 = [this$10.Ltigerpython_parser_ast_AstNode$Name__f_name];
      return $$x6.format$extension__T__sci_Seq__T("FunctionDef(%s, ???)", new $c_sjsr_WrappedVarArgs(array$1))
    } else {
      return "FunctionDef(???)"
    }
  };
  updateDocString__V() {
    this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_docString = $m_Ltigerpython_parser_ast_AstNode$().tigerpython$parser$ast$AstNode$$extractDocString__Ltigerpython_parser_ast_AstNode__T(this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body)
  };
  productPrefix__T() {
    return "FunctionDef"
  };
  productArity__I() {
    return 7
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body;
        break
      }
      case 5: {
        return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns;
        break
      }
      case 6: {
        return this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_isAsync;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("FunctionDef");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    const x$3 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns;
    const data$6 = $m_sr_Statics$().anyHash__O__I(x$3);
    acc = $m_sr_Statics$().mix__I__I__I(hash$6, data$6);
    const hash$7 = acc;
    const data$7 = (this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_isAsync ? 1231 : 1237);
    acc = $m_sr_Statics$().mix__I__I__I(hash$7, data$7);
    const hash$8 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$8, 7)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$FunctionDef)) {
      const FunctionDef$1 = x$1;
      let $$x3;
      if ((((this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos === FunctionDef$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_pos) && (this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos === FunctionDef$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_endPos)) && (this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_isAsync === FunctionDef$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_isAsync))) {
        const x = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name;
        const x$2 = FunctionDef$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_name;
        $$x3 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x3 = false
      };
      let $$x2;
      if ($$x3) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params;
        const x$4 = FunctionDef$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_params;
        $$x2 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body;
        const x$6 = FunctionDef$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_body;
        $$x1 = ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$7 = this.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns;
        const x$8 = FunctionDef$1.Ltigerpython_parser_ast_AstNode$FunctionDef__f_returns;
        return ((x$7 === null) ? (x$8 === null) : x$7.equals__O__Z(x$8))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$FunctionDef(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$FunctionDef)))
}
const $d_Ltigerpython_parser_ast_AstNode$FunctionDef = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$FunctionDef: 0
}, false, "tigerpython.parser.ast.AstNode$FunctionDef", {
  Ltigerpython_parser_ast_AstNode$FunctionDef: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Decoratable: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$FunctionDef.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$FunctionDef;
class $c_Ltigerpython_parser_ast_AstNode$List extends $c_Ltigerpython_parser_ast_AstNode$SequenceExpression {
  constructor(pos, endPos, elements) {
    super();
    this.Ltigerpython_parser_ast_AstNode$List__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$List__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$List__f_elements = null;
    this.Ltigerpython_parser_ast_AstNode$List__f_expr_context = null;
    this.Ltigerpython_parser_ast_AstNode$List__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$List__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$List__f_elements = elements;
    const _kind = $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_LIST;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, _kind);
    this.Ltigerpython_parser_ast_AstNode$List__f_expr_context = $m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_LOAD
  };
  expr_context_$eq__s_Enumeration$Value__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$List__f_expr_context = x$1
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$List__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$List__f_endPos
  };
  elements__ALtigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$List__f_elements
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$List__f_elements);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("List(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  productPrefix__T() {
    return "List"
  };
  productArity__I() {
    return 3
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$List__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$List__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$List__f_elements;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("List");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$List__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$List__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$List__f_elements;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$4, 3)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$List)) {
      const List$1 = x$1;
      return (((this.Ltigerpython_parser_ast_AstNode$List__f_pos === List$1.Ltigerpython_parser_ast_AstNode$List__f_pos) && (this.Ltigerpython_parser_ast_AstNode$List__f_endPos === List$1.Ltigerpython_parser_ast_AstNode$List__f_endPos)) && (this.Ltigerpython_parser_ast_AstNode$List__f_elements === List$1.Ltigerpython_parser_ast_AstNode$List__f_elements))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$List(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$List)))
}
const $d_Ltigerpython_parser_ast_AstNode$List = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$List: 0
}, false, "tigerpython.parser.ast.AstNode$List", {
  Ltigerpython_parser_ast_AstNode$List: 1,
  Ltigerpython_parser_ast_AstNode$SequenceExpression: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  Ltigerpython_parser_ast_AstNode$ContextExpression: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$List.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$List;
class $c_Ltigerpython_parser_ast_AstNode$Tuple extends $c_Ltigerpython_parser_ast_AstNode$SequenceExpression {
  constructor(pos, elements) {
    super();
    this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements = null;
    this.Ltigerpython_parser_ast_AstNode$Tuple__f_expr_context = null;
    this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements = elements;
    const _kind = $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_TUPLE;
    $ct_Ltigerpython_parser_ast_AstNode$Expression__s_Enumeration$Value__(this, _kind);
    this.Ltigerpython_parser_ast_AstNode$Tuple__f_expr_context = $m_Ltigerpython_parser_ast_ExprContext$().Ltigerpython_parser_ast_ExprContext$__f_LOAD
  };
  expr_context_$eq__s_Enumeration$Value__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$Tuple__f_expr_context = x$1
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos
  };
  elements__ALtigerpython_parser_ast_AstNode$Expression() {
    return this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements
  };
  length__I() {
    return this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u.length
  };
  endPos__I() {
    const xs = this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
    if ((xs.u.length !== 0)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs$1 = this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
      const x1 = $$x1.last$extension__O__O(xs$1);
      return ($is_Ltigerpython_parser_ast_AstNode$Span(x1) ? x1.endPos__I() : this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos)
    } else {
      return this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos
    }
  };
  commaPos__I() {
    if ((this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u.length > 1)) {
      const $$x1 = $m_sc_ArrayOps$();
      const xs = this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
      const x1 = $$x1.head$extension__O__O(xs);
      return ($is_Ltigerpython_parser_ast_AstNode$Span(x1) ? x1.endPos__I() : (((-1) + this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements.u[1].pos__I()) | 0))
    } else {
      return this.endPos__I()
    }
  };
  toString__T() {
    const $$x1 = $m_sc_StringOps$();
    const this$2 = $m_s_Predef$().wrapRefArray__AO__scm_ArraySeq$ofRef(this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements);
    const array = [$f_sc_IterableOnceOps__mkString__T__T__T__T(this$2, "", ", ", "")];
    return $$x1.format$extension__T__sci_Seq__T("Tuple(%s)", new $c_sjsr_WrappedVarArgs(array))
  };
  isValidAssignTarget__Z() {
    return true
  };
  productPrefix__T() {
    return "Tuple"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("Tuple");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements;
    const data$2 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$3, 2)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$Tuple)) {
      const Tuple$1 = x$1;
      return ((this.Ltigerpython_parser_ast_AstNode$Tuple__f_pos === Tuple$1.Ltigerpython_parser_ast_AstNode$Tuple__f_pos) && (this.Ltigerpython_parser_ast_AstNode$Tuple__f_elements === Tuple$1.Ltigerpython_parser_ast_AstNode$Tuple__f_elements))
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$Tuple(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$Tuple)))
}
const $d_Ltigerpython_parser_ast_AstNode$Tuple = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$Tuple: 0
}, false, "tigerpython.parser.ast.AstNode$Tuple", {
  Ltigerpython_parser_ast_AstNode$Tuple: 1,
  Ltigerpython_parser_ast_AstNode$SequenceExpression: 1,
  Ltigerpython_parser_ast_AstNode$Expression: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$ContextExpression: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$Tuple.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$Tuple;
class $c_Ltigerpython_parser_ast_AstNode$While extends $c_Ltigerpython_parser_ast_AstNode$Statement {
  constructor(pos, endPos, test, body, elseBody) {
    super();
    this.Ltigerpython_parser_ast_AstNode$While__f_pos = 0;
    this.Ltigerpython_parser_ast_AstNode$While__f_endPos = 0;
    this.Ltigerpython_parser_ast_AstNode$While__f_test = null;
    this.Ltigerpython_parser_ast_AstNode$While__f_body = null;
    this.Ltigerpython_parser_ast_AstNode$While__f_elseBody = null;
    this.Ltigerpython_parser_ast_AstNode$While__f_pos = pos;
    this.Ltigerpython_parser_ast_AstNode$While__f_endPos = endPos;
    this.Ltigerpython_parser_ast_AstNode$While__f_test = test;
    this.Ltigerpython_parser_ast_AstNode$While__f_body = body;
    this.Ltigerpython_parser_ast_AstNode$While__f_elseBody = elseBody;
    $ct_Ltigerpython_parser_ast_AstNode$Statement__s_Enumeration$Value__(this, $m_Ltigerpython_parser_ast_AstNodeKind$().Ltigerpython_parser_ast_AstNodeKind$__f_WHILE)
  };
  update__T__Ltigerpython_parser_ast_AstNode$Statement__V(key, value) {
    $f_Ltigerpython_parser_ast_AstNode$Body__update__T__Ltigerpython_parser_ast_AstNode$Statement__V(this, key, value)
  };
  pos__I() {
    return this.Ltigerpython_parser_ast_AstNode$While__f_pos
  };
  endPos__I() {
    return this.Ltigerpython_parser_ast_AstNode$While__f_endPos
  };
  body__Ltigerpython_parser_ast_AstNode$Statement() {
    return this.Ltigerpython_parser_ast_AstNode$While__f_body
  };
  body_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$While__f_body = x$1
  };
  elseBody__Ltigerpython_parser_ast_AstNode$Statement() {
    return this.Ltigerpython_parser_ast_AstNode$While__f_elseBody
  };
  elseBody_$eq__Ltigerpython_parser_ast_AstNode$Statement__V(x$1) {
    this.Ltigerpython_parser_ast_AstNode$While__f_elseBody = x$1
  };
  productPrefix__T() {
    return "While"
  };
  productArity__I() {
    return 5
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.Ltigerpython_parser_ast_AstNode$While__f_pos;
        break
      }
      case 1: {
        return this.Ltigerpython_parser_ast_AstNode$While__f_endPos;
        break
      }
      case 2: {
        return this.Ltigerpython_parser_ast_AstNode$While__f_test;
        break
      }
      case 3: {
        return this.Ltigerpython_parser_ast_AstNode$While__f_body;
        break
      }
      case 4: {
        return this.Ltigerpython_parser_ast_AstNode$While__f_elseBody;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    let acc = (-889275714);
    const hash = acc;
    const data = $f_T__hashCode__I("While");
    acc = $m_sr_Statics$().mix__I__I__I(hash, data);
    const hash$1 = acc;
    const data$1 = this.Ltigerpython_parser_ast_AstNode$While__f_pos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$1, data$1);
    const hash$2 = acc;
    const data$2 = this.Ltigerpython_parser_ast_AstNode$While__f_endPos;
    acc = $m_sr_Statics$().mix__I__I__I(hash$2, data$2);
    const hash$3 = acc;
    const x = this.Ltigerpython_parser_ast_AstNode$While__f_test;
    const data$3 = $m_sr_Statics$().anyHash__O__I(x);
    acc = $m_sr_Statics$().mix__I__I__I(hash$3, data$3);
    const hash$4 = acc;
    const x$1 = this.Ltigerpython_parser_ast_AstNode$While__f_body;
    const data$4 = $m_sr_Statics$().anyHash__O__I(x$1);
    acc = $m_sr_Statics$().mix__I__I__I(hash$4, data$4);
    const hash$5 = acc;
    const x$2 = this.Ltigerpython_parser_ast_AstNode$While__f_elseBody;
    const data$5 = $m_sr_Statics$().anyHash__O__I(x$2);
    acc = $m_sr_Statics$().mix__I__I__I(hash$5, data$5);
    const hash$6 = acc;
    return $m_sr_Statics$().finalizeHash__I__I__I(hash$6, 5)
  };
  toString__T() {
    return $m_sr_ScalaRunTime$()._toString__s_Product__T(this)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_Ltigerpython_parser_ast_AstNode$While)) {
      const While$1 = x$1;
      let $$x2;
      if (((this.Ltigerpython_parser_ast_AstNode$While__f_pos === While$1.Ltigerpython_parser_ast_AstNode$While__f_pos) && (this.Ltigerpython_parser_ast_AstNode$While__f_endPos === While$1.Ltigerpython_parser_ast_AstNode$While__f_endPos))) {
        const x = this.Ltigerpython_parser_ast_AstNode$While__f_test;
        const x$2 = While$1.Ltigerpython_parser_ast_AstNode$While__f_test;
        $$x2 = ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      } else {
        $$x2 = false
      };
      let $$x1;
      if ($$x2) {
        const x$3 = this.Ltigerpython_parser_ast_AstNode$While__f_body;
        const x$4 = While$1.Ltigerpython_parser_ast_AstNode$While__f_body;
        $$x1 = ((x$3 === null) ? (x$4 === null) : x$3.equals__O__Z(x$4))
      } else {
        $$x1 = false
      };
      if ($$x1) {
        const x$5 = this.Ltigerpython_parser_ast_AstNode$While__f_elseBody;
        const x$6 = While$1.Ltigerpython_parser_ast_AstNode$While__f_elseBody;
        return ((x$5 === null) ? (x$6 === null) : x$5.equals__O__Z(x$6))
      } else {
        return false
      }
    } else {
      return false
    }
  };
}
function $isArrayOf_Ltigerpython_parser_ast_AstNode$While(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.Ltigerpython_parser_ast_AstNode$While)))
}
const $d_Ltigerpython_parser_ast_AstNode$While = new $TypeData().initClass({
  Ltigerpython_parser_ast_AstNode$While: 0
}, false, "tigerpython.parser.ast.AstNode$While", {
  Ltigerpython_parser_ast_AstNode$While: 1,
  Ltigerpython_parser_ast_AstNode$Statement: 1,
  Ltigerpython_parser_ast_AstNode: 1,
  O: 1,
  Ltigerpython_parser_ast_AstNode$Body: 1,
  Ltigerpython_parser_ast_AstNode$CompoundStatement: 1,
  Ltigerpython_parser_ast_AstNode$Span: 1,
  s_Product: 1,
  s_Equals: 1,
  Ljava_io_Serializable: 1
});
$c_Ltigerpython_parser_ast_AstNode$While.prototype.$classData = $d_Ltigerpython_parser_ast_AstNode$While;
const $f_sc_Seq__equals__O__Z = (function($thiz, o) {
  if (($thiz === o)) {
    return true
  } else if ($is_sc_Seq(o)) {
    const x2 = o;
    return ((x2 === $thiz) || (x2.canEqual__O__Z($thiz) && $thiz.sameElements__sc_IterableOnce__Z(x2)))
  } else {
    return false
  }
});
function $is_sc_Seq(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_Seq)))
}
function $isArrayOf_sc_Seq(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_Seq)))
}
const $p_sc_SeqView$Sorted___sorted$lzycompute__sc_Seq = (function($thiz) {
  if ((!$thiz.sc_SeqView$Sorted__f_bitmap$0)) {
    const len = $thiz.sc_SeqView$Sorted__f_underlying.length__I();
    let res;
    if ((len === 0)) {
      res = $m_sci_Nil$()
    } else if ((len === 1)) {
      const this$4 = $m_sci_List$();
      const array = [$thiz.sc_SeqView$Sorted__f_underlying.head__O()];
      const elems = new $c_sjsr_WrappedVarArgs(array);
      res = this$4.from__sc_IterableOnce__sci_List(elems)
    } else {
      const arr = $newArrayObject($d_O.getArrayOf(), [len]);
      const this$5 = $thiz.sc_SeqView$Sorted__f_underlying;
      this$5.copyToArray__O__I__I(arr, 0);
      const comparator = $thiz.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$ord;
      $m_ju_Arrays$().sort__AO__ju_Comparator__V(arr, comparator);
      res = $m_sci_ArraySeq$().unsafeWrapArray__O__sci_ArraySeq(arr)
    };
    $thiz.sc_SeqView$Sorted__f_evaluated = true;
    $thiz.sc_SeqView$Sorted__f_underlying = null;
    $thiz.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$_sorted = res;
    $thiz.sc_SeqView$Sorted__f_bitmap$0 = true
  };
  return $thiz.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$_sorted
});
class $c_sc_SeqView$Sorted extends $c_O {
  constructor(underlying, ord) {
    super();
    this.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$_sorted = null;
    this.sc_SeqView$Sorted__f_underlying = null;
    this.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$ord = null;
    this.sc_SeqView$Sorted__f_evaluated = false;
    this.sc_SeqView$Sorted__f_bitmap$0 = false;
    this.sc_SeqView$Sorted__f_underlying = underlying;
    this.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$ord = ord;
    this.sc_SeqView$Sorted__f_evaluated = false
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sc_View$()
  };
  toString__T() {
    return $f_sc_View__toString__T(this)
  };
  className__T() {
    return "SeqView"
  };
  newSpecificBuilder__scm_Builder() {
    return $m_sc_View$().newBuilder__scm_Builder()
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_SeqView$Sorted$ReverseSorted(this).iterator__sc_Iterator()
  };
  indexWhere__F1__I__I(p, from) {
    const this$1 = this.iterator__sc_Iterator();
    return $f_sc_Iterator__indexWhere__F1__I__I(this$1, p, from)
  };
  contains__O__Z(elem) {
    return $f_sc_SeqOps__contains__O__Z(this, elem)
  };
  lengthCompare__I__I(len) {
    return $f_sc_IterableOps__sizeCompare__I__I(this, len)
  };
  head__O() {
    return this.iterator__sc_Iterator().next__O()
  };
  tail__O() {
    return $f_sc_IterableOps__tail__O(this)
  };
  foreach__F1__V(f) {
    $f_sc_IterableOnceOps__foreach__F1__V(this, f)
  };
  exists__F1__Z(p) {
    return $f_sc_IterableOnceOps__exists__F1__Z(this, p)
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  scala$collection$SeqView$Sorted$$_sorted__sc_Seq() {
    return ((!this.sc_SeqView$Sorted__f_bitmap$0) ? $p_sc_SeqView$Sorted___sorted$lzycompute__sc_Seq(this) : this.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$_sorted)
  };
  scala$collection$SeqView$Sorted$$elems__sc_SeqOps() {
    const orig = this.sc_SeqView$Sorted__f_underlying;
    return (this.sc_SeqView$Sorted__f_evaluated ? this.scala$collection$SeqView$Sorted$$_sorted__sc_Seq() : orig)
  };
  apply__I__O(i) {
    return this.scala$collection$SeqView$Sorted$$_sorted__sc_Seq().apply__I__O(i)
  };
  length__I() {
    return this.scala$collection$SeqView$Sorted$$elems__sc_SeqOps().length__I()
  };
  iterator__sc_Iterator() {
    const this$2 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    const xs = new $c_sjsr_AnonFunction0(((this$1) => (() => this$1.scala$collection$SeqView$Sorted$$_sorted__sc_Seq().iterator__sc_Iterator()))(this));
    return this$2.concat__F0__sc_Iterator(xs)
  };
  knownSize__I() {
    return this.scala$collection$SeqView$Sorted$$elems__sc_SeqOps().knownSize__I()
  };
  isEmpty__Z() {
    return this.scala$collection$SeqView$Sorted$$elems__sc_SeqOps().isEmpty__Z()
  };
  sorted__s_math_Ordering__sc_SeqView(ord1) {
    const x$2 = this.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$ord;
    if (((ord1 === null) ? (x$2 === null) : ord1.equals__O__Z(x$2))) {
      return this
    } else {
      return (ord1.isReverseOf__s_math_Ordering__Z(this.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$ord) ? new $c_sc_SeqView$Sorted$ReverseSorted(this) : new $c_sc_SeqView$Sorted(this.scala$collection$SeqView$Sorted$$elems__sc_SeqOps(), ord1))
    }
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    const this$1 = $m_sc_View$();
    return this$1.from__sc_IterableOnce__sc_View(coll)
  };
  drop__I__O(n) {
    return $ct_sc_SeqView$Drop__sc_SeqOps__I__(new $c_sc_SeqView$Drop(), this, n)
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sc_SeqView(ord)
  };
}
const $d_sc_SeqView$Sorted = new $TypeData().initClass({
  sc_SeqView$Sorted: 0
}, false, "scala.collection.SeqView$Sorted", {
  sc_SeqView$Sorted: 1,
  O: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IterableOps: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  sc_View: 1,
  sc_Iterable: 1,
  sc_IterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sc_SeqView$Sorted.prototype.$classData = $d_sc_SeqView$Sorted;
const $p_sc_SeqView$Sorted$ReverseSorted___reversed$lzycompute__sc_SeqView$Reverse = (function($thiz) {
  if ((!$thiz.sc_SeqView$Sorted$ReverseSorted__f_bitmap$0)) {
    $thiz.sc_SeqView$Sorted$ReverseSorted__f__reversed = $ct_sc_SeqView$Reverse__sc_SeqOps__(new $c_sc_SeqView$Reverse(), $thiz.sc_SeqView$Sorted$ReverseSorted__f_$outer.scala$collection$SeqView$Sorted$$_sorted__sc_Seq());
    $thiz.sc_SeqView$Sorted$ReverseSorted__f_bitmap$0 = true
  };
  return $thiz.sc_SeqView$Sorted$ReverseSorted__f__reversed
});
const $p_sc_SeqView$Sorted$ReverseSorted___reversed__sc_SeqView$Reverse = (function($thiz) {
  return ((!$thiz.sc_SeqView$Sorted$ReverseSorted__f_bitmap$0) ? $p_sc_SeqView$Sorted$ReverseSorted___reversed$lzycompute__sc_SeqView$Reverse($thiz) : $thiz.sc_SeqView$Sorted$ReverseSorted__f__reversed)
});
class $c_sc_SeqView$Sorted$ReverseSorted extends $c_O {
  constructor(outer) {
    super();
    this.sc_SeqView$Sorted$ReverseSorted__f__reversed = null;
    this.sc_SeqView$Sorted$ReverseSorted__f_bitmap$0 = false;
    this.sc_SeqView$Sorted$ReverseSorted__f_$outer = null;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.sc_SeqView$Sorted$ReverseSorted__f_$outer = outer
    }
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sc_View$()
  };
  toString__T() {
    return $f_sc_View__toString__T(this)
  };
  className__T() {
    return "SeqView"
  };
  newSpecificBuilder__scm_Builder() {
    return $m_sc_View$().newBuilder__scm_Builder()
  };
  reverseIterator__sc_Iterator() {
    return this.sc_SeqView$Sorted$ReverseSorted__f_$outer.iterator__sc_Iterator()
  };
  indexWhere__F1__I__I(p, from) {
    const this$1 = this.iterator__sc_Iterator();
    return $f_sc_Iterator__indexWhere__F1__I__I(this$1, p, from)
  };
  contains__O__Z(elem) {
    return $f_sc_SeqOps__contains__O__Z(this, elem)
  };
  lengthCompare__I__I(len) {
    return $f_sc_IterableOps__sizeCompare__I__I(this, len)
  };
  head__O() {
    return this.iterator__sc_Iterator().next__O()
  };
  tail__O() {
    return $f_sc_IterableOps__tail__O(this)
  };
  foreach__F1__V(f) {
    $f_sc_IterableOnceOps__foreach__F1__V(this, f)
  };
  exists__F1__Z(p) {
    return $f_sc_IterableOnceOps__exists__F1__Z(this, p)
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  apply__I__O(i) {
    return $p_sc_SeqView$Sorted$ReverseSorted___reversed__sc_SeqView$Reverse(this).apply__I__O(i)
  };
  length__I() {
    return this.sc_SeqView$Sorted$ReverseSorted__f_$outer.scala$collection$SeqView$Sorted$$elems__sc_SeqOps().length__I()
  };
  iterator__sc_Iterator() {
    const this$2 = $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty;
    const xs = new $c_sjsr_AnonFunction0(((this$1) => (() => $p_sc_SeqView$Sorted$ReverseSorted___reversed__sc_SeqView$Reverse(this$1).iterator__sc_Iterator()))(this));
    return this$2.concat__F0__sc_Iterator(xs)
  };
  knownSize__I() {
    return this.sc_SeqView$Sorted$ReverseSorted__f_$outer.scala$collection$SeqView$Sorted$$elems__sc_SeqOps().knownSize__I()
  };
  isEmpty__Z() {
    return this.sc_SeqView$Sorted$ReverseSorted__f_$outer.scala$collection$SeqView$Sorted$$elems__sc_SeqOps().isEmpty__Z()
  };
  sorted__s_math_Ordering__sc_SeqView(ord1) {
    const x$2 = this.sc_SeqView$Sorted$ReverseSorted__f_$outer.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$ord;
    if (((ord1 === null) ? (x$2 === null) : ord1.equals__O__Z(x$2))) {
      return this.sc_SeqView$Sorted$ReverseSorted__f_$outer
    } else {
      return (ord1.isReverseOf__s_math_Ordering__Z(this.sc_SeqView$Sorted$ReverseSorted__f_$outer.sc_SeqView$Sorted__f_scala$collection$SeqView$Sorted$$ord) ? this : new $c_sc_SeqView$Sorted(this.sc_SeqView$Sorted$ReverseSorted__f_$outer.scala$collection$SeqView$Sorted$$elems__sc_SeqOps(), ord1))
    }
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    const this$1 = $m_sc_View$();
    return this$1.from__sc_IterableOnce__sc_View(coll)
  };
  drop__I__O(n) {
    return $ct_sc_SeqView$Drop__sc_SeqOps__I__(new $c_sc_SeqView$Drop(), this, n)
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sc_SeqView(ord)
  };
}
const $d_sc_SeqView$Sorted$ReverseSorted = new $TypeData().initClass({
  sc_SeqView$Sorted$ReverseSorted: 0
}, false, "scala.collection.SeqView$Sorted$ReverseSorted", {
  sc_SeqView$Sorted$ReverseSorted: 1,
  O: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IterableOps: 1,
  sc_IterableOnce: 1,
  sc_IterableOnceOps: 1,
  sc_View: 1,
  sc_Iterable: 1,
  sc_IterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sc_SeqView$Sorted$ReverseSorted.prototype.$classData = $d_sc_SeqView$Sorted$ReverseSorted;
class $c_sc_View$$anon$1 extends $c_sc_AbstractView {
  constructor(it$1) {
    super();
    this.sc_View$$anon$1__f_it$1 = null;
    this.sc_View$$anon$1__f_it$1 = it$1
  };
  iterator__sc_Iterator() {
    return this.sc_View$$anon$1__f_it$1.apply__O()
  };
}
const $d_sc_View$$anon$1 = new $TypeData().initClass({
  sc_View$$anon$1: 0
}, false, "scala.collection.View$$anon$1", {
  sc_View$$anon$1: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$$anon$1.prototype.$classData = $d_sc_View$$anon$1;
class $c_sc_View$Concat extends $c_sc_AbstractView {
  constructor(prefix, suffix) {
    super();
    this.sc_View$Concat__f_prefix = null;
    this.sc_View$Concat__f_suffix = null;
    this.sc_View$Concat__f_prefix = prefix;
    this.sc_View$Concat__f_suffix = suffix
  };
  iterator__sc_Iterator() {
    const this$2 = this.sc_View$Concat__f_prefix.iterator__sc_Iterator();
    const xs = new $c_sjsr_AnonFunction0(((this$1) => (() => this$1.sc_View$Concat__f_suffix.iterator__sc_Iterator()))(this));
    return this$2.concat__F0__sc_Iterator(xs)
  };
  knownSize__I() {
    const prefixSize = this.sc_View$Concat__f_prefix.knownSize__I();
    if ((prefixSize >= 0)) {
      const suffixSize = this.sc_View$Concat__f_suffix.knownSize__I();
      return ((suffixSize >= 0) ? ((prefixSize + suffixSize) | 0) : (-1))
    } else {
      return (-1)
    }
  };
  isEmpty__Z() {
    return (this.sc_View$Concat__f_prefix.isEmpty__Z() && this.sc_View$Concat__f_suffix.isEmpty__Z())
  };
}
const $d_sc_View$Concat = new $TypeData().initClass({
  sc_View$Concat: 0
}, false, "scala.collection.View$Concat", {
  sc_View$Concat: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$Concat.prototype.$classData = $d_sc_View$Concat;
const $ct_sc_View$Drop__sc_IterableOps__I__ = (function($thiz, underlying, n) {
  $thiz.sc_View$Drop__f_underlying = underlying;
  $thiz.sc_View$Drop__f_n = n;
  $thiz.sc_View$Drop__f_normN = ((n > 0) ? n : 0);
  return $thiz
});
class $c_sc_View$Drop extends $c_sc_AbstractView {
  constructor() {
    super();
    this.sc_View$Drop__f_underlying = null;
    this.sc_View$Drop__f_n = 0;
    this.sc_View$Drop__f_normN = 0
  };
  iterator__sc_Iterator() {
    return this.sc_View$Drop__f_underlying.iterator__sc_Iterator().drop__I__sc_Iterator(this.sc_View$Drop__f_n)
  };
  knownSize__I() {
    const size = this.sc_View$Drop__f_underlying.knownSize__I();
    if ((size >= 0)) {
      const x = ((size - this.sc_View$Drop__f_normN) | 0);
      return ((x > 0) ? x : 0)
    } else {
      return (-1)
    }
  };
  isEmpty__Z() {
    const this$1 = this.iterator__sc_Iterator();
    return (!this$1.hasNext__Z())
  };
}
const $d_sc_View$Drop = new $TypeData().initClass({
  sc_View$Drop: 0
}, false, "scala.collection.View$Drop", {
  sc_View$Drop: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$Drop.prototype.$classData = $d_sc_View$Drop;
class $c_sc_View$Elems extends $c_sc_AbstractView {
  constructor(xs) {
    super();
    this.sc_View$Elems__f_xs = null;
    this.sc_View$Elems__f_xs = xs
  };
  iterator__sc_Iterator() {
    return this.sc_View$Elems__f_xs.iterator__sc_Iterator()
  };
  knownSize__I() {
    return this.sc_View$Elems__f_xs.knownSize__I()
  };
  isEmpty__Z() {
    return this.sc_View$Elems__f_xs.isEmpty__Z()
  };
}
const $d_sc_View$Elems = new $TypeData().initClass({
  sc_View$Elems: 0
}, false, "scala.collection.View$Elems", {
  sc_View$Elems: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$Elems.prototype.$classData = $d_sc_View$Elems;
class $c_sc_View$Filter extends $c_sc_AbstractView {
  constructor(underlying, p, isFlipped) {
    super();
    this.sc_View$Filter__f_underlying = null;
    this.sc_View$Filter__f_p = null;
    this.sc_View$Filter__f_isFlipped = false;
    this.sc_View$Filter__f_underlying = underlying;
    this.sc_View$Filter__f_p = p;
    this.sc_View$Filter__f_isFlipped = isFlipped
  };
  iterator__sc_Iterator() {
    const this$1 = this.sc_View$Filter__f_underlying.iterator__sc_Iterator();
    const p = this.sc_View$Filter__f_p;
    const isFlipped = this.sc_View$Filter__f_isFlipped;
    return new $c_sc_Iterator$$anon$6(this$1, p, isFlipped)
  };
  knownSize__I() {
    return ((this.sc_View$Filter__f_underlying.knownSize__I() === 0) ? 0 : (-1))
  };
  isEmpty__Z() {
    const this$1 = this.iterator__sc_Iterator();
    return (!this$1.hasNext__Z())
  };
}
const $d_sc_View$Filter = new $TypeData().initClass({
  sc_View$Filter: 0
}, false, "scala.collection.View$Filter", {
  sc_View$Filter: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$Filter.prototype.$classData = $d_sc_View$Filter;
const $ct_sc_View$Map__sc_IterableOps__F1__ = (function($thiz, underlying, f) {
  $thiz.sc_View$Map__f_underlying = underlying;
  $thiz.sc_View$Map__f_f = f;
  return $thiz
});
class $c_sc_View$Map extends $c_sc_AbstractView {
  constructor() {
    super();
    this.sc_View$Map__f_underlying = null;
    this.sc_View$Map__f_f = null
  };
  iterator__sc_Iterator() {
    const this$1 = this.sc_View$Map__f_underlying.iterator__sc_Iterator();
    const f = this.sc_View$Map__f_f;
    return new $c_sc_Iterator$$anon$9(this$1, f)
  };
  knownSize__I() {
    return this.sc_View$Map__f_underlying.knownSize__I()
  };
  isEmpty__Z() {
    return this.sc_View$Map__f_underlying.isEmpty__Z()
  };
}
const $d_sc_View$Map = new $TypeData().initClass({
  sc_View$Map: 0
}, false, "scala.collection.View$Map", {
  sc_View$Map: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$Map.prototype.$classData = $d_sc_View$Map;
class $c_sc_View$Tabulate extends $c_sc_AbstractView {
  constructor(n, f) {
    super();
    this.sc_View$Tabulate__f_n = 0;
    this.sc_View$Tabulate__f_f = null;
    this.sc_View$Tabulate__f_n = n;
    this.sc_View$Tabulate__f_f = f
  };
  iterator__sc_Iterator() {
    $m_sc_Iterator$();
    const end = this.sc_View$Tabulate__f_n;
    const f = this.sc_View$Tabulate__f_f;
    return new $c_sc_Iterator$$anon$23(end, f)
  };
  knownSize__I() {
    const that = this.sc_View$Tabulate__f_n;
    return ((that < 0) ? 0 : that)
  };
  isEmpty__Z() {
    return (this.sc_View$Tabulate__f_n <= 0)
  };
}
const $d_sc_View$Tabulate = new $TypeData().initClass({
  sc_View$Tabulate: 0
}, false, "scala.collection.View$Tabulate", {
  sc_View$Tabulate: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$Tabulate.prototype.$classData = $d_sc_View$Tabulate;
class $c_sc_View$TakeWhile extends $c_sc_AbstractView {
  constructor(underlying, p) {
    super();
    this.sc_View$TakeWhile__f_underlying = null;
    this.sc_View$TakeWhile__f_p = null;
    this.sc_View$TakeWhile__f_underlying = underlying;
    this.sc_View$TakeWhile__f_p = p
  };
  iterator__sc_Iterator() {
    const this$1 = this.sc_View$TakeWhile__f_underlying.iterator__sc_Iterator();
    const p = this.sc_View$TakeWhile__f_p;
    return new $c_sc_Iterator$$anon$11(this$1, p)
  };
  knownSize__I() {
    return ((this.sc_View$TakeWhile__f_underlying.knownSize__I() === 0) ? 0 : (-1))
  };
  isEmpty__Z() {
    const this$1 = this.iterator__sc_Iterator();
    return (!this$1.hasNext__Z())
  };
}
const $d_sc_View$TakeWhile = new $TypeData().initClass({
  sc_View$TakeWhile: 0
}, false, "scala.collection.View$TakeWhile", {
  sc_View$TakeWhile: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1
});
$c_sc_View$TakeWhile.prototype.$classData = $d_sc_View$TakeWhile;
class $c_s_math_Numeric$ByteIsIntegral$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  sign__O__O(x) {
    const x$1 = (x | 0);
    return $f_s_math_Numeric$ByteIsIntegral__sign__B__B(this, x$1)
  };
  toInt__O__I(x) {
    const x$1 = (x | 0);
    return x$1
  };
  fromInt__I__O(x) {
    return ((x << 24) >> 24)
  };
  rem__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ByteIsIntegral__rem__B__B__B(this, x$1, y$1)
  };
  quot__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ByteIsIntegral__quot__B__B__B(this, x$1, y$1)
  };
  times__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ByteIsIntegral__times__B__B__B(this, x$1, y$1)
  };
  minus__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ByteIsIntegral__minus__B__B__B(this, x$1, y$1)
  };
  plus__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ByteIsIntegral__plus__B__B__B(this, x$1, y$1)
  };
  compare__O__O__I(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return ((x$1 - y$1) | 0)
  };
}
const $d_s_math_Numeric$ByteIsIntegral$ = new $TypeData().initClass({
  s_math_Numeric$ByteIsIntegral$: 0
}, false, "scala.math.Numeric$ByteIsIntegral$", {
  s_math_Numeric$ByteIsIntegral$: 1,
  O: 1,
  s_math_Numeric$ByteIsIntegral: 1,
  s_math_Integral: 1,
  s_math_Numeric: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1,
  s_math_Ordering$ByteOrdering: 1
});
$c_s_math_Numeric$ByteIsIntegral$.prototype.$classData = $d_s_math_Numeric$ByteIsIntegral$;
let $n_s_math_Numeric$ByteIsIntegral$ = (void 0);
function $m_s_math_Numeric$ByteIsIntegral$() {
  if ((!$n_s_math_Numeric$ByteIsIntegral$)) {
    $n_s_math_Numeric$ByteIsIntegral$ = new $c_s_math_Numeric$ByteIsIntegral$()
  };
  return $n_s_math_Numeric$ByteIsIntegral$
}
class $c_s_math_Numeric$CharIsIntegral$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  sign__O__O(x) {
    const x$1 = $uC(x);
    return $bC($f_s_math_Numeric$CharIsIntegral__sign__C__C(this, x$1))
  };
  toInt__O__I(x) {
    const x$1 = $uC(x);
    return x$1
  };
  fromInt__I__O(x) {
    return $bC((65535 & x))
  };
  rem__O__O__O(x, y) {
    const x$1 = $uC(x);
    const y$1 = $uC(y);
    return $bC($f_s_math_Numeric$CharIsIntegral__rem__C__C__C(this, x$1, y$1))
  };
  quot__O__O__O(x, y) {
    const x$1 = $uC(x);
    const y$1 = $uC(y);
    return $bC($f_s_math_Numeric$CharIsIntegral__quot__C__C__C(this, x$1, y$1))
  };
  times__O__O__O(x, y) {
    const x$1 = $uC(x);
    const y$1 = $uC(y);
    return $bC($f_s_math_Numeric$CharIsIntegral__times__C__C__C(this, x$1, y$1))
  };
  minus__O__O__O(x, y) {
    const x$1 = $uC(x);
    const y$1 = $uC(y);
    return $bC($f_s_math_Numeric$CharIsIntegral__minus__C__C__C(this, x$1, y$1))
  };
  plus__O__O__O(x, y) {
    const x$1 = $uC(x);
    const y$1 = $uC(y);
    return $bC($f_s_math_Numeric$CharIsIntegral__plus__C__C__C(this, x$1, y$1))
  };
  compare__O__O__I(x, y) {
    const x$1 = $uC(x);
    const y$1 = $uC(y);
    return ((x$1 - y$1) | 0)
  };
}
const $d_s_math_Numeric$CharIsIntegral$ = new $TypeData().initClass({
  s_math_Numeric$CharIsIntegral$: 0
}, false, "scala.math.Numeric$CharIsIntegral$", {
  s_math_Numeric$CharIsIntegral$: 1,
  O: 1,
  s_math_Numeric$CharIsIntegral: 1,
  s_math_Integral: 1,
  s_math_Numeric: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1,
  s_math_Ordering$CharOrdering: 1
});
$c_s_math_Numeric$CharIsIntegral$.prototype.$classData = $d_s_math_Numeric$CharIsIntegral$;
let $n_s_math_Numeric$CharIsIntegral$ = (void 0);
function $m_s_math_Numeric$CharIsIntegral$() {
  if ((!$n_s_math_Numeric$CharIsIntegral$)) {
    $n_s_math_Numeric$CharIsIntegral$ = new $c_s_math_Numeric$CharIsIntegral$()
  };
  return $n_s_math_Numeric$CharIsIntegral$
}
class $c_s_math_Numeric$IntIsIntegral$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  sign__O__O(x) {
    const x$1 = (x | 0);
    return ((x$1 === 0) ? 0 : ((x$1 < 0) ? (-1) : 1))
  };
  toInt__O__I(x) {
    const x$1 = (x | 0);
    return x$1
  };
  fromInt__I__O(x) {
    return x
  };
  rem__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$IntIsIntegral__rem__I__I__I(this, x$1, y$1)
  };
  quot__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$IntIsIntegral__quot__I__I__I(this, x$1, y$1)
  };
  times__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$IntIsIntegral__times__I__I__I(this, x$1, y$1)
  };
  minus__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$IntIsIntegral__minus__I__I__I(this, x$1, y$1)
  };
  plus__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$IntIsIntegral__plus__I__I__I(this, x$1, y$1)
  };
  compare__O__O__I(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return ((x$1 === y$1) ? 0 : ((x$1 < y$1) ? (-1) : 1))
  };
}
const $d_s_math_Numeric$IntIsIntegral$ = new $TypeData().initClass({
  s_math_Numeric$IntIsIntegral$: 0
}, false, "scala.math.Numeric$IntIsIntegral$", {
  s_math_Numeric$IntIsIntegral$: 1,
  O: 1,
  s_math_Numeric$IntIsIntegral: 1,
  s_math_Integral: 1,
  s_math_Numeric: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1,
  s_math_Ordering$IntOrdering: 1
});
$c_s_math_Numeric$IntIsIntegral$.prototype.$classData = $d_s_math_Numeric$IntIsIntegral$;
let $n_s_math_Numeric$IntIsIntegral$ = (void 0);
function $m_s_math_Numeric$IntIsIntegral$() {
  if ((!$n_s_math_Numeric$IntIsIntegral$)) {
    $n_s_math_Numeric$IntIsIntegral$ = new $c_s_math_Numeric$IntIsIntegral$()
  };
  return $n_s_math_Numeric$IntIsIntegral$
}
class $c_s_math_Numeric$LongIsIntegral$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  sign__O__O(x) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    return $m_s_math_package$().signum__J__J(new $c_RTLong(lo, hi))
  };
  toInt__O__I(x) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    return lo
  };
  fromInt__I__O(x) {
    const hi = (x >> 31);
    return new $c_RTLong(x, hi)
  };
  rem__O__O__O(x, y) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const t$1 = $uJ(y);
    const lo$1 = t$1.RTLong__f_lo;
    const hi$1 = t$1.RTLong__f_hi;
    return $f_s_math_Numeric$LongIsIntegral__rem__J__J__J(this, new $c_RTLong(lo, hi), new $c_RTLong(lo$1, hi$1))
  };
  quot__O__O__O(x, y) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const t$1 = $uJ(y);
    const lo$1 = t$1.RTLong__f_lo;
    const hi$1 = t$1.RTLong__f_hi;
    return $f_s_math_Numeric$LongIsIntegral__quot__J__J__J(this, new $c_RTLong(lo, hi), new $c_RTLong(lo$1, hi$1))
  };
  times__O__O__O(x, y) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const t$1 = $uJ(y);
    const lo$1 = t$1.RTLong__f_lo;
    const hi$1 = t$1.RTLong__f_hi;
    return $f_s_math_Numeric$LongIsIntegral__times__J__J__J(this, new $c_RTLong(lo, hi), new $c_RTLong(lo$1, hi$1))
  };
  minus__O__O__O(x, y) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const t$1 = $uJ(y);
    const lo$1 = t$1.RTLong__f_lo;
    const hi$1 = t$1.RTLong__f_hi;
    return $f_s_math_Numeric$LongIsIntegral__minus__J__J__J(this, new $c_RTLong(lo, hi), new $c_RTLong(lo$1, hi$1))
  };
  plus__O__O__O(x, y) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const t$1 = $uJ(y);
    const lo$1 = t$1.RTLong__f_lo;
    const hi$1 = t$1.RTLong__f_hi;
    return $f_s_math_Numeric$LongIsIntegral__plus__J__J__J(this, new $c_RTLong(lo, hi), new $c_RTLong(lo$1, hi$1))
  };
  compare__O__O__I(x, y) {
    const t = $uJ(x);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    const t$1 = $uJ(y);
    const lo$1 = t$1.RTLong__f_lo;
    const hi$1 = t$1.RTLong__f_hi;
    return $m_RTLong$().org$scalajs$linker$runtime$RuntimeLong$$compare__I__I__I__I__I(lo, hi, lo$1, hi$1)
  };
}
const $d_s_math_Numeric$LongIsIntegral$ = new $TypeData().initClass({
  s_math_Numeric$LongIsIntegral$: 0
}, false, "scala.math.Numeric$LongIsIntegral$", {
  s_math_Numeric$LongIsIntegral$: 1,
  O: 1,
  s_math_Numeric$LongIsIntegral: 1,
  s_math_Integral: 1,
  s_math_Numeric: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1,
  s_math_Ordering$LongOrdering: 1
});
$c_s_math_Numeric$LongIsIntegral$.prototype.$classData = $d_s_math_Numeric$LongIsIntegral$;
let $n_s_math_Numeric$LongIsIntegral$ = (void 0);
function $m_s_math_Numeric$LongIsIntegral$() {
  if ((!$n_s_math_Numeric$LongIsIntegral$)) {
    $n_s_math_Numeric$LongIsIntegral$ = new $c_s_math_Numeric$LongIsIntegral$()
  };
  return $n_s_math_Numeric$LongIsIntegral$
}
class $c_s_math_Numeric$ShortIsIntegral$ extends $c_O {
  lteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__lteq__O__O__Z(this, x, y)
  };
  gteq__O__O__Z(x, y) {
    return $f_s_math_Ordering__gteq__O__O__Z(this, x, y)
  };
  lt__O__O__Z(x, y) {
    return $f_s_math_Ordering__lt__O__O__Z(this, x, y)
  };
  gt__O__O__Z(x, y) {
    return $f_s_math_Ordering__gt__O__O__Z(this, x, y)
  };
  max__O__O__O(x, y) {
    return $f_s_math_Ordering__max__O__O__O(this, x, y)
  };
  min__O__O__O(x, y) {
    return $f_s_math_Ordering__min__O__O__O(this, x, y)
  };
  isReverseOf__s_math_Ordering__Z(other) {
    return $f_s_math_Ordering__isReverseOf__s_math_Ordering__Z(this, other)
  };
  sign__O__O(x) {
    const x$1 = (x | 0);
    return $f_s_math_Numeric$ShortIsIntegral__sign__S__S(this, x$1)
  };
  toInt__O__I(x) {
    const x$1 = (x | 0);
    return x$1
  };
  fromInt__I__O(x) {
    return ((x << 16) >> 16)
  };
  rem__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ShortIsIntegral__rem__S__S__S(this, x$1, y$1)
  };
  quot__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ShortIsIntegral__quot__S__S__S(this, x$1, y$1)
  };
  times__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ShortIsIntegral__times__S__S__S(this, x$1, y$1)
  };
  minus__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ShortIsIntegral__minus__S__S__S(this, x$1, y$1)
  };
  plus__O__O__O(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return $f_s_math_Numeric$ShortIsIntegral__plus__S__S__S(this, x$1, y$1)
  };
  compare__O__O__I(x, y) {
    const x$1 = (x | 0);
    const y$1 = (y | 0);
    return ((x$1 - y$1) | 0)
  };
}
const $d_s_math_Numeric$ShortIsIntegral$ = new $TypeData().initClass({
  s_math_Numeric$ShortIsIntegral$: 0
}, false, "scala.math.Numeric$ShortIsIntegral$", {
  s_math_Numeric$ShortIsIntegral$: 1,
  O: 1,
  s_math_Numeric$ShortIsIntegral: 1,
  s_math_Integral: 1,
  s_math_Numeric: 1,
  s_math_Ordering: 1,
  ju_Comparator: 1,
  s_math_PartialOrdering: 1,
  s_math_Equiv: 1,
  Ljava_io_Serializable: 1,
  s_math_Ordering$ShortOrdering: 1
});
$c_s_math_Numeric$ShortIsIntegral$.prototype.$classData = $d_s_math_Numeric$ShortIsIntegral$;
let $n_s_math_Numeric$ShortIsIntegral$ = (void 0);
function $m_s_math_Numeric$ShortIsIntegral$() {
  if ((!$n_s_math_Numeric$ShortIsIntegral$)) {
    $n_s_math_Numeric$ShortIsIntegral$ = new $c_s_math_Numeric$ShortIsIntegral$()
  };
  return $n_s_math_Numeric$ShortIsIntegral$
}
const $f_sr_IntegralProxy__to__O__sci_NumericRange$Inclusive = (function($thiz, end) {
  $m_sci_NumericRange$();
  const start = $thiz.sr_RichChar__f_self;
  const num = $m_s_math_Numeric$CharIsIntegral$();
  return new $c_sci_NumericRange$Inclusive($bC(start), end, $bC(1), num)
});
class $c_sc_AbstractSet extends $c_sc_AbstractIterable {
  equals__O__Z(that) {
    return $f_sc_Set__equals__O__Z(this, that)
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    return this$1.unorderedHash__sc_IterableOnce__I__I(this, this$1.s_util_hashing_MurmurHash3$__f_setSeed)
  };
  stringPrefix__T() {
    return "Set"
  };
  toString__T() {
    return $f_sc_Iterable__toString__T(this)
  };
  subsetOf__sc_Set__Z(that) {
    return this.forall__F1__Z(that)
  };
  apply__O__O(v1) {
    return this.contains__O__Z(v1)
  };
}
const $f_sc_Map__equals__O__Z = (function($thiz, o) {
  if ($is_sc_Map(o)) {
    const x2 = o;
    if (($thiz === x2)) {
      return true
    } else if (($thiz.size__I() === x2.size__I())) {
      try {
        let res = true;
        const it = $thiz.iterator__sc_Iterator();
        while ((res && it.hasNext__Z())) {
          const arg1 = it.next__O();
          const x0$1 = arg1;
          if ((x0$1 === null)) {
            throw new $c_s_MatchError(x0$1)
          };
          const k = x0$1._1__O();
          const v = x0$1._2__O();
          res = $m_sr_BoxesRunTime$().equals__O__O__Z(x2.getOrElse__O__F0__O(k, new $c_sjsr_AnonFunction0(((this$1) => (() => $m_sc_Map$().sc_Map$__f_scala$collection$Map$$DefaultSentinel))($thiz))), v)
        };
        return res
      } catch (e) {
        if ((e instanceof $c_jl_ClassCastException)) {
          return false
        } else {
          throw e
        }
      }
    } else {
      return false
    }
  } else {
    return false
  }
});
function $is_sc_Map(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_Map)))
}
function $isArrayOf_sc_Map(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_Map)))
}
class $c_sr_RichChar extends $c_O {
  constructor(self) {
    super();
    this.sr_RichChar__f_self = 0;
    this.sr_RichChar__f_self = self
  };
  toString__T() {
    return $f_s_Proxy__toString__T(this)
  };
  hashCode__I() {
    const this$ = this.sr_RichChar__f_self;
    return this$
  };
  equals__O__Z(x$1) {
    return $m_sr_RichChar$().equals$extension__C__O__Z(this.sr_RichChar__f_self, x$1)
  };
}
function $isArrayOf_sr_RichChar(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sr_RichChar)))
}
const $d_sr_RichChar = new $TypeData().initClass({
  sr_RichChar: 0
}, false, "scala.runtime.RichChar", {
  sr_RichChar: 1,
  O: 1,
  sr_IntegralProxy: 1,
  sr_ScalaWholeNumberProxy: 1,
  sr_ScalaNumberProxy: 1,
  s_math_ScalaNumericAnyConversions: 1,
  s_Proxy$Typed: 1,
  s_Proxy: 1,
  sr_OrderedProxy: 1,
  s_math_Ordered: 1,
  jl_Comparable: 1,
  sr_RangedProxy: 1
});
$c_sr_RichChar.prototype.$classData = $d_sr_RichChar;
class $c_sc_AbstractSeq extends $c_sc_AbstractIterable {
  canEqual__O__Z(that) {
    return true
  };
  equals__O__Z(o) {
    return $f_sc_Seq__equals__O__Z(this, o)
  };
  hashCode__I() {
    return $m_s_util_hashing_MurmurHash3$().seqHash__sc_Seq__I(this)
  };
  toString__T() {
    return $f_sc_Iterable__toString__T(this)
  };
  reverseIterator__sc_Iterator() {
    return this.reversed__sc_Iterable().iterator__sc_Iterator()
  };
  indexWhere__F1__I__I(p, from) {
    const this$1 = this.iterator__sc_Iterator();
    return $f_sc_Iterator__indexWhere__F1__I__I(this$1, p, from)
  };
  contains__O__Z(elem) {
    return $f_sc_SeqOps__contains__O__Z(this, elem)
  };
  sorted__s_math_Ordering__O(ord) {
    return $f_sc_SeqOps__sorted__s_math_Ordering__O(this, ord)
  };
  lengthCompare__I__I(len) {
    return $f_sc_IterableOps__sizeCompare__I__I(this, len)
  };
  isEmpty__Z() {
    return $f_sc_SeqOps__isEmpty__Z(this)
  };
  sameElements__sc_IterableOnce__Z(that) {
    return $f_sc_SeqOps__sameElements__sc_IterableOnce__Z(this, that)
  };
}
class $c_sc_AbstractSeqView extends $c_sc_AbstractView {
  drop__I__sc_SeqView(n) {
    return $ct_sc_SeqView$Drop__sc_SeqOps__I__(new $c_sc_SeqView$Drop(), this, n)
  };
  stringPrefix__T() {
    return "SeqView"
  };
  reverseIterator__sc_Iterator() {
    return this.reversed__sc_Iterable().iterator__sc_Iterator()
  };
  indexWhere__F1__I__I(p, from) {
    const this$1 = this.iterator__sc_Iterator();
    return $f_sc_Iterator__indexWhere__F1__I__I(this$1, p, from)
  };
  contains__O__Z(elem) {
    return $f_sc_SeqOps__contains__O__Z(this, elem)
  };
  lengthCompare__I__I(len) {
    return $f_sc_IterableOps__sizeCompare__I__I(this, len)
  };
  isEmpty__Z() {
    return $f_sc_SeqOps__isEmpty__Z(this)
  };
  sorted__s_math_Ordering__O(ord) {
    return new $c_sc_SeqView$Sorted(this, ord)
  };
  drop__I__O(n) {
    return this.drop__I__sc_SeqView(n)
  };
}
function $is_sc_IndexedSeq(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_IndexedSeq)))
}
function $isArrayOf_sc_IndexedSeq(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_IndexedSeq)))
}
function $is_sc_LinearSeq(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_LinearSeq)))
}
function $isArrayOf_sc_LinearSeq(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_LinearSeq)))
}
function $is_sci_Set(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sci_Set)))
}
function $isArrayOf_sci_Set(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Set)))
}
class $c_sc_AbstractMap extends $c_sc_AbstractIterable {
  equals__O__Z(o) {
    return $f_sc_Map__equals__O__Z(this, o)
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    return this$1.unorderedHash__sc_IterableOnce__I__I(this, this$1.s_util_hashing_MurmurHash3$__f_mapSeed)
  };
  stringPrefix__T() {
    return "Map"
  };
  toString__T() {
    return $f_sc_Iterable__toString__T(this)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    return this.mapFactory__sc_MapFactory().from__sc_IterableOnce__O(coll)
  };
  valuesIterator__sc_Iterator() {
    return new $c_sc_MapOps$$anon$3(this)
  };
  concat__sc_IterableOnce__sc_IterableOps(suffix) {
    return $f_sc_MapOps__concat__sc_IterableOnce__sc_IterableOps(this, suffix)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(sb, start, sep, end) {
    return $f_sc_MapOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, sb, start, sep, end)
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    return this.mapFactory__sc_MapFactory().from__sc_IterableOnce__O(coll)
  };
}
const $ct_sc_SeqView$Drop__sc_SeqOps__I__ = (function($thiz, underlying, n) {
  $thiz.sc_SeqView$Drop__f_underlying = underlying;
  $ct_sc_View$Drop__sc_IterableOps__I__($thiz, underlying, n);
  return $thiz
});
class $c_sc_SeqView$Drop extends $c_sc_View$Drop {
  constructor() {
    super();
    this.sc_SeqView$Drop__f_underlying = null
  };
  drop__I__sc_SeqView(n) {
    return $ct_sc_SeqView$Drop__sc_SeqOps__I__(new $c_sc_SeqView$Drop(), this, n)
  };
  stringPrefix__T() {
    return "SeqView"
  };
  reverseIterator__sc_Iterator() {
    return this.reversed__sc_Iterable().iterator__sc_Iterator()
  };
  indexWhere__F1__I__I(p, from) {
    const this$1 = this.iterator__sc_Iterator();
    return $f_sc_Iterator__indexWhere__F1__I__I(this$1, p, from)
  };
  contains__O__Z(elem) {
    return $f_sc_SeqOps__contains__O__Z(this, elem)
  };
  lengthCompare__I__I(len) {
    return $f_sc_IterableOps__sizeCompare__I__I(this, len)
  };
  isEmpty__Z() {
    return $f_sc_SeqOps__isEmpty__Z(this)
  };
  length__I() {
    const this$1 = this.sc_SeqView$Drop__f_underlying;
    const x = ((this$1.length__I() - this.sc_View$Drop__f_normN) | 0);
    return ((x > 0) ? x : 0)
  };
  apply__I__O(i) {
    return this.sc_SeqView$Drop__f_underlying.apply__I__O(((i + this.sc_View$Drop__f_normN) | 0))
  };
  sorted__s_math_Ordering__O(ord) {
    return new $c_sc_SeqView$Sorted(this, ord)
  };
  drop__I__O(n) {
    return this.drop__I__sc_SeqView(n)
  };
}
const $d_sc_SeqView$Drop = new $TypeData().initClass({
  sc_SeqView$Drop: 0
}, false, "scala.collection.SeqView$Drop", {
  sc_SeqView$Drop: 1,
  sc_View$Drop: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1
});
$c_sc_SeqView$Drop.prototype.$classData = $d_sc_SeqView$Drop;
const $ct_sc_SeqView$Id__sc_SeqOps__ = (function($thiz, underlying) {
  $thiz.sc_SeqView$Id__f_underlying = underlying;
  return $thiz
});
class $c_sc_SeqView$Id extends $c_sc_AbstractSeqView {
  constructor() {
    super();
    this.sc_SeqView$Id__f_underlying = null
  };
  apply__I__O(idx) {
    return this.sc_SeqView$Id__f_underlying.apply__I__O(idx)
  };
  length__I() {
    return this.sc_SeqView$Id__f_underlying.length__I()
  };
  iterator__sc_Iterator() {
    return this.sc_SeqView$Id__f_underlying.iterator__sc_Iterator()
  };
  knownSize__I() {
    return this.sc_SeqView$Id__f_underlying.knownSize__I()
  };
  isEmpty__Z() {
    return this.sc_SeqView$Id__f_underlying.isEmpty__Z()
  };
}
const $d_sc_SeqView$Id = new $TypeData().initClass({
  sc_SeqView$Id: 0
}, false, "scala.collection.SeqView$Id", {
  sc_SeqView$Id: 1,
  sc_AbstractSeqView: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1
});
$c_sc_SeqView$Id.prototype.$classData = $d_sc_SeqView$Id;
const $ct_sc_SeqView$Map__sc_SeqOps__F1__ = (function($thiz, underlying, f) {
  $thiz.sc_SeqView$Map__f_underlying = underlying;
  $thiz.sc_SeqView$Map__f_f = f;
  $ct_sc_View$Map__sc_IterableOps__F1__($thiz, underlying, f);
  return $thiz
});
class $c_sc_SeqView$Map extends $c_sc_View$Map {
  constructor() {
    super();
    this.sc_SeqView$Map__f_underlying = null;
    this.sc_SeqView$Map__f_f = null
  };
  indexWhere__F1__I__I(p, from) {
    const this$1 = this.iterator__sc_Iterator();
    return $f_sc_Iterator__indexWhere__F1__I__I(this$1, p, from)
  };
  contains__O__Z(elem) {
    return $f_sc_SeqOps__contains__O__Z(this, elem)
  };
  isEmpty__Z() {
    return $f_sc_SeqOps__isEmpty__Z(this)
  };
  apply__I__O(idx) {
    return this.sc_SeqView$Map__f_f.apply__O__O(this.sc_SeqView$Map__f_underlying.apply__I__O(idx))
  };
  length__I() {
    return this.sc_SeqView$Map__f_underlying.length__I()
  };
  sorted__s_math_Ordering__O(ord) {
    return new $c_sc_SeqView$Sorted(this, ord)
  };
}
const $ct_sc_SeqView$Reverse__sc_SeqOps__ = (function($thiz, underlying) {
  $thiz.sc_SeqView$Reverse__f_underlying = underlying;
  return $thiz
});
class $c_sc_SeqView$Reverse extends $c_sc_AbstractSeqView {
  constructor() {
    super();
    this.sc_SeqView$Reverse__f_underlying = null
  };
  apply__I__O(i) {
    return this.sc_SeqView$Reverse__f_underlying.apply__I__O((((((-1) + this.length__I()) | 0) - i) | 0))
  };
  length__I() {
    const this$1 = this.sc_SeqView$Reverse__f_underlying;
    return this$1.length__I()
  };
  iterator__sc_Iterator() {
    return this.sc_SeqView$Reverse__f_underlying.reverseIterator__sc_Iterator()
  };
  knownSize__I() {
    return this.sc_SeqView$Reverse__f_underlying.knownSize__I()
  };
  isEmpty__Z() {
    return this.sc_SeqView$Reverse__f_underlying.isEmpty__Z()
  };
}
const $d_sc_SeqView$Reverse = new $TypeData().initClass({
  sc_SeqView$Reverse: 0
}, false, "scala.collection.SeqView$Reverse", {
  sc_SeqView$Reverse: 1,
  sc_AbstractSeqView: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1
});
$c_sc_SeqView$Reverse.prototype.$classData = $d_sc_SeqView$Reverse;
function $is_sc_SortedSet(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_SortedSet)))
}
function $isArrayOf_sc_SortedSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_SortedSet)))
}
function $is_sci_Seq(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sci_Seq)))
}
function $isArrayOf_sci_Seq(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Seq)))
}
function $is_sci_Map(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sci_Map)))
}
function $isArrayOf_sci_Map(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Map)))
}
class $c_sc_AbstractIndexedSeqView extends $c_sc_AbstractSeqView {
  iterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewReverseIterator(this)
  };
  stringPrefix__T() {
    return "IndexedSeqView"
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  drop__I__sc_SeqView(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
  drop__I__O(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
}
function $is_sc_BitSet(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sc_BitSet)))
}
function $isArrayOf_sc_BitSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_BitSet)))
}
class $c_sci_AbstractSet extends $c_sc_AbstractSet {
  iterableFactory__sc_IterableFactory() {
    return $m_sci_Set$()
  };
}
class $c_sc_IndexedSeqView$Drop extends $c_sc_SeqView$Drop {
  constructor(underlying, n) {
    super();
    $ct_sc_SeqView$Drop__sc_SeqOps__I__(this, underlying, n)
  };
  iterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewReverseIterator(this)
  };
  stringPrefix__T() {
    return "IndexedSeqView"
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  drop__I__sc_SeqView(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
  drop__I__O(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
}
const $d_sc_IndexedSeqView$Drop = new $TypeData().initClass({
  sc_IndexedSeqView$Drop: 0
}, false, "scala.collection.IndexedSeqView$Drop", {
  sc_IndexedSeqView$Drop: 1,
  sc_SeqView$Drop: 1,
  sc_View$Drop: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IndexedSeqView: 1,
  sc_IndexedSeqOps: 1
});
$c_sc_IndexedSeqView$Drop.prototype.$classData = $d_sc_IndexedSeqView$Drop;
class $c_sc_IndexedSeqView$Id extends $c_sc_SeqView$Id {
  constructor(underlying) {
    super();
    $ct_sc_SeqView$Id__sc_SeqOps__(this, underlying)
  };
  iterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewReverseIterator(this)
  };
  stringPrefix__T() {
    return "IndexedSeqView"
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  drop__I__sc_SeqView(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
  drop__I__O(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
}
const $d_sc_IndexedSeqView$Id = new $TypeData().initClass({
  sc_IndexedSeqView$Id: 0
}, false, "scala.collection.IndexedSeqView$Id", {
  sc_IndexedSeqView$Id: 1,
  sc_SeqView$Id: 1,
  sc_AbstractSeqView: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IndexedSeqView: 1,
  sc_IndexedSeqOps: 1
});
$c_sc_IndexedSeqView$Id.prototype.$classData = $d_sc_IndexedSeqView$Id;
class $c_sc_IndexedSeqView$Map extends $c_sc_SeqView$Map {
  constructor(underlying, f) {
    super();
    $ct_sc_SeqView$Map__sc_SeqOps__F1__(this, underlying, f)
  };
  iterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewReverseIterator(this)
  };
  stringPrefix__T() {
    return "IndexedSeqView"
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  drop__I__O(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
}
const $d_sc_IndexedSeqView$Map = new $TypeData().initClass({
  sc_IndexedSeqView$Map: 0
}, false, "scala.collection.IndexedSeqView$Map", {
  sc_IndexedSeqView$Map: 1,
  sc_SeqView$Map: 1,
  sc_View$Map: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IndexedSeqView: 1,
  sc_IndexedSeqOps: 1
});
$c_sc_IndexedSeqView$Map.prototype.$classData = $d_sc_IndexedSeqView$Map;
class $c_sc_IndexedSeqView$Reverse extends $c_sc_SeqView$Reverse {
  constructor(underlying) {
    super();
    this.sc_IndexedSeqView$Reverse__f_underlying = null;
    this.sc_IndexedSeqView$Reverse__f_underlying = underlying;
    $ct_sc_SeqView$Reverse__sc_SeqOps__(this, underlying)
  };
  iterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqView$IndexedSeqViewReverseIterator(this)
  };
  stringPrefix__T() {
    return "IndexedSeqView"
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  drop__I__sc_SeqView(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
  drop__I__O(n) {
    return new $c_sc_IndexedSeqView$Drop(this, n)
  };
}
const $d_sc_IndexedSeqView$Reverse = new $TypeData().initClass({
  sc_IndexedSeqView$Reverse: 0
}, false, "scala.collection.IndexedSeqView$Reverse", {
  sc_IndexedSeqView$Reverse: 1,
  sc_SeqView$Reverse: 1,
  sc_AbstractSeqView: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IndexedSeqView: 1,
  sc_IndexedSeqOps: 1
});
$c_sc_IndexedSeqView$Reverse.prototype.$classData = $d_sc_IndexedSeqView$Reverse;
class $c_sci_AbstractSeq extends $c_sc_AbstractSeq {
}
class $c_scm_ArrayBufferView extends $c_sc_AbstractIndexedSeqView {
  constructor(array, length) {
    super();
    this.scm_ArrayBufferView__f_array = null;
    this.scm_ArrayBufferView__f_length = 0;
    this.scm_ArrayBufferView__f_array = array;
    this.scm_ArrayBufferView__f_length = length
  };
  length__I() {
    return this.scm_ArrayBufferView__f_length
  };
  apply__I__O(n) {
    if ((n < this.scm_ArrayBufferView__f_length)) {
      return this.scm_ArrayBufferView__f_array.u[n]
    } else {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((n + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBufferView__f_length) | 0)) + ")"))
    }
  };
  className__T() {
    return "ArrayBufferView"
  };
}
const $d_scm_ArrayBufferView = new $TypeData().initClass({
  scm_ArrayBufferView: 0
}, false, "scala.collection.mutable.ArrayBufferView", {
  scm_ArrayBufferView: 1,
  sc_AbstractIndexedSeqView: 1,
  sc_AbstractSeqView: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IndexedSeqView: 1,
  sc_IndexedSeqOps: 1
});
$c_scm_ArrayBufferView.prototype.$classData = $d_scm_ArrayBufferView;
class $c_sci_AbstractMap extends $c_sc_AbstractMap {
  mapFactory__sc_MapFactory() {
    return $m_sci_Map$()
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_Iterable$()
  };
}
const $f_sci_IndexedSeq__canEqual__O__Z = (function($thiz, that) {
  if ((!$is_sci_IndexedSeq(that))) {
    return true
  } else {
    const x2 = that;
    return ($thiz.length__I() === x2.length__I())
  }
});
const $f_sci_IndexedSeq__sameElements__sc_IterableOnce__Z = (function($thiz, o) {
  if ($is_sci_IndexedSeq(o)) {
    const x2 = o;
    if (($thiz === x2)) {
      return true
    } else {
      const length = $thiz.length__I();
      let equal = (length === x2.length__I());
      if (equal) {
        let index = 0;
        const a = $thiz.applyPreferredMaxLength__I();
        const b = x2.applyPreferredMaxLength__I();
        const preferredLength = ((a < b) ? a : b);
        const hi = (length >> 31);
        const hi$1 = (preferredLength >> 31);
        const lo = (preferredLength << 1);
        const hi$2 = (((preferredLength >>> 31) | 0) | (hi$1 << 1));
        let maxApplyCompare;
        if (((hi === hi$2) ? (((-2147483648) ^ length) > ((-2147483648) ^ lo)) : (hi > hi$2))) {
          maxApplyCompare = preferredLength
        } else {
          maxApplyCompare = length
        };
        while (((index < maxApplyCompare) && equal)) {
          equal = $m_sr_BoxesRunTime$().equals__O__O__Z($thiz.apply__I__O(index), x2.apply__I__O(index));
          index = ((1 + index) | 0)
        };
        if (((index < length) && equal)) {
          const thisIt = $thiz.iterator__sc_Iterator().drop__I__sc_Iterator(index);
          const thatIt = x2.iterator__sc_Iterator().drop__I__sc_Iterator(index);
          while ((equal && thisIt.hasNext__Z())) {
            equal = $m_sr_BoxesRunTime$().equals__O__O__Z(thisIt.next__O(), thatIt.next__O())
          }
        }
      };
      return equal
    }
  } else {
    return $f_sc_SeqOps__sameElements__sc_IterableOnce__Z($thiz, o)
  }
});
function $is_sci_IndexedSeq(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sci_IndexedSeq)))
}
function $isArrayOf_sci_IndexedSeq(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_IndexedSeq)))
}
class $c_sci_Set$EmptySet$ extends $c_sci_AbstractSet {
  size__I() {
    return 0
  };
  isEmpty__Z() {
    return true
  };
  knownSize__I() {
    return 0
  };
  subsetOf__sc_Set__Z(that) {
    return true
  };
  contains__O__Z(elem) {
    return false
  };
  iterator__sc_Iterator() {
    return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty
  };
  foreach__F1__V(f) {
    /*<skip>*/
  };
  incl__O__sci_SetOps(elem) {
    return new $c_sci_Set$Set1(elem)
  };
}
const $d_sci_Set$EmptySet$ = new $TypeData().initClass({
  sci_Set$EmptySet$: 0
}, false, "scala.collection.immutable.Set$EmptySet$", {
  sci_Set$EmptySet$: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Set$EmptySet$.prototype.$classData = $d_sci_Set$EmptySet$;
let $n_sci_Set$EmptySet$ = (void 0);
function $m_sci_Set$EmptySet$() {
  if ((!$n_sci_Set$EmptySet$)) {
    $n_sci_Set$EmptySet$ = new $c_sci_Set$EmptySet$()
  };
  return $n_sci_Set$EmptySet$
}
class $c_sc_StringView extends $c_sc_AbstractIndexedSeqView {
  constructor(s) {
    super();
    this.sc_StringView__f_s = null;
    this.sc_StringView__f_s = s
  };
  length__I() {
    const this$1 = this.sc_StringView__f_s;
    return (this$1.length | 0)
  };
  toString__T() {
    return (("StringView(" + this.sc_StringView__f_s) + ")")
  };
  productPrefix__T() {
    return "StringView"
  };
  productArity__I() {
    return 1
  };
  productElement__I__O(x$1) {
    return ((x$1 === 0) ? this.sc_StringView__f_s : $m_sr_Statics$().ioobe__I__O(x$1))
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  hashCode__I() {
    const this$2 = $m_s_util_hashing_MurmurHash3$();
    return this$2.productHash__s_Product__I__Z__I(this, (-889275714), false)
  };
  equals__O__Z(x$1) {
    if ((this === x$1)) {
      return true
    } else if ((x$1 instanceof $c_sc_StringView)) {
      const StringView$1 = x$1;
      return (this.sc_StringView__f_s === StringView$1.sc_StringView__f_s)
    } else {
      return false
    }
  };
  apply__I__O(i) {
    const this$1 = this.sc_StringView__f_s;
    return $bC((65535 & (this$1.charCodeAt(i) | 0)))
  };
}
function $isArrayOf_sc_StringView(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sc_StringView)))
}
const $d_sc_StringView = new $TypeData().initClass({
  sc_StringView: 0
}, false, "scala.collection.StringView", {
  sc_StringView: 1,
  sc_AbstractIndexedSeqView: 1,
  sc_AbstractSeqView: 1,
  sc_AbstractView: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_View: 1,
  Ljava_io_Serializable: 1,
  sc_SeqView: 1,
  sc_SeqOps: 1,
  sc_IndexedSeqView: 1,
  sc_IndexedSeqOps: 1,
  s_Product: 1,
  s_Equals: 1
});
$c_sc_StringView.prototype.$classData = $d_sc_StringView;
class $c_sci_Set$Set1 extends $c_sci_AbstractSet {
  constructor(elem1) {
    super();
    this.sci_Set$Set1__f_elem1 = null;
    this.sci_Set$Set1__f_elem1 = elem1
  };
  size__I() {
    return 1
  };
  isEmpty__Z() {
    return false
  };
  knownSize__I() {
    return 1
  };
  contains__O__Z(elem) {
    return $m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set1__f_elem1)
  };
  incl__O__sci_Set(elem) {
    return (this.contains__O__Z(elem) ? this : new $c_sci_Set$Set2(this.sci_Set$Set1__f_elem1, elem))
  };
  iterator__sc_Iterator() {
    $m_sc_Iterator$();
    const a = this.sci_Set$Set1__f_elem1;
    return new $c_sc_Iterator$$anon$20(a)
  };
  foreach__F1__V(f) {
    f.apply__O__O(this.sci_Set$Set1__f_elem1)
  };
  forall__F1__Z(p) {
    return (!(!p.apply__O__O(this.sci_Set$Set1__f_elem1)))
  };
  head__O() {
    return this.sci_Set$Set1__f_elem1
  };
  tail__O() {
    return $m_sci_Set$EmptySet$()
  };
  incl__O__sci_SetOps(elem) {
    return this.incl__O__sci_Set(elem)
  };
}
const $d_sci_Set$Set1 = new $TypeData().initClass({
  sci_Set$Set1: 0
}, false, "scala.collection.immutable.Set$Set1", {
  sci_Set$Set1: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Set$Set1.prototype.$classData = $d_sci_Set$Set1;
class $c_sci_Set$Set2 extends $c_sci_AbstractSet {
  constructor(elem1, elem2) {
    super();
    this.sci_Set$Set2__f_elem1 = null;
    this.sci_Set$Set2__f_elem2 = null;
    this.sci_Set$Set2__f_elem1 = elem1;
    this.sci_Set$Set2__f_elem2 = elem2
  };
  size__I() {
    return 2
  };
  isEmpty__Z() {
    return false
  };
  knownSize__I() {
    return 2
  };
  contains__O__Z(elem) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set2__f_elem1) || $m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set2__f_elem2))
  };
  incl__O__sci_Set(elem) {
    return (this.contains__O__Z(elem) ? this : new $c_sci_Set$Set3(this.sci_Set$Set2__f_elem1, this.sci_Set$Set2__f_elem2, elem))
  };
  iterator__sc_Iterator() {
    const rassoc$2 = this.sci_Set$Set2__f_elem1;
    const rassoc$1 = this.sci_Set$Set2__f_elem2;
    const this$1 = $m_sci_Nil$();
    const this$2 = new $c_sci_$colon$colon(rassoc$1, this$1);
    const this$3 = new $c_sci_$colon$colon(rassoc$2, this$2);
    return new $c_sc_StrictOptimizedLinearSeqOps$$anon$1(this$3)
  };
  foreach__F1__V(f) {
    f.apply__O__O(this.sci_Set$Set2__f_elem1);
    f.apply__O__O(this.sci_Set$Set2__f_elem2)
  };
  forall__F1__Z(p) {
    return ((!(!p.apply__O__O(this.sci_Set$Set2__f_elem1))) && (!(!p.apply__O__O(this.sci_Set$Set2__f_elem2))))
  };
  head__O() {
    return this.sci_Set$Set2__f_elem1
  };
  tail__sci_Set() {
    return new $c_sci_Set$Set1(this.sci_Set$Set2__f_elem2)
  };
  tail__O() {
    return this.tail__sci_Set()
  };
  incl__O__sci_SetOps(elem) {
    return this.incl__O__sci_Set(elem)
  };
}
const $d_sci_Set$Set2 = new $TypeData().initClass({
  sci_Set$Set2: 0
}, false, "scala.collection.immutable.Set$Set2", {
  sci_Set$Set2: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Set$Set2.prototype.$classData = $d_sci_Set$Set2;
class $c_sci_Set$Set3 extends $c_sci_AbstractSet {
  constructor(elem1, elem2, elem3) {
    super();
    this.sci_Set$Set3__f_elem1 = null;
    this.sci_Set$Set3__f_elem2 = null;
    this.sci_Set$Set3__f_elem3 = null;
    this.sci_Set$Set3__f_elem1 = elem1;
    this.sci_Set$Set3__f_elem2 = elem2;
    this.sci_Set$Set3__f_elem3 = elem3
  };
  size__I() {
    return 3
  };
  isEmpty__Z() {
    return false
  };
  knownSize__I() {
    return 3
  };
  contains__O__Z(elem) {
    return (($m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set3__f_elem1) || $m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set3__f_elem2)) || $m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set3__f_elem3))
  };
  incl__O__sci_Set(elem) {
    return (this.contains__O__Z(elem) ? this : new $c_sci_Set$Set4(this.sci_Set$Set3__f_elem1, this.sci_Set$Set3__f_elem2, this.sci_Set$Set3__f_elem3, elem))
  };
  iterator__sc_Iterator() {
    const rassoc$5 = this.sci_Set$Set3__f_elem1;
    const rassoc$4 = this.sci_Set$Set3__f_elem2;
    const rassoc$3 = this.sci_Set$Set3__f_elem3;
    const this$1 = $m_sci_Nil$();
    const this$2 = new $c_sci_$colon$colon(rassoc$3, this$1);
    const this$3 = new $c_sci_$colon$colon(rassoc$4, this$2);
    const this$4 = new $c_sci_$colon$colon(rassoc$5, this$3);
    return new $c_sc_StrictOptimizedLinearSeqOps$$anon$1(this$4)
  };
  foreach__F1__V(f) {
    f.apply__O__O(this.sci_Set$Set3__f_elem1);
    f.apply__O__O(this.sci_Set$Set3__f_elem2);
    f.apply__O__O(this.sci_Set$Set3__f_elem3)
  };
  forall__F1__Z(p) {
    return (((!(!p.apply__O__O(this.sci_Set$Set3__f_elem1))) && (!(!p.apply__O__O(this.sci_Set$Set3__f_elem2)))) && (!(!p.apply__O__O(this.sci_Set$Set3__f_elem3))))
  };
  head__O() {
    return this.sci_Set$Set3__f_elem1
  };
  tail__sci_Set() {
    return new $c_sci_Set$Set2(this.sci_Set$Set3__f_elem2, this.sci_Set$Set3__f_elem3)
  };
  tail__O() {
    return this.tail__sci_Set()
  };
  incl__O__sci_SetOps(elem) {
    return this.incl__O__sci_Set(elem)
  };
}
const $d_sci_Set$Set3 = new $TypeData().initClass({
  sci_Set$Set3: 0
}, false, "scala.collection.immutable.Set$Set3", {
  sci_Set$Set3: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Set$Set3.prototype.$classData = $d_sci_Set$Set3;
class $c_sci_Set$Set4 extends $c_sci_AbstractSet {
  constructor(elem1, elem2, elem3, elem4) {
    super();
    this.sci_Set$Set4__f_elem1 = null;
    this.sci_Set$Set4__f_elem2 = null;
    this.sci_Set$Set4__f_elem3 = null;
    this.sci_Set$Set4__f_elem4 = null;
    this.sci_Set$Set4__f_elem1 = elem1;
    this.sci_Set$Set4__f_elem2 = elem2;
    this.sci_Set$Set4__f_elem3 = elem3;
    this.sci_Set$Set4__f_elem4 = elem4
  };
  size__I() {
    return 4
  };
  isEmpty__Z() {
    return false
  };
  knownSize__I() {
    return 4
  };
  contains__O__Z(elem) {
    return ((($m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set4__f_elem1) || $m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set4__f_elem2)) || $m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set4__f_elem3)) || $m_sr_BoxesRunTime$().equals__O__O__Z(elem, this.sci_Set$Set4__f_elem4))
  };
  incl__O__sci_Set(elem) {
    if (this.contains__O__Z(elem)) {
      return this
    } else {
      const this$1 = $m_sci_HashSet$();
      const this$2 = this$1.sci_HashSet$__f_EmptySet;
      const elem$1 = this.sci_Set$Set4__f_elem1;
      const this$3 = this$2.incl__O__sci_HashSet(elem$1);
      const elem$2 = this.sci_Set$Set4__f_elem2;
      const this$4 = this$3.incl__O__sci_HashSet(elem$2);
      const elem$3 = this.sci_Set$Set4__f_elem3;
      const this$5 = this$4.incl__O__sci_HashSet(elem$3);
      const elem$4 = this.sci_Set$Set4__f_elem4;
      const this$6 = this$5.incl__O__sci_HashSet(elem$4);
      return this$6.incl__O__sci_HashSet(elem)
    }
  };
  iterator__sc_Iterator() {
    const rassoc$9 = this.sci_Set$Set4__f_elem1;
    const rassoc$8 = this.sci_Set$Set4__f_elem2;
    const rassoc$7 = this.sci_Set$Set4__f_elem3;
    const rassoc$6 = this.sci_Set$Set4__f_elem4;
    const this$1 = $m_sci_Nil$();
    const this$2 = new $c_sci_$colon$colon(rassoc$6, this$1);
    const this$3 = new $c_sci_$colon$colon(rassoc$7, this$2);
    const this$4 = new $c_sci_$colon$colon(rassoc$8, this$3);
    const this$5 = new $c_sci_$colon$colon(rassoc$9, this$4);
    return new $c_sc_StrictOptimizedLinearSeqOps$$anon$1(this$5)
  };
  foreach__F1__V(f) {
    f.apply__O__O(this.sci_Set$Set4__f_elem1);
    f.apply__O__O(this.sci_Set$Set4__f_elem2);
    f.apply__O__O(this.sci_Set$Set4__f_elem3);
    f.apply__O__O(this.sci_Set$Set4__f_elem4)
  };
  forall__F1__Z(p) {
    return ((((!(!p.apply__O__O(this.sci_Set$Set4__f_elem1))) && (!(!p.apply__O__O(this.sci_Set$Set4__f_elem2)))) && (!(!p.apply__O__O(this.sci_Set$Set4__f_elem3)))) && (!(!p.apply__O__O(this.sci_Set$Set4__f_elem4))))
  };
  head__O() {
    return this.sci_Set$Set4__f_elem1
  };
  tail__sci_Set() {
    return new $c_sci_Set$Set3(this.sci_Set$Set4__f_elem2, this.sci_Set$Set4__f_elem3, this.sci_Set$Set4__f_elem4)
  };
  buildTo__scm_Builder__scm_Builder(builder) {
    return builder.addOne__O__scm_Growable(this.sci_Set$Set4__f_elem1).addOne__O__scm_Growable(this.sci_Set$Set4__f_elem2).addOne__O__scm_Growable(this.sci_Set$Set4__f_elem3).addOne__O__scm_Growable(this.sci_Set$Set4__f_elem4)
  };
  tail__O() {
    return this.tail__sci_Set()
  };
  incl__O__sci_SetOps(elem) {
    return this.incl__O__sci_Set(elem)
  };
}
function $isArrayOf_sci_Set$Set4(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Set$Set4)))
}
const $d_sci_Set$Set4 = new $TypeData().initClass({
  sci_Set$Set4: 0
}, false, "scala.collection.immutable.Set$Set4", {
  sci_Set$Set4: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Set$Set4.prototype.$classData = $d_sci_Set$Set4;
function $is_sci_SortedSet(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.sci_SortedSet)))
}
function $isArrayOf_sci_SortedSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_SortedSet)))
}
class $c_scm_AbstractSeq extends $c_sc_AbstractSeq {
}
function $is_scm_Set(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.scm_Set)))
}
function $isArrayOf_scm_Set(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_Set)))
}
class $c_sci_Map$EmptyMap$ extends $c_sci_AbstractMap {
  size__I() {
    return 0
  };
  knownSize__I() {
    return 0
  };
  isEmpty__Z() {
    return true
  };
  apply__O__E(key) {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), ("key not found: " + key))
  };
  contains__O__Z(key) {
    return false
  };
  get__O__s_Option(key) {
    return $m_s_None$()
  };
  getOrElse__O__F0__O(key, default$1) {
    return default$1.apply__O()
  };
  iterator__sc_Iterator() {
    return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty
  };
  updated__O__O__sci_MapOps(key, value) {
    return new $c_sci_Map$Map1(key, value)
  };
  apply__O__O(key) {
    this.apply__O__E(key)
  };
}
const $d_sci_Map$EmptyMap$ = new $TypeData().initClass({
  sci_Map$EmptyMap$: 0
}, false, "scala.collection.immutable.Map$EmptyMap$", {
  sci_Map$EmptyMap$: 1,
  sci_AbstractMap: 1,
  sc_AbstractMap: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Map: 1,
  sc_MapOps: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_MapFactoryDefaults: 1,
  s_Equals: 1,
  sci_Map: 1,
  sci_Iterable: 1,
  sci_MapOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Map$EmptyMap$.prototype.$classData = $d_sci_Map$EmptyMap$;
let $n_sci_Map$EmptyMap$ = (void 0);
function $m_sci_Map$EmptyMap$() {
  if ((!$n_sci_Map$EmptyMap$)) {
    $n_sci_Map$EmptyMap$ = new $c_sci_Map$EmptyMap$()
  };
  return $n_sci_Map$EmptyMap$
}
class $c_sci_Map$Map1 extends $c_sci_AbstractMap {
  constructor(key1, value1) {
    super();
    this.sci_Map$Map1__f_key1 = null;
    this.sci_Map$Map1__f_value1 = null;
    this.sci_Map$Map1__f_key1 = key1;
    this.sci_Map$Map1__f_value1 = value1
  };
  size__I() {
    return 1
  };
  knownSize__I() {
    return 1
  };
  isEmpty__Z() {
    return false
  };
  apply__O__O(key) {
    if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map1__f_key1)) {
      return this.sci_Map$Map1__f_value1
    } else {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), ("key not found: " + key))
    }
  };
  contains__O__Z(key) {
    return $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map1__f_key1)
  };
  get__O__s_Option(key) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map1__f_key1) ? new $c_s_Some(this.sci_Map$Map1__f_value1) : $m_s_None$())
  };
  getOrElse__O__F0__O(key, default$1) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map1__f_key1) ? this.sci_Map$Map1__f_value1 : default$1.apply__O())
  };
  iterator__sc_Iterator() {
    $m_sc_Iterator$();
    const a = $ct_T2__O__O__(new $c_T2(), this.sci_Map$Map1__f_key1, this.sci_Map$Map1__f_value1);
    return new $c_sc_Iterator$$anon$20(a)
  };
  valuesIterator__sc_Iterator() {
    $m_sc_Iterator$();
    const a = this.sci_Map$Map1__f_value1;
    return new $c_sc_Iterator$$anon$20(a)
  };
  updated__O__O__sci_Map(key, value) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map1__f_key1) ? new $c_sci_Map$Map1(this.sci_Map$Map1__f_key1, value) : new $c_sci_Map$Map2(this.sci_Map$Map1__f_key1, this.sci_Map$Map1__f_value1, key, value))
  };
  foreach__F1__V(f) {
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map1__f_key1, this.sci_Map$Map1__f_value1))
  };
  updated__O__O__sci_MapOps(key, value) {
    return this.updated__O__O__sci_Map(key, value)
  };
}
const $d_sci_Map$Map1 = new $TypeData().initClass({
  sci_Map$Map1: 0
}, false, "scala.collection.immutable.Map$Map1", {
  sci_Map$Map1: 1,
  sci_AbstractMap: 1,
  sc_AbstractMap: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Map: 1,
  sc_MapOps: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_MapFactoryDefaults: 1,
  s_Equals: 1,
  sci_Map: 1,
  sci_Iterable: 1,
  sci_MapOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Map$Map1.prototype.$classData = $d_sci_Map$Map1;
class $c_sci_Map$Map2 extends $c_sci_AbstractMap {
  constructor(key1, value1, key2, value2) {
    super();
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1 = null;
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1 = null;
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2 = null;
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2 = null;
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1 = key1;
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1 = value1;
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2 = key2;
    this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2 = value2
  };
  size__I() {
    return 2
  };
  knownSize__I() {
    return 2
  };
  isEmpty__Z() {
    return false
  };
  apply__O__O(key) {
    if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1)) {
      return this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2)) {
      return this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2
    } else {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), ("key not found: " + key))
    }
  };
  contains__O__Z(key) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1) || $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2))
  };
  get__O__s_Option(key) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1) ? new $c_s_Some(this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2) ? new $c_s_Some(this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2) : $m_s_None$()))
  };
  getOrElse__O__F0__O(key, default$1) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1) ? this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1 : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2) ? this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2 : default$1.apply__O()))
  };
  iterator__sc_Iterator() {
    return new $c_sci_Map$Map2$$anon$1(this)
  };
  valuesIterator__sc_Iterator() {
    return new $c_sci_Map$Map2$$anon$3(this)
  };
  updated__O__O__sci_Map(key, value) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1) ? new $c_sci_Map$Map2(this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1, value, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2) ? new $c_sci_Map$Map2(this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2, value) : new $c_sci_Map$Map3(this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2, key, value)))
  };
  foreach__F1__V(f) {
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key1, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value1));
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$key2, this.sci_Map$Map2__f_scala$collection$immutable$Map$Map2$$value2))
  };
  updated__O__O__sci_MapOps(key, value) {
    return this.updated__O__O__sci_Map(key, value)
  };
}
const $d_sci_Map$Map2 = new $TypeData().initClass({
  sci_Map$Map2: 0
}, false, "scala.collection.immutable.Map$Map2", {
  sci_Map$Map2: 1,
  sci_AbstractMap: 1,
  sc_AbstractMap: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Map: 1,
  sc_MapOps: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_MapFactoryDefaults: 1,
  s_Equals: 1,
  sci_Map: 1,
  sci_Iterable: 1,
  sci_MapOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Map$Map2.prototype.$classData = $d_sci_Map$Map2;
class $c_sci_Map$Map3 extends $c_sci_AbstractMap {
  constructor(key1, value1, key2, value2, key3, value3) {
    super();
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1 = null;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1 = null;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2 = null;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2 = null;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3 = null;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3 = null;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1 = key1;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1 = value1;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2 = key2;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2 = value2;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3 = key3;
    this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3 = value3
  };
  size__I() {
    return 3
  };
  knownSize__I() {
    return 3
  };
  isEmpty__Z() {
    return false
  };
  apply__O__O(key) {
    if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1)) {
      return this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2)) {
      return this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3)) {
      return this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3
    } else {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), ("key not found: " + key))
    }
  };
  contains__O__Z(key) {
    return (($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1) || $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2)) || $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3))
  };
  get__O__s_Option(key) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1) ? new $c_s_Some(this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2) ? new $c_s_Some(this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3) ? new $c_s_Some(this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3) : $m_s_None$())))
  };
  getOrElse__O__F0__O(key, default$1) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1) ? this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1 : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2) ? this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2 : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3) ? this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3 : default$1.apply__O())))
  };
  iterator__sc_Iterator() {
    return new $c_sci_Map$Map3$$anon$4(this)
  };
  valuesIterator__sc_Iterator() {
    return new $c_sci_Map$Map3$$anon$6(this)
  };
  updated__O__O__sci_Map(key, value) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1) ? new $c_sci_Map$Map3(this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1, value, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2) ? new $c_sci_Map$Map3(this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2, value, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3) ? new $c_sci_Map$Map3(this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3, value) : new $c_sci_Map$Map4(this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3, key, value))))
  };
  foreach__F1__V(f) {
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key1, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value1));
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key2, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value2));
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$key3, this.sci_Map$Map3__f_scala$collection$immutable$Map$Map3$$value3))
  };
  updated__O__O__sci_MapOps(key, value) {
    return this.updated__O__O__sci_Map(key, value)
  };
}
const $d_sci_Map$Map3 = new $TypeData().initClass({
  sci_Map$Map3: 0
}, false, "scala.collection.immutable.Map$Map3", {
  sci_Map$Map3: 1,
  sci_AbstractMap: 1,
  sc_AbstractMap: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Map: 1,
  sc_MapOps: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_MapFactoryDefaults: 1,
  s_Equals: 1,
  sci_Map: 1,
  sci_Iterable: 1,
  sci_MapOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Map$Map3.prototype.$classData = $d_sci_Map$Map3;
class $c_sci_Map$Map4 extends $c_sci_AbstractMap {
  constructor(key1, value1, key2, value2, key3, value3, key4, value4) {
    super();
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4 = null;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1 = key1;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1 = value1;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2 = key2;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2 = value2;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3 = key3;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3 = value3;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4 = key4;
    this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4 = value4
  };
  size__I() {
    return 4
  };
  knownSize__I() {
    return 4
  };
  isEmpty__Z() {
    return false
  };
  apply__O__O(key) {
    if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1)) {
      return this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2)) {
      return this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3)) {
      return this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4)) {
      return this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4
    } else {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), ("key not found: " + key))
    }
  };
  contains__O__Z(key) {
    return ((($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1) || $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2)) || $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3)) || $m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4))
  };
  get__O__s_Option(key) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1) ? new $c_s_Some(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2) ? new $c_s_Some(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3) ? new $c_s_Some(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3) : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4) ? new $c_s_Some(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4) : $m_s_None$()))))
  };
  getOrElse__O__F0__O(key, default$1) {
    return ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1) ? this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1 : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2) ? this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2 : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3) ? this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3 : ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4) ? this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4 : default$1.apply__O()))))
  };
  iterator__sc_Iterator() {
    return new $c_sci_Map$Map4$$anon$7(this)
  };
  valuesIterator__sc_Iterator() {
    return new $c_sci_Map$Map4$$anon$9(this)
  };
  updated__O__O__sci_Map(key, value) {
    if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1)) {
      return new $c_sci_Map$Map4(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, value, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4)
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2)) {
      return new $c_sci_Map$Map4(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, value, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4)
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3)) {
      return new $c_sci_Map$Map4(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, value, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4)
    } else if ($m_sr_BoxesRunTime$().equals__O__O__Z(key, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4)) {
      return new $c_sci_Map$Map4(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, value)
    } else {
      const this$1 = $m_sci_HashMap$();
      return this$1.sci_HashMap$__f_EmptyMap.updated__O__O__sci_HashMap(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1).updated__O__O__sci_HashMap(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2).updated__O__O__sci_HashMap(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3).updated__O__O__sci_HashMap(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4).updated__O__O__sci_HashMap(key, value)
    }
  };
  foreach__F1__V(f) {
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1));
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2));
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3));
    f.apply__O__O($ct_T2__O__O__(new $c_T2(), this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4))
  };
  buildTo__sci_HashMapBuilder__sci_HashMapBuilder(builder) {
    return builder.addOne__O__O__sci_HashMapBuilder(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key1, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value1).addOne__O__O__sci_HashMapBuilder(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key2, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value2).addOne__O__O__sci_HashMapBuilder(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key3, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value3).addOne__O__O__sci_HashMapBuilder(this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$key4, this.sci_Map$Map4__f_scala$collection$immutable$Map$Map4$$value4)
  };
  updated__O__O__sci_MapOps(key, value) {
    return this.updated__O__O__sci_Map(key, value)
  };
}
function $isArrayOf_sci_Map$Map4(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Map$Map4)))
}
const $d_sci_Map$Map4 = new $TypeData().initClass({
  sci_Map$Map4: 0
}, false, "scala.collection.immutable.Map$Map4", {
  sci_Map$Map4: 1,
  sci_AbstractMap: 1,
  sc_AbstractMap: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Map: 1,
  sc_MapOps: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_MapFactoryDefaults: 1,
  s_Equals: 1,
  sci_Map: 1,
  sci_Iterable: 1,
  sci_MapOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Map$Map4.prototype.$classData = $d_sci_Map$Map4;
function $is_scm_Map(obj) {
  return (!(!((obj && obj.$classData) && obj.$classData.ancestors.scm_Map)))
}
function $isArrayOf_scm_Map(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_Map)))
}
const $p_sci_HashSet__newHashSetOrThis__sci_BitmapIndexedSetNode__sci_HashSet = (function($thiz, newRootNode) {
  return (($thiz.sci_HashSet__f_rootNode === newRootNode) ? $thiz : new $c_sci_HashSet(newRootNode))
});
class $c_sci_HashSet extends $c_sci_AbstractSet {
  constructor(rootNode) {
    super();
    this.sci_HashSet__f_rootNode = null;
    this.sci_HashSet__f_rootNode = rootNode
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_HashSet$()
  };
  knownSize__I() {
    return this.sci_HashSet__f_rootNode.sci_BitmapIndexedSetNode__f_size
  };
  size__I() {
    return this.sci_HashSet__f_rootNode.sci_BitmapIndexedSetNode__f_size
  };
  isEmpty__Z() {
    return (this.sci_HashSet__f_rootNode.sci_BitmapIndexedSetNode__f_size === 0)
  };
  iterator__sc_Iterator() {
    return (this.isEmpty__Z() ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_sci_SetIterator(this.sci_HashSet__f_rootNode))
  };
  contains__O__Z(element) {
    const elementUnimprovedHash = $m_sr_Statics$().anyHash__O__I(element);
    const elementHash = $m_sc_Hashing$().improve__I__I(elementUnimprovedHash);
    return this.sci_HashSet__f_rootNode.contains__O__I__I__I__Z(element, elementUnimprovedHash, elementHash, 0)
  };
  incl__O__sci_HashSet(element) {
    const elementUnimprovedHash = $m_sr_Statics$().anyHash__O__I(element);
    const elementHash = $m_sc_Hashing$().improve__I__I(elementUnimprovedHash);
    const newRootNode = this.sci_HashSet__f_rootNode.updated__O__I__I__I__sci_BitmapIndexedSetNode(element, elementUnimprovedHash, elementHash, 0);
    return $p_sci_HashSet__newHashSetOrThis__sci_BitmapIndexedSetNode__sci_HashSet(this, newRootNode)
  };
  excl__O__sci_HashSet(element) {
    const elementUnimprovedHash = $m_sr_Statics$().anyHash__O__I(element);
    const elementHash = $m_sc_Hashing$().improve__I__I(elementUnimprovedHash);
    const newRootNode = this.sci_HashSet__f_rootNode.removed__O__I__I__I__sci_BitmapIndexedSetNode(element, elementUnimprovedHash, elementHash, 0);
    return $p_sci_HashSet__newHashSetOrThis__sci_BitmapIndexedSetNode__sci_HashSet(this, newRootNode)
  };
  head__O() {
    return this.iterator__sc_Iterator().next__O()
  };
  foreach__F1__V(f) {
    this.sci_HashSet__f_rootNode.foreach__F1__V(f)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_HashSet)) {
      const x2 = that;
      if ((this === x2)) {
        return true
      } else {
        const x = this.sci_HashSet__f_rootNode;
        const x$2 = x2.sci_HashSet__f_rootNode;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      }
    } else {
      return $f_sc_Set__equals__O__Z(this, that)
    }
  };
  className__T() {
    return "HashSet"
  };
  hashCode__I() {
    const it = new $c_sci_SetHashIterator(this.sci_HashSet__f_rootNode);
    const hash = $m_s_util_hashing_MurmurHash3$().unorderedHash__sc_IterableOnce__I__I(it, $m_s_util_hashing_MurmurHash3$().s_util_hashing_MurmurHash3$__f_setSeed);
    return hash
  };
  drop__I__O(n) {
    return $f_sc_IterableOps__drop__I__O(this, n)
  };
  tail__O() {
    const elem = this.iterator__sc_Iterator().next__O();
    return this.excl__O__sci_HashSet(elem)
  };
  incl__O__sci_SetOps(elem) {
    return this.incl__O__sci_HashSet(elem)
  };
}
function $isArrayOf_sci_HashSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_HashSet)))
}
const $d_sci_HashSet = new $TypeData().initClass({
  sci_HashSet: 0
}, false, "scala.collection.immutable.HashSet", {
  sci_HashSet: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sci_StrictOptimizedSetOps: 1,
  sc_StrictOptimizedSetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_sci_HashSet.prototype.$classData = $d_sci_HashSet;
class $c_scm_AbstractSet extends $c_sc_AbstractSet {
  iterableFactory__sc_IterableFactory() {
    return $m_scm_Set$()
  };
  knownSize__I() {
    return (-1)
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  result__O() {
    return this
  };
}
const $p_sci_LazyList__scala$collection$immutable$LazyList$$state$lzycompute__sci_LazyList$State = (function($thiz) {
  if ((!$thiz.sci_LazyList__f_bitmap$0)) {
    const res = $thiz.sci_LazyList__f_lazyState.apply__O();
    $thiz.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated = true;
    $thiz.sci_LazyList__f_lazyState = null;
    $thiz.sci_LazyList__f_scala$collection$immutable$LazyList$$state = res;
    $thiz.sci_LazyList__f_bitmap$0 = true
  };
  return $thiz.sci_LazyList__f_scala$collection$immutable$LazyList$$state
});
const $p_sci_LazyList__mapImpl__F1__sci_LazyList = (function($thiz, f) {
  $m_sci_LazyList$();
  const state = new $c_sjsr_AnonFunction0(((this$1, f$1) => (() => {
    if (this$1.isEmpty__Z()) {
      return $m_sci_LazyList$State$Empty$()
    } else {
      $m_sci_LazyList$();
      const hd = f$1.apply__O__O(this$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O());
      const tl = $p_sci_LazyList__mapImpl__F1__sci_LazyList(this$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList(), f$1);
      return new $c_sci_LazyList$State$Cons(hd, tl)
    }
  }))($thiz, f));
  return new $c_sci_LazyList(state)
});
const $p_sci_LazyList__addStringNoForce__jl_StringBuilder__T__T__T__jl_StringBuilder = (function($thiz, b, start, sep, end) {
  b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + start);
  if ((!$thiz.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated)) {
    b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (b.jl_StringBuilder__f_java$lang$StringBuilder$$content + "<not computed>")
  } else if ((!$thiz.isEmpty__Z())) {
    const obj = $thiz.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O();
    b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj);
    let elem = null;
    elem = $thiz;
    const elem$1 = $thiz.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
    let elem$2 = null;
    elem$2 = elem$1;
    if (((elem !== elem$2) && ((!elem$2.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated) || (elem.scala$collection$immutable$LazyList$$state__sci_LazyList$State() !== elem$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State())))) {
      elem = elem$2;
      if ((elem$2.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && (!elem$2.isEmpty__Z()))) {
        const this$3 = elem$2;
        elem$2 = this$3.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
        while ((((elem !== elem$2) && (elem$2.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && (!elem$2.isEmpty__Z()))) && (elem.scala$collection$immutable$LazyList$$state__sci_LazyList$State() !== elem$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State()))) {
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
          const this$4 = elem;
          const obj$1 = this$4.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O();
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$1);
          const this$5 = elem;
          elem = this$5.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
          const this$6 = elem$2;
          elem$2 = this$6.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
          if ((elem$2.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && (!elem$2.isEmpty__Z()))) {
            const this$7 = elem$2;
            elem$2 = this$7.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
          }
        }
      }
    };
    if ((!(elem$2.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && (!elem$2.isEmpty__Z())))) {
      while ((elem !== elem$2)) {
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
        const this$8 = elem;
        const obj$2 = this$8.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O();
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$2);
        const this$9 = elem;
        elem = this$9.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
      };
      if ((!elem.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated)) {
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (b.jl_StringBuilder__f_java$lang$StringBuilder$$content + "<not computed>")
      }
    } else {
      let runner = $thiz;
      let k = 0;
      while (true) {
        const a = runner;
        const b$1 = elem$2;
        if ((!((a === b$1) || (a.scala$collection$immutable$LazyList$$state__sci_LazyList$State() === b$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State())))) {
          const this$10 = runner;
          runner = this$10.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
          const this$11 = elem$2;
          elem$2 = this$11.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
          k = ((1 + k) | 0)
        } else {
          break
        }
      };
      const a$1 = elem;
      const b$2 = elem$2;
      if ((((a$1 === b$2) || (a$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State() === b$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State())) && (k > 0))) {
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
        const this$12 = elem;
        const obj$3 = this$12.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O();
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$3);
        const this$13 = elem;
        elem = this$13.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
      };
      while (true) {
        const a$2 = elem;
        const b$3 = elem$2;
        if ((!((a$2 === b$3) || (a$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State() === b$3.scala$collection$immutable$LazyList$$state__sci_LazyList$State())))) {
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
          const this$14 = elem;
          const obj$4 = this$14.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O();
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$4);
          const this$15 = elem;
          elem = this$15.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
        } else {
          break
        }
      };
      b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
      b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (b.jl_StringBuilder__f_java$lang$StringBuilder$$content + "<cycle>")
    }
  };
  b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + end);
  return b
});
class $c_sci_LazyList extends $c_sci_AbstractSeq {
  constructor(lazyState) {
    super();
    this.sci_LazyList__f_scala$collection$immutable$LazyList$$state = null;
    this.sci_LazyList__f_lazyState = null;
    this.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated = false;
    this.sci_LazyList__f_bitmap$0 = false;
    this.sci_LazyList__f_lazyState = lazyState;
    this.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated = false
  };
  stringPrefix__T() {
    return "LinearSeq"
  };
  length__I() {
    return $f_sc_LinearSeqOps__length__I(this)
  };
  last__O() {
    return $f_sc_LinearSeqOps__last__O(this)
  };
  lengthCompare__I__I(len) {
    return $f_sc_LinearSeqOps__lengthCompare__I__I(this, len)
  };
  apply__I__O(n) {
    return $f_sc_LinearSeqOps__apply__I__O(this, n)
  };
  exists__F1__Z(p) {
    return $f_sc_LinearSeqOps__exists__F1__Z(this, p)
  };
  contains__O__Z(elem) {
    return $f_sc_LinearSeqOps__contains__O__Z(this, elem)
  };
  sameElements__sc_IterableOnce__Z(that) {
    return $f_sc_LinearSeqOps__sameElements__sc_IterableOnce__Z(this, that)
  };
  indexWhere__F1__I__I(p, from) {
    return $f_sc_LinearSeqOps__indexWhere__F1__I__I(this, p, from)
  };
  scala$collection$immutable$LazyList$$state__sci_LazyList$State() {
    return ((!this.sci_LazyList__f_bitmap$0) ? $p_sci_LazyList__scala$collection$immutable$LazyList$$state$lzycompute__sci_LazyList$State(this) : this.sci_LazyList__f_scala$collection$immutable$LazyList$$state)
  };
  isEmpty__Z() {
    return (this.scala$collection$immutable$LazyList$$state__sci_LazyList$State() === $m_sci_LazyList$State$Empty$())
  };
  knownSize__I() {
    return ((this.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && this.isEmpty__Z()) ? 0 : (-1))
  };
  head__O() {
    return this.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O()
  };
  force__sci_LazyList() {
    let these = this;
    let those = this;
    if ((!these.isEmpty__Z())) {
      const this$1 = these;
      these = this$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
    };
    while ((those !== these)) {
      if (these.isEmpty__Z()) {
        return this
      };
      const this$2 = these;
      these = this$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
      if (these.isEmpty__Z()) {
        return this
      };
      const this$3 = these;
      these = this$3.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
      if ((these === those)) {
        return this
      };
      const this$4 = those;
      those = this$4.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
    };
    return this
  };
  iterator__sc_Iterator() {
    return ((this.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && this.isEmpty__Z()) ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_sci_LazyList$LazyIterator(this))
  };
  foreach__F1__V(f) {
    let _$this = this;
    while (true) {
      if ((!_$this.isEmpty__Z())) {
        const this$1 = _$this;
        f.apply__O__O(this$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O());
        const this$2 = _$this;
        _$this = this$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
        continue
      };
      break
    }
  };
  className__T() {
    return "LazyList"
  };
  equals__O__Z(that) {
    return ((this === that) || $f_sc_Seq__equals__O__Z(this, that))
  };
  reduceLeft__F2__O(f) {
    if (this.isEmpty__Z()) {
      throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "empty.reduceLeft")
    } else {
      let reducedRes = this.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O();
      let left = this.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList();
      while ((!left.isEmpty__Z())) {
        const $$x1 = reducedRes;
        const this$1 = left;
        reducedRes = f.apply__O__O__O($$x1, this$1.scala$collection$immutable$LazyList$$state__sci_LazyList$State().head__O());
        const this$2 = left;
        left = this$2.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
      };
      return reducedRes
    }
  };
  map__F1__sci_LazyList(f) {
    return ((this.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && this.isEmpty__Z()) ? $m_sci_LazyList$().sci_LazyList$__f__empty : $p_sci_LazyList__mapImpl__F1__sci_LazyList(this, f))
  };
  drop__I__sci_LazyList(n) {
    return ((n <= 0) ? this : ((this.sci_LazyList__f_scala$collection$immutable$LazyList$$stateEvaluated && this.isEmpty__Z()) ? $m_sci_LazyList$().sci_LazyList$__f__empty : $m_sci_LazyList$().scala$collection$immutable$LazyList$$dropImpl__sci_LazyList__I__sci_LazyList(this, n)))
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(sb, start, sep, end) {
    this.force__sci_LazyList();
    $p_sci_LazyList__addStringNoForce__jl_StringBuilder__T__T__T__jl_StringBuilder(this, sb.scm_StringBuilder__f_underlying, start, sep, end);
    return sb
  };
  toString__T() {
    return $p_sci_LazyList__addStringNoForce__jl_StringBuilder__T__T__T__jl_StringBuilder(this, $ct_jl_StringBuilder__T__(new $c_jl_StringBuilder(), "LazyList"), "(", ", ", ")").jl_StringBuilder__f_java$lang$StringBuilder$$content
  };
  apply__O__O(v1) {
    const n = (v1 | 0);
    return $f_sc_LinearSeqOps__apply__I__O(this, n)
  };
  drop__I__O(n) {
    return this.drop__I__sci_LazyList(n)
  };
  map__F1__O(f) {
    return this.map__F1__sci_LazyList(f)
  };
  tail__O() {
    return this.scala$collection$immutable$LazyList$$state__sci_LazyList$State().tail__sci_LazyList()
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_LazyList$()
  };
}
function $isArrayOf_sci_LazyList(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_LazyList)))
}
const $d_sci_LazyList = new $TypeData().initClass({
  sci_LazyList: 0
}, false, "scala.collection.immutable.LazyList", {
  sci_LazyList: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_LinearSeq: 1,
  sc_LinearSeq: 1,
  sc_LinearSeqOps: 1,
  sci_LinearSeqOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_LazyList.prototype.$classData = $d_sci_LazyList;
const $p_sci_Stream__addStringNoForce__jl_StringBuilder__T__T__T__jl_StringBuilder = (function($thiz, b, start, sep, end) {
  b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + start);
  if ((!$thiz.isEmpty__Z())) {
    const obj = $thiz.head__O();
    b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj);
    let elem = null;
    elem = $thiz;
    if ($thiz.tailDefined__Z()) {
      let scout = $thiz.tail__O();
      if ((elem !== scout)) {
        elem = scout;
        if (scout.tailDefined__Z()) {
          scout = scout.tail__O();
          while (((elem !== scout) && scout.tailDefined__Z())) {
            b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
            const obj$1 = elem.head__O();
            b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$1);
            elem = elem.tail__O();
            scout = scout.tail__O();
            if (scout.tailDefined__Z()) {
              scout = scout.tail__O()
            }
          }
        }
      };
      if ((!scout.tailDefined__Z())) {
        while ((elem !== scout)) {
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
          const obj$2 = elem.head__O();
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$2);
          elem = elem.tail__O()
        };
        const this$2 = elem;
        if ((!this$2.isEmpty__Z())) {
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
          const obj$3 = elem.head__O();
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$3)
        }
      } else {
        let runner = $thiz;
        let k = 0;
        while ((runner !== scout)) {
          runner = runner.tail__O();
          scout = scout.tail__O();
          k = ((1 + k) | 0)
        };
        if (((elem === scout) && (k > 0))) {
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
          const obj$4 = elem.head__O();
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$4);
          elem = elem.tail__O()
        };
        while ((elem !== scout)) {
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
          const obj$5 = elem.head__O();
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + obj$5);
          elem = elem.tail__O()
        }
      }
    };
    const this$3 = elem;
    if ((!this$3.isEmpty__Z())) {
      if ((!elem.tailDefined__Z())) {
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (b.jl_StringBuilder__f_java$lang$StringBuilder$$content + "<not computed>")
      } else {
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
        b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (b.jl_StringBuilder__f_java$lang$StringBuilder$$content + "<cycle>")
      }
    }
  };
  b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + end);
  return b
});
class $c_sci_Stream extends $c_sci_AbstractSeq {
  stringPrefix__T() {
    return "LinearSeq"
  };
  iterator__sc_Iterator() {
    return $f_sc_LinearSeqOps__iterator__sc_Iterator(this)
  };
  length__I() {
    return $f_sc_LinearSeqOps__length__I(this)
  };
  last__O() {
    return $f_sc_LinearSeqOps__last__O(this)
  };
  lengthCompare__I__I(len) {
    return $f_sc_LinearSeqOps__lengthCompare__I__I(this, len)
  };
  apply__I__O(n) {
    return $f_sc_LinearSeqOps__apply__I__O(this, n)
  };
  exists__F1__Z(p) {
    return $f_sc_LinearSeqOps__exists__F1__Z(this, p)
  };
  contains__O__Z(elem) {
    return $f_sc_LinearSeqOps__contains__O__Z(this, elem)
  };
  sameElements__sc_IterableOnce__Z(that) {
    return $f_sc_LinearSeqOps__sameElements__sc_IterableOnce__Z(this, that)
  };
  indexWhere__F1__I__I(p, from) {
    return $f_sc_LinearSeqOps__indexWhere__F1__I__I(this, p, from)
  };
  className__T() {
    return "Stream"
  };
  foreach__F1__V(f) {
    let _$this = this;
    while (true) {
      if ((!_$this.isEmpty__Z())) {
        f.apply__O__O(_$this.head__O());
        _$this = _$this.tail__O();
        continue
      };
      break
    }
  };
  equals__O__Z(that) {
    return ((this === that) || $f_sc_Seq__equals__O__Z(this, that))
  };
  reduceLeft__F2__O(f) {
    if (this.isEmpty__Z()) {
      throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "empty.reduceLeft")
    } else {
      let reducedRes = this.head__O();
      let left = this.tail__O();
      while ((!left.isEmpty__Z())) {
        reducedRes = f.apply__O__O__O(reducedRes, left.head__O());
        left = left.tail__O()
      };
      return reducedRes
    }
  };
  map__F1__sci_Stream(f) {
    if (this.isEmpty__Z()) {
      return $m_sci_Stream$Empty$()
    } else {
      const hd = f.apply__O__O(this.head__O());
      const tl = new $c_sjsr_AnonFunction0(((this$2, f$1) => (() => this$2.tail__O().map__F1__sci_Stream(f$1)))(this, f));
      return new $c_sci_Stream$Cons(hd, tl)
    }
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(sb, start, sep, end) {
    this.force__sci_Stream();
    $p_sci_Stream__addStringNoForce__jl_StringBuilder__T__T__T__jl_StringBuilder(this, sb.scm_StringBuilder__f_underlying, start, sep, end);
    return sb
  };
  toString__T() {
    return $p_sci_Stream__addStringNoForce__jl_StringBuilder__T__T__T__jl_StringBuilder(this, $ct_jl_StringBuilder__T__(new $c_jl_StringBuilder(), "Stream"), "(", ", ", ")").jl_StringBuilder__f_java$lang$StringBuilder$$content
  };
  apply__O__O(v1) {
    const n = (v1 | 0);
    return $f_sc_LinearSeqOps__apply__I__O(this, n)
  };
  map__F1__O(f) {
    return this.map__F1__sci_Stream(f)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_Stream$()
  };
}
function $isArrayOf_sci_Stream(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Stream)))
}
class $c_sci_WrappedString extends $c_sci_AbstractSeq {
  constructor(self) {
    super();
    this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self = null;
    this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self = self
  };
  canEqual__O__Z(that) {
    return $f_sci_IndexedSeq__canEqual__O__Z(this, that)
  };
  stringPrefix__T() {
    return "IndexedSeq"
  };
  iterator__sc_Iterator() {
    const this$1 = new $c_sc_StringView(this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self);
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  drop__I__O(n) {
    return $f_sc_IndexedSeqOps__drop__I__O(this, n)
  };
  map__F1__O(f) {
    return $f_sc_IndexedSeqOps__map__F1__O(this, f)
  };
  last__O() {
    return $f_sc_IndexedSeqOps__last__O(this)
  };
  lengthCompare__I__I(len) {
    const this$1 = this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
    const x = (this$1.length | 0);
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    const this$1 = this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
    return (this$1.length | 0)
  };
  newSpecificBuilder__scm_Builder() {
    return $m_sci_WrappedString$().newBuilder__scm_Builder()
  };
  length__I() {
    const this$1 = this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
    return (this$1.length | 0)
  };
  toString__T() {
    return this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self
  };
  copyToArray__O__I__I(xs, start) {
    const this$1 = this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
    return this.copyToArray__O__I__I__I(xs, start, (this$1.length | 0))
  };
  copyToArray__O__I__I__I(xs, start, len) {
    if ($isArrayOf_C(xs, 1)) {
      const x2 = xs;
      const this$1 = this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
      const srcLen = (this$1.length | 0);
      const destLen = x2.u.length;
      const x = ((len < srcLen) ? len : srcLen);
      const y = ((destLen - start) | 0);
      const x$1 = ((x < y) ? x : y);
      const copied = ((x$1 > 0) ? x$1 : 0);
      $f_T__getChars__I__I__AC__I__V(this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self, 0, copied, x2, start);
      return copied
    } else {
      return $f_sc_IterableOnceOps__copyToArray__O__I__I__I(this, xs, start, len)
    }
  };
  sameElements__sc_IterableOnce__Z(o) {
    if ((o instanceof $c_sci_WrappedString)) {
      const x2 = o;
      return (this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self === x2.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self)
    } else {
      return $f_sci_IndexedSeq__sameElements__sc_IterableOnce__Z(this, o)
    }
  };
  className__T() {
    return "WrappedString"
  };
  applyPreferredMaxLength__I() {
    return 2147483647
  };
  equals__O__Z(other) {
    if ((other instanceof $c_sci_WrappedString)) {
      const x2 = other;
      return (this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self === x2.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self)
    } else {
      return $f_sc_Seq__equals__O__Z(this, other)
    }
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_IndexedSeq$()
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    return $m_sci_WrappedString$().fromSpecific__sc_IterableOnce__sci_WrappedString(coll)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    return $m_sci_WrappedString$().fromSpecific__sc_IterableOnce__sci_WrappedString(coll)
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    const this$1 = this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
    return $bC((65535 & (this$1.charCodeAt(i) | 0)))
  };
  apply__I__O(i) {
    const this$1 = this.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
    return $bC((65535 & (this$1.charCodeAt(i) | 0)))
  };
}
function $isArrayOf_sci_WrappedString(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_WrappedString)))
}
const $d_sci_WrappedString = new $TypeData().initClass({
  sci_WrappedString: 0
}, false, "scala.collection.immutable.WrappedString", {
  sci_WrappedString: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_WrappedString.prototype.$classData = $d_sci_WrappedString;
class $c_sjsr_WrappedVarArgs extends $c_O {
  constructor(array) {
    super();
    this.sjsr_WrappedVarArgs__f_scala$scalajs$runtime$WrappedVarArgs$$array = null;
    this.sjsr_WrappedVarArgs__f_scala$scalajs$runtime$WrappedVarArgs$$array = array
  };
  sorted__s_math_Ordering__O(ord) {
    return $f_sc_SeqOps__sorted__s_math_Ordering__O(this, ord)
  };
  map__F1__O(f) {
    return $f_sc_StrictOptimizedIterableOps__map__F1__O(this, f)
  };
  canEqual__O__Z(that) {
    return $f_sci_IndexedSeq__canEqual__O__Z(this, that)
  };
  sameElements__sc_IterableOnce__Z(o) {
    return $f_sci_IndexedSeq__sameElements__sc_IterableOnce__Z(this, o)
  };
  applyPreferredMaxLength__I() {
    return $m_sci_IndexedSeqDefaults$().sci_IndexedSeqDefaults$__f_defaultApplyPreferredMaxLength
  };
  iterator__sc_Iterator() {
    const this$1 = new $c_sc_IndexedSeqView$Id(this);
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  drop__I__O(n) {
    return $f_sc_IndexedSeqOps__drop__I__O(this, n)
  };
  last__O() {
    return $f_sc_IndexedSeqOps__last__O(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  equals__O__Z(o) {
    return $f_sc_Seq__equals__O__Z(this, o)
  };
  hashCode__I() {
    return $m_s_util_hashing_MurmurHash3$().seqHash__sc_Seq__I(this)
  };
  toString__T() {
    return $f_sc_Iterable__toString__T(this)
  };
  indexWhere__F1__I__I(p, from) {
    const this$1 = new $c_sc_IndexedSeqView$Id(this);
    const this$2 = new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1);
    return $f_sc_Iterator__indexWhere__F1__I__I(this$2, p, from)
  };
  contains__O__Z(elem) {
    return $f_sc_SeqOps__contains__O__Z(this, elem)
  };
  isEmpty__Z() {
    return $f_sc_SeqOps__isEmpty__Z(this)
  };
  newSpecificBuilder__scm_Builder() {
    return $m_sjsr_WrappedVarArgs$().newBuilder__scm_Builder()
  };
  head__O() {
    const this$1 = new $c_sc_IndexedSeqView$Id(this);
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1).next__O()
  };
  tail__O() {
    return $f_sc_IterableOps__tail__O(this)
  };
  foreach__F1__V(f) {
    $f_sc_IterableOnceOps__foreach__F1__V(this, f)
  };
  exists__F1__Z(p) {
    return $f_sc_IterableOnceOps__exists__F1__Z(this, p)
  };
  reduceLeft__F2__O(op) {
    return $f_sc_IterableOnceOps__reduceLeft__F2__O(this, op)
  };
  copyToArray__O__I__I(xs, start) {
    return $f_sc_IterableOnceOps__copyToArray__O__I__I(this, xs, start)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(b, start, sep, end) {
    return $f_sc_IterableOnceOps__addString__scm_StringBuilder__T__T__T__scm_StringBuilder(this, b, start, sep, end)
  };
  toArray__s_reflect_ClassTag__O(evidence$2) {
    return $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, evidence$2)
  };
  length__I() {
    return (this.sjsr_WrappedVarArgs__f_scala$scalajs$runtime$WrappedVarArgs$$array.length | 0)
  };
  apply__I__O(idx) {
    return this.sjsr_WrappedVarArgs__f_scala$scalajs$runtime$WrappedVarArgs$$array[idx]
  };
  className__T() {
    return "WrappedVarArgs"
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    const this$1 = $m_sjsr_WrappedVarArgs$();
    return this$1.from__sc_IterableOnce__sjsr_WrappedVarArgs(coll)
  };
  apply__O__O(v1) {
    return this.apply__I__O((v1 | 0))
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sjsr_WrappedVarArgs$()
  };
}
function $isArrayOf_sjsr_WrappedVarArgs(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sjsr_WrappedVarArgs)))
}
const $d_sjsr_WrappedVarArgs = new $TypeData().initClass({
  sjsr_WrappedVarArgs: 0
}, false, "scala.scalajs.runtime.WrappedVarArgs", {
  sjsr_WrappedVarArgs: 1,
  O: 1,
  sci_IndexedSeq: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_SeqOps: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sjsr_WrappedVarArgs.prototype.$classData = $d_sjsr_WrappedVarArgs;
class $c_sci_HashMap extends $c_sci_AbstractMap {
  constructor(rootNode) {
    super();
    this.sci_HashMap__f_rootNode = null;
    this.sci_HashMap__f_rootNode = rootNode
  };
  mapFactory__sc_MapFactory() {
    return $m_sci_HashMap$()
  };
  knownSize__I() {
    return this.sci_HashMap__f_rootNode.sci_BitmapIndexedMapNode__f_size
  };
  size__I() {
    return this.sci_HashMap__f_rootNode.sci_BitmapIndexedMapNode__f_size
  };
  isEmpty__Z() {
    return (this.sci_HashMap__f_rootNode.sci_BitmapIndexedMapNode__f_size === 0)
  };
  iterator__sc_Iterator() {
    return (this.isEmpty__Z() ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_sci_MapKeyValueTupleIterator(this.sci_HashMap__f_rootNode))
  };
  valuesIterator__sc_Iterator() {
    return (this.isEmpty__Z() ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_sci_MapValueIterator(this.sci_HashMap__f_rootNode))
  };
  contains__O__Z(key) {
    const keyUnimprovedHash = $m_sr_Statics$().anyHash__O__I(key);
    const keyHash = $m_sc_Hashing$().improve__I__I(keyUnimprovedHash);
    return this.sci_HashMap__f_rootNode.containsKey__O__I__I__I__Z(key, keyUnimprovedHash, keyHash, 0)
  };
  apply__O__O(key) {
    const keyUnimprovedHash = $m_sr_Statics$().anyHash__O__I(key);
    const keyHash = $m_sc_Hashing$().improve__I__I(keyUnimprovedHash);
    return this.sci_HashMap__f_rootNode.apply__O__I__I__I__O(key, keyUnimprovedHash, keyHash, 0)
  };
  get__O__s_Option(key) {
    const keyUnimprovedHash = $m_sr_Statics$().anyHash__O__I(key);
    const keyHash = $m_sc_Hashing$().improve__I__I(keyUnimprovedHash);
    return this.sci_HashMap__f_rootNode.get__O__I__I__I__s_Option(key, keyUnimprovedHash, keyHash, 0)
  };
  getOrElse__O__F0__O(key, default$1) {
    const keyUnimprovedHash = $m_sr_Statics$().anyHash__O__I(key);
    const keyHash = $m_sc_Hashing$().improve__I__I(keyUnimprovedHash);
    return this.sci_HashMap__f_rootNode.getOrElse__O__I__I__I__F0__O(key, keyUnimprovedHash, keyHash, 0, default$1)
  };
  updated__O__O__sci_HashMap(key, value) {
    const keyUnimprovedHash = $m_sr_Statics$().anyHash__O__I(key);
    const newRootNode = this.sci_HashMap__f_rootNode.updated__O__O__I__I__I__Z__sci_BitmapIndexedMapNode(key, value, keyUnimprovedHash, $m_sc_Hashing$().improve__I__I(keyUnimprovedHash), 0, true);
    return ((newRootNode === this.sci_HashMap__f_rootNode) ? this : new $c_sci_HashMap(newRootNode))
  };
  removed__O__sci_HashMap(key) {
    const keyUnimprovedHash = $m_sr_Statics$().anyHash__O__I(key);
    const newRootNode = this.sci_HashMap__f_rootNode.removed__O__I__I__I__sci_BitmapIndexedMapNode(key, keyUnimprovedHash, $m_sc_Hashing$().improve__I__I(keyUnimprovedHash), 0);
    return ((newRootNode === this.sci_HashMap__f_rootNode) ? this : new $c_sci_HashMap(newRootNode))
  };
  concat__sc_IterableOnce__sci_HashMap(that) {
    if ((that instanceof $c_sci_HashMap)) {
      const x2 = that;
      const newRootNode = this.sci_HashMap__f_rootNode.concat__sci_MapNode__I__sci_BitmapIndexedMapNode(x2.sci_HashMap__f_rootNode, 0);
      return ((newRootNode === this.sci_HashMap__f_rootNode) ? this : new $c_sci_HashMap(newRootNode))
    } else if ((that instanceof $c_scm_HashMap)) {
      const x3 = that;
      const iter = x3.nodeIterator__sc_Iterator();
      let current = this.sci_HashMap__f_rootNode;
      while (iter.hasNext__Z()) {
        const next = iter.next__O();
        const improvedHash = next.scm_HashMap$Node__f__hash;
        const originalHash = (improvedHash ^ ((improvedHash >>> 16) | 0));
        const improved = $m_sc_Hashing$().improve__I__I(originalHash);
        current = current.updated__O__O__I__I__I__Z__sci_BitmapIndexedMapNode(next.scm_HashMap$Node__f__key, next.scm_HashMap$Node__f__value, originalHash, improved, 0, true);
        if ((current !== this.sci_HashMap__f_rootNode)) {
          let shallowlyMutableNodeMap = $m_sci_Node$().bitposFrom__I__I($m_sci_Node$().maskFrom__I__I__I(improved, 0));
          while (iter.hasNext__Z()) {
            const next$2 = iter.next__O();
            const improvedHash$1 = next$2.scm_HashMap$Node__f__hash;
            const originalHash$2 = (improvedHash$1 ^ ((improvedHash$1 >>> 16) | 0));
            shallowlyMutableNodeMap = current.updateWithShallowMutations__O__O__I__I__I__I__I(next$2.scm_HashMap$Node__f__key, next$2.scm_HashMap$Node__f__value, originalHash$2, $m_sc_Hashing$().improve__I__I(originalHash$2), 0, shallowlyMutableNodeMap)
          };
          return new $c_sci_HashMap(current)
        }
      };
      return this
    } else {
      const iter$2 = that.iterator__sc_Iterator();
      let current$2 = this.sci_HashMap__f_rootNode;
      while (iter$2.hasNext__Z()) {
        const x1$2 = iter$2.next__O();
        if ((x1$2 === null)) {
          throw new $c_s_MatchError(x1$2)
        };
        const key = x1$2._1__O();
        const value = x1$2._2__O();
        const originalHash$3 = $m_sr_Statics$().anyHash__O__I(key);
        const improved$2 = $m_sc_Hashing$().improve__I__I(originalHash$3);
        current$2 = current$2.updated__O__O__I__I__I__Z__sci_BitmapIndexedMapNode(key, value, originalHash$3, improved$2, 0, true);
        if ((current$2 !== this.sci_HashMap__f_rootNode)) {
          let shallowlyMutableNodeMap$2 = $m_sci_Node$().bitposFrom__I__I($m_sci_Node$().maskFrom__I__I__I(improved$2, 0));
          while (iter$2.hasNext__Z()) {
            const x1$3 = iter$2.next__O();
            if ((x1$3 === null)) {
              throw new $c_s_MatchError(x1$3)
            };
            const key$3 = x1$3._1__O();
            const value$3 = x1$3._2__O();
            const originalHash$4 = $m_sr_Statics$().anyHash__O__I(key$3);
            const improved$3 = $m_sc_Hashing$().improve__I__I(originalHash$4);
            shallowlyMutableNodeMap$2 = current$2.updateWithShallowMutations__O__O__I__I__I__I__I(key$3, value$3, originalHash$4, improved$3, 0, shallowlyMutableNodeMap$2)
          };
          return new $c_sci_HashMap(current$2)
        }
      };
      return this
    }
  };
  tail__sci_HashMap() {
    const key = this.iterator__sc_Iterator().next__O()._1__O();
    return this.removed__O__sci_HashMap(key)
  };
  foreach__F1__V(f) {
    this.sci_HashMap__f_rootNode.foreach__F1__V(f)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_HashMap)) {
      const x2 = that;
      if ((this === x2)) {
        return true
      } else {
        const x = this.sci_HashMap__f_rootNode;
        const x$2 = x2.sci_HashMap__f_rootNode;
        return ((x === null) ? (x$2 === null) : x.equals__O__Z(x$2))
      }
    } else {
      return $f_sc_Map__equals__O__Z(this, that)
    }
  };
  hashCode__I() {
    const hashIterator = new $c_sci_MapKeyValueTupleHashIterator(this.sci_HashMap__f_rootNode);
    const hash = $m_s_util_hashing_MurmurHash3$().unorderedHash__sc_IterableOnce__I__I(hashIterator, $m_s_util_hashing_MurmurHash3$().s_util_hashing_MurmurHash3$__f_mapSeed);
    return hash
  };
  className__T() {
    return "HashMap"
  };
  drop__I__O(n) {
    return $f_sc_IterableOps__drop__I__O(this, n)
  };
  head__O() {
    return this.iterator__sc_Iterator().next__O()
  };
  tail__O() {
    return this.tail__sci_HashMap()
  };
  concat__sc_IterableOnce__sc_IterableOps(suffix) {
    return this.concat__sc_IterableOnce__sci_HashMap(suffix)
  };
  updated__O__O__sci_MapOps(key, value) {
    return this.updated__O__O__sci_HashMap(key, value)
  };
}
function $isArrayOf_sci_HashMap(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_HashMap)))
}
const $d_sci_HashMap = new $TypeData().initClass({
  sci_HashMap: 0
}, false, "scala.collection.immutable.HashMap", {
  sci_HashMap: 1,
  sci_AbstractMap: 1,
  sc_AbstractMap: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Map: 1,
  sc_MapOps: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_MapFactoryDefaults: 1,
  s_Equals: 1,
  sci_Map: 1,
  sci_Iterable: 1,
  sci_MapOps: 1,
  sci_StrictOptimizedMapOps: 1,
  sc_StrictOptimizedMapOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_sci_HashMap.prototype.$classData = $d_sci_HashMap;
class $c_sci_Stream$Cons extends $c_sci_Stream {
  constructor(head, tl) {
    super();
    this.sci_Stream$Cons__f_head = null;
    this.sci_Stream$Cons__f_tlVal = null;
    this.sci_Stream$Cons__f_tlGen = null;
    this.sci_Stream$Cons__f_head = head;
    this.sci_Stream$Cons__f_tlGen = tl
  };
  head__O() {
    return this.sci_Stream$Cons__f_head
  };
  isEmpty__Z() {
    return false
  };
  tailDefined__Z() {
    return (this.sci_Stream$Cons__f_tlGen === null)
  };
  tail__sci_Stream() {
    if ((!this.tailDefined__Z())) {
      if ((!this.tailDefined__Z())) {
        this.sci_Stream$Cons__f_tlVal = this.sci_Stream$Cons__f_tlGen.apply__O();
        this.sci_Stream$Cons__f_tlGen = null
      }
    };
    return this.sci_Stream$Cons__f_tlVal
  };
  force__sci_Stream$Cons() {
    let these = this;
    let those = this;
    if ((!these.isEmpty__Z())) {
      these = these.tail__O()
    };
    while ((those !== these)) {
      if (these.isEmpty__Z()) {
        return this
      };
      these = these.tail__O();
      if (these.isEmpty__Z()) {
        return this
      };
      these = these.tail__O();
      if ((these === those)) {
        return this
      };
      those = those.tail__O()
    };
    return this
  };
  force__sci_Stream() {
    return this.force__sci_Stream$Cons()
  };
  tail__O() {
    return this.tail__sci_Stream()
  };
}
const $d_sci_Stream$Cons = new $TypeData().initClass({
  sci_Stream$Cons: 0
}, false, "scala.collection.immutable.Stream$Cons", {
  sci_Stream$Cons: 1,
  sci_Stream: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_LinearSeq: 1,
  sc_LinearSeq: 1,
  sc_LinearSeqOps: 1,
  sci_LinearSeqOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Stream$Cons.prototype.$classData = $d_sci_Stream$Cons;
class $c_sci_Stream$Empty$ extends $c_sci_Stream {
  isEmpty__Z() {
    return true
  };
  head__E() {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "head of empty stream")
  };
  tail__sci_Stream() {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "tail of empty stream")
  };
  knownSize__I() {
    return 0
  };
  tailDefined__Z() {
    return false
  };
  force__sci_Stream() {
    return this
  };
  tail__O() {
    return this.tail__sci_Stream()
  };
  head__O() {
    this.head__E()
  };
}
const $d_sci_Stream$Empty$ = new $TypeData().initClass({
  sci_Stream$Empty$: 0
}, false, "scala.collection.immutable.Stream$Empty$", {
  sci_Stream$Empty$: 1,
  sci_Stream: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_LinearSeq: 1,
  sc_LinearSeq: 1,
  sc_LinearSeqOps: 1,
  sci_LinearSeqOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Stream$Empty$.prototype.$classData = $d_sci_Stream$Empty$;
let $n_sci_Stream$Empty$ = (void 0);
function $m_sci_Stream$Empty$() {
  if ((!$n_sci_Stream$Empty$)) {
    $n_sci_Stream$Empty$ = new $c_sci_Stream$Empty$()
  };
  return $n_sci_Stream$Empty$
}
class $c_scm_AbstractBuffer extends $c_scm_AbstractSeq {
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs)
  };
}
class $c_scm_AbstractMap extends $c_sc_AbstractMap {
  iterableFactory__sc_IterableFactory() {
    return $m_scm_Iterable$()
  };
  result__O() {
    return this
  };
}
class $c_s_Enumeration$ValueSet extends $c_sci_AbstractSet {
  constructor(outer, nnIds) {
    super();
    this.s_Enumeration$ValueSet__f_nnIds = null;
    this.s_Enumeration$ValueSet__f_$outer = null;
    this.s_Enumeration$ValueSet__f_nnIds = nnIds;
    if ((outer === null)) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O(null)
    } else {
      this.s_Enumeration$ValueSet__f_$outer = outer
    }
  };
  stringPrefix__T() {
    return "SortedSet"
  };
  ordering__s_math_Ordering() {
    return this.s_Enumeration$ValueSet__f_$outer.ValueOrdering__s_Enumeration$ValueOrdering$()
  };
  knownSize__I() {
    const this$1 = this.s_Enumeration$ValueSet__f_nnIds;
    return $f_sc_BitSetOps__size__I(this$1)
  };
  isEmpty__Z() {
    const this$1 = this.s_Enumeration$ValueSet__f_nnIds;
    return $f_sc_BitSetOps__isEmpty__Z(this$1)
  };
  contains__s_Enumeration$Value__Z(v) {
    const this$1 = this.s_Enumeration$ValueSet__f_nnIds;
    const elem = ((v.s_Enumeration$Val__f_i - this.s_Enumeration$ValueSet__f_$outer.s_Enumeration__f_scala$Enumeration$$bottomId) | 0);
    return $f_sc_BitSetOps__contains__I__Z(this$1, elem)
  };
  incl__s_Enumeration$Value__s_Enumeration$ValueSet(value) {
    const $$x1 = this.s_Enumeration$ValueSet__f_$outer;
    const this$1 = this.s_Enumeration$ValueSet__f_nnIds;
    const elem = ((value.s_Enumeration$Val__f_i - this.s_Enumeration$ValueSet__f_$outer.s_Enumeration__f_scala$Enumeration$$bottomId) | 0);
    return new $c_s_Enumeration$ValueSet($$x1, this$1.incl__I__sci_BitSet(elem))
  };
  iterator__sc_Iterator() {
    const this$1 = this.s_Enumeration$ValueSet__f_nnIds;
    const this$4 = new $c_sc_BitSetOps$$anon$1(this$1, 0);
    const f = new $c_sjsr_AnonFunction1(((this$2) => ((id$2) => {
      const id = (id$2 | 0);
      const this$3 = this$2.s_Enumeration$ValueSet__f_$outer;
      const x = ((this$2.s_Enumeration$ValueSet__f_$outer.s_Enumeration__f_scala$Enumeration$$bottomId + id) | 0);
      return this$3.s_Enumeration__f_scala$Enumeration$$vmap.apply__O__O(x)
    }))(this));
    return new $c_sc_Iterator$$anon$9(this$4, f)
  };
  className__T() {
    return (this.s_Enumeration$ValueSet__f_$outer + ".ValueSet")
  };
  fromSpecific__sc_IterableOnce__s_Enumeration$ValueSet(coll) {
    return this.s_Enumeration$ValueSet__f_$outer.ValueSet__s_Enumeration$ValueSet$().fromSpecific__sc_IterableOnce__s_Enumeration$ValueSet(coll)
  };
  newSpecificBuilder__scm_Builder() {
    const this$1 = this.s_Enumeration$ValueSet__f_$outer.ValueSet__s_Enumeration$ValueSet$();
    return new $c_s_Enumeration$ValueSet$$anon$1(this$1)
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    return this.fromSpecific__sc_IterableOnce__s_Enumeration$ValueSet(coll)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    return this.fromSpecific__sc_IterableOnce__s_Enumeration$ValueSet(coll)
  };
  incl__O__sci_SetOps(elem) {
    return this.incl__s_Enumeration$Value__s_Enumeration$ValueSet(elem)
  };
  contains__O__Z(elem) {
    return this.contains__s_Enumeration$Value__Z(elem)
  };
}
function $isArrayOf_s_Enumeration$ValueSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.s_Enumeration$ValueSet)))
}
const $d_s_Enumeration$ValueSet = new $TypeData().initClass({
  s_Enumeration$ValueSet: 0
}, false, "scala.Enumeration$ValueSet", {
  s_Enumeration$ValueSet: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sci_SortedSet: 1,
  sc_SortedSet: 1,
  sc_SortedSetOps: 1,
  sc_SortedOps: 1,
  sc_SortedSetFactoryDefaults: 1,
  sci_SortedSetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_s_Enumeration$ValueSet.prototype.$classData = $d_s_Enumeration$ValueSet;
const $p_scm_HashSet__addElem__O__I__Z = (function($thiz, elem, hash) {
  const idx = (hash & (((-1) + $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length) | 0));
  const x1 = $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[idx];
  if ((x1 === null)) {
    $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[idx] = new $c_scm_HashSet$Node(elem, hash, null)
  } else {
    let prev = null;
    let n = x1;
    while (((n !== null) && (n.scm_HashSet$Node__f__hash <= hash))) {
      if (((n.scm_HashSet$Node__f__hash === hash) && $m_sr_BoxesRunTime$().equals__O__O__Z(elem, n.scm_HashSet$Node__f__key))) {
        return false
      };
      prev = n;
      n = n.scm_HashSet$Node__f__next
    };
    if ((prev === null)) {
      $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[idx] = new $c_scm_HashSet$Node(elem, hash, x1)
    } else {
      prev.scm_HashSet$Node__f__next = new $c_scm_HashSet$Node(elem, hash, prev.scm_HashSet$Node__f__next)
    }
  };
  $thiz.scm_HashSet__f_contentSize = ((1 + $thiz.scm_HashSet__f_contentSize) | 0);
  return true
});
const $p_scm_HashSet__growTable__I__V = (function($thiz, newlen) {
  let oldlen = $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length;
  $thiz.scm_HashSet__f_threshold = $p_scm_HashSet__newThreshold__I__I($thiz, newlen);
  if (($thiz.scm_HashSet__f_contentSize === 0)) {
    $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table = $newArrayObject($d_scm_HashSet$Node.getArrayOf(), [newlen])
  } else {
    const original = $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table;
    $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table = $m_ju_Arrays$().copyOf__AO__I__AO(original, newlen);
    const preLow = new $c_scm_HashSet$Node(null, 0, null);
    const preHigh = new $c_scm_HashSet$Node(null, 0, null);
    while ((oldlen < newlen)) {
      let i = 0;
      while ((i < oldlen)) {
        const old = $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[i];
        if ((old !== null)) {
          preLow.scm_HashSet$Node__f__next = null;
          preHigh.scm_HashSet$Node__f__next = null;
          let lastLow = preLow;
          let lastHigh = preHigh;
          let n = old;
          while ((n !== null)) {
            const next = n.scm_HashSet$Node__f__next;
            if (((n.scm_HashSet$Node__f__hash & oldlen) === 0)) {
              lastLow.scm_HashSet$Node__f__next = n;
              lastLow = n
            } else {
              lastHigh.scm_HashSet$Node__f__next = n;
              lastHigh = n
            };
            n = next
          };
          lastLow.scm_HashSet$Node__f__next = null;
          if ((old !== preLow.scm_HashSet$Node__f__next)) {
            $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[i] = preLow.scm_HashSet$Node__f__next
          };
          if ((preHigh.scm_HashSet$Node__f__next !== null)) {
            $thiz.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[((i + oldlen) | 0)] = preHigh.scm_HashSet$Node__f__next;
            lastHigh.scm_HashSet$Node__f__next = null
          }
        };
        i = ((1 + i) | 0)
      };
      oldlen = (oldlen << 1)
    }
  }
});
const $p_scm_HashSet__tableSizeFor__I__I = (function($thiz, capacity) {
  const x = (((-1) + capacity) | 0);
  const i = ((x > 4) ? x : 4);
  const x$1 = ((((-2147483648) >> $clz32(i)) & i) << 1);
  return ((x$1 < 1073741824) ? x$1 : 1073741824)
});
const $p_scm_HashSet__newThreshold__I__I = (function($thiz, size) {
  return $doubleToInt((size * $thiz.scm_HashSet__f_loadFactor))
});
class $c_scm_HashSet extends $c_scm_AbstractSet {
  constructor(initialCapacity, loadFactor) {
    super();
    this.scm_HashSet__f_loadFactor = 0.0;
    this.scm_HashSet__f_scala$collection$mutable$HashSet$$table = null;
    this.scm_HashSet__f_threshold = 0;
    this.scm_HashSet__f_contentSize = 0;
    this.scm_HashSet__f_loadFactor = loadFactor;
    this.scm_HashSet__f_scala$collection$mutable$HashSet$$table = $newArrayObject($d_scm_HashSet$Node.getArrayOf(), [$p_scm_HashSet__tableSizeFor__I__I(this, initialCapacity)]);
    this.scm_HashSet__f_threshold = $p_scm_HashSet__newThreshold__I__I(this, this.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length);
    this.scm_HashSet__f_contentSize = 0
  };
  size__I() {
    return this.scm_HashSet__f_contentSize
  };
  scala$collection$mutable$HashSet$$improveHash__I__I(originalHash) {
    return (originalHash ^ ((originalHash >>> 16) | 0))
  };
  contains__O__Z(elem) {
    const hash = this.scala$collection$mutable$HashSet$$improveHash__I__I($m_sr_Statics$().anyHash__O__I(elem));
    const x1 = this.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[(hash & (((-1) + this.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length) | 0))];
    return (((x1 === null) ? null : x1.findNode__O__I__scm_HashSet$Node(elem, hash)) !== null)
  };
  sizeHint__I__V(size) {
    const target = $p_scm_HashSet__tableSizeFor__I__I(this, $doubleToInt((((1 + size) | 0) / this.scm_HashSet__f_loadFactor)));
    if ((target > this.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length)) {
      $p_scm_HashSet__growTable__I__V(this, target)
    }
  };
  add__O__Z(elem) {
    if ((((1 + this.scm_HashSet__f_contentSize) | 0) >= this.scm_HashSet__f_threshold)) {
      $p_scm_HashSet__growTable__I__V(this, (this.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length << 1))
    };
    return $p_scm_HashSet__addElem__O__I__Z(this, elem, this.scala$collection$mutable$HashSet$$improveHash__I__I($m_sr_Statics$().anyHash__O__I(elem)))
  };
  addAll__sc_IterableOnce__scm_HashSet(xs) {
    this.sizeHint__I__V(xs.knownSize__I());
    if ((xs instanceof $c_sci_HashSet)) {
      const x2 = xs;
      const f = new $c_sjsr_AnonFunction2(((this$1) => ((k$2, h$2) => {
        const h = (h$2 | 0);
        $p_scm_HashSet__addElem__O__I__Z(this$1, k$2, this$1.scala$collection$mutable$HashSet$$improveHash__I__I(h))
      }))(this));
      x2.sci_HashSet__f_rootNode.foreachWithHash__F2__V(f);
      return this
    } else if ((xs instanceof $c_scm_HashSet)) {
      const x3 = xs;
      const iter = new $c_scm_HashSet$$anon$2(x3);
      while (iter.hasNext__Z()) {
        const next = iter.next__O();
        $p_scm_HashSet__addElem__O__I__Z(this, next.scm_HashSet$Node__f__key, next.scm_HashSet$Node__f__hash)
      };
      return this
    } else {
      return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs)
    }
  };
  iterator__sc_Iterator() {
    return new $c_scm_HashSet$$anon$1(this)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_scm_HashSet$()
  };
  knownSize__I() {
    return this.scm_HashSet__f_contentSize
  };
  isEmpty__Z() {
    return (this.scm_HashSet__f_contentSize === 0)
  };
  foreach__F1__V(f) {
    const len = this.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u.length;
    let i = 0;
    while ((i < len)) {
      const n = this.scm_HashSet__f_scala$collection$mutable$HashSet$$table.u[i];
      if ((n !== null)) {
        n.foreach__F1__V(f)
      };
      i = ((1 + i) | 0)
    }
  };
  className__T() {
    return "HashSet"
  };
  addOne__O__scm_Growable(elem) {
    this.add__O__Z(elem);
    return this
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_HashSet(xs)
  };
}
function $isArrayOf_scm_HashSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_HashSet)))
}
const $d_scm_HashSet = new $TypeData().initClass({
  scm_HashSet: 0
}, false, "scala.collection.mutable.HashSet", {
  scm_HashSet: 1,
  scm_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  scm_Set: 1,
  scm_Iterable: 1,
  scm_SetOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_HashSet.prototype.$classData = $d_scm_HashSet;
const $p_sci_NumericRange__length$lzycompute__I = (function($thiz) {
  if (((((1 & $thiz.sci_NumericRange__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.sci_NumericRange__f_length = $m_sci_NumericRange$().count__O__O__O__Z__s_math_Integral__I($thiz.sci_NumericRange__f_start, $thiz.sci_NumericRange__f_end, $thiz.sci_NumericRange__f_step, $thiz.sci_NumericRange__f_isInclusive, $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num);
    $thiz.sci_NumericRange__f_bitmap$0 = (((1 | $thiz.sci_NumericRange__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.sci_NumericRange__f_length
});
const $p_sci_NumericRange__isWithinBoundaries__O__Z = (function($thiz, elem) {
  if ((!$thiz.isEmpty__Z())) {
    const this$1 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
    const lhs = $thiz.sci_NumericRange__f_step;
    const $$x3 = new $c_s_math_Ordering$OrderingOps(this$1, lhs);
    const this$2 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
    let $$x2;
    if ($$x3.$greater__O__Z(this$2.fromInt__I__O(0))) {
      const this$3 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs$1 = $thiz.sci_NumericRange__f_start;
      $$x2 = new $c_s_math_Ordering$OrderingOps(this$3, lhs$1).$less$eq__O__Z(elem)
    } else {
      $$x2 = false
    };
    let $$x1;
    if ($$x2) {
      const this$4 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      $$x1 = new $c_s_math_Ordering$OrderingOps(this$4, elem).$less$eq__O__Z($thiz.last__O())
    } else {
      $$x1 = false
    };
    if ($$x1) {
      return true
    } else {
      const this$5 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs$2 = $thiz.sci_NumericRange__f_step;
      const $$x5 = new $c_s_math_Ordering$OrderingOps(this$5, lhs$2);
      const this$6 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      let $$x4;
      if ($$x5.$less__O__Z(this$6.fromInt__I__O(0))) {
        const this$7 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
        const lhs$3 = $thiz.last__O();
        $$x4 = new $c_s_math_Ordering$OrderingOps(this$7, lhs$3).$less$eq__O__Z(elem)
      } else {
        $$x4 = false
      };
      if ($$x4) {
        const this$8 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
        return new $c_s_math_Ordering$OrderingOps(this$8, elem).$less$eq__O__Z($thiz.sci_NumericRange__f_start)
      } else {
        return false
      }
    }
  } else {
    return false
  }
});
const $p_sci_NumericRange__locationAfterN__I__O = (function($thiz, n) {
  const this$1 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
  const lhs = $thiz.sci_NumericRange__f_start;
  const $$x1 = new $c_s_math_Integral$IntegralOps(this$1, lhs);
  const this$2 = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
  const lhs$1 = $thiz.sci_NumericRange__f_step;
  return $$x1.$plus__O__O(new $c_s_math_Integral$IntegralOps(this$2, lhs$1).$times__O__O($thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num.fromInt__I__O(n)))
});
const $p_sci_NumericRange__newEmptyRange__O__sci_NumericRange$Exclusive = (function($thiz, value) {
  $m_sci_NumericRange$();
  const step = $thiz.sci_NumericRange__f_step;
  const num = $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
  return new $c_sci_NumericRange$Exclusive(value, value, step, num)
});
const $p_sci_NumericRange__hashCode$lzycompute__I = (function($thiz) {
  if (((((2 & $thiz.sci_NumericRange__f_bitmap$0) << 24) >> 24) === 0)) {
    $thiz.sci_NumericRange__f_hashCode = $m_s_util_hashing_MurmurHash3$().seqHash__sc_Seq__I($thiz);
    $thiz.sci_NumericRange__f_bitmap$0 = (((2 | $thiz.sci_NumericRange__f_bitmap$0) << 24) >> 24)
  };
  return $thiz.sci_NumericRange__f_hashCode
});
const $ct_sci_NumericRange__O__O__O__Z__s_math_Integral__ = (function($thiz, start, end, step, isInclusive, num) {
  $thiz.sci_NumericRange__f_start = start;
  $thiz.sci_NumericRange__f_end = end;
  $thiz.sci_NumericRange__f_step = step;
  $thiz.sci_NumericRange__f_isInclusive = isInclusive;
  $thiz.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num = num;
  return $thiz
});
class $c_sci_NumericRange extends $c_sci_AbstractSeq {
  constructor() {
    super();
    this.sci_NumericRange__f_length = 0;
    this.sci_NumericRange__f_hashCode = 0;
    this.sci_NumericRange__f_start = null;
    this.sci_NumericRange__f_end = null;
    this.sci_NumericRange__f_step = null;
    this.sci_NumericRange__f_isInclusive = false;
    this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num = null;
    this.sci_NumericRange__f_bitmap$0 = 0
  };
  sorted__s_math_Ordering__O(ord) {
    return $f_sc_SeqOps__sorted__s_math_Ordering__O(this, ord)
  };
  map__F1__O(f) {
    return $f_sc_StrictOptimizedIterableOps__map__F1__O(this, f)
  };
  canEqual__O__Z(that) {
    return $f_sci_IndexedSeq__canEqual__O__Z(this, that)
  };
  sameElements__sc_IterableOnce__Z(o) {
    return $f_sci_IndexedSeq__sameElements__sc_IterableOnce__Z(this, o)
  };
  stringPrefix__T() {
    return "IndexedSeq"
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  iterator__sc_Iterator() {
    return new $c_sci_NumericRange$NumericRangeIterator(this, this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num)
  };
  length__I() {
    return (((((1 & this.sci_NumericRange__f_bitmap$0) << 24) >> 24) === 0) ? $p_sci_NumericRange__length$lzycompute__I(this) : this.sci_NumericRange__f_length)
  };
  isEmpty__Z() {
    return (this.length__I() === 0)
  };
  last__O() {
    return ((this.length__I() === 0) ? $m_sci_Nil$().head__E() : $p_sci_NumericRange__locationAfterN__I__O(this, (((-1) + this.length__I()) | 0)))
  };
  head__O() {
    return (this.isEmpty__Z() ? $m_sci_Nil$().head__E() : this.sci_NumericRange__f_start)
  };
  tail__sci_NumericRange() {
    if (this.isEmpty__Z()) {
      $m_sci_Nil$().tail__E()
    } else if (this.sci_NumericRange__f_isInclusive) {
      const this$1 = this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs = this.sci_NumericRange__f_start;
      return new $c_sci_NumericRange$Inclusive(new $c_s_math_Integral$IntegralOps(this$1, lhs).$plus__O__O(this.sci_NumericRange__f_step), this.sci_NumericRange__f_end, this.sci_NumericRange__f_step, this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num)
    } else {
      const this$2 = this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs$1 = this.sci_NumericRange__f_start;
      return new $c_sci_NumericRange$Exclusive(new $c_s_math_Integral$IntegralOps(this$2, lhs$1).$plus__O__O(this.sci_NumericRange__f_step), this.sci_NumericRange__f_end, this.sci_NumericRange__f_step, this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num)
    }
  };
  apply__I__O(idx) {
    if (((idx < 0) || (idx >= this.length__I()))) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((idx + " is out of bounds (min 0, max ") + (((-1) + this.length__I()) | 0)) + ")"))
    } else {
      return $p_sci_NumericRange__locationAfterN__I__O(this, idx)
    }
  };
  foreach__F1__V(f) {
    let count = 0;
    let current = this.sci_NumericRange__f_start;
    while ((count < this.length__I())) {
      f.apply__O__O(current);
      const this$1 = this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs = current;
      current = new $c_s_math_Integral$IntegralOps(this$1, lhs).$plus__O__O(this.sci_NumericRange__f_step);
      count = ((1 + count) | 0)
    }
  };
  drop__I__sci_NumericRange(n) {
    return (((n <= 0) || (this.length__I() === 0)) ? this : ((n >= this.length__I()) ? $p_sci_NumericRange__newEmptyRange__O__sci_NumericRange$Exclusive(this, this.sci_NumericRange__f_end) : this.copy__O__O__O__sci_NumericRange($p_sci_NumericRange__locationAfterN__I__O(this, n), this.sci_NumericRange__f_end, this.sci_NumericRange__f_step)))
  };
  containsTyped__O__Z(x) {
    if ($p_sci_NumericRange__isWithinBoundaries__O__Z(this, x)) {
      const $$x2 = $m_sr_BoxesRunTime$();
      const this$2 = this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const this$1 = this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      const lhs = new $c_s_math_Integral$IntegralOps(this$1, x).$minus__O__O(this.sci_NumericRange__f_start);
      const $$x1 = new $c_s_math_Integral$IntegralOps(this$2, lhs).$percent__O__O(this.sci_NumericRange__f_step);
      const this$3 = this.sci_NumericRange__f_scala$collection$immutable$NumericRange$$num;
      return $$x2.equals__O__O__Z($$x1, this$3.fromInt__I__O(0))
    } else {
      return false
    }
  };
  contains__O__Z(x) {
    try {
      return this.containsTyped__O__Z(x)
    } catch (e) {
      if ((e instanceof $c_jl_ClassCastException)) {
        return false
      } else {
        throw e
      }
    }
  };
  hashCode__I() {
    return (((((2 & this.sci_NumericRange__f_bitmap$0) << 24) >> 24) === 0) ? $p_sci_NumericRange__hashCode$lzycompute__I(this) : this.sci_NumericRange__f_hashCode)
  };
  applyPreferredMaxLength__I() {
    return 2147483647
  };
  equals__O__Z(other) {
    if ((other instanceof $c_sci_NumericRange)) {
      const x2 = other;
      return (($f_sci_IndexedSeq__canEqual__O__Z(x2, this) && (this.length__I() === x2.length__I())) && ((this.length__I() === 0) || ($m_sr_BoxesRunTime$().equals__O__O__Z(this.sci_NumericRange__f_start, x2.sci_NumericRange__f_start) && $m_sr_BoxesRunTime$().equals__O__O__Z(this.last__O(), x2.last__O()))))
    } else {
      return $f_sc_Seq__equals__O__Z(this, other)
    }
  };
  toString__T() {
    const empty = (this.isEmpty__Z() ? "empty " : "");
    const preposition = (this.sci_NumericRange__f_isInclusive ? "to" : "until");
    const stepped = ($m_sr_BoxesRunTime$().equals__O__O__Z(this.sci_NumericRange__f_step, 1) ? "" : (" by " + this.sci_NumericRange__f_step));
    return (((((((empty + "NumericRange ") + this.sci_NumericRange__f_start) + " ") + preposition) + " ") + this.sci_NumericRange__f_end) + stepped)
  };
  className__T() {
    return "NumericRange"
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_IndexedSeq$()
  };
  drop__I__O(n) {
    return this.drop__I__sci_NumericRange(n)
  };
  apply__O__O(v1) {
    return this.apply__I__O((v1 | 0))
  };
  tail__O() {
    return this.tail__sci_NumericRange()
  };
}
function $isArrayOf_sci_NumericRange(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_NumericRange)))
}
const $p_sci_Range__gap__J = (function($thiz) {
  const value = $thiz.sci_Range__f_end;
  const hi = (value >> 31);
  const value$1 = $thiz.sci_Range__f_start;
  const hi$1 = (value$1 >> 31);
  const lo = ((value - value$1) | 0);
  const hi$2 = ((((-2147483648) ^ lo) > ((-2147483648) ^ value)) ? (((-1) + ((hi - hi$1) | 0)) | 0) : ((hi - hi$1) | 0));
  return new $c_RTLong(lo, hi$2)
});
const $p_sci_Range__isExact__Z = (function($thiz) {
  const t = $p_sci_Range__gap__J($thiz);
  const lo = t.RTLong__f_lo;
  const hi$1 = t.RTLong__f_hi;
  const value = $thiz.sci_Range__f_step;
  const hi = (value >> 31);
  const this$2 = $m_RTLong$();
  const lo$1 = this$2.remainderImpl__I__I__I__I__I(lo, hi$1, value, hi);
  const hi$2 = this$2.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
  return ((lo$1 === 0) && (hi$2 === 0))
});
const $p_sci_Range__hasStub__Z = (function($thiz) {
  return ($thiz.isInclusive__Z() || (!$p_sci_Range__isExact__Z($thiz)))
});
const $p_sci_Range__longLength__J = (function($thiz) {
  const t = $p_sci_Range__gap__J($thiz);
  const lo = t.RTLong__f_lo;
  const hi$1 = t.RTLong__f_hi;
  const value = $thiz.sci_Range__f_step;
  const hi = (value >> 31);
  const this$2 = $m_RTLong$();
  const lo$1 = this$2.divideImpl__I__I__I__I__I(lo, hi$1, value, hi);
  const hi$2 = this$2.RTLong$__f_org$scalajs$linker$runtime$RuntimeLong$$hiReturn;
  const value$1 = ($p_sci_Range__hasStub__Z($thiz) ? 1 : 0);
  const hi$3 = (value$1 >> 31);
  const lo$2 = ((lo$1 + value$1) | 0);
  const hi$4 = ((((-2147483648) ^ lo$2) < ((-2147483648) ^ lo$1)) ? ((1 + ((hi$2 + hi$3) | 0)) | 0) : ((hi$2 + hi$3) | 0));
  return new $c_RTLong(lo$2, hi$4)
});
const $p_sci_Range__locationAfterN__I__I = (function($thiz, n) {
  return (($thiz.sci_Range__f_start + $imul($thiz.sci_Range__f_step, n)) | 0)
});
const $ct_sci_Range__I__I__I__ = (function($thiz, start, end, step) {
  $thiz.sci_Range__f_start = start;
  $thiz.sci_Range__f_end = end;
  $thiz.sci_Range__f_step = step;
  $thiz.sci_Range__f_isEmpty = ((((start > end) && (step > 0)) || ((start < end) && (step < 0))) || ((start === end) && (!$thiz.isInclusive__Z())));
  let $$x1;
  if ((step === 0)) {
    throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "step cannot be 0.")
  } else if ($thiz.sci_Range__f_isEmpty) {
    $$x1 = 0
  } else {
    const t = $p_sci_Range__longLength__J($thiz);
    const lo = t.RTLong__f_lo;
    const hi = t.RTLong__f_hi;
    $$x1 = (((hi === 0) ? (((-2147483648) ^ lo) > (-1)) : (hi > 0)) ? (-1) : lo)
  };
  $thiz.sci_Range__f_scala$collection$immutable$Range$$numRangeElements = $$x1;
  let $$x2;
  switch (step) {
    case 1: {
      $$x2 = ($thiz.isInclusive__Z() ? end : (((-1) + end) | 0));
      break
    }
    case (-1): {
      $$x2 = ($thiz.isInclusive__Z() ? end : ((1 + end) | 0));
      break
    }
    default: {
      const t$1 = $p_sci_Range__gap__J($thiz);
      const lo$1 = t$1.RTLong__f_lo;
      const hi$2 = t$1.RTLong__f_hi;
      const hi$1 = (step >> 31);
      const this$2 = $m_RTLong$();
      const lo$2 = this$2.remainderImpl__I__I__I__I__I(lo$1, hi$2, step, hi$1);
      $$x2 = ((lo$2 !== 0) ? ((end - lo$2) | 0) : ($thiz.isInclusive__Z() ? end : ((end - step) | 0)))
    }
  };
  $thiz.sci_Range__f_scala$collection$immutable$Range$$lastElement = $$x2;
  return $thiz
});
class $c_sci_Range extends $c_sci_AbstractSeq {
  constructor() {
    super();
    this.sci_Range__f_start = 0;
    this.sci_Range__f_end = 0;
    this.sci_Range__f_step = 0;
    this.sci_Range__f_isEmpty = false;
    this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements = 0;
    this.sci_Range__f_scala$collection$immutable$Range$$lastElement = 0
  };
  canEqual__O__Z(that) {
    return $f_sci_IndexedSeq__canEqual__O__Z(this, that)
  };
  stringPrefix__T() {
    return "IndexedSeq"
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  iterator__sc_Iterator() {
    return new $c_sci_RangeIterator(this.sci_Range__f_start, this.sci_Range__f_step, this.sci_Range__f_scala$collection$immutable$Range$$lastElement, this.sci_Range__f_isEmpty)
  };
  isEmpty__Z() {
    return this.sci_Range__f_isEmpty
  };
  length__I() {
    return ((this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements < 0) ? $m_sci_Range$().scala$collection$immutable$Range$$fail__I__I__I__Z__E(this.sci_Range__f_start, this.sci_Range__f_end, this.sci_Range__f_step, this.isInclusive__Z()) : this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements)
  };
  last__I() {
    if (this.sci_Range__f_isEmpty) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O($m_sci_Range$().scala$collection$immutable$Range$$emptyRangeError__T__jl_Throwable("last"))
    } else {
      return this.sci_Range__f_scala$collection$immutable$Range$$lastElement
    }
  };
  head__I() {
    if (this.sci_Range__f_isEmpty) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O($m_sci_Range$().scala$collection$immutable$Range$$emptyRangeError__T__jl_Throwable("head"))
    } else {
      return this.sci_Range__f_start
    }
  };
  tail__sci_Range() {
    if (this.sci_Range__f_isEmpty) {
      throw $m_sjsr_package$().unwrapJavaScriptException__jl_Throwable__O($m_sci_Range$().scala$collection$immutable$Range$$emptyRangeError__T__jl_Throwable("tail"))
    };
    if ((this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements === 1)) {
      const value = this.sci_Range__f_end;
      return new $c_sci_Range$Exclusive(value, value, this.sci_Range__f_step)
    } else {
      return (this.isInclusive__Z() ? new $c_sci_Range$Inclusive(((this.sci_Range__f_start + this.sci_Range__f_step) | 0), this.sci_Range__f_end, this.sci_Range__f_step) : new $c_sci_Range$Exclusive(((this.sci_Range__f_start + this.sci_Range__f_step) | 0), this.sci_Range__f_end, this.sci_Range__f_step))
    }
  };
  map__F1__sci_IndexedSeq(f) {
    this.scala$collection$immutable$Range$$validateMaxLength__V();
    return $f_sc_StrictOptimizedIterableOps__map__F1__O(this, f)
  };
  copy__I__I__I__Z__sci_Range(start, end, step, isInclusive) {
    return (isInclusive ? new $c_sci_Range$Inclusive(start, end, step) : new $c_sci_Range$Exclusive(start, end, step))
  };
  scala$collection$immutable$Range$$validateMaxLength__V() {
    if ((this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements < 0)) {
      $m_sci_Range$().scala$collection$immutable$Range$$fail__I__I__I__Z__E(this.sci_Range__f_start, this.sci_Range__f_end, this.sci_Range__f_step, this.isInclusive__Z())
    }
  };
  foreach__F1__V(f) {
    if ((!this.sci_Range__f_isEmpty)) {
      let i = this.sci_Range__f_start;
      while (true) {
        f.apply__O__O(i);
        if ((i === this.sci_Range__f_scala$collection$immutable$Range$$lastElement)) {
          break
        };
        i = ((i + this.sci_Range__f_step) | 0)
      }
    }
  };
  sameElements__sc_IterableOnce__Z(that) {
    if ((that instanceof $c_sci_Range)) {
      const x2 = that;
      const x1$2 = this.length__I();
      switch (x1$2) {
        case 0: {
          return x2.sci_Range__f_isEmpty;
          break
        }
        case 1: {
          return ((x2.length__I() === 1) && (this.sci_Range__f_start === x2.sci_Range__f_start));
          break
        }
        default: {
          return ((x2.length__I() === x1$2) && ((this.sci_Range__f_start === x2.sci_Range__f_start) && (this.sci_Range__f_step === x2.sci_Range__f_step)))
        }
      }
    } else {
      return $f_sci_IndexedSeq__sameElements__sc_IterableOnce__Z(this, that)
    }
  };
  drop__I__sci_Range(n) {
    if (((n <= 0) || this.sci_Range__f_isEmpty)) {
      return this
    } else if (((n >= this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements) && (this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements >= 0))) {
      const value = this.sci_Range__f_end;
      return new $c_sci_Range$Exclusive(value, value, this.sci_Range__f_step)
    } else {
      return this.copy__I__I__I__Z__sci_Range($p_sci_Range__locationAfterN__I__I(this, n), this.sci_Range__f_end, this.sci_Range__f_step, this.isInclusive__Z())
    }
  };
  reverse__sci_Range() {
    return (this.sci_Range__f_isEmpty ? this : new $c_sci_Range$Inclusive(this.last__I(), this.sci_Range__f_start, ((-this.sci_Range__f_step) | 0)))
  };
  contains__I__Z(x) {
    return ((!((x === this.sci_Range__f_end) && (!this.isInclusive__Z()))) && ((this.sci_Range__f_step > 0) ? ((!((x < this.sci_Range__f_start) || (x > this.sci_Range__f_end))) && ((this.sci_Range__f_step === 1) || ($intMod(((x - this.sci_Range__f_start) | 0), this.sci_Range__f_step) === 0))) : ((!((x < this.sci_Range__f_end) || (x > this.sci_Range__f_start))) && ((this.sci_Range__f_step === (-1)) || ($intMod(((x - this.sci_Range__f_start) | 0), this.sci_Range__f_step) === 0)))))
  };
  contains__O__Z(elem) {
    if ($isInt(elem)) {
      const x2 = (elem | 0);
      return this.contains__I__Z(x2)
    } else {
      return $f_sc_SeqOps__contains__O__Z(this, elem)
    }
  };
  min__s_math_Ordering__I(ord) {
    if ((ord === $m_s_math_Ordering$Int$())) {
      return ((this.sci_Range__f_step > 0) ? this.head__I() : this.last__I())
    } else {
      const this$1 = $m_s_math_Ordering$Int$();
      if ($f_s_math_Ordering$CachedReverse__isReverseOf__s_math_Ordering__Z(this$1, ord)) {
        return ((this.sci_Range__f_step > 0) ? this.last__I() : this.head__I())
      } else {
        return ($f_sc_IterableOnceOps__min__s_math_Ordering__O(this, ord) | 0)
      }
    }
  };
  max__s_math_Ordering__I(ord) {
    if ((ord === $m_s_math_Ordering$Int$())) {
      return ((this.sci_Range__f_step > 0) ? this.last__I() : this.head__I())
    } else {
      const this$1 = $m_s_math_Ordering$Int$();
      if ($f_s_math_Ordering$CachedReverse__isReverseOf__s_math_Ordering__Z(this$1, ord)) {
        return ((this.sci_Range__f_step > 0) ? this.head__I() : this.last__I())
      } else {
        return ($f_sc_IterableOnceOps__max__s_math_Ordering__O(this, ord) | 0)
      }
    }
  };
  applyPreferredMaxLength__I() {
    return 2147483647
  };
  equals__O__Z(other) {
    if ((other instanceof $c_sci_Range)) {
      const x2 = other;
      if (this.sci_Range__f_isEmpty) {
        return x2.sci_Range__f_isEmpty
      } else if (((!x2.sci_Range__f_isEmpty) && (this.sci_Range__f_start === x2.sci_Range__f_start))) {
        const l0 = this.last__I();
        return ((l0 === x2.last__I()) && ((this.sci_Range__f_start === l0) || (this.sci_Range__f_step === x2.sci_Range__f_step)))
      } else {
        return false
      }
    } else {
      return $f_sc_Seq__equals__O__Z(this, other)
    }
  };
  hashCode__I() {
    if ((this.length__I() >= 2)) {
      const this$1 = $m_s_util_hashing_MurmurHash3$();
      const start = this.sci_Range__f_start;
      const step = this.sci_Range__f_step;
      const last = this.sci_Range__f_scala$collection$immutable$Range$$lastElement;
      return this$1.rangeHash__I__I__I__I__I(start, step, last, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
    } else {
      return $m_s_util_hashing_MurmurHash3$().seqHash__sc_Seq__I(this)
    }
  };
  toString__T() {
    const preposition = (this.isInclusive__Z() ? "to" : "until");
    const stepped = ((this.sci_Range__f_step === 1) ? "" : (" by " + this.sci_Range__f_step));
    const prefix = (this.sci_Range__f_isEmpty ? "empty " : ((!$p_sci_Range__isExact__Z(this)) ? "inexact " : ""));
    return (((((((prefix + "Range ") + this.sci_Range__f_start) + " ") + preposition) + " ") + this.sci_Range__f_end) + stepped)
  };
  className__T() {
    return "Range"
  };
  sorted__s_math_Ordering__sci_IndexedSeq(ord) {
    return ((ord === $m_s_math_Ordering$Int$()) ? ((this.sci_Range__f_step > 0) ? this : this.reverse__sci_Range()) : $f_sc_SeqOps__sorted__s_math_Ordering__O(this, ord))
  };
  apply$mcII$sp__I__I(idx) {
    this.scala$collection$immutable$Range$$validateMaxLength__V();
    if (((idx < 0) || (idx >= this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements))) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((idx + " is out of bounds (min 0, max ") + (((-1) + this.sci_Range__f_scala$collection$immutable$Range$$numRangeElements) | 0)) + ")"))
    } else {
      return ((this.sci_Range__f_start + $imul(this.sci_Range__f_step, idx)) | 0)
    }
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_IndexedSeq$()
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_IndexedSeq(ord)
  };
  drop__I__O(n) {
    return this.drop__I__sci_Range(n)
  };
  apply__O__O(v1) {
    const idx = (v1 | 0);
    return this.apply$mcII$sp__I__I(idx)
  };
  apply__I__O(i) {
    return this.apply$mcII$sp__I__I(i)
  };
  map__F1__O(f) {
    return this.map__F1__sci_IndexedSeq(f)
  };
  tail__O() {
    return this.tail__sci_Range()
  };
  head__O() {
    return this.head__I()
  };
  last__O() {
    return this.last__I()
  };
}
function $isArrayOf_sci_Range(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Range)))
}
class $c_sci_ArraySeq extends $c_sci_AbstractSeq {
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    const this$1 = $m_sci_ArraySeq$();
    const evidence$5 = this.elemTag__s_reflect_ClassTag();
    return this$1.from__sc_IterableOnce__s_reflect_ClassTag__sci_ArraySeq(coll, evidence$5)
  };
  newSpecificBuilder__scm_Builder() {
    const this$1 = $m_sci_ArraySeq$();
    const evidence$12 = this.elemTag__s_reflect_ClassTag();
    return this$1.newBuilder__s_reflect_ClassTag__scm_Builder(evidence$12)
  };
  canEqual__O__Z(that) {
    return $f_sci_IndexedSeq__canEqual__O__Z(this, that)
  };
  sameElements__sc_IterableOnce__Z(o) {
    return $f_sci_IndexedSeq__sameElements__sc_IterableOnce__Z(this, o)
  };
  stringPrefix__T() {
    return "IndexedSeq"
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  last__O() {
    return $f_sc_IndexedSeqOps__last__O(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  map__F1__sci_ArraySeq(f) {
    return $m_sci_ArraySeq$().sci_ArraySeq$__f_untagged.tabulate__I__F1__O(this.length__I(), new $c_sjsr_AnonFunction1(((this$1, f$1) => ((i$2) => {
      const i = (i$2 | 0);
      return f$1.apply__O__O(this$1.apply__I__O(i))
    }))(this, f)))
  };
  drop__I__sci_ArraySeq(n) {
    return ((n <= 0) ? this : $m_sci_ArraySeq$().unsafeWrapArray__O__sci_ArraySeq($m_sc_ArrayOps$().drop$extension__O__I__O(this.unsafeArray__O(), n)))
  };
  tail__sci_ArraySeq() {
    return $m_sci_ArraySeq$().unsafeWrapArray__O__sci_ArraySeq($m_sc_ArrayOps$().tail$extension__O__O(this.unsafeArray__O()))
  };
  className__T() {
    return "ArraySeq"
  };
  copyToArray__O__I__I(xs, start) {
    return this.copyToArray__O__I__I__I(xs, start, this.length__I())
  };
  copyToArray__O__I__I__I(xs, start, len) {
    const srcLen = this.length__I();
    const destLen = $m_sr_ScalaRunTime$().array_length__O__I(xs);
    const x = ((len < srcLen) ? len : srcLen);
    const y = ((destLen - start) | 0);
    const x$1 = ((x < y) ? x : y);
    const copied = ((x$1 > 0) ? x$1 : 0);
    if ((copied > 0)) {
      $m_s_Array$().copy__O__I__O__I__I__V(this.unsafeArray__O(), 0, xs, start, copied)
    };
    return copied
  };
  applyPreferredMaxLength__I() {
    return 2147483647
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    if (($m_sr_ScalaRunTime$().array_length__O__I(this.unsafeArray__O()) <= 1)) {
      return this
    } else {
      const this$3 = $m_s_Array$();
      const original = this.unsafeArray__O();
      const newLength = this.length__I();
      $m_s_reflect_ManifestFactory$ObjectManifest$();
      let $$x1;
      if ($d_O.getClassOf().isAssignableFrom__jl_Class__Z($objectGetClass(original).getComponentType__jl_Class())) {
        if ($d_O.getClassOf().isPrimitive__Z()) {
          $$x1 = this$3.copyOf__O__I__O(original, newLength)
        } else {
          const original$1 = original;
          $$x1 = $m_ju_Arrays$().copyOf__AO__I__jl_Class__AO(original$1, newLength, $d_O.getArrayOf().getClassOf())
        }
      } else {
        const dest = $newArrayObject($d_O.getArrayOf(), [newLength]);
        $m_s_Array$().copy__O__I__O__I__I__V(original, 0, dest, 0, $m_sr_ScalaRunTime$().array_length__O__I(original));
        $$x1 = dest
      };
      const a = $$x1;
      $m_ju_Arrays$().sort__AO__ju_Comparator__V(a, ord);
      return new $c_sci_ArraySeq$ofRef(a)
    }
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    const this$1 = $m_sci_ArraySeq$();
    const evidence$5 = this.elemTag__s_reflect_ClassTag();
    return this$1.from__sc_IterableOnce__s_reflect_ClassTag__sci_ArraySeq(coll, evidence$5)
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq(ord)
  };
  tail__O() {
    return this.tail__sci_ArraySeq()
  };
  drop__I__O(n) {
    return this.drop__I__sci_ArraySeq(n)
  };
  map__F1__O(f) {
    return this.map__F1__sci_ArraySeq(f)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_ArraySeq$().sci_ArraySeq$__f_untagged
  };
}
function $isArrayOf_sci_ArraySeq(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq)))
}
class $c_sci_NumericRange$Exclusive extends $c_sci_NumericRange {
  constructor(start, end, step, num) {
    super();
    this.sci_NumericRange$Exclusive__f_num = null;
    this.sci_NumericRange$Exclusive__f_num = num;
    $ct_sci_NumericRange__O__O__O__Z__s_math_Integral__(this, start, end, step, false, num)
  };
  copy__O__O__O__sci_NumericRange$Exclusive(start, end, step) {
    $m_sci_NumericRange$();
    const num = this.sci_NumericRange$Exclusive__f_num;
    return new $c_sci_NumericRange$Exclusive(start, end, step, num)
  };
  copy__O__O__O__sci_NumericRange(start, end, step) {
    return this.copy__O__O__O__sci_NumericRange$Exclusive(start, end, step)
  };
}
const $d_sci_NumericRange$Exclusive = new $TypeData().initClass({
  sci_NumericRange$Exclusive: 0
}, false, "scala.collection.immutable.NumericRange$Exclusive", {
  sci_NumericRange$Exclusive: 1,
  sci_NumericRange: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_NumericRange$Exclusive.prototype.$classData = $d_sci_NumericRange$Exclusive;
class $c_sci_NumericRange$Inclusive extends $c_sci_NumericRange {
  constructor(start, end, step, num) {
    super();
    this.sci_NumericRange$Inclusive__f_num = null;
    this.sci_NumericRange$Inclusive__f_num = num;
    $ct_sci_NumericRange__O__O__O__Z__s_math_Integral__(this, start, end, step, true, num)
  };
  copy__O__O__O__sci_NumericRange$Inclusive(start, end, step) {
    $m_sci_NumericRange$();
    const num = this.sci_NumericRange$Inclusive__f_num;
    return new $c_sci_NumericRange$Inclusive(start, end, step, num)
  };
  copy__O__O__O__sci_NumericRange(start, end, step) {
    return this.copy__O__O__O__sci_NumericRange$Inclusive(start, end, step)
  };
}
const $d_sci_NumericRange$Inclusive = new $TypeData().initClass({
  sci_NumericRange$Inclusive: 0
}, false, "scala.collection.immutable.NumericRange$Inclusive", {
  sci_NumericRange$Inclusive: 1,
  sci_NumericRange: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_NumericRange$Inclusive.prototype.$classData = $d_sci_NumericRange$Inclusive;
class $c_sci_Range$Exclusive extends $c_sci_Range {
  constructor(start, end, step) {
    super();
    $ct_sci_Range__I__I__I__(this, start, end, step)
  };
  isInclusive__Z() {
    return false
  };
}
const $d_sci_Range$Exclusive = new $TypeData().initClass({
  sci_Range$Exclusive: 0
}, false, "scala.collection.immutable.Range$Exclusive", {
  sci_Range$Exclusive: 1,
  sci_Range: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Range$Exclusive.prototype.$classData = $d_sci_Range$Exclusive;
class $c_sci_Range$Inclusive extends $c_sci_Range {
  constructor(start, end, step) {
    super();
    $ct_sci_Range__I__I__I__(this, start, end, step)
  };
  isInclusive__Z() {
    return true
  };
}
const $d_sci_Range$Inclusive = new $TypeData().initClass({
  sci_Range$Inclusive: 0
}, false, "scala.collection.immutable.Range$Inclusive", {
  sci_Range$Inclusive: 1,
  sci_Range: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Range$Inclusive.prototype.$classData = $d_sci_Range$Inclusive;
class $c_scm_ArraySeq extends $c_scm_AbstractSeq {
  stringPrefix__T() {
    return "IndexedSeq"
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  drop__I__O(n) {
    return $f_sc_IndexedSeqOps__drop__I__O(this, n)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  fromSpecific__sc_IterableOnce__scm_ArraySeq(coll) {
    const evidence$1 = this.elemTag__s_reflect_ClassTag();
    let capacity = 0;
    let size = 0;
    let jsElems = null;
    const elementClass = evidence$1.runtimeClass__jl_Class();
    capacity = 0;
    size = 0;
    const isCharArrayBuilder = (elementClass === $d_C.getClassOf());
    jsElems = [];
    const s = coll.knownSize__I();
    const it = coll.iterator__sc_Iterator();
    while (it.hasNext__Z()) {
      const elem = it.next__O();
      const unboxedElem = (isCharArrayBuilder ? $uC(elem) : ((elem === null) ? elementClass.jl_Class__f_data.zero : elem));
      jsElems.push(unboxedElem)
    };
    const $$x1 = $m_scm_ArraySeq$();
    const elemRuntimeClass = ((elementClass === $d_V.getClassOf()) ? $d_jl_Void.getClassOf() : (((elementClass === $d_sr_Null$.getClassOf()) || (elementClass === $d_sr_Nothing$.getClassOf())) ? $d_O.getClassOf() : elementClass));
    return $$x1.make__O__scm_ArraySeq($makeNativeArrayWrapper(elemRuntimeClass.jl_Class__f_data.getArrayOf(), jsElems))
  };
  newSpecificBuilder__scm_Builder() {
    return $m_scm_ArraySeq$().newBuilder__s_reflect_ClassTag__scm_Builder(this.elemTag__s_reflect_ClassTag())
  };
  className__T() {
    return "ArraySeq"
  };
  copyToArray__O__I__I(xs, start) {
    return this.copyToArray__O__I__I__I(xs, start, this.length__I())
  };
  copyToArray__O__I__I__I(xs, start, len) {
    const srcLen = this.length__I();
    const destLen = $m_sr_ScalaRunTime$().array_length__O__I(xs);
    const x = ((len < srcLen) ? len : srcLen);
    const y = ((destLen - start) | 0);
    const x$1 = ((x < y) ? x : y);
    const copied = ((x$1 > 0) ? x$1 : 0);
    if ((copied > 0)) {
      $m_s_Array$().copy__O__I__O__I__I__V(this.array__O(), 0, xs, start, copied)
    };
    return copied
  };
  equals__O__Z(other) {
    if ((other instanceof $c_scm_ArraySeq)) {
      const x2 = other;
      if (($m_sr_ScalaRunTime$().array_length__O__I(this.array__O()) !== $m_sr_ScalaRunTime$().array_length__O__I(x2.array__O()))) {
        return false
      }
    };
    return $f_sc_Seq__equals__O__Z(this, other)
  };
  sorted__s_math_Ordering__scm_ArraySeq(ord) {
    const $$x2 = $m_scm_ArraySeq$();
    const $$x1 = $m_sc_ArrayOps$();
    const xs = this.array__O();
    return $$x2.make__O__scm_ArraySeq($$x1.sorted$extension__O__s_math_Ordering__O(xs, ord))
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__scm_ArraySeq(ord)
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    return this.fromSpecific__sc_IterableOnce__scm_ArraySeq(coll)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    return this.fromSpecific__sc_IterableOnce__scm_ArraySeq(coll)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_scm_ArraySeq$().scm_ArraySeq$__f_untagged
  };
}
function $isArrayOf_scm_ArraySeq(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq)))
}
class $c_sci_ArraySeq$ofBoolean extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofBoolean__f_unsafeArray = null;
    this.sci_ArraySeq$ofBoolean__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofBoolean__f_unsafeArray.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofBoolean__f_unsafeArray;
    return this$1.arrayHash$mZc$sp__AZ__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofBoolean)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofBoolean__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofBoolean__f_unsafeArray;
      return $m_ju_Arrays$().equals__AZ__AZ__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    if ((this.length__I() <= 1)) {
      return this
    } else if ((ord === $m_s_math_Ordering$Boolean$())) {
      const a = this.sci_ArraySeq$ofBoolean__f_unsafeArray.clone__O();
      const this$1 = $m_s_util_Sorting$();
      const evidence$3 = $m_s_math_Ordering$Boolean$();
      this$1.stableSort__O__I__I__s_math_Ordering__V(a, 0, a.u.length, evidence$3);
      return new $c_sci_ArraySeq$ofBoolean(a)
    } else {
      return $c_sci_ArraySeq.prototype.sorted__s_math_Ordering__sci_ArraySeq.call(this, ord)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcZ$sp(this.sci_ArraySeq$ofBoolean__f_unsafeArray)
  };
  apply$mcZI$sp__I__Z(i) {
    return this.sci_ArraySeq$ofBoolean__f_unsafeArray.u[i]
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq(ord)
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    return this.apply$mcZI$sp__I__Z(i)
  };
  apply__I__O(i) {
    return this.apply$mcZI$sp__I__Z(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$BooleanManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofBoolean__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofBoolean(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofBoolean)))
}
const $d_sci_ArraySeq$ofBoolean = new $TypeData().initClass({
  sci_ArraySeq$ofBoolean: 0
}, false, "scala.collection.immutable.ArraySeq$ofBoolean", {
  sci_ArraySeq$ofBoolean: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofBoolean.prototype.$classData = $d_sci_ArraySeq$ofBoolean;
class $c_sci_ArraySeq$ofByte extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofByte__f_unsafeArray = null;
    this.sci_ArraySeq$ofByte__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofByte__f_unsafeArray.u.length
  };
  apply__I__B(i) {
    return this.sci_ArraySeq$ofByte__f_unsafeArray.u[i]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofByte__f_unsafeArray;
    return this$1.arrayHash$mBc$sp__AB__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofByte)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofByte__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofByte__f_unsafeArray;
      return $m_ju_Arrays$().equals__AB__AB__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    if ((this.length__I() <= 1)) {
      return this
    } else if ((ord === $m_s_math_Ordering$Byte$())) {
      const a = this.sci_ArraySeq$ofByte__f_unsafeArray.clone__O();
      $m_ju_Arrays$().sort__AB__V(a);
      return new $c_sci_ArraySeq$ofByte(a)
    } else {
      return $c_sci_ArraySeq.prototype.sorted__s_math_Ordering__sci_ArraySeq.call(this, ord)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcB$sp(this.sci_ArraySeq$ofByte__f_unsafeArray)
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq(ord)
  };
  apply__O__O(v1) {
    return this.apply__I__B((v1 | 0))
  };
  apply__I__O(i) {
    return this.apply__I__B(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$ByteManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofByte__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofByte(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofByte)))
}
const $d_sci_ArraySeq$ofByte = new $TypeData().initClass({
  sci_ArraySeq$ofByte: 0
}, false, "scala.collection.immutable.ArraySeq$ofByte", {
  sci_ArraySeq$ofByte: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofByte.prototype.$classData = $d_sci_ArraySeq$ofByte;
class $c_sci_ArraySeq$ofChar extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofChar__f_unsafeArray = null;
    this.sci_ArraySeq$ofChar__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofChar__f_unsafeArray.u.length
  };
  apply__I__C(i) {
    return this.sci_ArraySeq$ofChar__f_unsafeArray.u[i]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofChar__f_unsafeArray;
    return this$1.arrayHash$mCc$sp__AC__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofChar)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofChar__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofChar__f_unsafeArray;
      return $m_ju_Arrays$().equals__AC__AC__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    if ((this.length__I() <= 1)) {
      return this
    } else if ((ord === $m_s_math_Ordering$Char$())) {
      const a = this.sci_ArraySeq$ofChar__f_unsafeArray.clone__O();
      $m_ju_Arrays$().sort__AC__V(a);
      return new $c_sci_ArraySeq$ofChar(a)
    } else {
      return $c_sci_ArraySeq.prototype.sorted__s_math_Ordering__sci_ArraySeq.call(this, ord)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcC$sp(this.sci_ArraySeq$ofChar__f_unsafeArray)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(sb, start, sep, end) {
    return new $c_scm_ArraySeq$ofChar(this.sci_ArraySeq$ofChar__f_unsafeArray).addString__scm_StringBuilder__T__T__T__scm_StringBuilder(sb, start, sep, end)
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq(ord)
  };
  apply__O__O(v1) {
    return $bC(this.apply__I__C((v1 | 0)))
  };
  apply__I__O(i) {
    return $bC(this.apply__I__C(i))
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$CharManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofChar__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofChar(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofChar)))
}
const $d_sci_ArraySeq$ofChar = new $TypeData().initClass({
  sci_ArraySeq$ofChar: 0
}, false, "scala.collection.immutable.ArraySeq$ofChar", {
  sci_ArraySeq$ofChar: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofChar.prototype.$classData = $d_sci_ArraySeq$ofChar;
class $c_sci_ArraySeq$ofDouble extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofDouble__f_unsafeArray = null;
    this.sci_ArraySeq$ofDouble__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofDouble__f_unsafeArray.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofDouble__f_unsafeArray;
    return this$1.arrayHash$mDc$sp__AD__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofDouble)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofDouble__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofDouble__f_unsafeArray;
      return $m_ju_Arrays$().equals__AD__AD__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcD$sp(this.sci_ArraySeq$ofDouble__f_unsafeArray)
  };
  apply$mcDI$sp__I__D(i) {
    return this.sci_ArraySeq$ofDouble__f_unsafeArray.u[i]
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    return this.apply$mcDI$sp__I__D(i)
  };
  apply__I__O(i) {
    return this.apply$mcDI$sp__I__D(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$DoubleManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofDouble__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofDouble(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofDouble)))
}
const $d_sci_ArraySeq$ofDouble = new $TypeData().initClass({
  sci_ArraySeq$ofDouble: 0
}, false, "scala.collection.immutable.ArraySeq$ofDouble", {
  sci_ArraySeq$ofDouble: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofDouble.prototype.$classData = $d_sci_ArraySeq$ofDouble;
class $c_sci_ArraySeq$ofFloat extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofFloat__f_unsafeArray = null;
    this.sci_ArraySeq$ofFloat__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofFloat__f_unsafeArray.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofFloat__f_unsafeArray;
    return this$1.arrayHash$mFc$sp__AF__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofFloat)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofFloat__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofFloat__f_unsafeArray;
      return $m_ju_Arrays$().equals__AF__AF__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcF$sp(this.sci_ArraySeq$ofFloat__f_unsafeArray)
  };
  apply$mcFI$sp__I__F(i) {
    return this.sci_ArraySeq$ofFloat__f_unsafeArray.u[i]
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    return this.apply$mcFI$sp__I__F(i)
  };
  apply__I__O(i) {
    return this.apply$mcFI$sp__I__F(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$FloatManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofFloat__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofFloat(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofFloat)))
}
const $d_sci_ArraySeq$ofFloat = new $TypeData().initClass({
  sci_ArraySeq$ofFloat: 0
}, false, "scala.collection.immutable.ArraySeq$ofFloat", {
  sci_ArraySeq$ofFloat: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofFloat.prototype.$classData = $d_sci_ArraySeq$ofFloat;
class $c_sci_ArraySeq$ofInt extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofInt__f_unsafeArray = null;
    this.sci_ArraySeq$ofInt__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofInt__f_unsafeArray.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofInt__f_unsafeArray;
    return this$1.arrayHash$mIc$sp__AI__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofInt)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofInt__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofInt__f_unsafeArray;
      return $m_ju_Arrays$().equals__AI__AI__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    if ((this.length__I() <= 1)) {
      return this
    } else if ((ord === $m_s_math_Ordering$Int$())) {
      const a = this.sci_ArraySeq$ofInt__f_unsafeArray.clone__O();
      $m_ju_Arrays$().sort__AI__V(a);
      return new $c_sci_ArraySeq$ofInt(a)
    } else {
      return $c_sci_ArraySeq.prototype.sorted__s_math_Ordering__sci_ArraySeq.call(this, ord)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcI$sp(this.sci_ArraySeq$ofInt__f_unsafeArray)
  };
  apply$mcII$sp__I__I(i) {
    return this.sci_ArraySeq$ofInt__f_unsafeArray.u[i]
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq(ord)
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    return this.apply$mcII$sp__I__I(i)
  };
  apply__I__O(i) {
    return this.apply$mcII$sp__I__I(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$IntManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofInt__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofInt(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofInt)))
}
const $d_sci_ArraySeq$ofInt = new $TypeData().initClass({
  sci_ArraySeq$ofInt: 0
}, false, "scala.collection.immutable.ArraySeq$ofInt", {
  sci_ArraySeq$ofInt: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofInt.prototype.$classData = $d_sci_ArraySeq$ofInt;
class $c_sci_ArraySeq$ofLong extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofLong__f_unsafeArray = null;
    this.sci_ArraySeq$ofLong__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofLong__f_unsafeArray.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofLong__f_unsafeArray;
    return this$1.arrayHash$mJc$sp__AJ__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofLong)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofLong__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofLong__f_unsafeArray;
      return $m_ju_Arrays$().equals__AJ__AJ__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    if ((this.length__I() <= 1)) {
      return this
    } else if ((ord === $m_s_math_Ordering$Long$())) {
      const a = this.sci_ArraySeq$ofLong__f_unsafeArray.clone__O();
      $m_ju_Arrays$().sort__AJ__V(a);
      return new $c_sci_ArraySeq$ofLong(a)
    } else {
      return $c_sci_ArraySeq.prototype.sorted__s_math_Ordering__sci_ArraySeq.call(this, ord)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcJ$sp(this.sci_ArraySeq$ofLong__f_unsafeArray)
  };
  apply$mcJI$sp__I__J(i) {
    return this.sci_ArraySeq$ofLong__f_unsafeArray.u[i]
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq(ord)
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    return this.apply$mcJI$sp__I__J(i)
  };
  apply__I__O(i) {
    return this.apply$mcJI$sp__I__J(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$LongManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofLong__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofLong(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofLong)))
}
const $d_sci_ArraySeq$ofLong = new $TypeData().initClass({
  sci_ArraySeq$ofLong: 0
}, false, "scala.collection.immutable.ArraySeq$ofLong", {
  sci_ArraySeq$ofLong: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofLong.prototype.$classData = $d_sci_ArraySeq$ofLong;
const $p_sci_ArraySeq$ofRef__elemTag$lzycompute__s_reflect_ClassTag = (function($thiz) {
  if ((!$thiz.sci_ArraySeq$ofRef__f_bitmap$0)) {
    const $$x1 = $m_s_reflect_ClassTag$();
    const this$1 = $thiz.sci_ArraySeq$ofRef__f_unsafeArray;
    $thiz.sci_ArraySeq$ofRef__f_elemTag = $$x1.apply__jl_Class__s_reflect_ClassTag($objectGetClass(this$1).getComponentType__jl_Class());
    $thiz.sci_ArraySeq$ofRef__f_bitmap$0 = true
  };
  return $thiz.sci_ArraySeq$ofRef__f_elemTag
});
class $c_sci_ArraySeq$ofRef extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofRef__f_elemTag = null;
    this.sci_ArraySeq$ofRef__f_unsafeArray = null;
    this.sci_ArraySeq$ofRef__f_bitmap$0 = false;
    this.sci_ArraySeq$ofRef__f_unsafeArray = unsafeArray
  };
  elemTag__s_reflect_ClassTag() {
    return ((!this.sci_ArraySeq$ofRef__f_bitmap$0) ? $p_sci_ArraySeq$ofRef__elemTag$lzycompute__s_reflect_ClassTag(this) : this.sci_ArraySeq$ofRef__f_elemTag)
  };
  length__I() {
    return this.sci_ArraySeq$ofRef__f_unsafeArray.u.length
  };
  apply__I__O(i) {
    return this.sci_ArraySeq$ofRef__f_unsafeArray.u[i]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofRef__f_unsafeArray;
    return this$1.arrayHash__O__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofRef)) {
      const x2 = that;
      return $m_s_Array$().equals__AO__AO__Z(this.sci_ArraySeq$ofRef__f_unsafeArray, x2.sci_ArraySeq$ofRef__f_unsafeArray)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  sorted__s_math_Ordering__sci_ArraySeq$ofRef(ord) {
    if ((this.sci_ArraySeq$ofRef__f_unsafeArray.u.length <= 1)) {
      return this
    } else {
      const a = this.sci_ArraySeq$ofRef__f_unsafeArray.clone__O();
      $m_ju_Arrays$().sort__AO__ju_Comparator__V(a, ord);
      return new $c_sci_ArraySeq$ofRef(a)
    }
  };
  iterator__sc_Iterator() {
    return $ct_sc_ArrayOps$ArrayIterator__O__(new $c_sc_ArrayOps$ArrayIterator(), this.sci_ArraySeq$ofRef__f_unsafeArray)
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq$ofRef(ord)
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq$ofRef(ord)
  };
  apply__O__O(v1) {
    return this.apply__I__O((v1 | 0))
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofRef__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofRef(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofRef)))
}
const $d_sci_ArraySeq$ofRef = new $TypeData().initClass({
  sci_ArraySeq$ofRef: 0
}, false, "scala.collection.immutable.ArraySeq$ofRef", {
  sci_ArraySeq$ofRef: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofRef.prototype.$classData = $d_sci_ArraySeq$ofRef;
class $c_sci_ArraySeq$ofShort extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofShort__f_unsafeArray = null;
    this.sci_ArraySeq$ofShort__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofShort__f_unsafeArray.u.length
  };
  apply__I__S(i) {
    return this.sci_ArraySeq$ofShort__f_unsafeArray.u[i]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofShort__f_unsafeArray;
    return this$1.arrayHash$mSc$sp__AS__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofShort)) {
      const x2 = that;
      const a = this.sci_ArraySeq$ofShort__f_unsafeArray;
      const b = x2.sci_ArraySeq$ofShort__f_unsafeArray;
      return $m_ju_Arrays$().equals__AS__AS__Z(a, b)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  sorted__s_math_Ordering__sci_ArraySeq(ord) {
    if ((this.length__I() <= 1)) {
      return this
    } else if ((ord === $m_s_math_Ordering$Short$())) {
      const a = this.sci_ArraySeq$ofShort__f_unsafeArray.clone__O();
      $m_ju_Arrays$().sort__AS__V(a);
      return new $c_sci_ArraySeq$ofShort(a)
    } else {
      return $c_sci_ArraySeq.prototype.sorted__s_math_Ordering__sci_ArraySeq.call(this, ord)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcS$sp(this.sci_ArraySeq$ofShort__f_unsafeArray)
  };
  sorted__s_math_Ordering__O(ord) {
    return this.sorted__s_math_Ordering__sci_ArraySeq(ord)
  };
  apply__O__O(v1) {
    return this.apply__I__S((v1 | 0))
  };
  apply__I__O(i) {
    return this.apply__I__S(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$ShortManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofShort__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofShort(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofShort)))
}
const $d_sci_ArraySeq$ofShort = new $TypeData().initClass({
  sci_ArraySeq$ofShort: 0
}, false, "scala.collection.immutable.ArraySeq$ofShort", {
  sci_ArraySeq$ofShort: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofShort.prototype.$classData = $d_sci_ArraySeq$ofShort;
class $c_sci_ArraySeq$ofUnit extends $c_sci_ArraySeq {
  constructor(unsafeArray) {
    super();
    this.sci_ArraySeq$ofUnit__f_unsafeArray = null;
    this.sci_ArraySeq$ofUnit__f_unsafeArray = unsafeArray
  };
  length__I() {
    return this.sci_ArraySeq$ofUnit__f_unsafeArray.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.sci_ArraySeq$ofUnit__f_unsafeArray;
    return this$1.arrayHash$mVc$sp__Ajl_Void__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_sci_ArraySeq$ofUnit)) {
      const x2 = that;
      return (this.sci_ArraySeq$ofUnit__f_unsafeArray.u.length === x2.sci_ArraySeq$ofUnit__f_unsafeArray.u.length)
    } else {
      return $f_sc_Seq__equals__O__Z(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcV$sp(this.sci_ArraySeq$ofUnit__f_unsafeArray)
  };
  apply$mcVI$sp__I__V(i) {
    this.sci_ArraySeq$ofUnit__f_unsafeArray.u[i]
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    this.apply$mcVI$sp__I__V(i)
  };
  apply__I__O(i) {
    this.apply$mcVI$sp__I__V(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$UnitManifest$()
  };
  unsafeArray__O() {
    return this.sci_ArraySeq$ofUnit__f_unsafeArray
  };
}
function $isArrayOf_sci_ArraySeq$ofUnit(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_ArraySeq$ofUnit)))
}
const $d_sci_ArraySeq$ofUnit = new $TypeData().initClass({
  sci_ArraySeq$ofUnit: 0
}, false, "scala.collection.immutable.ArraySeq$ofUnit", {
  sci_ArraySeq$ofUnit: 1,
  sci_ArraySeq: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_EvidenceIterableFactoryDefaults: 1,
  Ljava_io_Serializable: 1
});
$c_sci_ArraySeq$ofUnit.prototype.$classData = $d_sci_ArraySeq$ofUnit;
const $p_sci_List__loop$2__I__sci_List__I__I = (function($thiz, i, xs, len$1) {
  while (true) {
    if ((i === len$1)) {
      return (xs.isEmpty__Z() ? 0 : 1)
    } else if (xs.isEmpty__Z()) {
      return (-1)
    } else {
      const temp$i = ((1 + i) | 0);
      const temp$xs = xs.tail__O();
      i = temp$i;
      xs = temp$xs
    }
  }
});
const $p_sci_List__listEq$1__sci_List__sci_List__Z = (function($thiz, a, b) {
  while (true) {
    if ((a === b)) {
      return true
    } else {
      const aEmpty = a.isEmpty__Z();
      const bEmpty = b.isEmpty__Z();
      if (((!(aEmpty || bEmpty)) && $m_sr_BoxesRunTime$().equals__O__O__Z(a.head__O(), b.head__O()))) {
        const temp$a = a.tail__O();
        const temp$b = b.tail__O();
        a = temp$a;
        b = temp$b
      } else {
        return (aEmpty && bEmpty)
      }
    }
  }
});
class $c_sci_List extends $c_sci_AbstractSeq {
  sorted__s_math_Ordering__O(ord) {
    return $f_sc_SeqOps__sorted__s_math_Ordering__O(this, ord)
  };
  iterator__sc_Iterator() {
    return new $c_sc_StrictOptimizedLinearSeqOps$$anon$1(this)
  };
  stringPrefix__T() {
    return "LinearSeq"
  };
  apply__I__O(n) {
    return $f_sc_LinearSeqOps__apply__I__O(this, n)
  };
  sameElements__sc_IterableOnce__Z(that) {
    return $f_sc_LinearSeqOps__sameElements__sc_IterableOnce__Z(this, that)
  };
  indexWhere__F1__I__I(p, from) {
    return $f_sc_LinearSeqOps__indexWhere__F1__I__I(this, p, from)
  };
  isEmpty__Z() {
    return (this === $m_sci_Nil$())
  };
  map__F1__sci_List(f) {
    if ((this === $m_sci_Nil$())) {
      return $m_sci_Nil$()
    } else {
      const h = new $c_sci_$colon$colon(f.apply__O__O(this.head__O()), $m_sci_Nil$());
      let t = h;
      let rest = this.tail__O();
      while ((rest !== $m_sci_Nil$())) {
        const nx = new $c_sci_$colon$colon(f.apply__O__O(rest.head__O()), $m_sci_Nil$());
        t.sci_$colon$colon__f_next = nx;
        t = nx;
        rest = rest.tail__O()
      };
      return h
    }
  };
  foreach__F1__V(f) {
    let these = this;
    while ((!these.isEmpty__Z())) {
      f.apply__O__O(these.head__O());
      these = these.tail__O()
    }
  };
  length__I() {
    let these = this;
    let len = 0;
    while ((!these.isEmpty__Z())) {
      len = ((1 + len) | 0);
      these = these.tail__O()
    };
    return len
  };
  lengthCompare__I__I(len) {
    return ((len < 0) ? 1 : $p_sci_List__loop$2__I__sci_List__I__I(this, 0, this, len))
  };
  exists__F1__Z(p) {
    let these = this;
    while ((!these.isEmpty__Z())) {
      if ((!(!p.apply__O__O(these.head__O())))) {
        return true
      };
      these = these.tail__O()
    };
    return false
  };
  contains__O__Z(elem) {
    let these = this;
    while ((!these.isEmpty__Z())) {
      if ($m_sr_BoxesRunTime$().equals__O__O__Z(these.head__O(), elem)) {
        return true
      };
      these = these.tail__O()
    };
    return false
  };
  last__O() {
    if (this.isEmpty__Z()) {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "List.last")
    } else {
      let these = this;
      let scout = this.tail__O();
      while ((!scout.isEmpty__Z())) {
        these = scout;
        scout = scout.tail__O()
      };
      return these.head__O()
    }
  };
  className__T() {
    return "List"
  };
  equals__O__Z(o) {
    if ((o instanceof $c_sci_List)) {
      const x2 = o;
      return $p_sci_List__listEq$1__sci_List__sci_List__Z(this, this, x2)
    } else {
      return $f_sc_Seq__equals__O__Z(this, o)
    }
  };
  apply__O__O(v1) {
    const n = (v1 | 0);
    return $f_sc_LinearSeqOps__apply__I__O(this, n)
  };
  drop__I__O(n) {
    return $p_sc_StrictOptimizedLinearSeqOps__loop$2__I__sc_LinearSeq__sc_LinearSeq(this, n, this)
  };
  map__F1__O(f) {
    return this.map__F1__sci_List(f)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_List$()
  };
}
function $isArrayOf_sci_List(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_List)))
}
const $p_sci_Vector__checkRangeConvert__I__I = (function($thiz, index) {
  const idx = ((index + $thiz.sci_Vector__f_startIndex) | 0);
  if (((index >= 0) && (idx < $thiz.sci_Vector__f_endIndex))) {
    return idx
  } else {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((index + " is out of bounds (min 0, max ") + (((-1) + $thiz.sci_Vector__f_endIndex) | 0)) + ")"))
  }
});
const $p_sci_Vector__getElem__I__I__O = (function($thiz, index, xor) {
  if ((xor < 32)) {
    return $thiz.sci_Vector__f_display0.u[(31 & index)]
  } else if ((xor < 1024)) {
    return $thiz.sci_Vector__f_display1.u[(31 & ((index >>> 5) | 0))].u[(31 & index)]
  } else if ((xor < 32768)) {
    return $thiz.sci_Vector__f_display2.u[(31 & ((index >>> 10) | 0))].u[(31 & ((index >>> 5) | 0))].u[(31 & index)]
  } else if ((xor < 1048576)) {
    return $thiz.sci_Vector__f_display3.u[(31 & ((index >>> 15) | 0))].u[(31 & ((index >>> 10) | 0))].u[(31 & ((index >>> 5) | 0))].u[(31 & index)]
  } else if ((xor < 33554432)) {
    return $thiz.sci_Vector__f_display4.u[(31 & ((index >>> 20) | 0))].u[(31 & ((index >>> 15) | 0))].u[(31 & ((index >>> 10) | 0))].u[(31 & ((index >>> 5) | 0))].u[(31 & index)]
  } else if ((xor < 1073741824)) {
    return $thiz.sci_Vector__f_display5.u[(31 & ((index >>> 25) | 0))].u[(31 & ((index >>> 20) | 0))].u[(31 & ((index >>> 15) | 0))].u[(31 & ((index >>> 10) | 0))].u[(31 & ((index >>> 5) | 0))].u[(31 & index)]
  } else {
    throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
  }
});
const $p_sci_Vector__gotoPosWritable__I__I__I__V = (function($thiz, oldIndex, newIndex, xor) {
  if ($thiz.sci_Vector__f_dirty) {
    $f_sci_VectorPointer__gotoPosWritable1__I__I__I__V($thiz, oldIndex, newIndex, xor)
  } else {
    $f_sci_VectorPointer__gotoPosWritable0__I__I__V($thiz, newIndex, xor);
    $thiz.sci_Vector__f_dirty = true
  }
});
const $p_sci_Vector__gotoFreshPosWritable__I__I__I__V = (function($thiz, oldIndex, newIndex, xor) {
  if ($thiz.sci_Vector__f_dirty) {
    $f_sci_VectorPointer__gotoFreshPosWritable1__I__I__I__V($thiz, oldIndex, newIndex, xor)
  } else {
    $f_sci_VectorPointer__gotoFreshPosWritable0__I__I__I__V($thiz, oldIndex, newIndex, xor);
    $thiz.sci_Vector__f_dirty = true
  }
});
const $p_sci_Vector__shiftTopLevel__I__I__V = (function($thiz, oldLeft, newLeft) {
  const x1 = (((-1) + $thiz.sci_Vector__f_depth) | 0);
  switch (x1) {
    case 0: {
      const array = $thiz.sci_Vector__f_display0;
      $thiz.sci_Vector__f_display0 = $f_sci_VectorPointer__copyRange__AO__I__I__AO($thiz, array, oldLeft, newLeft);
      break
    }
    case 1: {
      const array$1 = $thiz.sci_Vector__f_display1;
      $thiz.sci_Vector__f_display1 = $f_sci_VectorPointer__copyRange__AO__I__I__AO($thiz, array$1, oldLeft, newLeft);
      break
    }
    case 2: {
      const array$2 = $thiz.sci_Vector__f_display2;
      $thiz.sci_Vector__f_display2 = $f_sci_VectorPointer__copyRange__AO__I__I__AO($thiz, array$2, oldLeft, newLeft);
      break
    }
    case 3: {
      const array$3 = $thiz.sci_Vector__f_display3;
      $thiz.sci_Vector__f_display3 = $f_sci_VectorPointer__copyRange__AO__I__I__AO($thiz, array$3, oldLeft, newLeft);
      break
    }
    case 4: {
      const array$4 = $thiz.sci_Vector__f_display4;
      $thiz.sci_Vector__f_display4 = $f_sci_VectorPointer__copyRange__AO__I__I__AO($thiz, array$4, oldLeft, newLeft);
      break
    }
    case 5: {
      const array$5 = $thiz.sci_Vector__f_display5;
      $thiz.sci_Vector__f_display5 = $f_sci_VectorPointer__copyRange__AO__I__I__AO($thiz, array$5, oldLeft, newLeft);
      break
    }
    default: {
      throw new $c_s_MatchError(x1)
    }
  }
});
const $p_sci_Vector__zeroLeft__AO__I__V = (function($thiz, array, index) {
  let i = 0;
  while ((i < index)) {
    array.u[i] = null;
    i = ((1 + i) | 0)
  }
});
const $p_sci_Vector__copyRight__AO__I__AO = (function($thiz, array, left) {
  const copy = array.clone__O();
  $m_ju_Arrays$().fill__AO__I__I__O__V(copy, 0, left, null);
  return copy
});
const $p_sci_Vector__cleanLeftEdge__I__V = (function($thiz, cutIndex) {
  if ((cutIndex < 32)) {
    $p_sci_Vector__zeroLeft__AO__I__V($thiz, $thiz.sci_Vector__f_display0, cutIndex)
  } else if ((cutIndex < 1024)) {
    $p_sci_Vector__zeroLeft__AO__I__V($thiz, $thiz.sci_Vector__f_display0, (31 & cutIndex));
    $thiz.sci_Vector__f_display1 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display1, ((cutIndex >>> 5) | 0))
  } else if ((cutIndex < 32768)) {
    $p_sci_Vector__zeroLeft__AO__I__V($thiz, $thiz.sci_Vector__f_display0, (31 & cutIndex));
    $thiz.sci_Vector__f_display1 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display1, (31 & ((cutIndex >>> 5) | 0)));
    $thiz.sci_Vector__f_display2 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display2, ((cutIndex >>> 10) | 0))
  } else if ((cutIndex < 1048576)) {
    $p_sci_Vector__zeroLeft__AO__I__V($thiz, $thiz.sci_Vector__f_display0, (31 & cutIndex));
    $thiz.sci_Vector__f_display1 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display1, (31 & ((cutIndex >>> 5) | 0)));
    $thiz.sci_Vector__f_display2 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display2, (31 & ((cutIndex >>> 10) | 0)));
    $thiz.sci_Vector__f_display3 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display3, ((cutIndex >>> 15) | 0))
  } else if ((cutIndex < 33554432)) {
    $p_sci_Vector__zeroLeft__AO__I__V($thiz, $thiz.sci_Vector__f_display0, (31 & cutIndex));
    $thiz.sci_Vector__f_display1 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display1, (31 & ((cutIndex >>> 5) | 0)));
    $thiz.sci_Vector__f_display2 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display2, (31 & ((cutIndex >>> 10) | 0)));
    $thiz.sci_Vector__f_display3 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display3, (31 & ((cutIndex >>> 15) | 0)));
    $thiz.sci_Vector__f_display4 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display4, ((cutIndex >>> 20) | 0))
  } else if ((cutIndex < 1073741824)) {
    $p_sci_Vector__zeroLeft__AO__I__V($thiz, $thiz.sci_Vector__f_display0, (31 & cutIndex));
    $thiz.sci_Vector__f_display1 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display1, (31 & ((cutIndex >>> 5) | 0)));
    $thiz.sci_Vector__f_display2 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display2, (31 & ((cutIndex >>> 10) | 0)));
    $thiz.sci_Vector__f_display3 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display3, (31 & ((cutIndex >>> 15) | 0)));
    $thiz.sci_Vector__f_display4 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display4, (31 & ((cutIndex >>> 20) | 0)));
    $thiz.sci_Vector__f_display5 = $p_sci_Vector__copyRight__AO__I__AO($thiz, $thiz.sci_Vector__f_display5, ((cutIndex >>> 25) | 0))
  } else {
    throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
  }
});
const $p_sci_Vector__requiredDepth__I__I = (function($thiz, xor) {
  if ((xor < 32)) {
    return 1
  } else if ((xor < 1024)) {
    return 2
  } else if ((xor < 32768)) {
    return 3
  } else if ((xor < 1048576)) {
    return 4
  } else if ((xor < 33554432)) {
    return 5
  } else if ((xor < 1073741824)) {
    return 6
  } else {
    throw $ct_jl_IllegalArgumentException__(new $c_jl_IllegalArgumentException())
  }
});
const $p_sci_Vector__dropFront0__I__sci_Vector = (function($thiz, cutIndex) {
  const blockIndex = ((-32) & cutIndex);
  const xor = (cutIndex ^ (((-1) + $thiz.sci_Vector__f_endIndex) | 0));
  const d = $p_sci_Vector__requiredDepth__I__I($thiz, xor);
  const shift = (cutIndex & (~(((-1) + (1 << $imul(5, d))) | 0)));
  const s = new $c_sci_Vector(((cutIndex - shift) | 0), (($thiz.sci_Vector__f_endIndex - shift) | 0), ((blockIndex - shift) | 0));
  const depth = $thiz.sci_Vector__f_depth;
  $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s, $thiz, depth);
  s.sci_Vector__f_dirty = $thiz.sci_Vector__f_dirty;
  $p_sci_Vector__gotoPosWritable__I__I__I__V(s, $thiz.sci_Vector__f_focus, blockIndex, ($thiz.sci_Vector__f_focus ^ blockIndex));
  $f_sci_VectorPointer__preClean__I__V(s, d);
  $p_sci_Vector__cleanLeftEdge__I__V(s, ((cutIndex - shift) | 0));
  return s
});
class $c_sci_Vector extends $c_sci_AbstractSeq {
  constructor(startIndex, endIndex, focus) {
    super();
    this.sci_Vector__f_startIndex = 0;
    this.sci_Vector__f_endIndex = 0;
    this.sci_Vector__f_focus = 0;
    this.sci_Vector__f_dirty = false;
    this.sci_Vector__f_depth = 0;
    this.sci_Vector__f_display0 = null;
    this.sci_Vector__f_display1 = null;
    this.sci_Vector__f_display2 = null;
    this.sci_Vector__f_display3 = null;
    this.sci_Vector__f_display4 = null;
    this.sci_Vector__f_display5 = null;
    this.sci_Vector__f_startIndex = startIndex;
    this.sci_Vector__f_endIndex = endIndex;
    this.sci_Vector__f_focus = focus;
    this.sci_Vector__f_dirty = false
  };
  sorted__s_math_Ordering__O(ord) {
    return $f_sc_SeqOps__sorted__s_math_Ordering__O(this, ord)
  };
  map__F1__O(f) {
    return $f_sc_StrictOptimizedIterableOps__map__F1__O(this, f)
  };
  canEqual__O__Z(that) {
    return $f_sci_IndexedSeq__canEqual__O__Z(this, that)
  };
  sameElements__sc_IterableOnce__Z(o) {
    return $f_sci_IndexedSeq__sameElements__sc_IterableOnce__Z(this, o)
  };
  stringPrefix__T() {
    return "IndexedSeq"
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  lengthCompare__I__I(len) {
    const x = this.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.length__I()
  };
  depth__I() {
    return this.sci_Vector__f_depth
  };
  depth_$eq__I__V(x$1) {
    this.sci_Vector__f_depth = x$1
  };
  display0__AO() {
    return this.sci_Vector__f_display0
  };
  display0_$eq__AO__V(x$1) {
    this.sci_Vector__f_display0 = x$1
  };
  display1__AAO() {
    return this.sci_Vector__f_display1
  };
  display1_$eq__AAO__V(x$1) {
    this.sci_Vector__f_display1 = x$1
  };
  display2__AAAO() {
    return this.sci_Vector__f_display2
  };
  display2_$eq__AAAO__V(x$1) {
    this.sci_Vector__f_display2 = x$1
  };
  display3__AAAAO() {
    return this.sci_Vector__f_display3
  };
  display3_$eq__AAAAO__V(x$1) {
    this.sci_Vector__f_display3 = x$1
  };
  display4__AAAAAO() {
    return this.sci_Vector__f_display4
  };
  display4_$eq__AAAAAO__V(x$1) {
    this.sci_Vector__f_display4 = x$1
  };
  display5__AAAAAAO() {
    return this.sci_Vector__f_display5
  };
  display5_$eq__AAAAAAO__V(x$1) {
    this.sci_Vector__f_display5 = x$1
  };
  length__I() {
    return ((this.sci_Vector__f_endIndex - this.sci_Vector__f_startIndex) | 0)
  };
  initIterator__sci_VectorIterator__V(s) {
    const depth = this.sci_Vector__f_depth;
    $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s, this, depth);
    if (this.sci_Vector__f_dirty) {
      const index = this.sci_Vector__f_focus;
      $f_sci_VectorPointer__stabilize__I__V(s, index)
    };
    if ((s.sci_VectorIterator__f_depth > 1)) {
      const index$1 = this.sci_Vector__f_startIndex;
      const xor = (this.sci_Vector__f_startIndex ^ this.sci_Vector__f_focus);
      $f_sci_VectorPointer__gotoPos__I__I__V(s, index$1, xor)
    }
  };
  iterator__sc_Iterator() {
    if ($f_sc_SeqOps__isEmpty__Z(this)) {
      return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty
    } else {
      const s = new $c_sci_VectorIterator(this.sci_Vector__f_startIndex, this.sci_Vector__f_endIndex);
      this.initIterator__sci_VectorIterator__V(s);
      return s
    }
  };
  apply__I__O(index) {
    const idx = $p_sci_Vector__checkRangeConvert__I__I(this, index);
    return $p_sci_Vector__getElem__I__I__O(this, idx, (idx ^ this.sci_Vector__f_focus))
  };
  drop__I__sci_Vector(n) {
    if ((n <= 0)) {
      return this
    } else if ((this.sci_Vector__f_startIndex < ((this.sci_Vector__f_endIndex - n) | 0))) {
      return $p_sci_Vector__dropFront0__I__sci_Vector(this, ((this.sci_Vector__f_startIndex + n) | 0))
    } else {
      const this$1 = $m_sci_Vector$();
      return this$1.sci_Vector$__f_NIL
    }
  };
  head__O() {
    if ($f_sc_SeqOps__isEmpty__Z(this)) {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "empty.head")
    };
    return this.apply__I__O(0)
  };
  tail__sci_Vector() {
    if ($f_sc_SeqOps__isEmpty__Z(this)) {
      throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "empty.tail")
    };
    return this.drop__I__sci_Vector(1)
  };
  last__O() {
    if ($f_sc_SeqOps__isEmpty__Z(this)) {
      throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "empty.last")
    };
    return this.apply__I__O((((-1) + this.length__I()) | 0))
  };
  updateAt__I__O__sci_Vector(index, elem) {
    const idx = $p_sci_Vector__checkRangeConvert__I__I(this, index);
    const s = new $c_sci_Vector(this.sci_Vector__f_startIndex, this.sci_Vector__f_endIndex, idx);
    const depth = this.sci_Vector__f_depth;
    $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s, this, depth);
    s.sci_Vector__f_dirty = this.sci_Vector__f_dirty;
    $p_sci_Vector__gotoPosWritable__I__I__I__V(s, this.sci_Vector__f_focus, idx, (this.sci_Vector__f_focus ^ idx));
    s.sci_Vector__f_display0.u[(31 & idx)] = elem;
    return s
  };
  appended__O__sci_Vector(value) {
    const thisLength = this.length__I();
    let result;
    if (((this.sci_Vector__f_depth === 1) && (thisLength < 32))) {
      const s = new $c_sci_Vector(0, ((1 + thisLength) | 0), 0);
      s.sci_Vector__f_depth = 1;
      const newDisplay0 = $newArrayObject($d_O.getArrayOf(), [((1 + thisLength) | 0)]);
      const src = this.sci_Vector__f_display0;
      const srcPos = this.sci_Vector__f_startIndex;
      $systemArraycopy(src, srcPos, newDisplay0, 0, thisLength);
      newDisplay0.u[thisLength] = value;
      s.sci_Vector__f_display0 = newDisplay0;
      result = s
    } else if ((thisLength > 0)) {
      const blockIndex = ((-32) & this.sci_Vector__f_endIndex);
      const lo = (31 & this.sci_Vector__f_endIndex);
      if ((this.sci_Vector__f_endIndex !== blockIndex)) {
        const s$2 = new $c_sci_Vector(this.sci_Vector__f_startIndex, ((1 + this.sci_Vector__f_endIndex) | 0), blockIndex);
        const depth = this.sci_Vector__f_depth;
        $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s$2, this, depth);
        s$2.sci_Vector__f_dirty = this.sci_Vector__f_dirty;
        $p_sci_Vector__gotoPosWritable__I__I__I__V(s$2, this.sci_Vector__f_focus, blockIndex, (this.sci_Vector__f_focus ^ blockIndex));
        s$2.sci_Vector__f_display0.u[lo] = value;
        result = s$2
      } else {
        const shift = (this.sci_Vector__f_startIndex & (~(((-1) + (1 << $imul(5, (((-1) + this.sci_Vector__f_depth) | 0)))) | 0)));
        const shiftBlocks = ((this.sci_Vector__f_startIndex >>> $imul(5, (((-1) + this.sci_Vector__f_depth) | 0))) | 0);
        if ((shift !== 0)) {
          if ((this.sci_Vector__f_depth > 1)) {
            const newBlockIndex = ((blockIndex - shift) | 0);
            const newFocus = ((this.sci_Vector__f_focus - shift) | 0);
            const s$3 = new $c_sci_Vector(((this.sci_Vector__f_startIndex - shift) | 0), ((((1 + this.sci_Vector__f_endIndex) | 0) - shift) | 0), newBlockIndex);
            const depth$1 = this.sci_Vector__f_depth;
            $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s$3, this, depth$1);
            s$3.sci_Vector__f_dirty = this.sci_Vector__f_dirty;
            $p_sci_Vector__shiftTopLevel__I__I__V(s$3, shiftBlocks, 0);
            $p_sci_Vector__gotoFreshPosWritable__I__I__I__V(s$3, newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
            s$3.sci_Vector__f_display0.u[lo] = value;
            result = s$3
          } else {
            const newBlockIndex$2 = (((-32) + blockIndex) | 0);
            const newFocus$2 = this.sci_Vector__f_focus;
            const s$4 = new $c_sci_Vector(((this.sci_Vector__f_startIndex - shift) | 0), ((((1 + this.sci_Vector__f_endIndex) | 0) - shift) | 0), newBlockIndex$2);
            const depth$2 = this.sci_Vector__f_depth;
            $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s$4, this, depth$2);
            s$4.sci_Vector__f_dirty = this.sci_Vector__f_dirty;
            $p_sci_Vector__shiftTopLevel__I__I__V(s$4, shiftBlocks, 0);
            $p_sci_Vector__gotoPosWritable__I__I__I__V(s$4, newFocus$2, newBlockIndex$2, (newFocus$2 ^ newBlockIndex$2));
            if ((s$4.sci_Vector__f_display0.u.length < ((31 - shift) | 0))) {
              const newDisplay0$2 = $newArrayObject($d_O.getArrayOf(), [((31 - shift) | 0)]);
              const xs = s$4.sci_Vector__f_display0;
              $m_sc_ArrayOps$().copyToArray$extension__O__O__I__I__I(xs, newDisplay0$2, 0, 2147483647);
              s$4.sci_Vector__f_display0 = newDisplay0$2
            };
            s$4.sci_Vector__f_display0.u[((32 - shift) | 0)] = value;
            result = s$4
          }
        } else {
          const newFocus$3 = this.sci_Vector__f_focus;
          const s$5 = new $c_sci_Vector(this.sci_Vector__f_startIndex, ((1 + this.sci_Vector__f_endIndex) | 0), blockIndex);
          const depth$3 = this.sci_Vector__f_depth;
          $f_sci_VectorPointer__initFrom__sci_VectorPointer__I__V(s$5, this, depth$3);
          s$5.sci_Vector__f_dirty = this.sci_Vector__f_dirty;
          $p_sci_Vector__gotoFreshPosWritable__I__I__I__V(s$5, newFocus$3, blockIndex, (newFocus$3 ^ blockIndex));
          s$5.sci_Vector__f_display0.u[lo] = value;
          result = s$5
        }
      }
    } else {
      result = $m_sci_Vector$().scala$collection$immutable$Vector$$single__O__sci_Vector(value)
    };
    return result
  };
  applyPreferredMaxLength__I() {
    return $m_sci_Vector$().sci_Vector$__f_scala$collection$immutable$Vector$$defaultApplyPreferredMaxLength
  };
  equals__O__Z(o) {
    if ((o instanceof $c_sci_Vector)) {
      const x2 = o;
      return ((this === x2) || ((this.length__I() === x2.length__I()) && (((((((((this.sci_Vector__f_startIndex === x2.sci_Vector__f_startIndex) && (this.sci_Vector__f_endIndex === x2.sci_Vector__f_endIndex)) && (this.sci_Vector__f_display0 === x2.sci_Vector__f_display0)) && (this.sci_Vector__f_display1 === x2.sci_Vector__f_display1)) && (this.sci_Vector__f_display2 === x2.sci_Vector__f_display2)) && (this.sci_Vector__f_display3 === x2.sci_Vector__f_display3)) && (this.sci_Vector__f_display4 === x2.sci_Vector__f_display4)) && (this.sci_Vector__f_display5 === x2.sci_Vector__f_display5)) || $f_sc_Seq__equals__O__Z(this, o))))
    } else {
      return $f_sc_Seq__equals__O__Z(this, o)
    }
  };
  className__T() {
    return "Vector"
  };
  tail__O() {
    return this.tail__sci_Vector()
  };
  drop__I__O(n) {
    return this.drop__I__sci_Vector(n)
  };
  apply__O__O(v1) {
    return this.apply__I__O((v1 | 0))
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sci_Vector$()
  };
}
function $isArrayOf_sci_Vector(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_Vector)))
}
const $d_sci_Vector = new $TypeData().initClass({
  sci_Vector: 0
}, false, "scala.collection.immutable.Vector", {
  sci_Vector: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  sci_IndexedSeqOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sci_VectorPointer: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_sci_Vector.prototype.$classData = $d_sci_Vector;
class $c_scm_ArraySeq$ofBoolean extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofBoolean__f_array = null;
    this.scm_ArraySeq$ofBoolean__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofBoolean__f_array.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofBoolean__f_array;
    return this$1.arrayHash$mZc$sp__AZ__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofBoolean)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofBoolean__f_array;
      const b = x2.scm_ArraySeq$ofBoolean__f_array;
      return $m_ju_Arrays$().equals__AZ__AZ__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcZ$sp(this.scm_ArraySeq$ofBoolean__f_array)
  };
  apply$mcZI$sp__I__Z(index) {
    return this.scm_ArraySeq$ofBoolean__f_array.u[index]
  };
  apply__O__O(v1) {
    const index = (v1 | 0);
    return this.apply$mcZI$sp__I__Z(index)
  };
  apply__I__O(i) {
    return this.apply$mcZI$sp__I__Z(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$BooleanManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofBoolean__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofBoolean(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofBoolean)))
}
const $d_scm_ArraySeq$ofBoolean = new $TypeData().initClass({
  scm_ArraySeq$ofBoolean: 0
}, false, "scala.collection.mutable.ArraySeq$ofBoolean", {
  scm_ArraySeq$ofBoolean: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofBoolean.prototype.$classData = $d_scm_ArraySeq$ofBoolean;
class $c_scm_ArraySeq$ofByte extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofByte__f_array = null;
    this.scm_ArraySeq$ofByte__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofByte__f_array.u.length
  };
  apply__I__B(index) {
    return this.scm_ArraySeq$ofByte__f_array.u[index]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofByte__f_array;
    return this$1.arrayHash$mBc$sp__AB__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofByte)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofByte__f_array;
      const b = x2.scm_ArraySeq$ofByte__f_array;
      return $m_ju_Arrays$().equals__AB__AB__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcB$sp(this.scm_ArraySeq$ofByte__f_array)
  };
  apply__O__O(v1) {
    return this.apply__I__B((v1 | 0))
  };
  apply__I__O(i) {
    return this.apply__I__B(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$ByteManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofByte__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofByte(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofByte)))
}
const $d_scm_ArraySeq$ofByte = new $TypeData().initClass({
  scm_ArraySeq$ofByte: 0
}, false, "scala.collection.mutable.ArraySeq$ofByte", {
  scm_ArraySeq$ofByte: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofByte.prototype.$classData = $d_scm_ArraySeq$ofByte;
class $c_scm_ArraySeq$ofChar extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofChar__f_array = null;
    this.scm_ArraySeq$ofChar__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofChar__f_array.u.length
  };
  apply__I__C(index) {
    return this.scm_ArraySeq$ofChar__f_array.u[index]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofChar__f_array;
    return this$1.arrayHash$mCc$sp__AC__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofChar)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofChar__f_array;
      const b = x2.scm_ArraySeq$ofChar__f_array;
      return $m_ju_Arrays$().equals__AC__AC__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcC$sp(this.scm_ArraySeq$ofChar__f_array)
  };
  addString__scm_StringBuilder__T__T__T__scm_StringBuilder(sb, start, sep, end) {
    const jsb = sb.scm_StringBuilder__f_underlying;
    if (((start.length | 0) !== 0)) {
      jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + start)
    };
    const len = this.scm_ArraySeq$ofChar__f_array.u.length;
    if ((len !== 0)) {
      if ((sep === "")) {
        jsb.append__AC__jl_StringBuilder(this.scm_ArraySeq$ofChar__f_array)
      } else {
        jsb.length__I();
        (end.length | 0);
        (sep.length | 0);
        const c = this.scm_ArraySeq$ofChar__f_array.u[0];
        const str = String.fromCharCode(c);
        jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str);
        let i = 1;
        while ((i < len)) {
          jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + sep);
          const c$1 = this.scm_ArraySeq$ofChar__f_array.u[i];
          const str$1 = String.fromCharCode(c$1);
          jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str$1);
          i = ((1 + i) | 0)
        }
      }
    };
    if (((end.length | 0) !== 0)) {
      jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + jsb.jl_StringBuilder__f_java$lang$StringBuilder$$content) + end)
    };
    return sb
  };
  apply__O__O(v1) {
    return $bC(this.apply__I__C((v1 | 0)))
  };
  apply__I__O(i) {
    return $bC(this.apply__I__C(i))
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$CharManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofChar__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofChar(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofChar)))
}
const $d_scm_ArraySeq$ofChar = new $TypeData().initClass({
  scm_ArraySeq$ofChar: 0
}, false, "scala.collection.mutable.ArraySeq$ofChar", {
  scm_ArraySeq$ofChar: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofChar.prototype.$classData = $d_scm_ArraySeq$ofChar;
class $c_scm_ArraySeq$ofDouble extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofDouble__f_array = null;
    this.scm_ArraySeq$ofDouble__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofDouble__f_array.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofDouble__f_array;
    return this$1.arrayHash$mDc$sp__AD__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofDouble)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofDouble__f_array;
      const b = x2.scm_ArraySeq$ofDouble__f_array;
      return $m_ju_Arrays$().equals__AD__AD__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcD$sp(this.scm_ArraySeq$ofDouble__f_array)
  };
  apply$mcDI$sp__I__D(index) {
    return this.scm_ArraySeq$ofDouble__f_array.u[index]
  };
  apply__O__O(v1) {
    const index = (v1 | 0);
    return this.apply$mcDI$sp__I__D(index)
  };
  apply__I__O(i) {
    return this.apply$mcDI$sp__I__D(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$DoubleManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofDouble__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofDouble(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofDouble)))
}
const $d_scm_ArraySeq$ofDouble = new $TypeData().initClass({
  scm_ArraySeq$ofDouble: 0
}, false, "scala.collection.mutable.ArraySeq$ofDouble", {
  scm_ArraySeq$ofDouble: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofDouble.prototype.$classData = $d_scm_ArraySeq$ofDouble;
class $c_scm_ArraySeq$ofFloat extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofFloat__f_array = null;
    this.scm_ArraySeq$ofFloat__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofFloat__f_array.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofFloat__f_array;
    return this$1.arrayHash$mFc$sp__AF__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofFloat)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofFloat__f_array;
      const b = x2.scm_ArraySeq$ofFloat__f_array;
      return $m_ju_Arrays$().equals__AF__AF__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcF$sp(this.scm_ArraySeq$ofFloat__f_array)
  };
  apply$mcFI$sp__I__F(index) {
    return this.scm_ArraySeq$ofFloat__f_array.u[index]
  };
  apply__O__O(v1) {
    const index = (v1 | 0);
    return this.apply$mcFI$sp__I__F(index)
  };
  apply__I__O(i) {
    return this.apply$mcFI$sp__I__F(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$FloatManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofFloat__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofFloat(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofFloat)))
}
const $d_scm_ArraySeq$ofFloat = new $TypeData().initClass({
  scm_ArraySeq$ofFloat: 0
}, false, "scala.collection.mutable.ArraySeq$ofFloat", {
  scm_ArraySeq$ofFloat: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofFloat.prototype.$classData = $d_scm_ArraySeq$ofFloat;
class $c_scm_ArraySeq$ofInt extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofInt__f_array = null;
    this.scm_ArraySeq$ofInt__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofInt__f_array.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofInt__f_array;
    return this$1.arrayHash$mIc$sp__AI__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofInt)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofInt__f_array;
      const b = x2.scm_ArraySeq$ofInt__f_array;
      return $m_ju_Arrays$().equals__AI__AI__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcI$sp(this.scm_ArraySeq$ofInt__f_array)
  };
  apply$mcII$sp__I__I(index) {
    return this.scm_ArraySeq$ofInt__f_array.u[index]
  };
  apply__O__O(v1) {
    const index = (v1 | 0);
    return this.apply$mcII$sp__I__I(index)
  };
  apply__I__O(i) {
    return this.apply$mcII$sp__I__I(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$IntManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofInt__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofInt(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofInt)))
}
const $d_scm_ArraySeq$ofInt = new $TypeData().initClass({
  scm_ArraySeq$ofInt: 0
}, false, "scala.collection.mutable.ArraySeq$ofInt", {
  scm_ArraySeq$ofInt: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofInt.prototype.$classData = $d_scm_ArraySeq$ofInt;
class $c_scm_ArraySeq$ofLong extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofLong__f_array = null;
    this.scm_ArraySeq$ofLong__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofLong__f_array.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofLong__f_array;
    return this$1.arrayHash$mJc$sp__AJ__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofLong)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofLong__f_array;
      const b = x2.scm_ArraySeq$ofLong__f_array;
      return $m_ju_Arrays$().equals__AJ__AJ__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcJ$sp(this.scm_ArraySeq$ofLong__f_array)
  };
  apply$mcJI$sp__I__J(index) {
    return this.scm_ArraySeq$ofLong__f_array.u[index]
  };
  apply__O__O(v1) {
    const index = (v1 | 0);
    return this.apply$mcJI$sp__I__J(index)
  };
  apply__I__O(i) {
    return this.apply$mcJI$sp__I__J(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$LongManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofLong__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofLong(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofLong)))
}
const $d_scm_ArraySeq$ofLong = new $TypeData().initClass({
  scm_ArraySeq$ofLong: 0
}, false, "scala.collection.mutable.ArraySeq$ofLong", {
  scm_ArraySeq$ofLong: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofLong.prototype.$classData = $d_scm_ArraySeq$ofLong;
const $p_scm_ArraySeq$ofRef__elemTag$lzycompute__s_reflect_ClassTag = (function($thiz) {
  if ((!$thiz.scm_ArraySeq$ofRef__f_bitmap$0)) {
    const $$x1 = $m_s_reflect_ClassTag$();
    const this$1 = $thiz.scm_ArraySeq$ofRef__f_array;
    $thiz.scm_ArraySeq$ofRef__f_elemTag = $$x1.apply__jl_Class__s_reflect_ClassTag($objectGetClass(this$1).getComponentType__jl_Class());
    $thiz.scm_ArraySeq$ofRef__f_bitmap$0 = true
  };
  return $thiz.scm_ArraySeq$ofRef__f_elemTag
});
class $c_scm_ArraySeq$ofRef extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofRef__f_elemTag = null;
    this.scm_ArraySeq$ofRef__f_array = null;
    this.scm_ArraySeq$ofRef__f_bitmap$0 = false;
    this.scm_ArraySeq$ofRef__f_array = array
  };
  elemTag__s_reflect_ClassTag() {
    return ((!this.scm_ArraySeq$ofRef__f_bitmap$0) ? $p_scm_ArraySeq$ofRef__elemTag$lzycompute__s_reflect_ClassTag(this) : this.scm_ArraySeq$ofRef__f_elemTag)
  };
  length__I() {
    return this.scm_ArraySeq$ofRef__f_array.u.length
  };
  apply__I__O(index) {
    return this.scm_ArraySeq$ofRef__f_array.u[index]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofRef__f_array;
    return this$1.arrayHash__O__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofRef)) {
      const x2 = that;
      return $m_s_Array$().equals__AO__AO__Z(this.scm_ArraySeq$ofRef__f_array, x2.scm_ArraySeq$ofRef__f_array)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return $ct_sc_ArrayOps$ArrayIterator__O__(new $c_sc_ArrayOps$ArrayIterator(), this.scm_ArraySeq$ofRef__f_array)
  };
  apply__O__O(v1) {
    return this.apply__I__O((v1 | 0))
  };
  array__O() {
    return this.scm_ArraySeq$ofRef__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofRef(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofRef)))
}
const $d_scm_ArraySeq$ofRef = new $TypeData().initClass({
  scm_ArraySeq$ofRef: 0
}, false, "scala.collection.mutable.ArraySeq$ofRef", {
  scm_ArraySeq$ofRef: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofRef.prototype.$classData = $d_scm_ArraySeq$ofRef;
class $c_scm_ArraySeq$ofShort extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofShort__f_array = null;
    this.scm_ArraySeq$ofShort__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofShort__f_array.u.length
  };
  apply__I__S(index) {
    return this.scm_ArraySeq$ofShort__f_array.u[index]
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofShort__f_array;
    return this$1.arrayHash$mSc$sp__AS__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofShort)) {
      const x2 = that;
      const a = this.scm_ArraySeq$ofShort__f_array;
      const b = x2.scm_ArraySeq$ofShort__f_array;
      return $m_ju_Arrays$().equals__AS__AS__Z(a, b)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcS$sp(this.scm_ArraySeq$ofShort__f_array)
  };
  apply__O__O(v1) {
    return this.apply__I__S((v1 | 0))
  };
  apply__I__O(i) {
    return this.apply__I__S(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$ShortManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofShort__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofShort(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofShort)))
}
const $d_scm_ArraySeq$ofShort = new $TypeData().initClass({
  scm_ArraySeq$ofShort: 0
}, false, "scala.collection.mutable.ArraySeq$ofShort", {
  scm_ArraySeq$ofShort: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofShort.prototype.$classData = $d_scm_ArraySeq$ofShort;
class $c_scm_ArraySeq$ofUnit extends $c_scm_ArraySeq {
  constructor(array) {
    super();
    this.scm_ArraySeq$ofUnit__f_array = null;
    this.scm_ArraySeq$ofUnit__f_array = array
  };
  length__I() {
    return this.scm_ArraySeq$ofUnit__f_array.u.length
  };
  hashCode__I() {
    const this$1 = $m_s_util_hashing_MurmurHash3$();
    const a = this.scm_ArraySeq$ofUnit__f_array;
    return this$1.arrayHash$mVc$sp__Ajl_Void__I__I(a, this$1.s_util_hashing_MurmurHash3$__f_seqSeed)
  };
  equals__O__Z(that) {
    if ((that instanceof $c_scm_ArraySeq$ofUnit)) {
      const x2 = that;
      return (this.scm_ArraySeq$ofUnit__f_array.u.length === x2.scm_ArraySeq$ofUnit__f_array.u.length)
    } else {
      return $c_scm_ArraySeq.prototype.equals__O__Z.call(this, that)
    }
  };
  iterator__sc_Iterator() {
    return new $c_sc_ArrayOps$ArrayIterator$mcV$sp(this.scm_ArraySeq$ofUnit__f_array)
  };
  apply$mcVI$sp__I__V(index) {
    this.scm_ArraySeq$ofUnit__f_array.u[index]
  };
  apply__O__O(v1) {
    const index = (v1 | 0);
    this.apply$mcVI$sp__I__V(index)
  };
  apply__I__O(i) {
    this.apply$mcVI$sp__I__V(i)
  };
  elemTag__s_reflect_ClassTag() {
    return $m_s_reflect_ManifestFactory$UnitManifest$()
  };
  array__O() {
    return this.scm_ArraySeq$ofUnit__f_array
  };
}
function $isArrayOf_scm_ArraySeq$ofUnit(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArraySeq$ofUnit)))
}
const $d_scm_ArraySeq$ofUnit = new $TypeData().initClass({
  scm_ArraySeq$ofUnit: 0
}, false, "scala.collection.mutable.ArraySeq$ofUnit", {
  scm_ArraySeq$ofUnit: 1,
  scm_ArraySeq: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArraySeq$ofUnit.prototype.$classData = $d_scm_ArraySeq$ofUnit;
const $p_scm_HashMap__put0__O__O__I__Z__s_Some = (function($thiz, key, value, hash, getOld) {
  if ((((1 + $thiz.scm_HashMap__f_contentSize) | 0) >= $thiz.scm_HashMap__f_threshold)) {
    $p_scm_HashMap__growTable__I__V($thiz, ($thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length << 1))
  };
  const idx = (hash & (((-1) + $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
  return $p_scm_HashMap__put0__O__O__Z__I__I__s_Some($thiz, key, value, getOld, hash, idx)
});
const $p_scm_HashMap__put0__O__O__Z__s_Some = (function($thiz, key, value, getOld) {
  if ((((1 + $thiz.scm_HashMap__f_contentSize) | 0) >= $thiz.scm_HashMap__f_threshold)) {
    $p_scm_HashMap__growTable__I__V($thiz, ($thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length << 1))
  };
  const originalHash = $m_sr_Statics$().anyHash__O__I(key);
  const hash = (originalHash ^ ((originalHash >>> 16) | 0));
  const idx = (hash & (((-1) + $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
  return $p_scm_HashMap__put0__O__O__Z__I__I__s_Some($thiz, key, value, getOld, hash, idx)
});
const $p_scm_HashMap__put0__O__O__Z__I__I__s_Some = (function($thiz, key, value, getOld, hash, idx) {
  const x1 = $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx];
  if ((x1 === null)) {
    $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx] = new $c_scm_HashMap$Node(key, hash, value, null)
  } else {
    let prev = null;
    let n = x1;
    while (((n !== null) && (n.scm_HashMap$Node__f__hash <= hash))) {
      if (((n.scm_HashMap$Node__f__hash === hash) && $m_sr_BoxesRunTime$().equals__O__O__Z(key, n.scm_HashMap$Node__f__key))) {
        const old = n.scm_HashMap$Node__f__value;
        n.scm_HashMap$Node__f__value = value;
        return (getOld ? new $c_s_Some(old) : null)
      };
      prev = n;
      n = n.scm_HashMap$Node__f__next
    };
    if ((prev === null)) {
      $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx] = new $c_scm_HashMap$Node(key, hash, value, x1)
    } else {
      prev.scm_HashMap$Node__f__next = new $c_scm_HashMap$Node(key, hash, value, prev.scm_HashMap$Node__f__next)
    }
  };
  $thiz.scm_HashMap__f_contentSize = ((1 + $thiz.scm_HashMap__f_contentSize) | 0);
  return null
});
const $p_scm_HashMap__remove0__O__scm_HashMap$Node = (function($thiz, elem) {
  const originalHash = $m_sr_Statics$().anyHash__O__I(elem);
  return $p_scm_HashMap__remove0__O__I__scm_HashMap$Node($thiz, elem, (originalHash ^ ((originalHash >>> 16) | 0)))
});
const $p_scm_HashMap__remove0__O__I__scm_HashMap$Node = (function($thiz, elem, hash) {
  const idx = (hash & (((-1) + $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0));
  const x1 = $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx];
  if ((x1 === null)) {
    return null
  } else if (((x1.scm_HashMap$Node__f__hash === hash) && $m_sr_BoxesRunTime$().equals__O__O__Z(x1.scm_HashMap$Node__f__key, elem))) {
    $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[idx] = x1.scm_HashMap$Node__f__next;
    $thiz.scm_HashMap__f_contentSize = (((-1) + $thiz.scm_HashMap__f_contentSize) | 0);
    return x1
  } else {
    let prev = x1;
    let next = x1.scm_HashMap$Node__f__next;
    while (((next !== null) && (next.scm_HashMap$Node__f__hash <= hash))) {
      if (((next.scm_HashMap$Node__f__hash === hash) && $m_sr_BoxesRunTime$().equals__O__O__Z(next.scm_HashMap$Node__f__key, elem))) {
        prev.scm_HashMap$Node__f__next = next.scm_HashMap$Node__f__next;
        $thiz.scm_HashMap__f_contentSize = (((-1) + $thiz.scm_HashMap__f_contentSize) | 0);
        return next
      };
      prev = next;
      next = next.scm_HashMap$Node__f__next
    };
    return null
  }
});
const $p_scm_HashMap__growTable__I__V = (function($thiz, newlen) {
  let oldlen = $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length;
  $thiz.scm_HashMap__f_threshold = $p_scm_HashMap__newThreshold__I__I($thiz, newlen);
  if (($thiz.scm_HashMap__f_contentSize === 0)) {
    $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table = $newArrayObject($d_scm_HashMap$Node.getArrayOf(), [newlen])
  } else {
    const original = $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table;
    $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table = $m_ju_Arrays$().copyOf__AO__I__AO(original, newlen);
    const preLow = new $c_scm_HashMap$Node(null, 0, null, null);
    const preHigh = new $c_scm_HashMap$Node(null, 0, null, null);
    while ((oldlen < newlen)) {
      let i = 0;
      while ((i < oldlen)) {
        const old = $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[i];
        if ((old !== null)) {
          preLow.scm_HashMap$Node__f__next = null;
          preHigh.scm_HashMap$Node__f__next = null;
          let lastLow = preLow;
          let lastHigh = preHigh;
          let n = old;
          while ((n !== null)) {
            const next = n.scm_HashMap$Node__f__next;
            if (((n.scm_HashMap$Node__f__hash & oldlen) === 0)) {
              lastLow.scm_HashMap$Node__f__next = n;
              lastLow = n
            } else {
              lastHigh.scm_HashMap$Node__f__next = n;
              lastHigh = n
            };
            n = next
          };
          lastLow.scm_HashMap$Node__f__next = null;
          if ((old !== preLow.scm_HashMap$Node__f__next)) {
            $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[i] = preLow.scm_HashMap$Node__f__next
          };
          if ((preHigh.scm_HashMap$Node__f__next !== null)) {
            $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[((i + oldlen) | 0)] = preHigh.scm_HashMap$Node__f__next;
            lastHigh.scm_HashMap$Node__f__next = null
          }
        };
        i = ((1 + i) | 0)
      };
      oldlen = (oldlen << 1)
    }
  }
});
const $p_scm_HashMap__tableSizeFor__I__I = (function($thiz, capacity) {
  const x = (((-1) + capacity) | 0);
  const i = ((x > 4) ? x : 4);
  const x$1 = ((((-2147483648) >> $clz32(i)) & i) << 1);
  return ((x$1 < 1073741824) ? x$1 : 1073741824)
});
const $p_scm_HashMap__newThreshold__I__I = (function($thiz, size) {
  return $doubleToInt((size * $thiz.scm_HashMap__f_loadFactor))
});
const $ct_scm_HashMap__I__D__ = (function($thiz, initialCapacity, loadFactor) {
  $thiz.scm_HashMap__f_loadFactor = loadFactor;
  $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table = $newArrayObject($d_scm_HashMap$Node.getArrayOf(), [$p_scm_HashMap__tableSizeFor__I__I($thiz, initialCapacity)]);
  $thiz.scm_HashMap__f_threshold = $p_scm_HashMap__newThreshold__I__I($thiz, $thiz.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length);
  $thiz.scm_HashMap__f_contentSize = 0;
  return $thiz
});
const $ct_scm_HashMap__ = (function($thiz) {
  $ct_scm_HashMap__I__D__($thiz, 16, 0.75);
  return $thiz
});
class $c_scm_HashMap extends $c_scm_AbstractMap {
  constructor() {
    super();
    this.scm_HashMap__f_loadFactor = 0.0;
    this.scm_HashMap__f_scala$collection$mutable$HashMap$$table = null;
    this.scm_HashMap__f_threshold = 0;
    this.scm_HashMap__f_contentSize = 0
  };
  size__I() {
    return this.scm_HashMap__f_contentSize
  };
  contains__O__Z(key) {
    const originalHash = $m_sr_Statics$().anyHash__O__I(key);
    const hash = (originalHash ^ ((originalHash >>> 16) | 0));
    const x1 = this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[(hash & (((-1) + this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0))];
    return (((x1 === null) ? null : x1.findNode__O__I__scm_HashMap$Node(key, hash)) !== null)
  };
  sizeHint__I__V(size) {
    const target = $p_scm_HashMap__tableSizeFor__I__I(this, $doubleToInt((((1 + size) | 0) / this.scm_HashMap__f_loadFactor)));
    if ((target > this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length)) {
      $p_scm_HashMap__growTable__I__V(this, target)
    }
  };
  addAll__sc_IterableOnce__scm_HashMap(xs) {
    this.sizeHint__I__V(xs.knownSize__I());
    if ((xs instanceof $c_sci_HashMap)) {
      const x2 = xs;
      const f = new $c_sjsr_AnonFunction3(((this$1) => ((k$2, v$2, h$2) => {
        const h = (h$2 | 0);
        $p_scm_HashMap__put0__O__O__I__Z__s_Some(this$1, k$2, v$2, (h ^ ((h >>> 16) | 0)), false)
      }))(this));
      x2.sci_HashMap__f_rootNode.foreachWithHash__F3__V(f);
      return this
    } else if ((xs instanceof $c_scm_HashMap)) {
      const x3 = xs;
      const iter = x3.nodeIterator__sc_Iterator();
      while (iter.hasNext__Z()) {
        const next = iter.next__O();
        $p_scm_HashMap__put0__O__O__I__Z__s_Some(this, next.scm_HashMap$Node__f__key, next.scm_HashMap$Node__f__value, next.scm_HashMap$Node__f__hash, false)
      };
      return this
    } else {
      return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs)
    }
  };
  iterator__sc_Iterator() {
    return ((this.scm_HashMap__f_contentSize === 0) ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_scm_HashMap$$anon$1(this))
  };
  valuesIterator__sc_Iterator() {
    return ((this.scm_HashMap__f_contentSize === 0) ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_scm_HashMap$$anon$3(this))
  };
  nodeIterator__sc_Iterator() {
    return ((this.scm_HashMap__f_contentSize === 0) ? $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty : new $c_scm_HashMap$$anon$4(this))
  };
  clear__V() {
    const a = this.scm_HashMap__f_scala$collection$mutable$HashMap$$table;
    $m_ju_Arrays$().fill__AO__O__V(a, null);
    this.scm_HashMap__f_contentSize = 0
  };
  get__O__s_Option(key) {
    const originalHash = $m_sr_Statics$().anyHash__O__I(key);
    const hash = (originalHash ^ ((originalHash >>> 16) | 0));
    const x1 = this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[(hash & (((-1) + this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0))];
    const x1$1 = ((x1 === null) ? null : x1.findNode__O__I__scm_HashMap$Node(key, hash));
    return ((x1$1 === null) ? $m_s_None$() : new $c_s_Some(x1$1.scm_HashMap$Node__f__value))
  };
  apply__O__O(key) {
    const originalHash = $m_sr_Statics$().anyHash__O__I(key);
    const hash = (originalHash ^ ((originalHash >>> 16) | 0));
    const x1 = this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[(hash & (((-1) + this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0))];
    const x1$1 = ((x1 === null) ? null : x1.findNode__O__I__scm_HashMap$Node(key, hash));
    return ((x1$1 === null) ? $f_sc_MapOps__default__O__O(this, key) : x1$1.scm_HashMap$Node__f__value)
  };
  getOrElse__O__F0__O(key, default$1) {
    const x = $objectGetClass(this);
    if ((!(x === $d_scm_HashMap.getClassOf()))) {
      return $f_sc_MapOps__getOrElse__O__F0__O(this, key, default$1)
    } else {
      const originalHash = $m_sr_Statics$().anyHash__O__I(key);
      const hash = (originalHash ^ ((originalHash >>> 16) | 0));
      const x1 = this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[(hash & (((-1) + this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length) | 0))];
      const nd = ((x1 === null) ? null : x1.findNode__O__I__scm_HashMap$Node(key, hash));
      return ((nd === null) ? default$1.apply__O() : nd.scm_HashMap$Node__f__value)
    }
  };
  remove__O__s_Option(key) {
    const x1 = $p_scm_HashMap__remove0__O__scm_HashMap$Node(this, key);
    return ((x1 === null) ? $m_s_None$() : new $c_s_Some(x1.scm_HashMap$Node__f__value))
  };
  addOne__T2__scm_HashMap(elem) {
    $p_scm_HashMap__put0__O__O__Z__s_Some(this, elem._1__O(), elem._2__O(), false);
    return this
  };
  knownSize__I() {
    return this.scm_HashMap__f_contentSize
  };
  isEmpty__Z() {
    return (this.scm_HashMap__f_contentSize === 0)
  };
  foreach__F1__V(f) {
    const len = this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u.length;
    let i = 0;
    while ((i < len)) {
      const n = this.scm_HashMap__f_scala$collection$mutable$HashMap$$table.u[i];
      if ((n !== null)) {
        n.foreach__F1__V(f)
      };
      i = ((1 + i) | 0)
    }
  };
  mapFactory__sc_MapFactory() {
    return $m_scm_HashMap$()
  };
  stringPrefix__T() {
    return "HashMap"
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__T2__scm_HashMap(elem)
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_HashMap(xs)
  };
}
function $isArrayOf_scm_HashMap(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_HashMap)))
}
const $d_scm_HashMap = new $TypeData().initClass({
  scm_HashMap: 0
}, false, "scala.collection.mutable.HashMap", {
  scm_HashMap: 1,
  scm_AbstractMap: 1,
  sc_AbstractMap: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Map: 1,
  sc_MapOps: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_MapFactoryDefaults: 1,
  s_Equals: 1,
  scm_Map: 1,
  scm_Iterable: 1,
  scm_MapOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_StrictOptimizedMapOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_HashMap.prototype.$classData = $d_scm_HashMap;
class $c_sci_$colon$colon extends $c_sci_List {
  constructor(head, next) {
    super();
    this.sci_$colon$colon__f_head = null;
    this.sci_$colon$colon__f_next = null;
    this.sci_$colon$colon__f_head = head;
    this.sci_$colon$colon__f_next = next
  };
  head__O() {
    return this.sci_$colon$colon__f_head
  };
  productPrefix__T() {
    return "::"
  };
  productArity__I() {
    return 2
  };
  productElement__I__O(x$1) {
    switch (x$1) {
      case 0: {
        return this.sci_$colon$colon__f_head;
        break
      }
      case 1: {
        return this.sci_$colon$colon__f_next;
        break
      }
      default: {
        return $m_sr_Statics$().ioobe__I__O(x$1)
      }
    }
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  tail__O() {
    return this.sci_$colon$colon__f_next
  };
}
const $d_sci_$colon$colon = new $TypeData().initClass({
  sci_$colon$colon: 0
}, false, "scala.collection.immutable.$colon$colon", {
  sci_$colon$colon: 1,
  sci_List: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_LinearSeq: 1,
  sc_LinearSeq: 1,
  sc_LinearSeqOps: 1,
  sci_LinearSeqOps: 1,
  sc_StrictOptimizedLinearSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1,
  s_Product: 1
});
$c_sci_$colon$colon.prototype.$classData = $d_sci_$colon$colon;
class $c_sci_Nil$ extends $c_sci_List {
  constructor() {
    super();
    this.sci_Nil$__f_EmptyUnzip = null;
    $n_sci_Nil$ = this;
    this.sci_Nil$__f_EmptyUnzip = $ct_T2__O__O__(new $c_T2(), $m_sci_Nil$(), $m_sci_Nil$())
  };
  head__E() {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "head of empty list")
  };
  tail__E() {
    throw $ct_jl_UnsupportedOperationException__T__(new $c_jl_UnsupportedOperationException(), "tail of empty list")
  };
  last__E() {
    throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "last of empty list")
  };
  knownSize__I() {
    return 0
  };
  iterator__sc_Iterator() {
    return $m_sc_Iterator$().sc_Iterator$__f_scala$collection$Iterator$$_empty
  };
  productPrefix__T() {
    return "Nil"
  };
  productArity__I() {
    return 0
  };
  productElement__I__O(x$1) {
    return $m_sr_Statics$().ioobe__I__O(x$1)
  };
  productIterator__sc_Iterator() {
    return new $c_sr_ScalaRunTime$$anon$1(this)
  };
  last__O() {
    this.last__E()
  };
  tail__O() {
    this.tail__E()
  };
  head__O() {
    this.head__E()
  };
}
const $d_sci_Nil$ = new $TypeData().initClass({
  sci_Nil$: 0
}, false, "scala.collection.immutable.Nil$", {
  sci_Nil$: 1,
  sci_List: 1,
  sci_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  sci_Seq: 1,
  sci_Iterable: 1,
  sci_SeqOps: 1,
  sci_LinearSeq: 1,
  sc_LinearSeq: 1,
  sc_LinearSeqOps: 1,
  sci_LinearSeqOps: 1,
  sc_StrictOptimizedLinearSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sci_StrictOptimizedSeqOps: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1,
  s_Product: 1
});
$c_sci_Nil$.prototype.$classData = $d_sci_Nil$;
let $n_sci_Nil$ = (void 0);
function $m_sci_Nil$() {
  if ((!$n_sci_Nil$)) {
    $n_sci_Nil$ = new $c_sci_Nil$()
  };
  return $n_sci_Nil$
}
const $ct_scm_StringBuilder__jl_StringBuilder__ = (function($thiz, underlying) {
  $thiz.scm_StringBuilder__f_underlying = underlying;
  return $thiz
});
const $ct_scm_StringBuilder__ = (function($thiz) {
  $ct_scm_StringBuilder__jl_StringBuilder__($thiz, $ct_jl_StringBuilder__(new $c_jl_StringBuilder()));
  return $thiz
});
const $ct_scm_StringBuilder__I__T__ = (function($thiz, initCapacity, initValue) {
  const this$1 = $ct_jl_StringBuilder__I__(new $c_jl_StringBuilder(), (((initValue.length | 0) + initCapacity) | 0));
  this$1.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + this$1.jl_StringBuilder__f_java$lang$StringBuilder$$content) + initValue);
  $ct_scm_StringBuilder__jl_StringBuilder__($thiz, this$1);
  return $thiz
});
class $c_scm_StringBuilder extends $c_scm_AbstractSeq {
  constructor() {
    super();
    this.scm_StringBuilder__f_underlying = null
  };
  stringPrefix__T() {
    return "IndexedSeq"
  };
  iterator__sc_Iterator() {
    const this$1 = new $c_sc_IndexedSeqView$Id(this);
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  drop__I__O(n) {
    return $f_sc_IndexedSeqOps__drop__I__O(this, n)
  };
  lengthCompare__I__I(len) {
    const x = this.scm_StringBuilder__f_underlying.length__I();
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs)
  };
  newSpecificBuilder__scm_Builder() {
    return $ct_scm_GrowableBuilder__scm_Growable__(new $c_scm_GrowableBuilder(), $ct_scm_StringBuilder__(new $c_scm_StringBuilder()))
  };
  length__I() {
    return this.scm_StringBuilder__f_underlying.length__I()
  };
  knownSize__I() {
    return this.scm_StringBuilder__f_underlying.length__I()
  };
  addOne__C__scm_StringBuilder(x) {
    const this$1 = this.scm_StringBuilder__f_underlying;
    const str = String.fromCharCode(x);
    this$1.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + this$1.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str);
    return this
  };
  toString__T() {
    return this.scm_StringBuilder__f_underlying.jl_StringBuilder__f_java$lang$StringBuilder$$content
  };
  toArray__s_reflect_ClassTag__O(ct) {
    const x1 = ct.runtimeClass__jl_Class();
    return ((x1 === $d_C.getClassOf()) ? this.toCharArray__AC() : $f_sc_IterableOnceOps__toArray__s_reflect_ClassTag__O(this, ct))
  };
  toCharArray__AC() {
    const len = this.scm_StringBuilder__f_underlying.length__I();
    const arr = $newArrayObject($d_C.getArrayOf(), [len]);
    this.scm_StringBuilder__f_underlying.getChars__I__I__AC__I__V(0, len, arr, 0);
    return arr
  };
  appendAll__sc_IterableOnce__scm_StringBuilder(xs) {
    if ((xs instanceof $c_sci_WrappedString)) {
      const x2 = xs;
      const this$3 = this.scm_StringBuilder__f_underlying;
      $m_sci_WrappedString$();
      const str = x2.sci_WrappedString__f_scala$collection$immutable$WrappedString$$self;
      this$3.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + this$3.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str)
    } else if ((xs instanceof $c_scm_ArraySeq$ofChar)) {
      const x3 = xs;
      this.scm_StringBuilder__f_underlying.append__AC__jl_StringBuilder(x3.scm_ArraySeq$ofChar__f_array)
    } else if ((xs instanceof $c_scm_StringBuilder)) {
      const x4 = xs;
      const this$4 = this.scm_StringBuilder__f_underlying;
      const s = x4.scm_StringBuilder__f_underlying;
      this$4.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + this$4.jl_StringBuilder__f_java$lang$StringBuilder$$content) + s)
    } else {
      const ks = xs.knownSize__I();
      if ((ks !== 0)) {
        const b = this.scm_StringBuilder__f_underlying;
        if ((ks > 0)) {
          b.length__I()
        };
        const it = xs.iterator__sc_Iterator();
        while (it.hasNext__Z()) {
          const c = $uC(it.next__O());
          const str$1 = String.fromCharCode(c);
          b.jl_StringBuilder__f_java$lang$StringBuilder$$content = (("" + b.jl_StringBuilder__f_java$lang$StringBuilder$$content) + str$1)
        }
      }
    };
    return this
  };
  charAt__I__C(index) {
    return this.scm_StringBuilder__f_underlying.charAt__I__C(index)
  };
  subSequence__I__I__jl_CharSequence(start, end) {
    return this.scm_StringBuilder__f_underlying.substring__I__I__T(start, end)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_scm_IndexedSeq$()
  };
  result__O() {
    return this.scm_StringBuilder__f_underlying.jl_StringBuilder__f_java$lang$StringBuilder$$content
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__C__scm_StringBuilder($uC(elem))
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    return $ct_scm_StringBuilder__(new $c_scm_StringBuilder()).appendAll__sc_IterableOnce__scm_StringBuilder(coll)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    return $ct_scm_StringBuilder__(new $c_scm_StringBuilder()).appendAll__sc_IterableOnce__scm_StringBuilder(coll)
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    return $bC(this.scm_StringBuilder__f_underlying.charAt__I__C(i))
  };
  apply__I__O(i) {
    return $bC(this.scm_StringBuilder__f_underlying.charAt__I__C(i))
  };
}
function $isArrayOf_scm_StringBuilder(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_StringBuilder)))
}
const $d_scm_StringBuilder = new $TypeData().initClass({
  scm_StringBuilder: 0
}, false, "scala.collection.mutable.StringBuilder", {
  scm_StringBuilder: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  jl_CharSequence: 1,
  Ljava_io_Serializable: 1
});
$c_scm_StringBuilder.prototype.$classData = $d_scm_StringBuilder;
class $c_sci_BitSet extends $c_sci_AbstractSet {
  stringPrefix__T() {
    return "BitSet"
  };
  ordering__s_math_Ordering() {
    return $m_s_math_Ordering$Int$()
  };
  iterator__sc_Iterator() {
    return new $c_sc_BitSetOps$$anon$1(this, 0)
  };
  size__I() {
    return $f_sc_BitSetOps__size__I(this)
  };
  isEmpty__Z() {
    return $f_sc_BitSetOps__isEmpty__Z(this)
  };
  foreach__F1__V(f) {
    $f_sc_BitSetOps__foreach__F1__V(this, f)
  };
  incl__I__sci_BitSet(elem) {
    const requirement = (elem >= 0);
    if ((!requirement)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), "requirement failed: bitset element must be >= 0")
    };
    if ($f_sc_BitSetOps__contains__I__Z(this, elem)) {
      return this
    } else {
      const idx = (elem >> 6);
      const t = this.word__I__J(idx);
      const lo$1 = t.RTLong__f_lo;
      const hi$1 = t.RTLong__f_hi;
      const lo = (((32 & elem) === 0) ? (1 << elem) : 0);
      const hi = (((32 & elem) === 0) ? 0 : (1 << elem));
      const lo$2 = (lo$1 | lo);
      const hi$2 = (hi$1 | hi);
      return this.updateWord__I__J__sci_BitSet(idx, new $c_RTLong(lo$2, hi$2))
    }
  };
  contains__O__Z(elem) {
    const elem$1 = (elem | 0);
    return $f_sc_BitSetOps__contains__I__Z(this, elem$1)
  };
  incl__O__sci_SetOps(elem) {
    return this.incl__I__sci_BitSet((elem | 0))
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    return $m_sci_BitSet$().fromSpecific__sc_IterableOnce__sci_BitSet(coll)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    return $m_sci_BitSet$().fromSpecific__sc_IterableOnce__sci_BitSet(coll)
  };
}
function $isArrayOf_sci_BitSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sci_BitSet)))
}
const $p_scm_ListBuffer__copyElems__V = (function($thiz) {
  const this$2 = new $c_scm_ListBuffer();
  const buf = this$2.addAll__sc_IterableOnce__scm_ListBuffer($thiz);
  $thiz.scm_ListBuffer__f_first = buf.scm_ListBuffer__f_first;
  $thiz.scm_ListBuffer__f_last0 = buf.scm_ListBuffer__f_last0;
  $thiz.scm_ListBuffer__f_aliased = false
});
const $p_scm_ListBuffer__ensureUnaliased__V = (function($thiz) {
  if ($thiz.scm_ListBuffer__f_aliased) {
    $p_scm_ListBuffer__copyElems__V($thiz)
  }
});
class $c_scm_ListBuffer extends $c_scm_AbstractBuffer {
  constructor() {
    super();
    this.scm_ListBuffer__f_first = null;
    this.scm_ListBuffer__f_last0 = null;
    this.scm_ListBuffer__f_aliased = false;
    this.scm_ListBuffer__f_len = 0;
    this.scm_ListBuffer__f_first = $m_sci_Nil$();
    this.scm_ListBuffer__f_last0 = null;
    this.scm_ListBuffer__f_aliased = false;
    this.scm_ListBuffer__f_len = 0
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  iterator__sc_Iterator() {
    return this.scm_ListBuffer__f_first.iterator__sc_Iterator()
  };
  apply__I__O(i) {
    const this$1 = this.scm_ListBuffer__f_first;
    return $f_sc_LinearSeqOps__apply__I__O(this$1, i)
  };
  length__I() {
    return this.scm_ListBuffer__f_len
  };
  knownSize__I() {
    return this.scm_ListBuffer__f_len
  };
  isEmpty__Z() {
    return (this.scm_ListBuffer__f_len === 0)
  };
  toList__sci_List() {
    this.scm_ListBuffer__f_aliased = (!this.isEmpty__Z());
    return this.scm_ListBuffer__f_first
  };
  addOne__O__scm_ListBuffer(elem) {
    $p_scm_ListBuffer__ensureUnaliased__V(this);
    const last1 = new $c_sci_$colon$colon(elem, $m_sci_Nil$());
    if ((this.scm_ListBuffer__f_len === 0)) {
      this.scm_ListBuffer__f_first = last1
    } else {
      this.scm_ListBuffer__f_last0.sci_$colon$colon__f_next = last1
    };
    this.scm_ListBuffer__f_last0 = last1;
    this.scm_ListBuffer__f_len = ((1 + this.scm_ListBuffer__f_len) | 0);
    return this
  };
  addAll__sc_IterableOnce__scm_ListBuffer(xs) {
    const it = xs.iterator__sc_Iterator();
    if (it.hasNext__Z()) {
      $p_scm_ListBuffer__ensureUnaliased__V(this);
      const last1 = new $c_sci_$colon$colon(it.next__O(), $m_sci_Nil$());
      if ((this.scm_ListBuffer__f_len === 0)) {
        this.scm_ListBuffer__f_first = last1
      } else {
        this.scm_ListBuffer__f_last0.sci_$colon$colon__f_next = last1
      };
      this.scm_ListBuffer__f_last0 = last1;
      this.scm_ListBuffer__f_len = ((1 + this.scm_ListBuffer__f_len) | 0);
      while (it.hasNext__Z()) {
        const last1$2 = new $c_sci_$colon$colon(it.next__O(), $m_sci_Nil$());
        this.scm_ListBuffer__f_last0.sci_$colon$colon__f_next = last1$2;
        this.scm_ListBuffer__f_last0 = last1$2;
        this.scm_ListBuffer__f_len = ((1 + this.scm_ListBuffer__f_len) | 0)
      }
    };
    return this
  };
  stringPrefix__T() {
    return "ListBuffer"
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_ListBuffer(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__scm_ListBuffer(elem)
  };
  result__O() {
    return this.toList__sci_List()
  };
  apply__O__O(v1) {
    const i = (v1 | 0);
    const this$1 = this.scm_ListBuffer__f_first;
    return $f_sc_LinearSeqOps__apply__I__O(this$1, i)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_scm_ListBuffer$()
  };
}
function $isArrayOf_scm_ListBuffer(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ListBuffer)))
}
const $d_scm_ListBuffer = new $TypeData().initClass({
  scm_ListBuffer: 0
}, false, "scala.collection.mutable.ListBuffer", {
  scm_ListBuffer: 1,
  scm_AbstractBuffer: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Buffer: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  scm_ReusableBuilder: 1,
  scm_Builder: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ListBuffer.prototype.$classData = $d_scm_ListBuffer;
class $c_sci_BitSet$BitSet1 extends $c_sci_BitSet {
  constructor(elems) {
    super();
    this.sci_BitSet$BitSet1__f_elems = $L0;
    this.sci_BitSet$BitSet1__f_elems = elems
  };
  nwords__I() {
    return 1
  };
  word__I__J(idx) {
    return ((idx === 0) ? this.sci_BitSet$BitSet1__f_elems : $L0)
  };
  updateWord__I__J__sci_BitSet(idx, w) {
    if ((idx === 0)) {
      return new $c_sci_BitSet$BitSet1(w)
    } else if ((idx === 1)) {
      return $m_sci_BitSet$().scala$collection$immutable$BitSet$$createSmall__J__J__sci_BitSet(this.sci_BitSet$BitSet1__f_elems, w)
    } else {
      const elems = $m_sc_BitSetOps$().updateArray__AJ__I__J__AJ($makeNativeArrayWrapper($d_J.getArrayOf(), [this.sci_BitSet$BitSet1__f_elems]), idx, w);
      return $m_sci_BitSet$().fromBitMaskNoCopy__AJ__sci_BitSet(elems)
    }
  };
}
const $d_sci_BitSet$BitSet1 = new $TypeData().initClass({
  sci_BitSet$BitSet1: 0
}, false, "scala.collection.immutable.BitSet$BitSet1", {
  sci_BitSet$BitSet1: 1,
  sci_BitSet: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sci_SortedSet: 1,
  sc_SortedSet: 1,
  sc_SortedSetOps: 1,
  sc_SortedOps: 1,
  sc_SortedSetFactoryDefaults: 1,
  sci_SortedSetOps: 1,
  sci_StrictOptimizedSortedSetOps: 1,
  sc_StrictOptimizedSortedSetOps: 1,
  sc_StrictOptimizedSetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sci_StrictOptimizedSetOps: 1,
  sc_BitSet: 1,
  sc_BitSetOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_BitSet$BitSet1.prototype.$classData = $d_sci_BitSet$BitSet1;
class $c_sci_BitSet$BitSet2 extends $c_sci_BitSet {
  constructor(elems0, elems1) {
    super();
    this.sci_BitSet$BitSet2__f_elems0 = $L0;
    this.sci_BitSet$BitSet2__f_elems1 = $L0;
    this.sci_BitSet$BitSet2__f_elems0 = elems0;
    this.sci_BitSet$BitSet2__f_elems1 = elems1
  };
  nwords__I() {
    return 2
  };
  word__I__J(idx) {
    return ((idx === 0) ? this.sci_BitSet$BitSet2__f_elems0 : ((idx === 1) ? this.sci_BitSet$BitSet2__f_elems1 : $L0))
  };
  updateWord__I__J__sci_BitSet(idx, w) {
    if ((idx === 0)) {
      return new $c_sci_BitSet$BitSet2(w, this.sci_BitSet$BitSet2__f_elems1)
    } else if ((idx === 1)) {
      return $m_sci_BitSet$().scala$collection$immutable$BitSet$$createSmall__J__J__sci_BitSet(this.sci_BitSet$BitSet2__f_elems0, w)
    } else {
      const elems = $m_sc_BitSetOps$().updateArray__AJ__I__J__AJ($makeNativeArrayWrapper($d_J.getArrayOf(), [this.sci_BitSet$BitSet2__f_elems0, this.sci_BitSet$BitSet2__f_elems1]), idx, w);
      return $m_sci_BitSet$().fromBitMaskNoCopy__AJ__sci_BitSet(elems)
    }
  };
}
const $d_sci_BitSet$BitSet2 = new $TypeData().initClass({
  sci_BitSet$BitSet2: 0
}, false, "scala.collection.immutable.BitSet$BitSet2", {
  sci_BitSet$BitSet2: 1,
  sci_BitSet: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sci_SortedSet: 1,
  sc_SortedSet: 1,
  sc_SortedSetOps: 1,
  sc_SortedOps: 1,
  sc_SortedSetFactoryDefaults: 1,
  sci_SortedSetOps: 1,
  sci_StrictOptimizedSortedSetOps: 1,
  sc_StrictOptimizedSortedSetOps: 1,
  sc_StrictOptimizedSetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sci_StrictOptimizedSetOps: 1,
  sc_BitSet: 1,
  sc_BitSetOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_BitSet$BitSet2.prototype.$classData = $d_sci_BitSet$BitSet2;
class $c_sci_BitSet$BitSetN extends $c_sci_BitSet {
  constructor(elems) {
    super();
    this.sci_BitSet$BitSetN__f_elems = null;
    this.sci_BitSet$BitSetN__f_elems = elems
  };
  nwords__I() {
    return this.sci_BitSet$BitSetN__f_elems.u.length
  };
  word__I__J(idx) {
    return ((idx < this.nwords__I()) ? this.sci_BitSet$BitSetN__f_elems.u[idx] : $L0)
  };
  updateWord__I__J__sci_BitSet(idx, w) {
    const elems = $m_sc_BitSetOps$().updateArray__AJ__I__J__AJ(this.sci_BitSet$BitSetN__f_elems, idx, w);
    return $m_sci_BitSet$().fromBitMaskNoCopy__AJ__sci_BitSet(elems)
  };
}
const $d_sci_BitSet$BitSetN = new $TypeData().initClass({
  sci_BitSet$BitSetN: 0
}, false, "scala.collection.immutable.BitSet$BitSetN", {
  sci_BitSet$BitSetN: 1,
  sci_BitSet: 1,
  sci_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  sci_Set: 1,
  sci_Iterable: 1,
  sci_SetOps: 1,
  sci_SortedSet: 1,
  sc_SortedSet: 1,
  sc_SortedSetOps: 1,
  sc_SortedOps: 1,
  sc_SortedSetFactoryDefaults: 1,
  sci_SortedSetOps: 1,
  sci_StrictOptimizedSortedSetOps: 1,
  sc_StrictOptimizedSortedSetOps: 1,
  sc_StrictOptimizedSetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sci_StrictOptimizedSetOps: 1,
  sc_BitSet: 1,
  sc_BitSetOps: 1,
  Ljava_io_Serializable: 1
});
$c_sci_BitSet$BitSetN.prototype.$classData = $d_sci_BitSet$BitSetN;
const $p_scm_ArrayBuffer__reduceToSize__I__V = (function($thiz, n) {
  const a = $thiz.scm_ArrayBuffer__f_array;
  const toIndex = $thiz.scm_ArrayBuffer__f_size0;
  $m_ju_Arrays$().fill__AO__I__I__O__V(a, n, toIndex, null);
  $thiz.scm_ArrayBuffer__f_size0 = n
});
const $ct_scm_ArrayBuffer__AO__I__ = (function($thiz, initialElements, initialSize) {
  $thiz.scm_ArrayBuffer__f_array = initialElements;
  $thiz.scm_ArrayBuffer__f_size0 = initialSize;
  return $thiz
});
const $ct_scm_ArrayBuffer__ = (function($thiz) {
  $ct_scm_ArrayBuffer__AO__I__($thiz, $newArrayObject($d_O.getArrayOf(), [16]), 0);
  return $thiz
});
class $c_scm_ArrayBuffer extends $c_scm_AbstractBuffer {
  constructor() {
    super();
    this.scm_ArrayBuffer__f_array = null;
    this.scm_ArrayBuffer__f_size0 = 0
  };
  iterator__sc_Iterator() {
    const this$1 = new $c_scm_ArrayBufferView(this.scm_ArrayBuffer__f_array, this.scm_ArrayBuffer__f_size0);
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  drop__I__O(n) {
    return $f_sc_IndexedSeqOps__drop__I__O(this, n)
  };
  lengthCompare__I__I(len) {
    const x = this.scm_ArrayBuffer__f_size0;
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    return this.scm_ArrayBuffer__f_size0
  };
  ensureSize__I__V(n) {
    this.scm_ArrayBuffer__f_array = $m_scm_ArrayBuffer$().scala$collection$mutable$ArrayBuffer$$ensureSize__AO__I__I__AO(this.scm_ArrayBuffer__f_array, this.scm_ArrayBuffer__f_size0, n)
  };
  apply__I__O(n) {
    const hi = ((1 + n) | 0);
    if ((n < 0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((n + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    if ((hi > this.scm_ArrayBuffer__f_size0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((hi + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    return this.scm_ArrayBuffer__f_array.u[n]
  };
  update__I__O__V(index, elem) {
    const hi = ((1 + index) | 0);
    if ((index < 0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((index + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    if ((hi > this.scm_ArrayBuffer__f_size0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((hi + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    this.scm_ArrayBuffer__f_array.u[index] = elem
  };
  length__I() {
    return this.scm_ArrayBuffer__f_size0
  };
  addOne__O__scm_ArrayBuffer(elem) {
    const i = this.scm_ArrayBuffer__f_size0;
    this.ensureSize__I__V(((1 + this.scm_ArrayBuffer__f_size0) | 0));
    this.scm_ArrayBuffer__f_size0 = ((1 + this.scm_ArrayBuffer__f_size0) | 0);
    this.update__I__O__V(i, elem);
    return this
  };
  addAll__sc_IterableOnce__scm_ArrayBuffer(elems) {
    if ((elems instanceof $c_scm_ArrayBuffer)) {
      const x2 = elems;
      this.ensureSize__I__V(((this.scm_ArrayBuffer__f_size0 + x2.scm_ArrayBuffer__f_size0) | 0));
      $m_s_Array$().copy__O__I__O__I__I__V(x2.scm_ArrayBuffer__f_array, 0, this.scm_ArrayBuffer__f_array, this.scm_ArrayBuffer__f_size0, x2.scm_ArrayBuffer__f_size0);
      this.scm_ArrayBuffer__f_size0 = ((this.scm_ArrayBuffer__f_size0 + x2.scm_ArrayBuffer__f_size0) | 0)
    } else {
      $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, elems)
    };
    return this
  };
  insert__I__O__V(index, elem) {
    if ((index < 0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((index + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    if ((index > this.scm_ArrayBuffer__f_size0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((index + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    this.ensureSize__I__V(((1 + this.scm_ArrayBuffer__f_size0) | 0));
    $m_s_Array$().copy__O__I__O__I__I__V(this.scm_ArrayBuffer__f_array, index, this.scm_ArrayBuffer__f_array, ((1 + index) | 0), ((this.scm_ArrayBuffer__f_size0 - index) | 0));
    this.scm_ArrayBuffer__f_size0 = ((1 + this.scm_ArrayBuffer__f_size0) | 0);
    this.update__I__O__V(index, elem)
  };
  remove__I__O(index) {
    const hi = ((1 + index) | 0);
    if ((index < 0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((index + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    if ((hi > this.scm_ArrayBuffer__f_size0)) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((hi + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
    };
    const res = this.apply__I__O(index);
    $m_s_Array$().copy__O__I__O__I__I__V(this.scm_ArrayBuffer__f_array, ((1 + index) | 0), this.scm_ArrayBuffer__f_array, index, ((this.scm_ArrayBuffer__f_size0 - ((1 + index) | 0)) | 0));
    $p_scm_ArrayBuffer__reduceToSize__I__V(this, (((-1) + this.scm_ArrayBuffer__f_size0) | 0));
    return res
  };
  remove__I__I__V(index, count) {
    if ((count > 0)) {
      const hi = ((index + count) | 0);
      if ((index < 0)) {
        throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((index + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
      };
      if ((hi > this.scm_ArrayBuffer__f_size0)) {
        throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((hi + " is out of bounds (min 0, max ") + (((-1) + this.scm_ArrayBuffer__f_size0) | 0)) + ")"))
      };
      $m_s_Array$().copy__O__I__O__I__I__V(this.scm_ArrayBuffer__f_array, ((index + count) | 0), this.scm_ArrayBuffer__f_array, index, ((this.scm_ArrayBuffer__f_size0 - ((index + count) | 0)) | 0));
      $p_scm_ArrayBuffer__reduceToSize__I__V(this, ((this.scm_ArrayBuffer__f_size0 - count) | 0))
    } else if ((count < 0)) {
      throw $ct_jl_IllegalArgumentException__T__(new $c_jl_IllegalArgumentException(), ("removing negative number of elements: " + count))
    }
  };
  stringPrefix__T() {
    return "ArrayBuffer"
  };
  copyToArray__O__I__I(xs, start) {
    return this.copyToArray__O__I__I__I(xs, start, this.scm_ArrayBuffer__f_size0)
  };
  copyToArray__O__I__I__I(xs, start, len) {
    const srcLen = this.scm_ArrayBuffer__f_size0;
    const destLen = $m_sr_ScalaRunTime$().array_length__O__I(xs);
    const x = ((len < srcLen) ? len : srcLen);
    const y = ((destLen - start) | 0);
    const x$1 = ((x < y) ? x : y);
    const copied = ((x$1 > 0) ? x$1 : 0);
    if ((copied > 0)) {
      $m_s_Array$().copy__O__I__O__I__I__V(this.scm_ArrayBuffer__f_array, 0, xs, start, copied)
    };
    return copied
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_ArrayBuffer(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__scm_ArrayBuffer(elem)
  };
  iterableFactory__sc_IterableFactory() {
    return $m_scm_ArrayBuffer$()
  };
  apply__O__O(v1) {
    return this.apply__I__O((v1 | 0))
  };
}
function $isArrayOf_scm_ArrayBuffer(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArrayBuffer)))
}
const $d_scm_ArrayBuffer = new $TypeData().initClass({
  scm_ArrayBuffer: 0
}, false, "scala.collection.mutable.ArrayBuffer", {
  scm_ArrayBuffer: 1,
  scm_AbstractBuffer: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Buffer: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  scm_IndexedBuffer: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArrayBuffer.prototype.$classData = $d_scm_ArrayBuffer;
const $ct_sjs_js_WrappedArray__sjs_js_Array__ = (function($thiz, array) {
  $thiz.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array = array;
  return $thiz
});
const $ct_sjs_js_WrappedArray__ = (function($thiz) {
  $ct_sjs_js_WrappedArray__sjs_js_Array__($thiz, []);
  return $thiz
});
class $c_sjs_js_WrappedArray extends $c_scm_AbstractBuffer {
  constructor() {
    super();
    this.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array = null
  };
  sizeHint__I__V(size) {
    /*<skip>*/
  };
  stringPrefix__T() {
    return "IndexedSeq"
  };
  iterator__sc_Iterator() {
    const this$1 = new $c_sc_IndexedSeqView$Id(this);
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  drop__I__O(n) {
    return $f_sc_IndexedSeqOps__drop__I__O(this, n)
  };
  lengthCompare__I__I(len) {
    const x = (this.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array.length | 0);
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  apply__I__O(index) {
    return this.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array[index]
  };
  length__I() {
    return (this.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array.length | 0)
  };
  knownSize__I() {
    return (this.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array.length | 0)
  };
  className__T() {
    return "WrappedArray"
  };
  result__O() {
    return this
  };
  addOne__O__scm_Growable(elem) {
    this.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array.push(elem);
    return this
  };
  apply__O__O(v1) {
    const index = (v1 | 0);
    return this.sjs_js_WrappedArray__f_scala$scalajs$js$WrappedArray$$array[index]
  };
  iterableFactory__sc_IterableFactory() {
    return $m_sjs_js_WrappedArray$()
  };
}
function $isArrayOf_sjs_js_WrappedArray(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.sjs_js_WrappedArray)))
}
const $d_sjs_js_WrappedArray = new $TypeData().initClass({
  sjs_js_WrappedArray: 0
}, false, "scala.scalajs.js.WrappedArray", {
  sjs_js_WrappedArray: 1,
  scm_AbstractBuffer: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Buffer: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  scm_IndexedBuffer: 1,
  scm_Builder: 1,
  Ljava_io_Serializable: 1
});
$c_sjs_js_WrappedArray.prototype.$classData = $d_sjs_js_WrappedArray;
const $p_scm_ArrayDeque__reset__AO__I__I__V = (function($thiz, array, start, end) {
  const assertion = ((array.u.length & (((-1) + array.u.length) | 0)) === 0);
  if ((!assertion)) {
    throw new $c_jl_AssertionError("assertion failed: Array.length must be power of 2")
  };
  const until = array.u.length;
  if (((start < 0) || (start >= until))) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((start + " is out of bounds (min 0, max ") + (((-1) + until) | 0)) + ")"))
  };
  const until$1 = array.u.length;
  if (((end < 0) || (end >= until$1))) {
    throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((end + " is out of bounds (min 0, max ") + (((-1) + until$1) | 0)) + ")"))
  };
  $thiz.scm_ArrayDeque__f_array = array;
  $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start = start;
  $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end = end
});
const $ct_scm_ArrayDeque__AO__I__I__ = (function($thiz, array, start, end) {
  $thiz.scm_ArrayDeque__f_array = array;
  $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start = start;
  $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end = end;
  $p_scm_ArrayDeque__reset__AO__I__I__V($thiz, $thiz.scm_ArrayDeque__f_array, $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start, $thiz.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end);
  return $thiz
});
const $ct_scm_ArrayDeque__I__ = (function($thiz, initialSize) {
  $ct_scm_ArrayDeque__AO__I__I__($thiz, $m_scm_ArrayDeque$().alloc__I__AO(initialSize), 0, 0);
  return $thiz
});
class $c_scm_ArrayDeque extends $c_scm_AbstractBuffer {
  constructor() {
    super();
    this.scm_ArrayDeque__f_array = null;
    this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start = 0;
    this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end = 0
  };
  iterator__sc_Iterator() {
    const this$1 = new $c_sc_IndexedSeqView$Id(this);
    return new $c_sc_IndexedSeqView$IndexedSeqViewIterator(this$1)
  };
  reverseIterator__sc_Iterator() {
    return new $c_sc_IndexedSeqOps$$anon$1(this)
  };
  reversed__sc_Iterable() {
    return new $c_sc_IndexedSeqView$Reverse(this)
  };
  drop__I__O(n) {
    return $f_sc_IndexedSeqOps__drop__I__O(this, n)
  };
  lengthCompare__I__I(len) {
    const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    const x = (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0));
    return ((x === len) ? 0 : ((x < len) ? (-1) : 1))
  };
  knownSize__I() {
    const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    return (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))
  };
  apply__I__O(idx) {
    const idx$1 = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    const until = (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx$1) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0));
    if (((idx < 0) || (idx >= until))) {
      throw $ct_jl_IndexOutOfBoundsException__T__(new $c_jl_IndexOutOfBoundsException(), (((idx + " is out of bounds (min 0, max ") + (((-1) + until) | 0)) + ")"))
    };
    return this.scm_ArrayDeque__f_array.u[(((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start + idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))]
  };
  addOne__O__scm_ArrayDeque(elem) {
    const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    const hint = ((1 + (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))) | 0);
    const idx$1 = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    if (((hint > (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx$1) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))) && (hint >= this.scm_ArrayDeque__f_array.u.length))) {
      this.scala$collection$mutable$ArrayDeque$$resize__I__V(hint)
    };
    this.scm_ArrayDeque__f_array.u[this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end] = elem;
    this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end = (((1 + this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0));
    return this
  };
  prepend__O__scm_ArrayDeque(elem) {
    const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    const hint = ((1 + (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))) | 0);
    const idx$1 = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    if (((hint > (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx$1) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))) && (hint >= this.scm_ArrayDeque__f_array.u.length))) {
      this.scala$collection$mutable$ArrayDeque$$resize__I__V(hint)
    };
    this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start = ((((-1) + this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0));
    this.scm_ArrayDeque__f_array.u[this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start] = elem;
    return this
  };
  addAll__sc_IterableOnce__scm_ArrayDeque(elems) {
    const x1 = elems.knownSize__I();
    if ((x1 > 0)) {
      const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
      const hint = ((x1 + (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))) | 0);
      const idx$1 = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
      if (((hint > (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx$1) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))) && (hint >= this.scm_ArrayDeque__f_array.u.length))) {
        this.scala$collection$mutable$ArrayDeque$$resize__I__V(hint)
      };
      const this$1 = elems.iterator__sc_Iterator();
      while (this$1.hasNext__Z()) {
        const arg1 = this$1.next__O();
        this.scm_ArrayDeque__f_array.u[this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end] = arg1;
        this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end = (((1 + this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))
      }
    } else {
      const this$2 = elems.iterator__sc_Iterator();
      while (this$2.hasNext__Z()) {
        const arg1$1 = this$2.next__O();
        this.addOne__O__scm_ArrayDeque(arg1$1)
      }
    };
    return this
  };
  removeHead__Z__O(resizeInternalRepr) {
    if (this.isEmpty__Z()) {
      throw $ct_ju_NoSuchElementException__T__(new $c_ju_NoSuchElementException(), "empty collection")
    } else {
      const elem = this.scm_ArrayDeque__f_array.u[this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start];
      this.scm_ArrayDeque__f_array.u[this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start] = null;
      this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start = (((1 + this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0));
      if (resizeInternalRepr) {
        const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
        this.scala$collection$mutable$ArrayDeque$$resize__I__V((((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0)))
      };
      return elem
    }
  };
  length__I() {
    const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    return (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))
  };
  isEmpty__Z() {
    return (this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start === this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end)
  };
  iterableFactory__sc_SeqFactory() {
    return $m_scm_ArrayDeque$()
  };
  clear__V() {
    while ((!this.isEmpty__Z())) {
      this.scm_ArrayDeque__f_array.u[this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start];
      this.scm_ArrayDeque__f_array.u[this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start] = null;
      this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start = (((1 + this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0))
    }
  };
  toArray__s_reflect_ClassTag__O(evidence$1) {
    const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    const dest = evidence$1.newArray__I__O((((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0)));
    const idx$1 = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
    const maxItems = (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx$1) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0));
    return $f_scm_ArrayDequeOps__copySliceToArray__I__O__I__I__O(this, 0, dest, 0, maxItems)
  };
  scala$collection$mutable$ArrayDeque$$resize__I__V(len) {
    if (((len >= this.scm_ArrayDeque__f_array.u.length) || ((this.scm_ArrayDeque__f_array.u.length > 16) && (((this.scm_ArrayDeque__f_array.u.length - len) | 0) > len)))) {
      const idx = this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$start;
      const n = (((this.scm_ArrayDeque__f_scala$collection$mutable$ArrayDeque$$end - idx) | 0) & (((-1) + this.scm_ArrayDeque__f_array.u.length) | 0));
      const dest = $m_scm_ArrayDeque$().alloc__I__AO(len);
      const array2 = $f_scm_ArrayDequeOps__copySliceToArray__I__O__I__I__O(this, 0, dest, 0, n);
      $p_scm_ArrayDeque__reset__AO__I__I__V(this, array2, 0, n)
    }
  };
  stringPrefix__T() {
    return "ArrayDeque"
  };
  iterableFactory__sc_IterableFactory() {
    return this.iterableFactory__sc_SeqFactory()
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_ArrayDeque(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__O__scm_ArrayDeque(elem)
  };
  apply__O__O(v1) {
    return this.apply__I__O((v1 | 0))
  };
}
function $isArrayOf_scm_ArrayDeque(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_ArrayDeque)))
}
const $d_scm_ArrayDeque = new $TypeData().initClass({
  scm_ArrayDeque: 0
}, false, "scala.collection.mutable.ArrayDeque", {
  scm_ArrayDeque: 1,
  scm_AbstractBuffer: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Buffer: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  scm_IndexedBuffer: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  scm_ArrayDequeOps: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_scm_ArrayDeque.prototype.$classData = $d_scm_ArrayDeque;
const $ct_scm_BitSet__AJ__ = (function($thiz, elems) {
  $thiz.scm_BitSet__f_elems = elems;
  return $thiz
});
const $ct_scm_BitSet__I__ = (function($thiz, initSize) {
  const x = (((63 + initSize) | 0) >> 6);
  $ct_scm_BitSet__AJ__($thiz, $newArrayObject($d_J.getArrayOf(), [((x > 1) ? x : 1)]));
  return $thiz
});
const $ct_scm_BitSet__ = (function($thiz) {
  $ct_scm_BitSet__I__($thiz, 0);
  return $thiz
});
class $c_scm_BitSet extends $c_scm_AbstractSet {
  constructor() {
    super();
    this.scm_BitSet__f_elems = null
  };
  stringPrefix__T() {
    return "BitSet"
  };
  ordering__s_math_Ordering() {
    return $m_s_math_Ordering$Int$()
  };
  iterator__sc_Iterator() {
    return new $c_sc_BitSetOps$$anon$1(this, 0)
  };
  size__I() {
    return $f_sc_BitSetOps__size__I(this)
  };
  isEmpty__Z() {
    return $f_sc_BitSetOps__isEmpty__Z(this)
  };
  foreach__F1__V(f) {
    $f_sc_BitSetOps__foreach__F1__V(this, f)
  };
  nwords__I() {
    return this.scm_BitSet__f_elems.u.length
  };
  word__I__J(idx) {
    return ((idx < this.nwords__I()) ? this.scm_BitSet__f_elems.u[idx] : $L0)
  };
  addOne__I__scm_BitSet(elem) {
    $m_s_Predef$().require__Z__V((elem >= 0));
    if ((!$f_sc_BitSetOps__contains__I__Z(this, elem))) {
      const idx = (elem >> 6);
      const t = this.word__I__J(idx);
      const lo$1 = t.RTLong__f_lo;
      const hi$1 = t.RTLong__f_hi;
      const lo = (((32 & elem) === 0) ? (1 << elem) : 0);
      const hi = (((32 & elem) === 0) ? 0 : (1 << elem));
      const lo$2 = (lo$1 | lo);
      const hi$2 = (hi$1 | hi);
      this.updateWord__I__J__V(idx, new $c_RTLong(lo$2, hi$2))
    };
    return this
  };
  updateWord__I__J__V(idx, w) {
    this.ensureCapacity__I__V(idx);
    this.scm_BitSet__f_elems.u[idx] = w
  };
  ensureCapacity__I__V(idx) {
    $m_s_Predef$().require__Z__V((idx < 33554432));
    if ((idx >= this.nwords__I())) {
      let newlen = this.nwords__I();
      while ((idx >= newlen)) {
        const x = (newlen << 1);
        newlen = ((x < 33554432) ? x : 33554432)
      };
      const elems1 = $newArrayObject($d_J.getArrayOf(), [newlen]);
      $m_s_Array$().copy__O__I__O__I__I__V(this.scm_BitSet__f_elems, 0, elems1, 0, this.nwords__I());
      this.scm_BitSet__f_elems = elems1
    }
  };
  $bar$eq__sc_BitSet__scm_BitSet(other) {
    this.ensureCapacity__I__V((((-1) + other.nwords__I()) | 0));
    let i = 0;
    const othernwords = other.nwords__I();
    while ((i < othernwords)) {
      const $$x2 = this.scm_BitSet__f_elems;
      const $$x1 = i;
      const t = this.scm_BitSet__f_elems.u[i];
      const lo = t.RTLong__f_lo;
      const hi = t.RTLong__f_hi;
      const b = other.word__I__J(i);
      const lo$1 = (lo | b.RTLong__f_lo);
      const hi$1 = (hi | b.RTLong__f_hi);
      $$x2.u[$$x1] = new $c_RTLong(lo$1, hi$1);
      i = ((1 + i) | 0)
    };
    return this
  };
  addAll__sc_IterableOnce__scm_BitSet(xs) {
    if ($is_sc_BitSet(xs)) {
      const x2 = xs;
      return this.$bar$eq__sc_BitSet__scm_BitSet(x2)
    } else if ((xs instanceof $c_sci_Range)) {
      const x3 = xs;
      if ((!x3.sci_Range__f_isEmpty)) {
        const start = x3.min__s_math_Ordering__I($m_s_math_Ordering$Int$());
        if ((start >= 0)) {
          const end = x3.max__s_math_Ordering__I($m_s_math_Ordering$Int$());
          const endIdx = (end >> 6);
          this.ensureCapacity__I__V(endIdx);
          if (((x3.sci_Range__f_step === 1) || (x3.sci_Range__f_step === (-1)))) {
            const startIdx = (start >> 6);
            const wordStart = (startIdx << 6);
            const n = ((start - wordStart) | 0);
            const lo = (((32 & n) === 0) ? ((-1) << n) : 0);
            const hi = (((32 & n) === 0) ? (((2147483647 >>> ((31 - n) | 0)) | 0) | ((-1) << n)) : ((-1) << n));
            if ((endIdx > startIdx)) {
              const ev$1 = this.scm_BitSet__f_elems;
              const t = ev$1.u[startIdx];
              const lo$1 = t.RTLong__f_lo;
              const hi$1 = t.RTLong__f_hi;
              const lo$2 = (lo$1 | lo);
              const hi$2 = (hi$1 | hi);
              ev$1.u[startIdx] = new $c_RTLong(lo$2, hi$2);
              const a = this.scm_BitSet__f_elems;
              const fromIndex = ((1 + startIdx) | 0);
              $m_ju_Arrays$().fill__AJ__I__I__J__V(a, fromIndex, endIdx, new $c_RTLong((-1), (-1)));
              const ev$2 = this.scm_BitSet__f_elems;
              const t$1 = ev$2.u[endIdx];
              const lo$4 = t$1.RTLong__f_lo;
              const hi$4 = t$1.RTLong__f_hi;
              const n$1 = ((63 - ((end - (endIdx << 6)) | 0)) | 0);
              const lo$3 = (((32 & n$1) === 0) ? ((((-1) >>> n$1) | 0) | ((-2) << ((31 - n$1) | 0))) : (((-1) >>> n$1) | 0));
              const hi$3 = (((32 & n$1) === 0) ? (((-1) >>> n$1) | 0) : 0);
              const lo$5 = (lo$4 | lo$3);
              const hi$5 = (hi$4 | hi$3);
              ev$2.u[endIdx] = new $c_RTLong(lo$5, hi$5)
            } else {
              const ev$3 = this.scm_BitSet__f_elems;
              const t$2 = ev$3.u[endIdx];
              const lo$8 = t$2.RTLong__f_lo;
              const hi$8 = t$2.RTLong__f_hi;
              const n$2 = ((63 - ((end - wordStart) | 0)) | 0);
              const lo$6 = (((32 & n$2) === 0) ? ((((-1) >>> n$2) | 0) | ((-2) << ((31 - n$2) | 0))) : (((-1) >>> n$2) | 0));
              const hi$6 = (((32 & n$2) === 0) ? (((-1) >>> n$2) | 0) : 0);
              const lo$7 = (lo & lo$6);
              const hi$7 = (hi & hi$6);
              const lo$9 = (lo$8 | lo$7);
              const hi$9 = (hi$8 | hi$7);
              ev$3.u[endIdx] = new $c_RTLong(lo$9, hi$9)
            }
          } else {
            $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, x3)
          }
        } else {
          $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, x3)
        }
      };
      return this
    } else if ($is_sc_SortedSet(xs)) {
      const x4 = xs;
      if ((!x4.isEmpty__Z())) {
        const ord = x4.ordering__s_math_Ordering();
        if ((ord === $m_s_math_Ordering$Int$())) {
          this.ensureCapacity__I__V((($f_sc_IterableOps__last__O(x4) | 0) >> 6))
        } else {
          const this$1 = $m_s_math_Ordering$Int$();
          if ((ord === this$1.s_math_Ordering$Int$__f_scala$math$Ordering$CachedReverse$$_reverse)) {
            this.ensureCapacity__I__V(((x4.iterator__sc_Iterator().next__O() | 0) >> 6))
          }
        };
        const iter = x4.iterator__sc_Iterator();
        while (iter.hasNext__Z()) {
          this.addOne__I__scm_BitSet((iter.next__O() | 0))
        }
      };
      return this
    } else {
      return $f_scm_Growable__addAll__sc_IterableOnce__scm_Growable(this, xs)
    }
  };
  subsetOf__sc_Set__Z(that) {
    if ($is_sc_BitSet(that)) {
      const x2 = that;
      const thisnwords = this.nwords__I();
      const bsnwords = x2.nwords__I();
      const minWords = ((thisnwords < bsnwords) ? thisnwords : bsnwords);
      let i = bsnwords;
      while ((i < thisnwords)) {
        const t = this.word__I__J(i);
        const lo = t.RTLong__f_lo;
        const hi = t.RTLong__f_hi;
        if ((!((lo === 0) && (hi === 0)))) {
          return false
        };
        i = ((1 + i) | 0)
      };
      let j = 0;
      while ((j < minWords)) {
        const t$1 = this.word__I__J(j);
        const lo$2 = t$1.RTLong__f_lo;
        const hi$2 = t$1.RTLong__f_hi;
        const b = x2.word__I__J(j);
        const lo$1 = (~b.RTLong__f_lo);
        const hi$1 = (~b.RTLong__f_hi);
        const lo$3 = (lo$2 & lo$1);
        const hi$3 = (hi$2 & hi$1);
        if ((!((lo$3 === 0) && (hi$3 === 0)))) {
          return false
        };
        j = ((1 + j) | 0)
      };
      return true
    } else {
      return $f_sc_IterableOnceOps__forall__F1__Z(this, that)
    }
  };
  contains__O__Z(elem) {
    const elem$1 = (elem | 0);
    return $f_sc_BitSetOps__contains__I__Z(this, elem$1)
  };
  addAll__sc_IterableOnce__scm_Growable(xs) {
    return this.addAll__sc_IterableOnce__scm_BitSet(xs)
  };
  addOne__O__scm_Growable(elem) {
    return this.addOne__I__scm_BitSet((elem | 0))
  };
  fromSpecific__sc_IterableOnce__O(coll) {
    const empty = $ct_scm_BitSet__(new $c_scm_BitSet());
    return empty.addAll__sc_IterableOnce__scm_BitSet(coll)
  };
  fromSpecific__sc_IterableOnce__sc_IterableOps(coll) {
    const empty = $ct_scm_BitSet__(new $c_scm_BitSet());
    return empty.addAll__sc_IterableOnce__scm_BitSet(coll)
  };
}
function $isArrayOf_scm_BitSet(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_BitSet)))
}
const $d_scm_BitSet = new $TypeData().initClass({
  scm_BitSet: 0
}, false, "scala.collection.mutable.BitSet", {
  scm_BitSet: 1,
  scm_AbstractSet: 1,
  sc_AbstractSet: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Set: 1,
  sc_SetOps: 1,
  F1: 1,
  s_Equals: 1,
  scm_Set: 1,
  scm_Iterable: 1,
  scm_SetOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Builder: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  scm_SortedSet: 1,
  sc_SortedSet: 1,
  sc_SortedSetOps: 1,
  sc_SortedOps: 1,
  sc_SortedSetFactoryDefaults: 1,
  scm_SortedSetOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  sc_StrictOptimizedSortedSetOps: 1,
  sc_StrictOptimizedSetOps: 1,
  sc_BitSet: 1,
  sc_BitSetOps: 1,
  Ljava_io_Serializable: 1
});
$c_scm_BitSet.prototype.$classData = $d_scm_BitSet;
class $c_scm_Stack extends $c_scm_ArrayDeque {
  constructor(initialSize) {
    super();
    const array = $m_scm_ArrayDeque$().alloc__I__AO(initialSize);
    $ct_scm_ArrayDeque__AO__I__I__(this, array, 0, 0)
  };
  iterableFactory__sc_SeqFactory() {
    return $m_scm_Stack$()
  };
  stringPrefix__T() {
    return "Stack"
  };
  iterableFactory__sc_IterableFactory() {
    return $m_scm_Stack$()
  };
}
function $isArrayOf_scm_Stack(obj, depth) {
  return (!(!(((obj && obj.$classData) && (obj.$classData.arrayDepth === depth)) && obj.$classData.arrayBase.ancestors.scm_Stack)))
}
const $d_scm_Stack = new $TypeData().initClass({
  scm_Stack: 0
}, false, "scala.collection.mutable.Stack", {
  scm_Stack: 1,
  scm_ArrayDeque: 1,
  scm_AbstractBuffer: 1,
  scm_AbstractSeq: 1,
  sc_AbstractSeq: 1,
  sc_AbstractIterable: 1,
  O: 1,
  sc_Iterable: 1,
  sc_IterableOnce: 1,
  sc_IterableOps: 1,
  sc_IterableOnceOps: 1,
  sc_IterableFactoryDefaults: 1,
  sc_Seq: 1,
  s_PartialFunction: 1,
  F1: 1,
  sc_SeqOps: 1,
  s_Equals: 1,
  scm_Seq: 1,
  scm_Iterable: 1,
  scm_SeqOps: 1,
  scm_Cloneable: 1,
  jl_Cloneable: 1,
  scm_Buffer: 1,
  scm_Growable: 1,
  scm_Clearable: 1,
  scm_Shrinkable: 1,
  scm_IndexedBuffer: 1,
  scm_IndexedSeq: 1,
  sc_IndexedSeq: 1,
  sc_IndexedSeqOps: 1,
  scm_IndexedSeqOps: 1,
  sc_StrictOptimizedSeqOps: 1,
  sc_StrictOptimizedIterableOps: 1,
  scm_ArrayDequeOps: 1,
  scg_DefaultSerializable: 1,
  Ljava_io_Serializable: 1
});
$c_scm_Stack.prototype.$classData = $d_scm_Stack;
$L0 = new $c_RTLong(0, 0);
let $e_TPyParser = $m_Ltigerpython_parser_TPyParser$();
export { $e_TPyParser as TPyParser };
//# sourceMappingURL=tigerpython-parser-opt.js.map
