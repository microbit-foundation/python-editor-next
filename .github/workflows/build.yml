name: build

on:
  release:
    types: [created]
  push:
    branches:
      - "**"

# This is conservative: ideally we'd include branch and stage in this key
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency: deploy-python-editor-v3

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      AWS_DEFAULT_REGION: eu-west-1
      PRODUCTION_CLOUDFRONT_DISTRIBUTION_ID: E2ELTBTA2OFPY2
      STAGING_CLOUDFRONT_DISTRIBUTION_ID: E2ELTBTA2OFPY2
      REVIEW_CLOUDFRONT_DISTRIBUTION_ID: E3267W09ZJHQG9

    steps:
      # Note: This workflow will not run on forks without modification; we're open to making steps
      #       that reply on our deployment infrastructure conditional. Please open an issue.
      - uses: actions/checkout@v3
      - name: Configure node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: npm install --no-save @microbit-foundation/python-editor-v3-microbit@0.1.0-dev.198 @microbit-foundation/website-deploy-aws@0.3.0 @microbit-foundation/website-deploy-aws-config@0.7.0 @microbit-foundation/circleci-npm-package-versioner@1
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: node ./bin/print-ci-env.js >> $GITHUB_ENV
      - run: npm run ci:update-version
      - run: npm run ci
      - run: mkdir -p /tmp/app${PUBLIC_URL} && cp -r build/* /tmp/app${PUBLIC_URL} && npx serve --no-clipboard -l 3000 /tmp/app &
        if: env.STAGE == 'REVIEW' || env.STAGE == 'STAGING'
      - run: curl --insecure -4 --retry 7 --retry-connrefused http://localhost:3000 1>/dev/null
        if: env.STAGE == 'REVIEW' || env.STAGE == 'STAGING'
      - run: npm run test:e2e:headless
        if: env.STAGE == 'REVIEW' || env.STAGE == 'STAGING'
      - name: Store reports
        if: env.STAGE == 'REVIEW' || env.STAGE == 'STAGING'
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: reports/
      - run: npm run deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.WEB_DEPLOY_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.WEB_DEPLOY_AWS_SECRET_ACCESS_KEY }}
      - run: npm run invalidate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.WEB_DEPLOY_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.WEB_DEPLOY_AWS_SECRET_ACCESS_KEY }}
